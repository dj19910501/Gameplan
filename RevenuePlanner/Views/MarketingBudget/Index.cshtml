@model RevenuePlanner.Services.MarketingBudget.MarketingActivities

@{
    ViewBag.Title = "Finance";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<link href="@Url.Content("~/Content/css/DHTMLX/dhtmlxtreegrid2_min.css")" rel="stylesheet" type="text/css" />
@section nlFormContent{
    <link rel="stylesheet" href="@Url.Content("~/Content/css/NaturalLanguageForm/default.css")" type="text/css" />
    <link rel="stylesheet" href="@Url.Content("~/Content/css/NaturalLanguageForm/component.css")" type="text/css" />
    <script type="text/javascript" src="@Url.Content("~/Scripts/js/NaturalLanguageForm/modernizr.custom.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/js/NaturalLanguageForm/nlform.js?n=")@DateTime.Now"></script>
}

<div class="light-blue-chart cf full-width-header" id="financeHeader">
    <div style="" class="fin-head-left">
        <div class="finance-main-title">
            <h2 id="lblfinanceTitle" style="display:block;">Finance (Home)</h2>
        </div>
        <div style="float:left;" id="drpParentMain">
            <div id="nl-formParentFinanceMain" class="nl-form-plan-title without-margin plantitle financetitle">
                @Html.DropDownList("ddlParentFinanceMain", new SelectList(Model.ListofBudgets, "Value", "Text"))
                <div class="nl-overlay"></div>
            </div>
        </div>
        <div id="dvExportToExcel" class="finance-export-btn">
            @* Button style change by Bhumika #2446 *@
            <a class="btn btn-fill-white export-link remove-box-shadow" id="exportcsv" onclick=" return ExportToExcel(); ">
                <i class="fa fa-upload" title="Export"></i><span>Export</span>
            </a>
            <a class="btn btn-fill-white export-link remove-box-shadow" onclick="showModal();" title="Import" id="ImportBtn">
                <i class="fa fa-download" title="Import"></i> <span> Import</span>
            </a>
        </div>
        <div style="float:left;" id="divAddnew">
            <input type="button" id="btnAddNewBudget" name="btnAddNewBudget" value="Add New Budget" class="btn btn-fill-white remove-box-shadow source-sans-proregular" />
        </div>
        <span class="selectBox quarter_selection" id="ddlMainTimeFrameSelectBox">
            <label id="" for="Time_Frame:">Time Frame:</label>
            @Html.DropDownList("ddlMainGridTimeFrame", new SelectList(Model.TimeFrame, "Value", "Text"), new { @class = "ddlStyleReport quarterly_btn" })
        </span>
        <div id="ddlColumnsFrameBox" class="filter-columns selectBox">
            <label id="" for="Filter Columns:">Filter Columns:</label>
            <select title="Basic example" multiple="multiple" name="example-basic" size="5" id="budget-select"></select>
        </div>
        <span class="selectBox quarter_selection" id="ddlColumnSetFrameBox">
            <label id="" for="View by:">View by:</label>
            @Html.DropDownList("ddlColumnSet", new SelectList(Model.Columnset, "Value", "Text"), new { @class = "ddlStyleReport quarterly_btn" })
        </span>
    </div>

    <div class="plancart-box finance-cart">
        <div class="white-chart">
            <p class="source-sans-probold" title="Actual">Actual</p>
            <p class="value source-sans-prolight" id="ActualID" data-original-title="0" title="">$0</p>
        </div>
        <div class="white-chart">
            <p class="source-sans-probold" id="plannedLabel" title="Planned">Planned</p>
            <p class="value source-sans-prolight" id="PlannedID" data-original-title="$14,711" title="">$14.7k</p>
        </div>
        <div class="white-chart">
            <p class="source-sans-probold" id="forecastLabel" title="Forecast">Forecast</p>
            <p class="value source-sans-prolight" id="ForecastID" data-original-title="2000" title="">$2,000</p>
        </div>
        <div id="dvBudgetHeader" class="white-chart">
            <p class="source-sans-probold" id="budgetLabel" title="Budget">Budget</p>
            <p class="value source-sans-prolight" id="budgetID" data-original-title="$12,000" title="">$12.0k</p>
        </div>
    </div>

</div>

<div class="row-fluid calc-height">
    <div class="span12">
        <div id="divDeletePopup" class="form-inspect-share hide fade height-auto popup-block margin_top0" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
            <div>
                <form>

                    <h2 class="primary-title source-sans-prosemibold resubmission_header">Deleting an item</h2>
                    <label style="text-align: center; width: 100%;" class="resubmission_content">You are about to delete </label>


                    <label id="lipname" style="text-align: center; width: 100%; font-weight:800;" class="resubmission_content"></label>
                    <p id="LiWarning" style="text-align: center;color: #fff;font-size: 15px; display:none">Warning! There are line items associated with this item. Deleting this item will associate these line items with the default 'Other' budget</p>
                    <label style="text-align: center; width: 100%;" class="resubmission_content">Do you want to proceed?</label>
                    <input type="hidden" id="hdnsourceid" />
                    <input type="hidden" id="hdndestid" />
                    <button class="form-inspect-share-button btn btn-large bottom-margin-popups" type="button" id="proceed-button_DeleteItem">Proceed</button>
                    <button id="cancel-button_DeleteItem" class="btn-link Cancel-button-center-popups" style="margin-left: 10.5%" type="button">Cancel</button>
                </form>
            </div>
        </div>
    </div>
</div>

<div id="divGridView" style="" class="finance-tbl">
    <div id="gridbox" style="width:100%; background-color:white;"></div>
</div>

<script>
    var budgetgrid;
    var BudgetGridData;
    var AddNewrow = true;
    var backBudgetid = '';
    $(document).ready(function () {
        $('#proceed-button_DeleteItem').on("click", function () {
            DeleteBudget();
            $('#divDeletePopup').modal("hide");
        });
        var Columnsetval = $("#ddlColumnSet").val();
        $("#sidebar").css("display", "none");
        $("#content_wraper").css("width", "100%");
        BindColumnsfilter(Columnsetval);
        GetGridData();


        var liParentFinanceMain = $('#ddlParentFinanceMain').find('option');
        if (liParentFinanceMain != null && liParentFinanceMain != 'undefined' && liParentFinanceMain.length > 0) {
            nlformParentFinanceMain = new NLForm(document.getElementById('nl-formParentFinanceMain'));
            $('#nl-formParentFinanceMain > div[class="nl-field nl-dd"]').find('li').click(function (e) {
                $('#nl-formParentFinanceMain .nl-field-toggle').text($(this).text());
                var budgetIDMain = $(this).attr('value');
                $("#ddlParentFinanceMain").val(budgetIDMain);
                if (budgetIDMain != null && budgetIDMain != 'undefined' && budgetIDMain != '0') {
                    GetGridData();
                }
            });
        }

        $("#ddlColumnSet").multiselect({
            multiple: false,
            noneSelectedText: "Please Select",
            selectedList: 1
        });

        $("#ddlRevenueTimeFrame,#ddlMainGridTimeFrame").multiselect({
            multiple: false,
            noneSelectedText: "Please Select",
            selectedList: 1
        }).multiselectfilter({
        });

    });

    $("#ddlMainGridTimeFrame").change(function () {
        GetGridData();
    });


    function BindColumnsfilter(ColumnSetId) {
        $.ajax({
            type: 'POST',
            url: '@Url.Content("~/MarketingBudget/GetColumns/")',
            data: { ColumnSetId: ColumnSetId },
            async: false,
            dataType: "json",
            success: function (data) {
                $("#budget-select").html("");
                for (var i = 0; i < data.length; i++) {
                    $('#budget-select').append("<option value=" + data[i].Value + " id='div" + data[i].Text + "'>" + data[i].Text + "</option>");
                }
            }
        });

        $('#budget-select').multiselect({ multiple: true, title: 'Filter Columns', noneSelectedText: "Filter Columns", });

    }

    function GetGridData(budgetId) {
        var BudgetId = "";
        if (budgetId != undefined && budgetId != "") {
            var BudgetId = budgetId;
        }
        else {
            BudgetId = $('#ddlParentFinanceMain').val();
        }

        var mainTimeFrame = $('#ddlMainGridTimeFrame').val();
        var CheckedColumns = "";
        $.ajax({
            type: 'GET',
            url: '@Url.Content("~/MarketingBudget/GetBudgetData/")',
            data: {
                BudgetId: BudgetId,
                viewByType: mainTimeFrame,
            },
            success: function (data) {
                budgetgrid = new dhtmlXGridObject('gridbox');
                budgetgrid.setImagePath('@Url.Content("~/codebase/imgs/")');
                budgetgrid.setImageSize(1, 1);
                budgetgrid.enableAutoHeight(true);
                budgetgrid.enableAutoWidth(false);
                if (mainTimeFrame != "@RevenuePlanner.Helpers.Enums.QuarterFinance.Yearly.ToString()") {
                    budgetgrid.attachHeader(data.AttacheHeader);
                }
                budgetgrid.init();
                BudgetGridData = data.GridData;
                budgetgrid.parse(BudgetGridData, "json");

                var TaskNameIndex = budgetgrid.getColIndexById('Name');

                budgetgrid.expandAll();
                budgetgrid.attachEvent("onEditCell", function (stage, rId, cInd, nValue, oValue) {
                    var ColumnId = budgetgrid.getColumnId(cInd);
                    var locked = budgetgrid.getUserData(rId, "lo");
                    var Permission = budgetgrid.getUserData(rId, "per");
                    if (locked == 1 && (Permission == "View" || Permission == "None")) {
                        budgetgrid.cells(rId, cInd).setDisabled(true);
                        return false;
                    }
                    else if (locked == 1 && (ColumnId.indexOf('Budget') >= 0 || ColumnId.indexOf('Forecast') >= 0)) {
                        budgetgrid.cells(rId, cInd).setDisabled(true);
                        return false;
                    }

                    if (cInd == TaskNameIndex) {
                        var isTitleEdit = budgetgrid.getUserData(rId, "isTitleEdit");
                        if (isTitleEdit == "0") {
                            budgetgrid.cells(rId, TaskNameIndex).setDisabled(true);
                            return false;
                        }
                    }



                });
            }
        });

    }
    
    function DeleteBudgetIconClick(data) {
        var LineItemCount = $(data).attr('licount');
        //Check blank row if user clicks on new row delete icon then delete popup not display
        if (AddNewrow == false) {
            return false;
        }
        else {
            if (LineItemCount != 0) {
                $('#LiWarning').css('display', 'block');
            }
            else {
                $('#LiWarning').css('display', 'none');
            }
            var BudgetRowId = $(data).attr('row-id').split('_')[1];
            var Name = $(data).attr('name');
            $("#lipname").html(Name);
            $("#divDeletePopup").modal('show');
            SelectedBudgetId = BudgetRowId;
            $('#cancel-button_DeleteItem').on("click", function () {
                SelectedBudgetId = "";
                $('#divDeletePopup').modal("hide");

            });
        }
    }

    function DeleteBudget() {
        var currentBudgetId = $("#ddlParentFinanceMain").val();
        $.ajax({
            type: 'GET',
            url: '@Url.Content("~/MarketingBudget/DeleteBudgetData/")',
            dataType: 'json',
            data: {
                SelectedBudgetId: SelectedBudgetId,
                BudgetId: currentBudgetId,
            },
            success: function (data) {               
                var BudgetId = data.budgetId;
                GetGridData(BudgetId);
                RefreshBudgetDropdown(false, BudgetId);
                //TODO :  here we need to call Finance Header function to refresh the header after deleting budget data
            }
        });
    }

    function RefreshBudgetDropdown(IsAddNew, BudgetId) {
        var _budgetId = "";
        if (BudgetId != undefined && BudgetId != "") {
            _budgetId = BudgetId.toString();
        }
        else {
            _budgetId = $('#ddlParentFinanceMain').val();
        }

        var $Budgetdropdown = $("#ddlParentFinanceMain");
        $Budgetdropdown.empty();
        var $html = '';

        $.ajax({
            type: 'POST',
            url: '@Url.Content("~/MarketingBudget/RefreshBudgetList/")',
            data: {},
            async: false,
            success: function (result) {
                if (result.length > 0) {
                    $.each(result, function (index, item) {

                        $html += '<option value="' + item.Value + '">' + item.Text + '</option>';

                    });
                }
            }
        });
        $Budgetdropdown.append($html);
        var BudgetOptions = {
            values: []
        }

        $.each($("#ddlParentFinanceMain").find("option"), function () {
            BudgetOptions.values.push($(this).val())
        });
        var CheckBudgetIdExist = BudgetOptions.values.indexOf(_budgetId);
        if (CheckBudgetIdExist >= 0) {
            $("#ddlParentFinanceMain option[value='" + _budgetId + "']").attr("selected", "selected");
        }
        $Budgetdropdown.val(_budgetId);
        $Budgetdropdown.find("input[type='search']").val(_budgetId);
        nlformParentFinanceMain = new NLForm(document.getElementById('nl-formParentFinanceMain'));

        $('#nl-formParentFinanceMain > div[class="nl-field nl-dd"]').find('li').click(function (e) {            
            $('#errorMsg').css('display', 'none');
            $('#SuccessMsg').css('display', 'none');
            $("#divGridView").show();
            $("#dvNoData").hide();
            var budgetId = $(this).attr('value');
            if (budgetId != null && budgetId != 'undefined' && budgetId != '0') {
                GetGridData(budgetId);
                //TODO : Call Finance Header Function.
                $("#dvExportToExcel").css("display", "block");
            }
            else {
                $("#divGridView").hide();
                $("#dvNoData").show();
                $("#dvExportToExcel").css("display", "none");
            }
            $('#hdn_BudgetId').val(budgetId);
            $('#nl-formParentFinanceMain .nl-field-toggle').text($(this).text());
        });
        var NlForms = $("#nl-formParentFinanceMain .nl-field.nl-dd");

        for (var i = 0; i < NlForms.length - 1 ; i++) {
            $(NlForms[i]).remove();
        }

        if ($('#nl-formParentFinanceMain .nl-field-toggle').text().length > 30) {
            $('#nl-formParentFinanceMain .nl-field-toggle').text().substring(0, 30) + '...';
        }
    }
</script>
