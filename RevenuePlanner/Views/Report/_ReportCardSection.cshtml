@model RevenuePlanner.Models.CardSectionModel
@using RevenuePlanner.Models
@using RevenuePlanner.Helpers
@using Newtonsoft.Json;
@{
    var cardsectionList = Model.CardSectionListModel != null ? JsonConvert.SerializeObject(Model.CardSectionListModel) : string.Empty;
}
<style>
    .carvdval-block {
        display: block;
    }
</style>
<div id="dvCardSectionData"></div>

@*<div class="region-content">
        <div id="conversionPartial">
            <div class="report-btn-group">
                <div>
                    <p class="revanue-p">North America</p>
                    <button id="" class="btn btn-blue text-shadow-blue source-sans-proregular" name="">Details</button>
                    <a id="" class="btn  source-sans-proregular report-grey-btn hideReport" name=""><span>
                        <img src="/Content/images/export.png"></span>Export</a>
                </div>
                <div>
                    <p class="revanue-p-right">
                        <input type="checkbox" /><label> Add to Compare</label>
                    </p>
                    <button id="" class="btn btn-blue text-shadow-blue source-sans-proregular report-blue-btn hideReport" name="">Add Widget</button>
                </div>
            </div>
            <div class="region-data">
                <div class="data">
                    <span class="title">Revenue</span>
                    <p class="value">$28.5M<span class="sub-value">/$25.5M</span></p>
                    <span class="data-green">+11.8% </span>
                </div>
                <div class="data">
                    <span class="title">Revenue</span>
                    <p class="value">$28.5M<span class="sub-value">/$25.5M</span></p>
                    <span class="data-green">+11.8% </span>
                </div>
                <div class="data">
                    <span class="title">Revenue</span>
                    <p class="value">$28.5M<span class="sub-value">/$25.5M</span></p>
                    <span class="data-green">+11.8% </span>
                </div>
                <div id="dvNorthAmericaGraph1" class="region-graph">
                </div>
            </div>
        </div>
    </div>*@
<script type="text/javascript">

    //var BackParentLabel = '';
    //var BackChildLabel = '';
    //var BackId = '';
    //var IsBack = '';
    //var BackHeadTitle = "";

    var list = [];
    var listid = [];
    var SearchVal = [];
    var number_of_pages;
    $(document).ready(function () {

        @*BackParentLabel = '@TempData["BackParentLabel"]';
        BackChildLabel = '@TempData["BackChildLabel"]';
        BackId = '@TempData["BackId"]';*@

        var _carddata = "@cardsectionList";
        var _CardData = (_carddata.toString().replace(/&quot;/g, '"'));
        _CardData = JSON.parse(_CardData);
        var _cardhtml = '';
        var _masterParentLabel = '',_title = '', _Revact_proj = '', _Revgoal = '', _Revpercentange = '', _Costact_proj = '', _Costgoal = '', _Costpercentange = '', _ROIact_proj = '', _ROIgoal = '', _ROIpercentange = '';
        var _Revdata = '', _Costdata = '', _ROIdata = '', _lineChartData = '';
        var _fieldId = '';
        var rev = "Revenue", cost = "Cost", roi = "ROI";
        var actproj = "_act_proj", goal = "_goal", percntg = "_percentage";
        var _Revact_projId = '', _RevgoalId = '', _RevPercntgId = '', _Costact_projId = '', _CostgoalId = '', _CostPercntgId = '', _ROIact_projId = '', _ROIgoalId = '', _ROIPercntgId = '';
        var _btnDetailsId = '', _btnCompareId = '', _chkCompareId = '', _linechartDivId = '';
        var _revIsNegative = '';
        // Add BY Nishant Sheth
        // Desc: For Card Section details button click argument
        var ParentLabel = '@ViewBag.ParentLabel';
        var childlabelType = '@ViewBag.childlabelType';
        //var childId = '@ViewBag.childId';
        var optionmain = '@ViewBag.option';
        var divid = 1;// add by nishant sheth for give div id
        // End By Nishant Sheth

        //alert(_CardData.length);
        $.each(_CardData, function (key, value) {
            _title = value.title;
            _masterParentLabel = value.MasterParentlabel;
            _Revdata = value.RevenueCardValues;
            _Costdata = value.CostCardValues;
            _ROIdata = value.ROICardValues;
            _lineChartData = value.LineChartData;
            list.push(_lineChartData);

            _Revact_proj = _Revdata.Actual_Projected;
            _Revgoal = _Revdata.Goal;
            _Revpercentange = _Revdata.Percentage;
            _revIsNegative = _Revdata.IsNegative;

            _Costact_proj = _Costdata.Actual_Projected;
            _Costgoal = _Costdata.Goal;
            _Costpercentange = _Costdata.Percentage;

            _ROIact_proj = _ROIdata.Actual_Projected;
            _ROIgoal = _ROIdata.Goal;
            _ROIpercentange = _ROIdata.Percentage;

            _fieldId = value.FieldId;

            // Configure Details & Compare buttonID and CompareCheckbox ID.
            _btnDetailsId = 'buttonDtls_' + _fieldId;
            _btnCompareId = "buttonCmpr_" + _fieldId;
            _chkCompareId = "chk_" + _fieldId;
            _linechartDivId = "dvline_" + _fieldId;
            listid.push(_linechartDivId);

            _Revact_projId = rev + actproj + "_" + _fieldId;
            _RevgoalId = rev + goal + "_" + _fieldId;
            _RevPercntgId = rev + percntg + "_" + _fieldId;

            _Costact_projId = cost + actproj + "_" + _fieldId;
            _CostgoalId = cost + goal + "_" + _fieldId;
            _CostPercntgId = cost + percntg + "_" + _fieldId;

            _ROIact_projId = roi + actproj + "_" + _fieldId;
            _ROIgoalId = roi + goal + "_" + _fieldId;
            _ROIPercntgId = roi + percntg + "_" + _fieldId;

            //alert("key: " + key + ", Value: " + value.title);
            _cardhtml = _cardhtml + '<div class="region-content" revenueval="' + _Revact_proj + '" costval="' + _Costact_proj + '" roival="' + _ROIact_proj + '" id="carddiv_' + divid + '" title="' + _title + '">';
            _cardhtml = _cardhtml + '<div>';
            _cardhtml = _cardhtml + '<div class="report-btn-group">';
            _cardhtml = _cardhtml + '<div>';
            _cardhtml = _cardhtml + '<p class="revanue-p">' + _title + '</p>';
            $("#titletext").val(_title).html();
            var _name = htmlEncode(_title);
            if (childlabelType != '@Common.RevenueTactic') {

                _cardhtml = _cardhtml + '<button id="' + _btnDetailsId + '" class="btn btn-blue text-shadow-blue source-sans-proregular" name="' + _btnDetailsId + '" onclick=javascript:CardDetailsClick("' + String(_masterParentLabel) + '","' + String(ParentLabel) + '","' + String(childlabelType) + '","' + String(_fieldId) + '","' + String(optionmain) + '","' + escape(_name) + '","' + String(_Revact_proj) + '","' + String(_Revgoal) + '","' + String(_Revpercentange) + '","' + String(_revIsNegative) + '")>Details</button>';
            }
            _cardhtml = _cardhtml + '</div>';
            _cardhtml = _cardhtml + '<div>';
            _cardhtml = _cardhtml + ' <p class="revanue-p-right">';
            _cardhtml = _cardhtml + '<input "' + _chkCompareId + '" type="checkbox" /><label> Add to Compare</label>';
            _cardhtml = _cardhtml + '</p>';
            _cardhtml = _cardhtml + '<button id="' + _btnCompareId + '" class="btn btn-blue text-shadow-blue source-sans-proregular report-blue-btn hideReport" name="' + _btnCompareId + '">Compare</button>';
            _cardhtml = _cardhtml + '</div>';
            _cardhtml = _cardhtml + '</div>';

            _cardhtml = _cardhtml + '<div class="region-data">';

            _cardhtml = _cardhtml + '<div class="data">';
            _cardhtml = _cardhtml + '<span class="title">Revenue</span>';
            _cardhtml = _cardhtml + '<p class="value"> <span class="cardval carvdval-block" add-sep="false" orig-val="' + _Revact_proj + '" id="' + _Revact_projId + '">' + _Revact_proj + '</span><span class="inner-sub-value"></span><span class="cardsub sub-value" add-sep="true" orig-val="' + _Revgoal + '" id="' + _RevgoalId + '">' + _Revgoal + '</span></p>';
            _cardhtml = _cardhtml + '<span class="percentageval" orig-val="' + _Revpercentange + '" id="' + _RevPercntgId + '">' + _Revpercentange + '</span>';
            _cardhtml = _cardhtml + '</div>';

            _cardhtml = _cardhtml + '<div class="data">';
            _cardhtml = _cardhtml + '<span class="title">Cost</span>';
            _cardhtml = _cardhtml + '<p class="value"> <span class="cardval carvdval-block" add-sep="false" orig-val="' + _Costact_proj + '" id="' + _Costact_projId + '">' + _Costact_proj + '</span><span class="inner-sub-value"></span><span class="cardsub sub-value" add-sep="true" orig-val="' + _Costgoal + '" id="' + _CostgoalId + '">' + _Costgoal + '</span></p>';
            _cardhtml = _cardhtml + '<span class="percentageval" orig-val="' + _Costpercentange + '" id="' + _CostPercntgId + '">' + _Costpercentange + '</span>';
            _cardhtml = _cardhtml + '</div>';

            _cardhtml = _cardhtml + '<div class="data">';
            _cardhtml = _cardhtml + '<span class="title">ROI</span>';
            _cardhtml = _cardhtml + '<p class="value"> <span class="cardval carvdval-block" orig-val="' + _ROIact_proj + '" id="' + _ROIact_projId + '">' + _ROIact_proj + '</span> <span class="cardsub sub-value"  orig-val="' + _ROIgoal + '" id="' + _ROIgoalId + '">/' + _ROIgoal + '</span></p>';
            _cardhtml = _cardhtml + '<span class="percentageval" orig-val="' + _ROIpercentange + '" id="' + _ROIPercntgId + '">' + _ROIpercentange + '</span>';
            _cardhtml = _cardhtml + '</div>';

            _cardhtml = _cardhtml + '<div id="' + _linechartDivId + '" style="height:100%; width:48%;float:left;">';
            _cardhtml = _cardhtml + '</div>';

            _cardhtml = _cardhtml + '</div>';
            _cardhtml = _cardhtml + '</div>';
            _cardhtml = _cardhtml + '</div>';
            divid++;
        });
        $("#dvCardSectionData").html(_cardhtml);

        formatCardSectionValues();
        formatCardPercentageValue();
        formatSetsubValues();
        
        //LoadPagination();

        var a = $('#dvCardSectionData').children();

        $(a).each(function (index, element) {
            var _revenueval = $(this).attr("revenueval");
            var _costval = $(this).attr("costval");
            var _roival = $(this).attr("roival");
            var _id = $(this).attr("id");
            var _divhtml = $(this)[0].outerHTML;
            var _title = $(this).attr("title");

            SearchVal.push({ revenueval: _revenueval, costval: _costval, roival: _roival, id: _id, divhtml: _divhtml, title: _title.toString().toLowerCase() });
        });

        SortCardSection($("#ddlSortby :selected").val());
        loadlineChart(list, listid);
    });

    function loadlineChart(_chartdata, chartId) {


        for (i = 0; i < _chartdata.length; i++) {

            var linechartDivId = "#" + chartId[i].toString();
            BindLineChart(_chartdata[i].categories, _chartdata[i].todayValue, _chartdata[i].isDisplay, _chartdata[i].series, linechartDivId, 150, true);
            // $(linechartDivId).css('width', '200px');

        }



    }
    function formatSetsubValues() {
        var _TypeCol = $(".cardsub");
        var _formatednumber = '';
        var _type = '';
        $.each(_TypeCol, function (key, _cntrl) {
            var _cntrlId = $(_cntrl).attr('id');
            var _Id = "#" + _cntrlId;
            var text = $(_Id).attr('orig-val');
            //_type = $(_Id).attr('add-sep');
            if (text != null && text != 'undefined' && text != 'NaN') {
                if (_Id.indexOf("ROI") > 0) {
                    _formatednumber = setBootstrapTooltip(_Id, text, 5, false);
                }
                else {
                    _formatednumber = setBootstrapTooltip(_Id, text, 5, true);
                }

                $(_Id).html(_formatednumber);
            }
            var value = $(_Id).text();
            $(_Id).html("/" + value);

        });
    }


    function formatCardSectionValues() {

        var _TypeCol = $(".cardval");
        var _formatednumber = '';
        var _type = '';
        $.each(_TypeCol, function (key, _cntrl) {
            var _cntrlId = $(_cntrl).attr('id');
            var _Id = "#" + _cntrlId;
            var text = $(_Id).attr('orig-val');
            //_type = $(_Id).attr('add-sep');
            if (text != null && text != 'undefined' && text != 'NaN') {
                if (_Id.indexOf("ROI") > 0) {
                    _formatednumber = setBootstrapTooltip(_Id, text, 5, false);
                }
                else {
                    _formatednumber = setBootstrapTooltip(_Id, text, 5, true);
                }
                $(_Id).html(_formatednumber);
            }
        });
    }

    function formatCardPercentageValue() {
        var _TypeCol = $(".percentageval");

        $.each(_TypeCol, function (key, _cntrl) {
            var _cntrlId = $(_cntrl).attr('id');
            var _lblPercentage = "#" + _cntrlId;
            var _text = $(_lblPercentage).attr('orig-val');
            var _percentage = parseFloat(_text);
            if (_percentage == null || _percentage == 'undefined' || _percentage == '' || _percentage == 'NaN') {
                _formtPercentage = "--";
                $(_lblPercentage).removeClass("above").removeClass("below");

            }
            else {
                if (_percentage < 0) {
                    _formtPercentage = '-' + FormatNumber(Math.abs(parseFloat(_percentage)), true);
                    $(_lblPercentage).removeClass("above").addClass("below")
                }
                else {
                    _formtPercentage = '+' + FormatNumber(Math.abs(parseFloat(_percentage)), true);
                    $(_lblPercentage).removeClass("below").addClass("above");
                }
            }
            $(_lblPercentage).html(_formtPercentage);
        });
    }

    /// Add By Nishant Sheth
    /// Desc: For card details section
    function CardDetailsClick(masterlabel, parentlabel, Type, id, OptionMain, HeadTitleval, _revActualProj, _revGoal, _revPercentage, _isNegativePercntg) {
       

        var BtnBack = document.getElementById('BtnBack');
        BtnBack.style.display = "block";

        var marketingDiv = document.getElementById('div-mareketing-drp');
        marketingDiv.style.display = "none";

        var _pushValue = {
            ActualProjected: _revActualProj.toString(),
            Goal: _revGoal.toString(),
            Percentage: _revPercentage.toString(),
            IsNegative: _isNegativePercntg.toString().toLowerCase()
        }
        tempRevenueHeader.push(_pushValue); // Push Card Values to Temp global variable declare at _Revenue.cshtml page. This global variable use when user click on Back button.


        var AllocatedBy = $('#ddlRevenueTimeFrame option:selected').text();
        var Qurt_Month = AllocatedBy;
        var _url = "@Url.Content("~/Report/GetRevenueToPlanByFilter/")" + "?ParentLabel=" + parentlabel + "&childlabelType=" + Type + "&childId=" + id + "&option=" + OptionMain + "&IsQuarterly=" + Qurt_Month + "&BackHeadTitle=" + HeadTitleval + "&isDetails=" + true;
        $("#dvRevenueToPlan").load(_url);
       
        formatHeaderValues(_revActualProj, _revGoal, _revPercentage, _isNegativePercntg);

        if (masterlabel == '@RevenuePlanner.Helpers.Common.RevenueCampaign') {
            if (Type == '@RevenuePlanner.Helpers.Common.RevenueCampaign') {
                $("#ddlCampaignRevenueToPlan").css('display', 'none');
                $("#btnMultiselect_ddlCampaignRevenueToPlan").css('display', 'none');

               // $("#ddlProgramRevenueToPlan").css('display', 'block');
                $("#btnMultiselect_ddlProgramRevenueToPlan").css('display', '');

              //  $("#ddlTacticRevenueToPlan").css('display', 'block');
                $("#btnMultiselect_ddlTacticRevenueToPlan").css('display', '');
                fillCardProgramDropDown(id, Type);
            }
            else if (Type == '@RevenuePlanner.Helpers.Common.RevenueProgram') {
                $("#ddlCampaignRevenueToPlan").css('display', 'none');
                $("#btnMultiselect_ddlCampaignRevenueToPlan").css('display', 'none');

           //     $("#ddlProgramRevenueToPlan").css('display', 'none');
                $("#btnMultiselect_ddlProgramRevenueToPlan").css('display', 'none');

             //   $("#ddlTacticRevenueToPlan").css('display', 'block');
                $("#btnMultiselect_ddlTacticRevenueToPlan").css('display', '');
                fillCardTacticDropDown(id, Type);
            }
        }
        else if (masterlabel == '@Common.CampaignCustomTitle') {
            if (Type == '@RevenuePlanner.Helpers.Common.RevenueCampaign') {
                $("#CampaignChildDDL").css('display', '');
                $("#CustomFieldChildDDL").css('display', 'none');
                $("#btnMultiselect_ddlCampaignRevenueToPlan").css('display', 'none');

                // $("#ddlProgramRevenueToPlan").css('display', 'block');
                $("#btnMultiselect_ddlProgramRevenueToPlan").css('display', '');

                //  $("#ddlTacticRevenueToPlan").css('display', 'block');
                $("#btnMultiselect_ddlTacticRevenueToPlan").css('display', '');
                fillCardProgramDropDown(id, Type);
            }
            else if (Type == '@RevenuePlanner.Helpers.Common.RevenueProgram') {
                $("#CampaignChildDDL").css('display', '');
                $("#CustomFieldChildDDL").css('display', 'none');
                $("#btnMultiselect_ddlCampaignRevenueToPlan").css('display', 'none');

                //     $("#ddlProgramRevenueToPlan").css('display', 'none');
                $("#btnMultiselect_ddlProgramRevenueToPlan").css('display', 'none');

                //   $("#ddlTacticRevenueToPlan").css('display', 'block');
                $("#btnMultiselect_ddlTacticRevenueToPlan").css('display', '');
                fillCardTacticDropDown(id, Type);
            }
            else {
                $("#CampaignChildDDL").css('display', '');
                $("#CustomFieldChildDDL").css('display', 'none');
                $("#btnMultiselect_ddlCampaignRevenueToPlan").css('display', '');

                $("#btnMultiselect_ddlProgramRevenueToPlan").css('display', '');

                $("#btnMultiselect_ddlTacticRevenueToPlan").css('display', '');
                fillCardCampaignDropDown(id, Type);
            }
        }
        else if (masterlabel == '@Common.ProgramCustomTitle') {
           if (Type == '@RevenuePlanner.Helpers.Common.RevenueProgram') {
                $("#CampaignChildDDL").css('display', '');
                $("#CustomFieldChildDDL").css('display', 'none');
                $("#btnMultiselect_ddlCampaignRevenueToPlan").css('display', 'none');

                //     $("#ddlProgramRevenueToPlan").css('display', 'none');
                $("#btnMultiselect_ddlProgramRevenueToPlan").css('display', 'none');

                //   $("#ddlTacticRevenueToPlan").css('display', 'block');
                $("#btnMultiselect_ddlTacticRevenueToPlan").css('display', '');
                fillCardTacticDropDown(id, Type);
            }
            else {
                $("#btnMultiselect_ddlCampaignRevenueToPlan").css('display', 'none');
                $("#CampaignChildDDL").css('display', '');
                $("#CustomFieldChildDDL").css('display', 'none');
                $("#btnMultiselect_ddlProgramRevenueToPlan").css('display', '');

                $("#btnMultiselect_ddlTacticRevenueToPlan").css('display', '');
                fillCardProgramDropDown(id, Type);
            }
        }
        else if (masterlabel == '@Common.TacticCustomTitle') {
          //  $("#ddlCampaignRevenueToPlan").css('display', 'none');
            $("#btnMultiselect_ddlCampaignRevenueToPlan").css('display', 'none');
            //CustomFieldChildDDL
          //  $("#ddlProgramRevenueToPlan").css('display', 'none');
            $("#btnMultiselect_ddlProgramRevenueToPlan").css('display', 'none');
            $("#CampaignChildDDL").css('display', '');
            $("#CustomFieldChildDDL").css('display','none')
          //  $("#ddlTacticRevenueToPlan").css('display', '');
            $("#btnMultiselect_ddlTacticRevenueToPlan").css('display', '');
            fillCardTacticDropDown(id, "");
        }
    }

    function fillCardCampaignDropDown(campaignId, type) {

        var id = '';
        var masteroptionid = masterCustomFieldOptionId;
        //campaignId = $('#ddlCampaignRevenueToPlan').val();
        if (campaignId > 0) {
            if (type == '') {
                masteroptionid = parseInt(campaignId);
            }
            else {
                id = campaignId.toString();
            }
        }
        $.ajax({
            type: 'POST',
            url: '@Url.Content("~/Report/LoadCampaignDropDownDynamic/")',
            data: {
                marsterCustomField: marsterCustomField,
                masterCustomFieldOptionId: masteroptionid
            },
            success: function (data) {
                $("#ddlCampaignRevenueToPlan").empty();
                $("#ddlCampaignRevenueToPlan").append("<option value='0'>All Campaigns</option>");
                $.each(data, function (index, optionData) {
                    $("#ddlCampaignRevenueToPlan").append("<option value='" + optionData.PlanCampaignId + "'>" + optionData.Title + "</option>");
                });
               
                marsterCustomField = marsterCustomField;
                masterCustomFieldOptionId = masteroptionid;
                fillCardProgramDropDown("0", type);
                $('#ddlCampaignRevenueToPlan').multiselect("refresh");
            },
            error: function () {

                $("#ddlCampaignRevenueToPlan").empty();
                $("#ddlCampaignRevenueToPlan").append("<option value='0'>All Programs</option>");
                fillCardProgramDropDown("0", type);
                $('#ddlCampaignRevenueToPlan').multiselect("refresh");
                GoToLogin();
            }
        });
    }

    function fillCardProgramDropDown(campaignId, type) {
        var id = '';
        var masteroptionid = masterCustomFieldOptionId;
        if (campaignId > 0) {
            if (type === undefined || type == null || type.length <= 0) {
                masteroptionid = parseInt(campaignId);
            }
            else {
                id = campaignId.toString();
            }
        }
        $.ajax({
            type: 'POST',
            url: '@Url.Content("~/Report/LoadProgramDropDownDynamic/")',
            data: {
                id: id,
                marsterCustomField: marsterCustomField,
                masterCustomFieldOptionId: masteroptionid
            },
            success: function (data) {
                $("#ddlProgramRevenueToPlan").empty();
                $("#ddlProgramRevenueToPlan").append("<option value='0'>All Programs</option>");
                $.each(data, function (index, optionData) {
                    $("#ddlProgramRevenueToPlan").append("<option value='" + optionData.PlanProgramId + "'>" + optionData.Title + "</option>");
                });
                marsterCustomField = marsterCustomField;
                masterCustomFieldOptionId = masteroptionid;
                fillCardTacticDropDown(campaignId, type);
                $('#ddlProgramRevenueToPlan').multiselect("refresh");
            },
            error: function () {
                
                $("#ddlProgramRevenueToPlan").empty();
                $("#ddlProgramRevenueToPlan").append("<option value='0'>All Programs</option>");
                fillCardTacticDropDown(campaignId, type);
                $('#ddlProgramRevenueToPlan').multiselect("refresh");
                GoToLogin();
            }
        });
    }

    function fillCardTacticDropDown(programId, Type) {
        var id = '';
        var masteroptionid = masterCustomFieldOptionId;
        if (programId > 0) {
            if (Type == "") {
                    masteroptionid = parseInt(programId);
            }
            else {
                id = programId.toString();
            }
        }

        $.ajax({
            type: 'POST',
            url: '@Url.Content("~/Report/LoadTacticDropDownDynamic/")',
            data: {
                id: id,
                type: Type,
                marsterCustomField: marsterCustomField,
                masterCustomFieldOptionId: masteroptionid
            },
            success: function (data) {
                $("#ddlTacticRevenueToPlan").empty();
                $("#ddlTacticRevenueToPlan").append("<option value='0'>All Tactics</option>");
                $.each(data, function (index, optionData) {
                    $("#ddlTacticRevenueToPlan").append("<option value='" + optionData.PlanTacticId + "'>" + optionData.Title + "</option>");
                });
                $('#ddlTacticRevenueToPlan').multiselect("refresh");
                //alert('call function!');
                //LoadDataRevenueToPlanByCampaign();
                //LoadDataRevenueRealization();
                myApp.hidePleaseWait();
            },
            error: function () {
                $("#ddlTacticRevenueToPlan").empty();
                $("#ddlTacticRevenueToPlan").append("<option value='0'>All Tactics</option>");
                $('#ddlTacticRevenueToPlan').multiselect("refresh");
                //alert('call function!');
                //LoadDataRevenueToPlanByCampaign();
                //LoadDataRevenueRealization();
                GoToLogin();
            }
        });
    }
    // End By Nishant Sheth

    /// Add By Nishant Sheth For Pagination and sorting: 03-Jul-2015

    function LoadPagination() {

        //how much items per page to show
        var show_per_page = $('#Itemsperpage :selected').text();
        //getting the amount of elements inside content div
        var number_of_items = $('#dvCardSectionData').children().size();
        //calculate the number of pages we are going to have
        number_of_pages = Math.ceil(number_of_items / show_per_page);

        //set the value of our hidden input fields
        $('#current_page').val(0);
        $('#show_per_page').val(show_per_page);

        var navigation_html = '<ul> <li><a href="javascript:previous();">«</a> </li>';
        //navigation_html += '<li id="prevmore">...</li>';
        var current_link = 0;
        while (number_of_pages > current_link) {
            navigation_html += '<li class="page_link" longdesc="' + current_link + '"><a href="javascript:go_to_page(' + current_link + ')" longdesc="' + current_link + '">' + (current_link + 1) + '</a> </li>';
            current_link++;
        }
        //navigation_html += '<li id="nextmore">...</li>';
        navigation_html += '<li> <a href="javascript:next();">»</a></li> </ul>';

        $('#page_navigation').html(navigation_html);

        //add active_page class to the first page link
        $('#page_navigation .page_link:first').addClass('active');

        for (var i = 0; i <= number_of_pages; i++) {
            $('.page_link[longdesc=' + i + ']').css('display', 'none');
        }
        for (var j = 0; j <= 5; j++) {
            $('.page_link[longdesc=' + j + ']').css('display', 'block');
        }

        //hide all the elements inside content div
        $('#dvCardSectionData').children().css('display', 'none');

        //and show the first n (show_per_page) elements
        $('#dvCardSectionData').children().slice(0, show_per_page).css('display', 'block');

    }

    function previous() {

        var pageNumber = parseInt($('#current_page').val());

        new_page = parseInt($('#current_page').val()) - 1;
        //if there is an item before the current active link run the function
        if ($('.active').prev('.page_link').length == true) {
            if (number_of_pages >= 6 && (pageNumber) < number_of_pages && ((pageNumber) / 6) % 1 === 0) {

                PrevNextMorePage(pageNumber, 'prev');
            }
            go_to_page(new_page);
        }

    }

    function next() {

        var pageNumber = parseInt($('#current_page').val());
        new_page = parseInt($('#current_page').val()) + 1;
        //if there is an item after the current active link run the function
        if ($('.active').next('.page_link').length == true) {
            if (number_of_pages >= 6 && (pageNumber + 1) < number_of_pages && ((pageNumber + 1) / 6) % 1 === 0) {

                PrevNextMorePage(pageNumber, 'next');
            }
            go_to_page(new_page);
        }

    }
    function go_to_page(page_num) {

        //get the number of items shown per page
        var show_per_page = parseInt($('#show_per_page').val());

        //get the element number where to start the slice from
        start_from = page_num * show_per_page;

        //get the element number where to end the slice
        end_on = start_from + show_per_page;

        //hide all children elements of content div, get specific items and show them
        $('#dvCardSectionData').children().css('display', 'none').slice(start_from, end_on).css('display', 'block');

        /*get the page link that has longdesc attribute of the current page and add active_page class to it
        and remove that class from previously active page link*/
        $('.page_link[longdesc=' + page_num + ']').addClass('active').siblings('.active').removeClass('active');

        //update the current page input field
        $('#current_page').val(page_num);
    }

    $("#Itemsperpage").change(function () {
        LoadPagination();
    });

    function PrevNextMorePage(pageNumber, button) {

        var nxtnum = 0;
        var prenum = 0;
        var count = 0;
        if (button == 'next') {

            for (var i = 0; i <= pageNumber + 1; i++) {
                if (count == 7)
                { break; }
                $('.page_link[longdesc=' + (pageNumber - i) + ']').css('display', 'none');
                $('.page_link[longdesc=' + (pageNumber + i) + ']').css('display', 'block');
                count++;
            }
            $('.page_link[longdesc=' + (pageNumber) + ']').css('display', 'none');
        }
        if (button == 'prev') {

            for (var i = 0; i <= pageNumber; i++) {

                if (count == 7)
                { break; }
                $('.page_link[longdesc=' + (pageNumber - i) + ']').css('display', 'block');
                $('.page_link[longdesc=' + (pageNumber + i) + ']').css('display', 'none');
                count++;
            }
            $('.page_link[longdesc=' + (pageNumber - 1) + ']').css('display', 'block');
        }

    }


    function SortByROI(a, b) {
        var aName = a.roival;
        var bName = b.roival;
        //return ((aName < bName) ? -1 : ((aName > bName) ? 1 : 0));
        //return aName - bName;
        return bName - aName;
    }
    function SortByRevenue(a, b) {
        var aName = a.revenueval;
        var bName = b.revenueval;
        //return ((aName < bName) ? -1 : ((aName > bName) ? 1 : 0));
        //return aName - bName;
        return bName - aName;
    }
    function SortByCost(a, b) {
        var aName = a.costval;
        var bName = b.costval;
        //return ((aName < bName) ? -1 : ((aName > bName) ? 1 : 0));
        //return aName - bName;
        return bName - aName;
    }



    function SortCardSection(sortBy) {

        var arrayval = [];
        var a = $('#dvCardSectionData').children();

        $(a).each(function (index, element) {

            var _revenueval = $(this).attr("revenueval");
            var _costval = $(this).attr("costval");
            var _roival = $(this).attr("roival");
            var _id = $(this).attr("id");
            var _divhtml = $(this)[0].outerHTML;
            var _title = $(this).attr("title");
            arrayval.push({ revenueval: _revenueval, costval: _costval, roival: _roival, id: _id, divhtml: _divhtml, title: _title.toString().toLowerCase() });

        });
        var sortval;
        if (sortBy == 'revenueval') {
            sortval = arrayval.sort(SortByRevenue);
        }
        if (sortBy == 'costval') {
            sortval = arrayval.sort(SortByCost);
        }
        if (sortBy == 'roival') {
            sortval = arrayval.sort(SortByROI);
        }
        //    var sortval = SortingWithArray(arrayval, sortBy);
        var cardhtml = "";
        $(sortval).each(function () {

            var CardString = this.divhtml;
            cardhtml += CardString;
        });
        var divCardSection = $("#dvCardSectionData");
        divCardSection.html('');
        divCardSection.html(cardhtml);
        LoadPagination();

    }
    function SortByCard(name) {

        var $divs = $("div.region-content");
        var numericallyOrderedDivs = $divs.sort(function (a, b) {
            return $(a).find("div[" + name + "]").val() > $(b).find("div[" + name + "]").val();
        });
        $("#dvCardSectionData").html('');
        $("#dvCardSectionData").html(numericallyOrderedDivs);
    }

    $("#ddlSortby").change(function () {
        SortCardSection($("#ddlSortby :selected").val());
    });

    function SearchByTitle(TitleVal) {

        var searcharray = [];
        $(SearchVal).each(function (index, element) {

            var searchstring = this.title;
            if (searchstring != undefined && searchstring != 'undefined' && searchstring != null && searchstring != '') {
                if (searchstring.indexOf(TitleVal.toLowerCase().trim()) > -1) {
                    searcharray.push(this);
                }
            }
        });
        //var result = _.contains(arrayval, TitleVal);
        var cardhtml = "";
        $(searcharray).each(function () {

            var CardString = this.divhtml;
            cardhtml += CardString;
        });
        var divCardSection = $("#dvCardSectionData");
        divCardSection.html('');

        if (cardhtml != null && cardhtml != '') {
            divCardSection.html(cardhtml);
            $("#divCardNoRecord").attr("style", "display:none");
            $("#page_navigation").attr("style", "display:block");
        }
        else {
            // add BY Nishant Sheth for No Record found div : 06-July-2015
            cardhtml += '<div class="region-content" style="display: block;" id="divCardNoRecord"><div><div class="report-btn-group"><div><p class="revanue">No records found</p></div><div> </div></div></div></div>';
            // End By Nishant sheth
            divCardSection.html(cardhtml);
            $("#page_navigation").attr("style", "display:none");
        }
        SortCardSection($("#ddlSortby :selected").val());

    }
    $('#txtSearch').keypress(function (e) {
        if (e.keyCode == 13) {
            //$("#btnSearch").focus();
            $("#btnSearch").click();
        }
    });
    /// End By Nishant Sheth

</script>