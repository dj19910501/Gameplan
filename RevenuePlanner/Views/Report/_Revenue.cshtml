@model RevenuePlanner.Models.ReportModel
@using RevenuePlanner.Helpers
@using Newtonsoft.Json;
@{
    //var linechartdata = Model.RevenueLineChartModel != null ? JsonConvert.SerializeObject(Model.RevenueLineChartModel) : string.Empty;
    var revenue_Projected_Goal = Model.RevenueHeaderModel != null ? Model.RevenueHeaderModel : new RevenuePlanner.Models.Projected_Goal();
    var revenue_to_planModel = Model.RevenueToPlanModel != null ? Model.RevenueToPlanModel : new RevenuePlanner.Models.RevenueToPlanModel();
    var revenue_cardsectionModel = Model.CardSectionModel != null ? Model.CardSectionModel : new RevenuePlanner.Models.CardSectionModel();
    //var revenue_barchartModel = Model.RevenueToPlanBarChartModel != null ? JsonConvert.SerializeObject(Model.RevenueToPlanBarChartModel) : string.Empty;
    //var revenue_datatableModel = Model.RevenueToPlanDataModel != null ? JsonConvert.SerializeObject(Model.RevenueToPlanDataModel) : string.Empty;
    bool isPlanExistToShowReport = Convert.ToBoolean(ViewBag.IsPlanExistToShowReport);   //
}
<style type="text/css">
    .redLabel {
        color: #ff0000 !important;
    }

    .greenLabel {
        color: #009E26 !important;
    }

    .revenue-to-plan-graph {
        padding: 20px;
    }
</style>
@Html.Hidden("hdnIsPlanExistToShowReport", isPlanExistToShowReport)
<section class="report-overview-wraper">
    <div id="DivNoPlanToShowReport" style="border-top:none; display:none;" class="NoDataFound">No data found for selected active filters.</div>
    @if (isPlanExistToShowReport)
    {
        <div class="marketing-revenue-report">
            <div class="dropdown-marketing">
                <h2 id="head-title" class="ellipsis-block"></h2>
                <div class="geography-dropdown" id="div-mareketing-drp">
                    <h5>View By:</h5>
                    <div class="revenue-summary-custom">
                        @Html.DropDownList("ddlParentRevenueSummery", new SelectList((System.Collections.IEnumerable)ViewBag.parentRevenueSummery, "Value", "Text"))
                    </div>
                </div>
                <input type="button" id="BtnBack" class="btn btn-blue text-shadow-blue source-sans-proregular" value="< Back" onclick="javascript:BtnBackClick();" /> @*Add By Nishant Sheth*@
            </div>
            <div class="projected disable-gray">
                <span>Actual</span>
                <span id="revActual_Projected">$1.58M</span>
                <span style="display:none;">Goal (YTD):</span> <span id="revGoalYTD" style="display:none;">0</span>
                <span id="revActualPercentage"></span>
            </div>
            <div class="projected disable-gray">
                <span>Projected</span>
                <span id="revProjected"></span>
                <span style="display:none;">Goal:</span> <span id="revGoalYear" style="display:none;">0</span>
                <span id="revProjectedPercentage"></span>
            </div>
            <div class="time-frame">
                <div class="geography-dropdown">
                    <div class="revenue-summary-custom ddlQuarter">
                        <span class="selectBox" id="ddlTimeFrameSelectBox" style="width: 158px; line-height: 1.1;">
                            @Html.DropDownList("ddlRevenueTimeFrame", new SelectList((System.Collections.IEnumerable)ViewBag.ViewByAllocated, "Value", "Text", (string)ViewBag.SelectedTimeFrame), new { @class = "ddlStyleReport hide" })
                        </span>
                    </div>
                </div>
            </div>
        </div>
        <div class="revenue-to-plan report-revenue">
            <div class="geography-dropdown report-revenue-summary" style="line-height:34px;">
                <h5>Summary</h5>
                <div class="revenue-summary-custom">
                    <div id="CustomFieldChildDDL" style="display:none;">
                        <span>
                            @Html.DropDownList("ddlChildRevenueToPlan", new SelectList((System.Collections.IEnumerable)ViewBag.ChildTabListRevenueToPlan, "Value", "Text"))
                        </span>
                    </div>
                    <div id="CampaignChildDDL">
                        <span>
                            @Html.DropDownList("ddlCampaignRevenueToPlan", new SelectList((System.Collections.IEnumerable)ViewBag.CampaignDropdownList, "PlanCampaignId", "Title"))
                        </span>
                        <span>
                            @Html.DropDownList("ddlProgramRevenueToPlan", new SelectList((System.Collections.IEnumerable)ViewBag.ProgramDropdownList, "PlanProgramId", "Title"))
                        </span>
                        <span>
                            @Html.DropDownList("ddlTacticRevenueToPlan", new SelectList((System.Collections.IEnumerable)ViewBag.TacticDropdownList, "PlanTacticId", "Title"))
                        </span>
                    </div>
                </div>
            </div>
            <div id="dvRevenueToPlan">
                @Html.Partial("_RevenueToPlan", revenue_to_planModel)
            </div>
        </div>
        <div id="dvRevenueCardSection">
            @Html.Partial("_ReportCardSection", revenue_cardsectionModel)
        </div>
    }
</section>


<script type="text/javascript">
    var marsterCustomField = '@Common.RevenueCampaign';
    var masterCustomFieldOptionId = 0;
    var tempRevenueHeader = [];
    var BackFwdRevenueList = [];
    var RevIsnextprev = false;
    var IsGotoPage = false;
    
    $(function () {
        var options = {

            title: {
                text: '',
                x: -20 //center
            },
            subtitle: {
                text: '',
                x: -20
            },
            xAxis: {
                categories: ['Q1', 'Q2', 'Q3', 'Q4']
            },
            yAxis: {
                title: {
                    text: ''
                },
                plotLines: [{
                    value: 0,
                    width: 1,
                    color: '#808080'
                }]
            },
            tooltip: {
                valueSuffix: '°C'
            },
            legend: {
                layout: 'vertical',
                align: 'right',
                verticalAlign: 'middle',
                borderWidth: 0
            },
            series: [{
                name: 'Goal',
                data: [15, 32, 45, 58]
            }, {
                name: 'Projected',
                data: [12, 35, 48, 55]
            }]
        }
        //$('#dvTotalRevenueGraph').highcharts(options);
        $('#dvNorthAmericaGraph1').highcharts(options);
        $('#dvNorthAmericaGraph2').highcharts(options);
        $('#dvNorthAmericaGraph3').highcharts(options);
    });

    var _childRevenueToPlanDDLId = "ddlChildRevenueToPlan";
    var campaignId = $('#ddlCampaignRevenueToPlan').val();
    var programId = $('#ddlProgramRevenueToPlan').val();

    //var BackParentLabel = '';
    //var BackChildLabel = '';
    //var BackId = '';
    //var IsBack = '';
    //var BackHeadTitle = "";
    var OptionMain = '';
    $(document).ready(function () {
        ShowHideReport();
        var _isplan = "@isPlanExistToShowReport";
        if (_isplan.toLowerCase() == 'true') {
            @*BackParentLabel = '@TempData["BackParentLabel"]';
        BackChildLabel = '@TempData["BackChildLabel"]';
        BackId = '@TempData["BackId"]';*@
            var BtnBack = document.getElementById('BtnBack');
            BtnBack.style.display = "none";
            var _BackFwdVar = {
                BackParentLabel: '@Common.RevenueCampaign',
                BackChildLabel: '',
                BackId: '',
                HeadHireachy: 'Marketing Revenue'
            }
            BackFwdRevenueList.push(_BackFwdVar);

            var _BackHeadValues = BackFwdRevenueList[BackFwdRevenueList.length - 1];
            OptionMain = '@ViewBag.option';
            var HeadTitle = document.getElementById('head-title');
            HeadTitle.innerHTML = decodeURIComponent(_BackHeadValues.HeadHireachy);
            $("#head-title").attr('title', '' + decodeURIComponent(HeadTitle.innerHTML) + '');
            $("#ddlParentRevenueSummery,#ddlChildRevenueToPlan,#ddlCampaignRevenueToPlan,#ddlProgramRevenueToPlan,#ddlTacticRevenueToPlan").multiselect({
                multiple: false,
                noneSelectedText: "Please Select",
                selectedList: 1,
                CustomCampaignName: "@Common.CampaignCustomTitle",
                CustomProgramName: "@Common.ProgramCustomTitle",
                CustomTacticName: "@Common.TacticCustomTitle"
            }).multiselectfilter({
                CustomCampaignName: "@Common.CampaignCustomTitle",
                CustomProgramName: "@Common.ProgramCustomTitle",
                CustomTacticName: "@Common.TacticCustomTitle"
            });

            var _campaignLabel = '@Common.RevenueCampaign';

            $('#ddlParentRevenueSummery').bind('change', function () {
                var _parentValue = $(this).val();
                marsterCustomField = _parentValue;
                // ParentValue selected Campaign label then dispaly Campaigns,Programs,Tactics dropdownlist else single CustomfieldOption dropdownlist.
                if (_parentValue == _campaignLabel) {
                    $("#CustomFieldChildDDL").css('display', 'none');
                    $("#CampaignChildDDL").css('display', 'block');

                    /*Start: Refresh Campaign, Program, Tactic dropdowns*/
                    $("#ddlCampaignRevenueToPlan").val("0");
                    $("#ddlProgramRevenueToPlan").val("0");
                    $("#ddlTacticRevenueToPlan").val("0");
                    $("#ddlCampaignRevenueToPlan,#ddlProgramRevenueToPlan,#ddlTacticRevenueToPlan").multiselect({
                        multiple: false,
                        noneSelectedText: "Please Select",
                        selectedList: 1,
                        CustomCampaignName: "@Common.CampaignCustomTitle",
                        CustomProgramName: "@Common.ProgramCustomTitle",
                        CustomTacticName: "@Common.TacticCustomTitle"
                    }).multiselectfilter({
                        CustomCampaignName: "@Common.CampaignCustomTitle",
                        CustomProgramName: "@Common.ProgramCustomTitle",
                        CustomTacticName: "@Common.TacticCustomTitle"
                    });
                    //$("#ddlCampaignRevenueToPlan").multiselect('refresh');
                    /*End: Refresh Campaign, Program, Tactic dropdowns*/

                }
                else {
                    $("#CampaignChildDDL").css('display', 'none');
                    $("#CustomFieldChildDDL").css('display', 'block');
                    loadChildListData(_parentValue, _childRevenueToPlanDDLId);
                }
            });

            @*var _revGoal = '@revenue_Projected_Goal.Goal';*@
            var _revActual_Projected = '@revenue_Projected_Goal.Actual_Projected';
            var _revProjected = '@revenue_Projected_Goal.Projected';
            @*var _revPercentage = '@revenue_Projected_Goal.Percentage';
        var _isNegativePercentage = '@revenue_Projected_Goal.IsnegativePercentage';*@
            var _revGoalYTD = '@revenue_Projected_Goal.GoalYTD';
            var _revGoalYear = '@revenue_Projected_Goal.GoalYear';
            var _revActualPercentage = '@revenue_Projected_Goal.ActualPercentage';
            var _revProjectedPercentage = '@revenue_Projected_Goal.ProjectedPercentage';
            var _revActualPercentageIsnegative = '@revenue_Projected_Goal.ActualPercentageIsnegative';
            var _revProjectedPercentageIsnegative = '@revenue_Projected_Goal.ProjectedPercentageIsnegative';

            formatHeaderValues(_revActual_Projected, _revProjected, _revGoalYTD, _revGoalYear, _revActualPercentage, _revActualPercentageIsnegative, _revProjectedPercentage, _revProjectedPercentageIsnegative);

            //var _formtPercentage = "0";
            //setBootstrapTooltip("#revActual_Projected", _revActual_Projected, 5, true);
            //setBootstrapTooltip("#revGoal", _revGoal, 5, true);
            //if (_revPercentage == null || _revPercentage == 'undefined' || _revPercentage == '' || _revPercentage == 'NaN' || _revPercentage == '-NaN') {
            //    _formtPercentage = "0";
            //    $("#revPercentage").removeClass("greenLabel").removeClass("redLabel");
            //}
            //else {
            //    if (_isNegativePercentage.toLowerCase() == 'true') {
            //        _formtPercentage = '-' + FormatNumber(Math.abs(parseFloat(_revPercentage)), true);
            //        $("#revPercentage").removeClass("greenLabel").addClass("redLabel");
            //    }
            //    else {
            //        _formtPercentage = '+' + FormatNumber(Math.abs(parseFloat(_revPercentage)), true);
            //        $("#revPercentage").removeClass("redLabel").addClass("greenLabel");
            //    }
            //}
            //$("#revPercentage").html(_formtPercentage);

            @*// Start:- Revenue To Plan BarChart script
        var _barchartdata = "@revenue_barchartModel";
        var _BarChartdata = (_barchartdata.toString().replace(/&quot;/g, '"'));
        _BarChartdata = JSON.parse(_BarChartdata);
        var barchartDivId = "#dvRevenuePlanBarChart";

        BindRevenueBarChartData(_BarChartdata.categories, _BarChartdata.series, barchartDivId);
        // End:- Revenue To Plan BarChart script

        // Start:- Revenue To Plan DataTable script
        BindRevenueToPlanDataTable();
        formatDataTableValues();
        formatPercentageValue();
        formatROIValue();
        // End:- Revenue To Plan DataTable script  *@

            // Start:- Revenue_LineChart script
            @*var _lineardata = "@linechartdata";
        var chartdata = (_lineardata.toString().replace(/&quot;/g, '"'));
        chartdata = JSON.parse(chartdata);
        var linechartDivId = "#RevenueLineChart";

        BindLineChartRevenue(chartdata.categories, chartdata.todayValue, chartdata.isDisplay, chartdata.series, linechartDivId, 220, false);*@
            // End:- Revenue_LineChart script
        }
    });

    $("#ddlTimeFrameSelectBox select").selectbox();
    $("#ddlRevenueTimeFrame").change(function () {
        AllocatedBy = $('#ddlRevenueTimeFrame option:selected').text();
        Qurt_Month = AllocatedBy;
        var _BackHeadValues = BackFwdRevenueList[BackFwdRevenueList.length - 1];
        var parentlabel = _BackHeadValues.BackParentLabel;
        var Type = _BackHeadValues.BackChildLabel;
        var id = _BackHeadValues.BackId;
        var _url = "@Url.Content("~/Report/GetRevenueToPlanByFilter/")" + "?ParentLabel=" + parentlabel + "&childlabelType=" + Type + "&childId=" + id + "&option=" + OptionMain + "&IsQuarterly=" + Qurt_Month + "&DrpChange=" + 'true';
        $("#dvRevenueToPlan").load(_url);
        //LoadRevenueData();
    });

    function loadChildListData(parentOption, id) {
        $.ajax({
            type: 'POST',
            url: '@Url.Content("~/Report/GetChildLabelData/")',
            data: {
                ParentLabel: parentOption,
                selectOption: OptionMain,////This variable globally declare in parent view "Index"
                IsAllInclude: true
            },
            success: function (r) {
                PopulateRevenueToPlanChildDDL(r, id);
            }
        });
    }
    function PopulateRevenueToPlanChildDDL(items, id) {
        var $dropdown = $("#" + id);
        $dropdown.empty();
        var $html = '';
        if (items.length > 0) {

            $.each(items, function (index, planobj) {

                $html += '<option value="' + planobj.Value + '">' + planobj.Text + '</option>';

            });
            $('#btnMultiselect_' + id).attr('style', 'display:block;');
            if ($('#btnMultiselect_' + id).parent().parent().hasClass('margin-rigthminus20px')) {
                $('#btnMultiselect_' + id).parent().parent().removeClass('margin-rigthminus20px');
            }
        }
        else {
            $('#btnMultiselect_' + id).attr('style', 'display:none;');
            $('#btnMultiselect_' + id).parent().parent().addClass('margin-rigthminus20px');
        }
        $dropdown.append($html);

        //start Added by Mitesh Vaishnav for PL ticket #727
        //update multiselect box as its related dropdownlist's option will be changed
        // var updatedOption = $("#ddlPlan").find('option');

        //End Added by Mitesh Vaishnav for PL ticket #727
        $("#multipleselect_" + id).find("input[type='search']").val('');
        $('#' + id).multiselect("refresh");
    }

    $('#ddlCampaignRevenueToPlan').change(function () {
        $("#ddlProgramRevenueToPlan").empty();
        $('#ddlTacticRevenueToPlan').empty();
        fillProgramDropdown();
    });
    $('#ddlProgramRevenueToPlan').change(function () {
        $('#ddlTacticRevenueToPlan').empty();
        fillTacticDropdown();
    });
    $('#ddlTacticRevenueToPlan').change(function () {
        LoadDataRevenueToPlanByCampaign();
    });
    $('#ddlParentRevenueSummery').change(function () {
        var _childValue = '0';
        if ($('#ddlParentRevenueSummery :selected').val() == '@Common.RevenueCampaign') {
            fillCardCampaignDropDown("", "");
        }
        ReloadRevenueToPlanByCustomField(_childValue);

    });
    $('#ddlChildRevenueToPlan').change(function () {
        var _childValue = $("#ddlChildRevenueToPlan").val();
        masterCustomFieldOptionId = _childValue;
        ReloadRevenueToPlanByCustomField(_childValue);
    });
    function ReloadRevenueToPlanByCustomField(_childvalue) {
        myApp.showPleaseWait();
        var parentlabel = $("#ddlParentRevenueSummery").val();
        var Type = '';
        var id = '';
        id = _childvalue;
        BackFwdRevenueList.length = 0;
        var _BackFwdVar = {
            BackParentLabel: parentlabel,
            BackChildLabel: '',
            BackId: id,
            HeadHireachy: 'Marketing Revenue'
        }
        BackFwdRevenueList.push(_BackFwdVar);
        var _url = "@Url.Content("~/Report/GetRevenueToPlanByFilter/")" + "?ParentLabel=" + parentlabel + "&childlabelType=" + Type + "&childId=" + id + "&option=" + OptionMain + "&IsQuarterly=" + Qurt_Month + "&DrpChange=" + 'true';
        $("#dvRevenueToPlan").load(_url);

        // Add by Nishant Sheth
        $("#ddlCampaignRevenueToPlan").css('display', 'none');
        $("#btnMultiselect_ddlCampaignRevenueToPlan").css('display', '');
        $("#ddlProgramRevenueToPlan").css('display', 'none');
        $("#btnMultiselect_ddlProgramRevenueToPlan").css('display', '');
        $("#ddlTacticRevenueToPlan").css('display', 'none');
        $("#btnMultiselect_ddlTacticRevenueToPlan").css('display', '');
        //myApp.hidePleaseWait();
    }
    function LoadDataRevenueToPlanByCampaign() {
        myApp.showPleaseWait();
        var id = '0';
        var Type = '';
        var tacticId = $("#ddlTacticRevenueToPlan").val();
        var parentlabel = $("#ddlParentRevenueSummery").val();
        if (tacticId > 0) {
            id = tacticId;
            Type = "@RevenuePlanner.Helpers.Common.RevenueTactic"
        }
        else if (programId > 0) {
            Type = "@RevenuePlanner.Helpers.Common.RevenueProgram"
            id = programId.toString();
        }
        else if (campaignId > 0) {
            Type = "@RevenuePlanner.Helpers.Common.RevenueCampaign"
            id = campaignId.toString();
        }
        if ((parentlabel.indexOf('@Common.TacticCustomTitle') > -1 || parentlabel.indexOf('@Common.CampaignCustomTitle') > -1 || parentlabel.indexOf('@Common.ProgramCustomTitle') > -1)) {
            if (id > 0) {
                parentlabel = '@Common.RevenueCampaign';
            }
            if (parseInt(id) <= 0) {
                id = masterCustomFieldOptionId;
            }

        }
        var _url = "@Url.Content("~/Report/GetRevenueToPlanByFilter/")" + "?ParentLabel=" + parentlabel + "&childlabelType=" + Type + "&childId=" + id + "&option=" + OptionMain + "&IsQuarterly=" + Qurt_Month;
        $("#dvRevenueToPlan").load(_url);
        // myApp.hidePleaseWait();
    }

    function fillProgramDropdown() {
        myApp.showPleaseWait();
        var id = '';
        campaignId = $('#ddlCampaignRevenueToPlan').val();
        if (campaignId > 0) {
            id = campaignId.toString();
        }
        $.ajax({
            type: 'POST',
            url: '@Url.Content("~/Report/LoadProgramDropDown/")',
            data: {
                id: id,
                selectOption: OptionMain
            },
            success: function (data) {
                $("#ddlProgramRevenueToPlan").empty();
                $("#ddlProgramRevenueToPlan").append("<option value='0'>All Programs</option>");
                $.each(data, function (index, optionData) {
                    $("#ddlProgramRevenueToPlan").append("<option value='" + optionData.PlanProgramId + "'>" + optionData.Title + "</option>");
                });
                fillTacticDropdown();
                $('#ddlProgramRevenueToPlan').multiselect("refresh");
                //myApp.hidePleaseWait();
            },
            error: function () {
                $("#ddlProgramRevenueToPlan").empty();
                $("#ddlProgramRevenueToPlan").append("<option value='0'>All Programs</option>");
                fillTacticDropdown();
                $('#ddlProgramRevenueToPlan').multiselect("refresh");
                GoToLogin();
            }
        });
    }

    function fillTacticDropdown() {
        myApp.showPleaseWait();
        var id = '';
        var Type = '';
        programId = $('#ddlProgramRevenueToPlan').val();
        if (programId > 0) {
            Type = '';
            id = programId.toString();
        }
        else if (campaignId > 0) {
            Type = "@RevenuePlanner.Helpers.Common.RevenueCampaign"
            id = campaignId.toString();
        }

        $.ajax({
            type: 'POST',
            url: '@Url.Content("~/Report/LoadTacticDropDown/")',
            data: {
                id: id,
                type: Type,
                selectOption: OptionMain
            },
            success: function (data) {
                $("#ddlTacticRevenueToPlan").empty();
                $("#ddlTacticRevenueToPlan").append("<option value='0'>All Tactics</option>");
                $.each(data, function (index, optionData) {
                    $("#ddlTacticRevenueToPlan").append("<option value='" + optionData.PlanTacticId + "'>" + optionData.Title + "</option>");
                });
                $('#ddlTacticRevenueToPlan').multiselect("refresh");
                //alert('call function!');
                LoadDataRevenueToPlanByCampaign();
                //LoadDataRevenueRealization();
                // myApp.hidePleaseWait();
            },
            error: function () {
                $("#ddlTacticRevenueToPlan").empty();
                $("#ddlTacticRevenueToPlan").append("<option value='0'>All Tactics</option>");
                $('#ddlTacticRevenueToPlan').multiselect("refresh");
                //alert('call function!');
                LoadDataRevenueToPlanByCampaign();
                //LoadDataRevenueRealization();
                GoToLogin();
            }
        });

    }
    //formatHeaderValues(_revActual_Projected, _revProjected, _revGoalYTD, _revGoalYear, _revActualPercentage, _revActualPercentageIsnegative, _revProjectedPercentage, _revProjectedPercentageIsnegative);
    function formatHeaderValues(_revActual_Projected, _revProjected, _revGoalYTD, _revGoalYear, _revActualPercentage, _revActualPercentageIsnegative, _revProjectedPercentage, _revProjectedPercentageIsnegative) {
        @*var _revGoal = '@revenue_Projected_Goal.Goal';
        var _revActual_Projected = '@revenue_Projected_Goal.Actual_Projected';
        var _revPercentage = '@revenue_Projected_Goal.Percentage';
        var _isNegativePercentage = '@revenue_Projected_Goal.IsnegativePercentage';*@

        var _formtPercentage = "0";
        $("#revActual_Projected").popover('destroy');
        $("#revProjected").popover('destroy');
        $("#revGoalYTD").popover('destroy');
        setBootstrapTooltip("#revActual_Projected", _revActual_Projected, 5, true);
        setBootstrapTooltip("#revProjected", _revProjected, 5, true);
        setBootstrapTooltip("#revGoalYTD", _revGoalYTD, 5, true);
        setBootstrapTooltip("#revGoalYear", _revGoalYear, 5, true);

        if (_revActualPercentage == null || _revActualPercentage == 'undefined' || _revActualPercentage == '' || _revActualPercentage == 'NaN' || _revActualPercentage == '-NaN') {
            _formtPercentage = "0";
            $("#revActualPercentage").removeClass("greenLabel").removeClass("redLabel");
        }
        else {
            if (_revActualPercentageIsnegative.toLowerCase() == 'true') {
                _formtPercentage = '-' + FormatNumber(Math.abs(parseFloat(_revActualPercentage)), true);
                $("#revActualPercentage").removeClass("greenLabel").addClass("redLabel");
            }
            else {
                _formtPercentage = '+' + FormatNumber(Math.abs(parseFloat(_revActualPercentage)), true);
                $("#revActualPercentage").removeClass("redLabel").addClass("greenLabel");
            }
        }
        $("#revActualPercentage").html(_formtPercentage);

        if (_revProjectedPercentage == null || _revProjectedPercentage == 'undefined' || _revProjectedPercentage == '' || _revProjectedPercentage == 'NaN' || _revProjectedPercentage == '-NaN') {
            _formtPercentage = "0";
            $("#revProjectedPercentage").removeClass("greenLabel").removeClass("redLabel");
        }
        else {
            if (_revProjectedPercentageIsnegative.toLowerCase() == 'true') {
                _formtPercentage = '-' + FormatNumber(Math.abs(parseFloat(_revProjectedPercentage)), true);
                $("#revProjectedPercentage").removeClass("greenLabel").addClass("redLabel");
            }
            else {
                _formtPercentage = '+' + FormatNumber(Math.abs(parseFloat(_revProjectedPercentage)), true);
                $("#revProjectedPercentage").removeClass("redLabel").addClass("greenLabel");
            }
        }
        $("#revProjectedPercentage").html(_formtPercentage);
    }
    function ShowHideReport() {
        var _isplan = $('#hdnIsPlanExistToShowReport').val().toLowerCase();
        if (_isplan == 'true') {
            $('#DivNoPlanToShowReport').css('display', 'none');
            //$('#divRevenue').css('display', 'block');
            //$('#divConversion').css('display', 'block');
            //$('#divBudgeting').css('display', 'block');
        }
        else {
            $('#DivNoPlanToShowReport').css('display', 'block');
            //$('#divRevenue').css('display', 'none');
            //$('#divConversion').css('display', 'none');
            //$('#divBudgeting').css('display', 'none');
        }
    }
</script>
