@using RevenuePlanner.Models
@using RevenuePlanner.Helpers
@model RevenuePlanner.Models.Custom_Dashboard

@{
    string ReportDBConnString = Convert.ToString(ViewBag.ReportDBConnString);
    string AuthorizedReportAPIUserName = Convert.ToString(ViewBag.AuthorizedReportAPIUserName);
    string AuthorizedReportAPIPassword = Convert.ToString(ViewBag.AuthorizedReportAPIPassword);
    string ApiUrl = Convert.ToString(ViewBag.ApiUrl);
    string ClientDimensionId = string.Empty;
    string ClientDimensionValueId = string.Empty;
    if (Convert.ToString(ViewBag.ClientDimensionId) != RevenuePlanner.Helpers.Common.objCached.ClientDimenisionNotSet)
    {
        ClientDimensionId = Convert.ToString(ViewBag.ClientDimensionId);
        ClientDimensionValueId = Convert.ToString(ViewBag.ClientDimensionValueId);
    }
    else
    {
        ClientDimensionId = Convert.ToString(ViewBag.ClientDimensionId);
    }    
}
@* Edited for #2264 - Bhumika Report Design *@
<div class="report-wrap clearfix">
    @if (Model.DashboardContent.Count > 0)
    {
        int componentCount = 0;
        int componentCountRow = 0;

        foreach (var ReportGraph in Model.DashboardContent)
        {
            if (componentCount % Model.Columns == 0)
            {
                componentCountRow = 0;
                @Html.Raw("<div class=\"main-row clearfix\"  \">")
            }
            string cssHeight = @ReportGraph.Height.ToString() + "px";
            string cssWidth = @ReportGraph.Width.ToString() + "%";
            string cssWidthMinus = "19px";
            string cssClass = "component";
            string RepdivId = "divChart" + @ReportGraph.DashboardContentId;

            <div class="@cssClass" style="height:@cssHeight; width:calc(@cssWidth - @cssWidthMinus); ">
                <div id=@RepdivId style="width: 100%; height:100%" reportgraphid='@ReportGraph.ReportID' dashboardcontentid='@ReportGraph.DashboardContentId'></div>
            </div>

            componentCount++;
            componentCountRow++;
            if (componentCountRow == Model.Columns)
            {
                @Html.Raw("</div>")
            }
        }
    }
</div>
@if (Model.DashboardContent.Count == 0)
{
    <div class="noreportsfound">
        <p>"@RevenuePlanner.Helpers.Common.objCached.ReportNotConfigured"</p>
    </div>
}

<script type="text/javascript">
    $(document).ready(function () {
        if ('@ClientDimensionId' != "@RevenuePlanner.Helpers.Common.objCached.ClientDimenisionNotSet") {
            var ViewBy = $('#ddlAllocatedBySelectBox .sbHolder .sbSelector').html();

            if ($('#ddlAllocatedBySelectBox .sbHolder .sbSelector').html() == 'Yearly') {
                ViewBy = 'Y';
            }
            else if ($('#ddlAllocatedBySelectBox .sbHolder .sbSelector').html() == 'Quarterly') {
                ViewBy = 'Q';
            }
            else if ($('#ddlAllocatedBySelectBox .sbHolder .sbSelector').html() == 'Monthly') {
                ViewBy = 'M';
            }

            $('div[id^=divChart]').each(function () {
                LoadReport(this, ViewBy);
            });
        }
        else {
            $('#mainContent').html("@RevenuePlanner.Helpers.Common.objCached.ClientDimenisionNotSet");
        }
    });

    function LoadReport(obj, ViewBy) {
        var id = $(obj).attr('ReportGraphId');
        var PlanDate = $('#lstYearActive').html();
        var ArrPlanDt = [];
        ArrPlanDt = PlanDate.split(',');
        ArrPlanDt.sort(function (a, b) { return a - b });
        var NoOfyrs = ArrPlanDt.length;
        var StartDate = '';
        var EndDate = '';
        if (NoOfyrs > 0 && ArrPlanDt[0] != 'None') {
            StartDate = "1/1/" + ArrPlanDt[0];
            EndDate = "12/31/" + ArrPlanDt[NoOfyrs - 1];
        }

        var URL;
        if ('@ApiUrl'.slice(-1) == '/') {
            URL = '@ApiUrl' + 'api/Report/Chart';
        }
        else {
            URL = '@ApiUrl' + '/api/Report/Chart';
        }

        if ('@ApiUrl' == '') {
            $(obj).html("@RevenuePlanner.Helpers.Common.objCached.ApiUrlNotConfigured");
        }
        else {
            //var URL = 'http://localhost:54371/api/Report/Chart';
            var _ElqFieldMapping = [];
            _ElqFieldMapping.push(
                '@ClientDimensionId' + ":" + '@ClientDimensionValueId'
            );

            $("#divCustomFieldsFilter").find("input[type=checkbox]").each(function () {
                if ($(this).is(":checked")) {
                    if ($(this).attr('dimensionid')) {
                        var DimId = $(this).attr('dimensionid').substr(0, $(this).attr('dimensionid').indexOf('_'));
                        var DimValId = $(this).attr('dimensionid').substr($(this).attr('dimensionid').indexOf('_') + 1);
                        _ElqFieldMapping.push(
                            DimId + ":" + DimValId
                        );
                    }
                }
            });
            $("#accordion-Owner").find("input[type=checkbox]").each(function () {
                if ($(this).is(":checked")) {
                    if ($(this).attr('dimensionid')) {
                        var DimId = $(this).attr('dimensionid').substr(0, $(this).attr('dimensionid').indexOf('_'));
                        var DimValId = $(this).attr('dimensionid').substr($(this).attr('dimensionid').indexOf('_') + 1);
                        _ElqFieldMapping.push(
                            DimId + ":" + DimValId
                        );
                    }
                }
            });
            $("#accordion-TacticType").find("input[type=checkbox]").each(function () {
                if ($(this).is(":checked")) {
                    if ($(this).attr('dimensionid')) {
                        var DimId = $(this).attr('dimensionid').substr(0, $(this).attr('dimensionid').indexOf('_'));
                        var DimValId = $(this).attr('dimensionid').substr($(this).attr('dimensionid').indexOf('_') + 1);
                        _ElqFieldMapping.push(
                            DimId + ":" + DimValId
                        );
                    }
                }
            });
            $("#accordion-element-Plan").find("input[type=checkbox]").each(function () {
                if ($(this).is(":checked")) {
                    if ($(this).attr('dimensionid')) {
                        var DimId = $(this).attr('dimensionid').substr(0, $(this).attr('dimensionid').indexOf('_'));
                        var DimValId = $(this).attr('dimensionid').substr($(this).attr('dimensionid').indexOf('_') + 1);
                        _ElqFieldMapping.push(
                            DimId + ":" + DimValId
                        );
                    }
                }
            });

            var params = {};
            params.Id = id;
            params.ConnectionString = '@ReportDBConnString';
            params.Container = $(obj).attr('id');
            params.SDV = _ElqFieldMapping;
            params.TopOnly = 'True';
            params.ViewBy = ViewBy;
            params.StartDate = StartDate;
            params.EndDate = EndDate;
            params.UserName = '@AuthorizedReportAPIUserName';
            params.Password = '@AuthorizedReportAPIPassword';

            $.ajax({
                url: URL,
                async: true,
                traditional: true,
                data: $.param(params, true),
                dataType: "json",
                success: function (data) {
                    eval(data);
                },
                error: function (err) {
                    $(obj).html("@RevenuePlanner.Helpers.Common.objCached.ErrorInWebApi");
                }
            });
        }
    }
</script>