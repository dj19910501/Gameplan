@using RevenuePlanner.Models
@using RevenuePlanner.Helpers
@{
    string SelectedYear = ViewBag.SelectedYear;
    var ViewPlanSelectedValue = (List<SelectListItem>)ViewBag.ViewPlan;
    
    // Start - Added by Arpita Soni on 01/19/2015 for Ticket #1148 
    var ViewCustomFields = (List<RevenuePlanner.Models.CustomField>)ViewBag.ViewCustomFields;
    // End - Added by Arpita Soni on 01/19/2015 for Ticket #1148 
    
    ViewBag.Title = "Summary";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script type="text/javascript" src="@Url.Content("~/Scripts/dhtmlxchart.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/js/jquery.slimscroll.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/js/slimScrollHorizontal.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/js/jquery.mCustomScrollbar.concat.min.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/js/jquery.actual.js")"></script>
<link href="@Url.Content("~/Content/css/dhtmlxchart.css")" rel="stylesheet" type="text/css" />
<link rel="stylesheet" href="@Url.Content("~/Content/css/jquery.mCustomScrollbar.css")" type="text/css" />
<style type="text/css">
    .verticalIdSelectBox .sbHolder {
        width: 10% !important;
    }

    .h3budget {
        padding-top: 0px !important;
    }
</style>

@section Sidebar
{
    <div class="padding-content padding-bottom0">
        <h4 class="text-shadow-black source-sans-prolight">Reports</h4>
        <br />
        <div class="wraper-btns cf">
            
                @if ((bool)ViewBag.TacticActualsAddEdit) // Added by Sohel Pathan on 27/06/2014 for PL ticket #537 to implement user permission Logic
                {  // Modified by Arpita Soni on 01/01/2015 for ticket #1085 to move Share Report button left side
                    <div class="span6" id="divAddActual">
                        <button id="BtnAddActual" class="btn btn-blue text-shadow-blue source-sans-proregular" type="button" onclick="window.location.href='@Url.Action("AddActual", "Home")'">Add Actuals</button>
                    </div>
                }
            
            <div class="span6">
                <button class="btn btn-blue text-shadow-blue source-sans-proregular" type="button" id="BtnShareReport">Share Report</button>
            </div>
        </div>
    </div>
    <ul class="nav nav-list nav-gray-reports" id="ulLeftPane">
        <li class="item active" id="liSummary">
            <a class="source-sans-probold summary"><span></span>SUMMARY</a>
        </li>
        <li class="item" id="liRevenue">
            <a class="source-sans-probold revenue"><span></span>REVENUE</a>
        </li>
        <li class="item" id="liConversion">
            <a class="source-sans-probold conversion"><span></span>CONVERSION</a>
        </li>
         <li class="item" id="liBudgetreport">
            <a class="source-sans-probold budget"><span></span>BUDGET</a>
        </li>
    </ul>
}
<div id="budgetHeader" class="budgetColums budgetReporting" style="display: none">
    <div class="plannedCost">
        <h3 class="source-sans-proregular h3budget h3padding ">You've spent <span id="SpanTotalSpend">$2.5M</span> out of <span id="SpanTotalBudgeted">$4.8M</span>.</h3>
        <div style="clear: both;"></div>
    </div>
    <div class="budgetCompare monthContainerBudget">
        <h3 class="source-sans-proregular" id="monthCompareTitle"></h3>
        <div class="budgetCompareInner" id="monthContainer">
    </div>
        <div style="clear: both;"></div>
    </div>
</div>

<div id="revenueHeader" class="budgetColums budgetReporting" style="display: none">
    <div class="plannedCost">
        <h3><span>Marketing Revenue</span>
            <br />
        </h3>
        <div style="clear: both;"></div>
    </div>
    <div class="budgetCompare">
        <div id="RevenueActualDiv" class="header-right-blocks">
        <p class="source-sans-probold">Actual</p>
            <p class="value source-sans-prolight" style="font-size: 30px;" id="revenueActual"></p>
        <h5 id="revenueActualPercentage"></h5>
    </div>
        <div id="RevenueProjectedDiv" class="header-right-blocks block-last">
        <p class="source-sans-probold">Projected</p>
            <p class="value source-sans-prolight" id="revenueProjected" style="font-size: 30px;"></p>
        <p class="ellipsis-block FormatingBlock">Revenue</p>

    </div>
    </div>
</div>

<div id="conversionHeader" class="budgetColums budgetReporting" style="display: none">
    <div class="plannedCost">
        <h3><span>Waterfall Conversion</span>
            <br />
        </h3>
        <div style="clear: both;"></div>
    </div>
    <div class="budgetCompare">
        <div  id="mqlActualDiv" class="header-right-blocks">
            <p class="source-sans-probold">Actual</p>
            <p class="value source-sans-prolight" id="mqlActual" style="font-size: 30px;"></p>
            <h5 id="mqlActualPercentage"></h5>
        </div>
        <div id="mqlProjectedDiv" class="header-right-blocks block-last"> 
            <p class="source-sans-probold">Projected</p>
            <p class="value source-sans-prolight" id="mqlProjected" style="font-size: 30px;"></p>
            <p class="ellipsis-block FormatingBlock">@Html.LabelForMQL("MQL")</p>

        </div>
    </div>
</div>

<!-- Budget Reporting Filter area -->
<div class="budgetReportFilter-area clearfix">
    <div class="budgetReportFilter-area-left">

        <!--Start modified by Mitesh Vaishnav for PL ticket #727 - Added "noneselectedvalue" attribute to dropdownlist.-->
        <div class="multiselection-area">
            <span class="selectBox" id="ddlYearSpan" style="width: 115px; line-height: 2.5; padding-right: 7px;">
                @Html.DropDownList("ddlYear", new SelectList((System.Collections.IEnumerable)ViewBag.ViewYear, "Value", "Text", SelectedYear), new { @class = "ddlStyleReport" })
            </span>
            @Html.DropDownList("ddlPlan", new MultiSelectList((System.Collections.IEnumerable)ViewBag.ViewPlan, "Value", "Text", ViewPlanSelectedValue.Where(p => p.Selected).Select(p => p.Value)), new { @class = "multiselection-select", multiple = "multiple", id = "ddlPlan", noneselectedvalue = "Plans", style = "display:none" })
             <!--Start - Modified by Arpita Soni on 01/19/2015 for Ticket #1148-->
            @foreach (CustomField custField in ViewCustomFields)
            {
                string name = "ddlView" + custField.CustomFieldId;
                var list1 = custField.CustomFieldOptions.ToList().Select(custfieldoptions => new SelectListItem { Text = custfieldoptions.Value, Value = custfieldoptions.CustomFieldOptionId.ToString(), Selected = true }).ToList();
                @Html.DropDownList(name, new MultiSelectList((System.Collections.IEnumerable)list1, "Value", "Text", list1.Where(a => a.Selected).Select(a => a.Value)), new { @class = "multiselection-select", multiple = "multiple", id = name, noneselectedvalue = custField.Name, style = "display:none" })
            }
            <!--End - Modified by Arpita Soni on 01/19/2015 for Ticket #1148*-->
        </div>
        <!--End modified by Mitesh Vaishnav for PL ticket #727 - Added "noneselectedvalue" attribute to dropdownlist.-->

        <div class="filter-detail">
            <label>Time Frame:</label>
            <div class="details" id="yeardetail"></div>
            
            <label>Plans:</label>
            <div class="details" id="plandetail"></div>
            @foreach (var custField in ViewCustomFields)
            {
                string lblid = string.Concat("lbl", custField.CustomFieldId);
                string detailid = string.Concat(custField.CustomFieldId, "detail");
                    <label id="@lblid">@custField.Name:</label>
                    <div class="details" id="@detailid">All</div>
            }

           
        </div>
    </div>
    <div class="budgetReportFilter-area-right">
        <button id="updatedata" class="btn btn-blue btn-large text-shadow-blue source-sans-proregular" name="updatedata">Update</button>
    </div>
</div>
<!-- Budget Reporting Filter area -->

<div id="divMainReportPart">
</div>
<div id="DivShareReport">
</div>
<script type="text/javascript">

    var SelectedBUId, SelectedPlanId;
    var IsCallFromYearDropdown = true;
    var OptionMain = $('#ddlYear').val();;
    var isAllowClick = true;
    var multiselectPlanId = "ddlPlan";
    var filterPlanid = "#plandetail";
    var leftPaneOption = '@RevenuePlanner.Helpers.Enums.ReportType.Summary.ToString()';

    $(document).ready(function () {

        $("#ddlYearSpan select").selectbox();
        $('.sbHolder').click(function () {
            $(".budgetReportFilter-area").find(".multiselection-select").each(function () {
                $(this).multiselect("close");//"Close" is function in multiselect.js which close the multiselect menu 
            });
        });
        ///Start Modified by Mitesh Vaishnav for PL ticket #727
        $(".budgetReportFilter-area").find(".multiselection-select").each(function () {
            $(this).multiselect({ noneSelectedText: $(this).attr('noneselectedvalue') }).multiselectfilter();
        });

        $(".sbSelector").css("color", "#6D6D6D");
        $(".sbToggle").css("border-top-color", "#6D6D6D");

        $("#yeardetail").html($("#ddlYear option[value='" + $('#ddlYear').val() + "']").text());

        @foreach (var custField in ViewCustomFields)
        {
            string multiselectid = string.Concat("ddlView", custField.Name);
            string filterid = string.Concat("#", custField.Name.ToLower(), "detail");
            @: LoadCheckBoxValue('@multiselectid', '@filterid');
        }

        // Load Multiselect Dropdown list i.e. Bind with new design
        LoadCheckBoxValue(multiselectPlanId, filterPlanid);
        LoadYearDropdown();
        loadBasedOnPlan();
        $("#DivShareReport").hide();
        GetFilterIdForPlan(multiselectPlanId);

        $(document).mouseup(function (e) {
            var BUcontainer = $('#multipleselect_ddlPlan');
            var BUbutton = $('#btnMultiselect_ddlPlan');
            if (!BUcontainer.is(e.target) && BUcontainer.has(e.target).length === 0 && BUcontainer.css('display') == 'block' && !BUbutton.is(e.target) && BUbutton.has(e.target).length === 0) {
                $('#ddlPlan').multiselect('close');
            }
    });
    });

    // <--- End document.ready Event --->

    //// Load Check value in multiselect dropdown - common for all dropdown
    function LoadCheckBoxValue(multiselectId, filterid) {
        var finalValue = "";
        var isAll = true;
        $('#multipleselect_' + multiselectId).find("input[type='checkbox']").each(function () {
            if (this.checked) {
                finalValue += $(this).parent().find('span').eq(0).html() + ",  ";
            }
            else {
                isAll = false;
            }
        });
        finalValue = finalValue.slice(0, -3);
        if (finalValue == '') {
            finalValue = 'None';
        }
        if (isAll) {
            finalValue = 'All';
        }
        $(filterid).html(finalValue);
    }

    //// Load Plan data based on selected year
    function LoadPlanData() {
        var strYear = OptionMain;
        if (OptionMain == 'thisquarter') {
            strYear = new Date().getFullYear();
        }
        $.ajax({
            type: 'POST',
            url: '@Url.Content("~/Report/GetBudgetPlanBasedOnYear/")',
                data: {
                    Year: strYear
                },
                success: function (r) {
                    populatePlan(r, "ddlPlan");
                }
            });
        }

        //// Remove actiave class from left sidebar menu li
        function RemoveAllActiveItem() {
            $('#ulLeftPane li').each(function () {
                if ($(this).hasClass('active')) {
                    $(this).removeClass('active');
                }
            });
        }

        //// Load respective data based on selected option
        function LoadRespectiveData() {
            if (leftPaneOption == '@RevenuePlanner.Helpers.Enums.ReportType.Revenue.ToString()') {
                LoadRevenueData();
            }
            else if (leftPaneOption == '@RevenuePlanner.Helpers.Enums.ReportType.Conversion.ToString()') {
                LoadConversionData();
            }
        }

    //// Modified by Arpita Soni for Ticket #1148 on 01/23/2015
    ///Added by Mitesh Vaishnav for PL ticket #846
    ///If running tab is budgeting than show specific filters
    function ShowFilters() {

            @foreach (var custField in ViewCustomFields)
            {
                string btnmultiselectid = string.Concat("#btnMultiselect_ddlView", custField.CustomFieldId);
                string lblid = string.Concat("lbl", custField.CustomFieldId);
                string detailid = string.Concat(custField.CustomFieldId, "detail");
                    @: $('@btnmultiselectid').css('display', 'initial');
                                                @: $('@lblid').css('display', 'initial');
                                                @: $('@detailid').css('display', 'initial');
                }
    }

    //// Load Summary view using ajax - partial view
    function LoadSummary() {
        $('#budgetHeader').css('display', 'none');
        $('#UlPlanHeader').css('display', 'block');
        $('#formSideFilter').css('display', 'block');
        $('#divMainReportPart').empty();
        $('#conversionHeader').css('display', 'none');
        $('#revenueHeader').css('display', 'none');
        $("#BtnShareReport").show();
        var url = '@Url.Content("~/Report/GetSummaryData/")';
        $('#divMainReportPart').load(url , function () {
            isAllowClick = true;
            myApp.hidePleaseWait();
        });

    }

    //// Load Revenue view section
    function LoadRevenueView() {
        $('#conversionHeader').css('display', 'none');
        $('#revenueHeader').css('display', 'block');
    }

    //// Load Conversion view section
    function LoadConversionView() {
        $('#conversionHeader').css('display', 'block');
        $('#revenueHeader').css('display', 'none');
    }

    //// Call function based on option
    function loadBasedOnPlan() {
        var isActualVisible = "@ViewBag.TacticActualsAddEdit"
            if (isActualVisible.toString().toLowerCase() == 'true') {
                if (SelectedPlanId == 0) {
                    $("#BtnAddActual").attr("disabled", "disabled");
                }
                else {
                    $("#BtnAddActual").removeAttr("disabled");
                }
            }

            if (leftPaneOption == '@RevenuePlanner.Helpers.Enums.ReportType.Summary.ToString()') {
                LoadSummary();
            }
            else if (leftPaneOption == '@RevenuePlanner.Helpers.Enums.ReportType.Revenue.ToString()') {
                LoadRevenueData();
            }
            else if (leftPaneOption == '@RevenuePlanner.Helpers.Enums.ReportType.Conversion.ToString()') {
                LoadConversionData();
            }
    }

    //// Load Revenue Data
    function LoadRevenueData() {
        $('#budgetHeader').css('display', 'none');
        $('#UlPlanHeader').css('display', 'block');
        $('#formSideFilter').css('display', 'block');
        //$("#divAddActual").css("display", "block");
        $("#BtnShareReport").show();
        $('#divMainReportPart').empty();

    var url = '@Url.Content("~/Report/GetRevenueData/")';
        $('#divMainReportPart').load(url + '?timeFrameOption=' + OptionMain , function () {
            isAllowClick = true;
            myApp.hidePleaseWait();
        });
    }

    //// Load Conversion Data
    function LoadConversionData() {
        $('#budgetHeader').css('display', 'none');
        $('#UlPlanHeader').css('display', 'block');
        $('#formSideFilter').css('display', 'block');
        //$("#divAddActual").css("display", "block");
        $("#BtnShareReport").show();
        $('#divMainReportPart').empty();
        var url = '@Url.Content("~/Report/GetConversionData/")';
        $('#divMainReportPart').load(url + '?timeFrameOption=' + OptionMain , function () {
            isAllowClick = true;
            myApp.hidePleaseWait();
        });
    }

        //// Load Budget View
        function LoadBudgetView() {
            $("#BtnShareReport").hide(); //Added by Arpita Soni on 01/08/2015 for ticket #1108
        //    ShowFilters();
            $('#budgetHeader').css('display', 'block');
            $('#conversionHeader').css('display', 'none');
            $('#revenueHeader').css('display', 'none');
            $('#UlPlanHeader').css('display', 'none');
            $('#formSideFilter').css('display', 'none');

            var url = '@Url.Content("~/Report/GetBudget/")';
            $('#divMainReportPart').load(url, function () {
                isAllowClick = true;
                //myApp.hidePleaseWait();
            });
        }

        //// Get Plan Ids from multiselect list
        function GetFilterIdForPlan(multiselectId) {
            var finalValue = "";
            var isShowAddActual = 0;
            $('#multipleselect_' + multiselectId).find("input[type='checkbox']").each(function () {
                if (this.checked) {
                    isShowAddActual++;
                    var splitvalue = $(this).val().split("_");
                    finalValue += splitvalue[0] + ",";
                }
            });

            finalValue = finalValue.slice(0, -1);
            if (finalValue == '') {
                finalValue = '';
            }
            if (isShowAddActual == 1) {
                $("#divAddActual").css("display", "block");
            }
            else {
                $("#divAddActual").css("display", "none");
            }

            return finalValue;

        }

        //// Get id from multiselect
        function GetFilterId(multiselectId) {
            var finalValue = "";
            $('#multipleselect_' + multiselectId).find("input[type='checkbox']").each(function () {
                if (this.checked) {
                    finalValue += $(this).val() + ",";
                }
            });

            finalValue = finalValue.slice(0, -1);
            if (finalValue == '') {
                finalValue = '';
            }
            return finalValue;

        }

        //// Load Budget Data
        function LoadBudgetData() {
            if (isByAllocated) {
                myApp.showPleaseWait();
                $('#divTabData').load('@Url.Action("GetReportBudgetData", "Report")' + '?Year=' + OptionMain + '&AllocatedBy=' + AllocatedBy + '&Tab=' + Tab + '&SortingId=' + SortingId, function () {
                    myApp.hidePleaseWait();
                });

            }
        }

        //// Load plan in multiselect 
        function populatePlan(items, id) {
            var $dropdown = $("#" + id);
            $dropdown.empty();
            var $html = '';
            if (items.length > 0) {

                $.each(items, function (index, planobj) {
                    if (planobj.Selected) {
                        $html += '<option value="' + planobj.Value + '" selected>' + planobj.Text + '</option>';
                    } else {
                        $html += '<option value="' + planobj.Value + '">' + planobj.Text + '</option>';
                    }
                });
            }
            // alert($html);
            $dropdown.append($html);
            $("#multipleselect_ddlPlan").find("input[type='search']").val('');
            $('#ddlPlan').multiselect("refresh");
            LoadCheckBoxValue(multiselectPlanId, filterPlanid);
        }

        //// Load Share report section
        function ShowShareReport() {
            var url = '@Url.Content("~/Report/ShowShareReport/")';
        $("#DivShareReport").empty()
                                   .load(url.concat('?reportType=') + leftPaneOption)
                                   .show();
    }

    //// on select simple selector dropdown close multiselect dropdown
    $(".sbSelector").click(function () {
        $(".ui-multiselect-menu").each(function () {
            $(this).css("display", "none");
        });
    });

        //// handle update button event
        $('#updatedata').click(function () {
            var arrOptionIds = new Array();
            //// close multiselect
            $(".budgetReportFilter-area").find(".multiselection-select").each(function () {
                $(this).multiselect("close");//"Close" is function in multiselect.js which close the multiselect menu 
            });

        OptionMain = $('#ddlYear').val();
        $("#yeardetail").html($("#ddlYear option[value='" + $('#ddlYear').val() + "']").text());
	
        //// load active filter based on selected value in multiselect
        LoadCheckBoxValue(multiselectPlanId, filterPlanid);

        @foreach (var custField in ViewCustomFields)
        {
            string multiselectid = string.Concat("ddlView", custField.CustomFieldId);
            string filterid = string.Concat("#", custField.CustomFieldId, "detail");
            @: LoadCheckBoxValue('@multiselectid', '@filterid');
         }
            
            
        @foreach (var custField in ViewCustomFields)
        {
            string multiselectid = string.Concat("ddlView", custField.CustomFieldId);
            @: var filterIds = GetFilterId('@multiselectid');
            @: var arrFilterId = filterIds.split(',');
            @: for (var i = 0; i < arrFilterId.length; i++) {
            @: arrOptionIds.push({ CustomFieldId: '@custField.CustomFieldId', OptionId: arrFilterId[i] });
            @:}
        }
            
            //// get selected value from multiselect 
            PlanIds = GetFilterIdForPlan(multiselectPlanId);
            
            SortingId = '';
            $.ajax({
                dataType: 'json',
                type: 'POST',
                url: '@Url.Content("~/Report/SetReportData/")',
                traditional:true,
                data: {
                    planIds: PlanIds,
                    customIds: JSON.stringify(arrOptionIds),
                },
                success: function (data) {
                    if (data.status) {
                        if (leftPaneOption == '@RevenuePlanner.Helpers.Enums.ReportType.Summary.ToString()') {
                        LoadSummary();
                    }
                        else if (leftPaneOption == '@RevenuePlanner.Helpers.Enums.ReportType.Revenue.ToString()') {
                        LoadRevenueData();
                    }
                        else if (leftPaneOption == '@RevenuePlanner.Helpers.Enums.ReportType.Conversion.ToString()') {
                        LoadConversionData();
                    }
                        else if (leftPaneOption == '@RevenuePlanner.Helpers.Enums.ReportType.Budget.ToString()') {
                        LoadBudgetView();
                    }
        }


            }
        });
    });

//// Year dropdown change event
$("#ddlYear").change(function () {
    OptionMain = $('#ddlYear').val();
    if (IsCallFromYearDropdown) {
        LoadPlanData();
    }
});

function LoadYearDropdown() {
    var isClick = false;
    $("#ddlYear").next().find('ul li a').each(function () {
        var selectedvalue = $(this).attr('rel');
        if (selectedvalue == 'thisquarter') {
            if (leftPaneOption == '@RevenuePlanner.Helpers.Enums.ReportType.Summary.ToString()') {
                isClick = true;
            }
            else if (leftPaneOption == '@RevenuePlanner.Helpers.Enums.ReportType.Revenue.ToString()') {
                isClick = false;
            }
            else if (leftPaneOption == '@RevenuePlanner.Helpers.Enums.ReportType.Conversion.ToString()') {
                isClick = false;
            }
            else if (leftPaneOption == '@RevenuePlanner.Helpers.Enums.ReportType.Budget.ToString()') {
                isClick = true;
            }

    if (isClick == true) {
        $(this).parent().css('display', 'none');
    }
    else {
        $(this).parent().css('display', 'block');
    }
}
    });
    $("#ddlYear").next().find('ul li a').each(function () {
        var selectedValue = $("#ddlYear").val();
        if (isClick == true && selectedValue == 'thisquarter') {
            var selectedvalue = $(this).attr('rel');
            if (selectedvalue == '@RevenuePlanner.Helpers.Common.GetCurrentYear()') {
                IsCallFromYearDropdown = false;
                $(this).click();
                IsCallFromYearDropdown = true;
                $("#yeardetail").html($("#ddlYear option[value='" + selectedvalue + "']").text());
            }
        }
    });
}

//// summary click event
$('#liSummary').click(function () {
    if (isAllowClick) {
        document.title = "Summary";
        isAllowClick = false;
        leftPaneOption = '@RevenuePlanner.Helpers.Enums.ReportType.Summary.ToString()';
        LoadYearDropdown(leftPaneOption);
        RemoveAllActiveItem();
        $(this).addClass('active');
        loadBasedOnPlan();
    }
});

//// revenue click event
$('#liRevenue').click(function () {
    if (isAllowClick) {
        document.title = "Revenue";
        isAllowClick = false;
        leftPaneOption = '@RevenuePlanner.Helpers.Enums.ReportType.Revenue.ToString()';
        LoadYearDropdown(leftPaneOption);
        RemoveAllActiveItem();
        $(this).addClass('active');
        LoadRevenueView();
        loadBasedOnPlan();
    }
    });

//// conversion click event
$('#liConversion').click(function () {
    if (isAllowClick) {
        document.title = "Conversion";
        isAllowClick = false;
        leftPaneOption = '@RevenuePlanner.Helpers.Enums.ReportType.Conversion.ToString()';
        LoadYearDropdown(leftPaneOption);
        RemoveAllActiveItem();
        $(this).addClass('active');
        LoadConversionView();
        loadBasedOnPlan();
    }
    });

//// budget click event
    $('#liBudgetreport').click(function () {
    if (isAllowClick) {
        document.title = "Budget";
        isAllowClick = false;
        leftPaneOption = '@RevenuePlanner.Helpers.Enums.ReportType.Budget.ToString()';
                LoadYearDropdown(leftPaneOption);
                RemoveAllActiveItem();
                $(this).addClass('active');
                LoadBudgetView();
            }
        });

        //// share report event
        $("#BtnShareReport").click(function () {
            ShowShareReport();
        });

        ///Added by Mitesh Vaishnav for generate multiselect dropdownlist with no filter or no custom border
        function GenerateCustomizeMultiselect(id, isFilterApply, isCustomBorderApply, isMultiple) {
            var custom = "";
            if (isCustomBorderApply) {
                custom = '@Common.CustomTitle';
            }

            if (isFilterApply) {
                $("#" + id).multiselect({
                    multiple: isMultiple,
                    CustomName: custom,
                    selectedList: 1
                }).multiselectfilter();
            }
            else {
                $("#" + id).multiselect({
                    multiple: isMultiple,
                    selectedList: 1,
                    CustomName: custom
                });
            }
        }
</script>
