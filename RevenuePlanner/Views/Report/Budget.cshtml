@using RevenuePlanner.Helpers
@{    
    //Insertation start #2416 21/09/2016 kausha selectedViewBy veriable is used to manage session's viewby value in to dropdown.
    string selectedViewBy = Enums.PlanAllocatedBy.quarters.ToString();
    if (!string.IsNullOrEmpty(Sessions.ViewByValue))
    {
        if (Sessions.ViewByValue.ToUpper() == Convert.ToString(Enums.viewByOption.Q))
        { selectedViewBy = Convert.ToString(Enums.PlanAllocatedBy.quarters); }

        if (Sessions.ViewByValue.ToUpper() == Convert.ToString(Enums.viewByOption.M))
        { selectedViewBy = Convert.ToString(Enums.PlanAllocatedBy.months); }


    }
    //Insertation end #2416 .
}
<div class="budgetReport">
    <div style="margin-left: 18px; margin-right: 20px; margin-bottom: 10px; width: 97%; float: left;">
        <div class="title-header source-sans-proregular bold budget-title">
            <div style="float: right;">
                @Html.Label("View By:", new { id = "lblViewBy",style="font-family:Helvetica Neue,Helvetica,Arial,sans-serif !important" })
               
                    @Html.DropDownList("ddlTabViewBy", new SelectList((System.Collections.IEnumerable)ViewBag.ViewByTab, "Value", "Text", @RevenuePlanner.Helpers.ReportTabType.Plan.ToString()), new { @class = "ddlStyleReport hide" })
               
                <span class="selectBox" id="ddlAllocatedBySelectBox" style="width: 158px;line-height:1.1;">
                  
                    @Html.DropDownList("ddlAllocateViewBy",new SelectList((System.Collections.IEnumerable)ViewBag.ViewByAllocated, "Value", "Text", selectedViewBy), new { @class = "ddlStyleReport hide" })
               </span>
            </div>
            <h2>Budget Summary</h2>
        </div>

    </div>

    <div id="divTabData" style="margin-top: 20px;margin-bottom: 30px; clear: left;"></div>
</div>
<script type="text/javascript" src="@Url.Content("~/Scripts/js/jquery-ui.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/js/jquery.multiselect_v1.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/js/jquery.multiselect.filter.js")"></script>
<link href="@Url.Content("~/Content/css/jquery.multiselect.css")" rel="stylesheet" type="text/css" />
<script>

    var PlanIds = '';
    var Year = $('#ddlYear').val();
    var AllocatedBy = '@RevenuePlanner.Helpers.Enums.PlanAllocatedBy.quarters.ToString()';
    var Tab = '@RevenuePlanner.Helpers.ReportTabType.Plan.ToString()';
    var SortingId = '';
    var isByAllocated = true;
        var viewByDisplay = true;
        var monthvalue = '@RevenuePlanner.Helpers.Enums.PlanAllocatedByList[RevenuePlanner.Helpers.Enums.PlanAllocatedBy.months.ToString()].ToString()';
        var Quartervalue = '@RevenuePlanner.Helpers.Enums.PlanAllocatedByList[RevenuePlanner.Helpers.Enums.PlanAllocatedBy.quarters.ToString()].ToString()';

    $(document).ready(function () {
        
        $("#ddlTabViewBy").multiselect({
            multiple: false,
            CustomName: '@Common.CustomTitle',
            selectedList: 1,
            CustomCampaignName: "@Common.CampaignCustomTitle",
            CustomProgramName: "@Common.ProgramCustomTitle",
            CustomTacticName: "@Common.TacticCustomTitle",
            CustomLineItemName: "@Common.LineitemCustomTitle",

            classes: 'custom-right-pos' // Added by Sohel Pathan on 11/11/2014 for PL ticket #934, NOTE : Please don't change class name, it is used in js.
        }).multiselectfilter({
            CustomCampaignName: "@Common.CampaignCustomTitle",
            CustomProgramName: "@Common.ProgramCustomTitle",
            CustomTacticName: "@Common.TacticCustomTitle",
            CustomLineItemName: "@Common.LineitemCustomTitle",
        });
        $("#ddlTabViewBy").multiselect('refresh');
        $(".budgetCompareInner").mCustomScrollbar({
            scrollButtons: {
                enable: true
            },
            horizontalScroll: true,
            advanced: { autoExpandHorizontalScroll: true, updateOnContentResize: true }
        });
        $("#ddlAllocatedBySelectBox select").selectbox();
        
        $(".sbSelector").click(function () {
            $(".ui-multiselect-menu").each(function () {
                $(this).css("display", "none");
            });
        });
        PlanIds = GetFilterIdForPlan(multiselectPlanId);
        CheckAllocatedBy();

        LoadBudgetData();

            });

    // <--- End document.ready Event --->

    function LoadBudgetSortingEvent() {

        $('.UpperArrowReport').click(function () {
            SortingId = $(this).attr('id');
            LoadBudgetData();
        });

        $('.DownArrowReport').click(function () {
            SortingId = $(this).attr('id');
            LoadBudgetData();
        });

        $('.UpperArrowReportBlue').click(function () {

        });

        $('.DownArrowReportBlue').click(function () {

        });
    }

    function DisableViewByAllocated() {
        $('#ddlAllocatedBySelectBox').find("li").each(function () {
            var innerlivalue = $(this).find("a").attr("rel");
            if (innerlivalue == monthvalue) {
                $(this).css("display", "none");
                AllocatedBy = '@RevenuePlanner.Helpers.Enums.PlanAllocatedBy.quarters.ToString()';
                }
                else if (innerlivalue == Quartervalue) {
                    isByAllocated = false;
                    $(this).find("a").click();
                    isByAllocated = true;
                }
            });
        }
        function EnableViewByAllocated() {
            $('#ddlAllocatedBySelectBox').find("li").each(function () {
                $(this).css("display", "block");
            });
        }
        function CheckAllocatedBy() {
            viewByDisplay = true;
            $('#multipleselect_ddlPlan').find("input[type='checkbox']").each(function () {
                if (this.checked) {
                    var getAllocatedBy = $(this).val().split("_");
                    if (getAllocatedBy[1] == Quartervalue && viewByDisplay == true) {
                        viewByDisplay = false;
                    }
                }
            });
            if (viewByDisplay == false) {
                DisableViewByAllocated();
            }
            else {
                EnableViewByAllocated();
            }


        }
        $("#ddlTabViewBy").change(function () {
            Tab = $('#ddlTabViewBy').val();
            SortingId = '';
            LoadBudgetData();
        });
        $("#ddlAllocateViewBy").change(function () {
            UpdateViewBy("ddlAllocateViewBy");
            AllocatedBy = $('#ddlAllocateViewBy').val();
            SortingId = '';
            LoadBudgetData();
        });
</script>
