@model RevenuePlanner.Models.Tactic_TypeModel
@using RevenuePlanner.Models
@using RevenuePlanner.Helpers
@{
    ViewBag.Title = "Tactic Selection";
    ViewBag.ActiveMenu = RevenuePlanner.Helpers.Enums.ActiveMenu.Model;
    Layout = "~/Views/Shared/_Layout.cshtml";
    string isViewOnly = ViewBag.IsViewOnly;
    string ShowModelResultsTab = Convert.ToString(System.Configuration.ConfigurationManager.AppSettings["ShowModelResultsTab"]);
    @Html.Hidden("hdnShowModelResultsTab", ShowModelResultsTab);
                                                               string PublishedMsg = ViewBag.ModelPublishComfirmation;
    @Html.Hidden("PublishedMsg", PublishedMsg);
                                              bool PublisheStatus = ViewBag.Flag;
    @Html.Hidden("PublisheStatus", PublisheStatus);
                                                  var currentdate = System.DateTime.Today.ToShortDateString();
                                                  bool IsModelIntegrated = ViewBag.IsModelIntegrated;
    @Html.Hidden("IsModelIntegrated", IsModelIntegrated);
 
}
@section nlFormContent{
    <link rel="stylesheet" href="@Url.Content("~/Content/css/jquery.slidepanel.css")" type="text/css" />
    <script type="text/javascript" src="@Url.Content("~/Scripts/js/dropdown-info-user.js")"></script>
}
@section Sidebar
{
    <div class="padding-content padding-bottom0">
        <h4 class="text-shadow-black source-sans-prolight">Model Summary</h4>
        <div class="wraper-btns cf">
            <div class="span6">
                <button class="btn btn-blue text-shadow-blue source-sans-proregular" type="button" id="NewModel">@Html.Raw("New Model")</button>
            </div>
            <div class="span6">
                <button class="btn btn-blue-disable text-shadow-blue source-sans-proregular" type="button" id="publish">@Html.Raw("Publish")</button>
            </div>
        </div>
    </div>

    <ul class="nav nav-list nav-gray">
        <li class="item">
            <a class="source-sans-probold inputs leftnav" id="aInput" href="#"><span></span>@Html.Raw("INPUTS")</a>
        </li>
        @if (ShowModelResultsTab == null || ShowModelResultsTab == "" || ShowModelResultsTab.ToLower() == "true")
        {
            <li class="item">
                <a class="source-sans-probold audience leftnav" id="aAudience" href="#"><span></span>@Html.Raw("AUDIENCE")</a>
            </li>
        }
        <li class="item active">
            <a class="source-sans-probold tactics" id="aTactics" href="#"><span></span>@Html.Raw("TACTICS")</a>
        </li>
        @if (ShowModelResultsTab == null || ShowModelResultsTab == "" || ShowModelResultsTab.ToLower() == "true")
        {
            <li class="item">
                <a class="source-sans-probold result leftnav" id="aResults" href="#"><span></span>@Html.Raw("RESULTS")</a>
            </li>
        }
        <li class="item">
            <a class="source-sans-probold integrations leftnav" id="aIntegration" href="#"><span></span>@Html.Raw("INTEGRATIONS")</a>
        </li>
    </ul>
    <ul class="nav nav-list nav-gray-plan">
        <li id="change-log" class="nav-header">
            <span>Change Log</span>
            <div class="changes"></div>
        </li>
    </ul>
    @Html.Hidden("hdnMsg", (string)TempData["ErrorMessage"], new { id = "hdnMsg" })
}

<!--success message-->
<div id="successMessage" class="alert hide alert-success message-position">
    <a class="close">×</a>
    <div id="cSuccess">@Html.Raw(HttpUtility.HtmlDecode((string)TempData["SuccessMessage"]))</div>
</div>
<div id="errorMessage" class="alert alert-error hide message-position">
    <a class="close">×</a>
    <div id="cError">@Html.Raw(HttpUtility.HtmlDecode((string)TempData["ErrorMessage"]))</div>
</div>
@Html.HiddenFor(model => model.ModelId, new { id = "hdnModelId" })
@Html.HiddenFor(model => model.Status, new { id = "hdnStatus" })

<div id="DivBackgroundModel" class="modal-backdrop fade in" style="z-index: 1501;display: none;"></div>
<div id="DivPublishModelPopup" class="form-inspect-share hide fade in" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="display: none; height: 205px;z-index: 1502;">
    <h2 class="primary-title source-sans-prosemibold">Select effective date</h2>
    <div class="dp datepicker input-append date  calendar-width" id="dp_start" data-date="today();" data-date-format="@RevenuePlanner.Helpers.Common.dateFormat">
        <input id="t_startdate" class="black-border-right font-size13 height30px" style="background-color: #ffffff; border-color: #f3f3f3; color: #000000; width: 240px; margin-top: 0px; border-radius: 4px;" size="16" type="text">
        <span class="add-on height30" style="border-radius: 4px;">
            <img src="~/Content/images/gray-calendar-icon-big.png"></span>
    </div>
    <div style="width: 100%; margin: 0px auto;">
        <button class="form-inspect-share-button btn btn-large" id="Save-publish" value="Submit" style="margin-top: 0px !important; margin-right: 10px; width: 80px;">Save</button>
        &nbsp;
        <button class="btn-link" id="cancel-button" type="button" style="margin-top: 0px !important; width: 80px; line-height: 41px;">Cancel</button>
    </div>
</div>
<ul class="nav nav-tabs">
    @if (Model.Versions != null)
    {

        foreach (ModelVersion v in Model.Versions)
        {
            if (v.IsLatest)
            {
        @Html.HiddenFor(model => v.ModelId, new { id = "VersionModelId" })
        <input type="hidden" value="@v.ModelId" id="latestModelId" />
    
        <li class="title-header source-sans-proregular" title="@v.Title">
            <h2 id="lblTitle">@v.Title <span class="gray source-sans-prolight" title="@v.Status">@v.Status</span></h2>

        </li>
        <li id="ver_@v.ModelId" class="disabled pull-right"  title="@v.Version">
            <a href="#" name="versionId" id="@v.ModelId"  onclick="LoadModelData(@v.ModelId,true)">@Html.Raw("v")@v.Version</a>
            @*  <a href="#" name="versionId" id="@v.ModelId" >@Html.Raw("v")@v.Version</a>*@
        </li>
            }
            else
            {
        @Html.HiddenFor(model => v.ModelId, new { id = "VersionModelId" })
        <li id="ver_@v.ModelId" class="disabled pull-right" title="@v.Version">
            <a href="#"  name="versionId"  id="@v.ModelId" >@Html.Raw("v")@v.Version</a>
            @*onclick="LoadModelData(@v.ModelId,false)"*@
        </li>
            }
        }
        if (Model.Versions.Count == 1)
        {
        <li class="disabled pull-right">
            <a href="#">@Html.Raw("No Saved Versions")</a>
        </li>
        }
        if (Model.Versions.Count == 0)
        {
        <li class="title-header source-sans-proregular" title="Title">
            <h2>@Html.Raw("Title") <span class="gray source-sans-prolight" title="Draft">@Html.Raw("Draft")</span></h2>
        </li>
        <li class="active pull-right" title="1.0">
            <a href="#">@Html.Raw("v")1.0</a>
        </li>
        <li class="disabled pull-right">
            <a href="#">@Html.Raw("No Saved Versions")</a>
        </li>
        }
    }
</ul>

@Html.Hidden("0", (int)ViewBag.Version, new { id = "mode" })
@Html.Hidden("IsViewOnly", isViewOnly)
@Html.Hidden("EffectiveDate", currentdate)
<div id="table_request" class="padding-content padding-top0 cf source-sans-proregular">

    <table id="table_tactics" class="table table-striped table-hover">
        <thead>
            <tr>
                <th class="border-r width390">Tactic Title</th>
                <th class="border-r width86">Target Stage</th>
            @*    <th>Projected @Html.LabelForINQ("INQ")</th>*@
                <th>Projected Responses</th> @* Modified by :- Sohel Pathan on 21/05/2014 for PL ticket #476 to change header *@
                <th class="border-r">Projected Cost</th>
                <th class="border-r width50px" style="text-align:center;">Deploy to Model</th>

                @if (IsModelIntegrated)
                {
                    <th class="width50px" style="text-align:center;">Deploy to Integration</th>
                }
            </tr>
        </thead>
        <tbody>
            <!--tr elements are add dinamically with javascript (view script.js file)-->

        </tbody>
    </table>
    @if (isViewOnly != "true")
    {
        <button id="create_new_tactic"  class="btn btn-blue btn-large text-shadow-blue source-sans-proregular pull-left font-size14" type="button">Create New Tactic</button>
        <button class="btn btn-blue btn-large text-shadow-blue source-sans-proregular pull-right font-size14" id="continue" type="button">Save & Continue</button>
    }
</div>

<script type="text/javascript">
    var lastModelId = null;

    $(document).ready(function () {
        $('#DivBackgroundModel').css("display", "none");
        $('#DivPublishModelPopup').css("display", "none");
        $('#dp_start .add-on').click(function () {
            $('#dp_start').datepicker('show');
        })
        $('.changes').html('');
        var url = '@Url.Content("~/Model/LoadChangeLog/")';
        $('.changes').load(url + '?objectId=' + $("#latestModelId").val());
        var ismsg = $("#hdnMsg").val();
        if ($('#cSuccess').html() != '') {
            $('#cSuccess').html('<strong>Success.</strong> ' + $('#cSuccess').html())
            $("#successMessage").slideDown(1200);
            $("#successMessage").slideUp(3000);
        }
        if ($('#cError').html() != '') {
            $("#errorMessage").slideDown(1200);
        }
        $("#content_wraper").removeClass("span10 all-height").addClass("span10 padding-top40");

        if ($('#IsViewOnly').val() != '') {
            MakeViewOnly(); //Bug 17:Should not be able to edit a published model
            $("#errorMessage").html('<a class="close">×</a> View only permission');
            $("#errorMessage").slideDown(1200);
        }
        $('#NewModel').click(function (e) {
            window.location.href = "@Url.Action("Create", "Model")";
        });

        if ($('#hdnModelId').val() == $("#latestModelId").val()) {
            if ($('#hdnStatus').val() == "Draft") {
                $("#publish").removeClass('btn-blue-disable');
                $("#publish").addClass('btn-blue');
            }
        }

        LoadModelData($("#latestModelId").val(), true);
        function LoadModelData(modelId, bool) {
            if ($('#hdnModelId').val() != modelId) {
                modelId = $('#hdnModelId').val();
                $("#create_new_tactic").hide();
                $("#continue").hide();

            }
            else {
                $("#create_new_tactic").show();
                $("#continue").show();

            }

            $('#ver_' + modelId).removeClass('disabled pull-right');
            $('#ver_' + modelId).addClass('active pull-right');
            if (lastModelId != null) {
                $('#ver_' + lastModelId).removeClass('active pull-right');
                $('#ver_' + lastModelId).addClass('disabled pull-right');
            }
            lastModelId = modelId;
            /*Added by Nirav Shah on 18 feb 2014 for TFS Point 252: Editing a published model*/
        }
        $(".leftnav").click(function () {
            var url = '';
            var isResults = '';
            if ($(this).attr('id') == 'aInput') {
                url = '@Url.Content("~/Model/Create")';
            }
            else if ($(this).attr('id') == 'aAudience') {
                url = '@Url.Content("~/Model/Audience")';
            }
            else if ($(this).attr('id') == 'aIntegration') {
                url = '@Url.Content("~/Model/Integration")';
            }
            else if ($(this).attr('id') == 'aResults') {
                url = '@Url.Content("~/Model/Results")';
                isResults = '1';
            }
            if (url != '' && lastModelId != null && lastModelId != 0) {
                if (isResults == '1') {
                    window.location.href = url + '?mid1=' + lastModelId + '&mid2=' + lastModelId;
                }
                else {
                    window.location.href = url + '?id=' + lastModelId;
                }
            }
        });
        $(document).on("click", "a[name='versionId']", function (e) {
            var latest = $("#latestModelId").val();
            var id = $(this).attr("id");
            if (id == latest) {
                $("#create_new_tactic").show();
                $("#continue").show();
                $("#save_tactic").show();
                $("#CreateTactic").show();
                $("#NewModel").removeClass('btn-blue-disable');
                $("#NewModel").addClass('btn-blue');
                $("#mode").val(latest);
                if ($('#hdnStatus').val() == "Draft") {
                    $("#publish").removeClass('btn-blue-disable');
                    $("#publish").addClass('btn-blue');
                }
                else {
                    $("#publish").removeClass('btn-blue');
                    $("#publish").addClass('btn-blue-disable');
                }
            }
            else {
                $("#create_new_tactic").hide();
                $("#continue").hide();
                $("#save_tactic").hide();
                $("#CreateTactic").hide();
                $("#mode").val(id);
                $("#publish").removeClass('btn-blue');
                $("#publish").addClass('btn-blue-disable');

            }
            $('#ver_' + id).removeClass('disabled pull-right');
            $('#ver_' + id).addClass('active pull-right');
            if (lastModelId != null) {
                $('#ver_' + lastModelId).removeClass('active pull-right');
                $('#ver_' + lastModelId).addClass('disabled pull-right');
            }
            lastModelId = id;
            var status;
            $("#table_tactics tbody tr").remove();
            $.ajax({
                type: 'POST',
                url: '@Url.Content("~/Model/GetTacticDatabyid")',
                data: { id: id },
                dataType: "json",
                success: function (r) {
                    tactic = r;
                    fillTacticsTable();
                    myApp.hidePleaseWait();
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Content("~/Model/FillVersion")',
                        data: { id: id },
                        dataType: "json",
                        success: function (r) {
                            for (i in r) {
                                $("#lblTitle").html('');
                                $("#lblTitle").html(r[i].Title + '<span class="gray source-sans-prolight">' + r[i].Status + '</span>');
                                if (id == latest) {
                                    $("#create_new_tactic").show();
                                    $("#continue").show();
                                    $("#save_tactic").show();
                                    $("#CreateTactic").show();
                                    $("#NewModel").removeClass('btn-blue-disable');
                                    $("#NewModel").addClass('btn-blue');
                                    $("#mode").val(latest);
                                    if (r[i].Status == "Draft") {
                                        $("#publish").removeClass('btn-blue-disable');
                                        $("#publish").addClass('btn-blue');
                                        $('#hdnStatus').val(r[i].Status);
                                        $('#PublisheStatus').val('true')
                                    }
                                    else {
                                        $("#publish").removeClass('btn-blue');
                                        $("#publish").addClass('btn-blue-disable');
                                    }
                                }
                                else {
                                    $("#create_new_tactic").hide();
                                    $("#continue").hide();
                                    $("#save_tactic").hide();
                                    $("#CreateTactic").hide();
                                    $("#mode").val(id);
                                    $("#publish").removeClass('btn-blue');
                                    $("#publish").addClass('btn-blue-disable');

                                }
                            }
                        }
                    });
                }
            });

        });


        // Fill Tactic selection Table
        var mid;
        if ($('#hdnModelId').val() != $("#latestModelId").val()) {
            mid = $('#hdnModelId').val();
        }
        else {
            mid = $('#latestModelId').val();
        }
        $.ajax({
            type: 'POST',
            url: '@Url.Content("~/Model/GetTacticDatabyid/")',
            data: {
                id: mid
            },
            dataType: "json",
            success: function (r) {
                tactic = r;
                fillTacticsTable();
                myApp.hidePleaseWait();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Content("~/Model/FillVersion")',
                    data: { id: mid },
                    dataType: "json",
                    success: function (r) {
                        for (i in r) {
                            $("#lblTitle").html('');
                            $("#lblTitle").html(r[i].Title + '<span class="gray source-sans-prolight">' + r[i].Status + '</span>');
                        }
                    }
                });
            }
        });


        //fill tactics table with data from json
        function fillTacticsTable() {
            if (tactic != 'undefined') {
                if (tactic.length) {
                    for (i in tactic) {
                        /*  TFS Bug - 179 : Improper behavior when editing Tactic in model 
                            Changed By : Nirav shah on 6 Feb 2014
                            Change : pass new parameter modelid
                        */
                        addRowTactic(i, tactic[i].id, tactic[i].clientid, tactic[i].modelId, tactic[i].title, tactic[i].Stage,/* tactic[i].inquiries,*/ tactic[i].mqls, tactic[i].revenue, tactic[i].IsDeployedToIntegration);
                    }
                } else {
                    $('#table_tactics > tbody').append('<tr><td colspan="9" class="gray">No saved tactics to display.</td></tr>');
                }
            }
        }
        //add row in tactics table
        function addRowTactic(_index, _id, _Clientid, _modelId, _title, Stage,/* _inquiries,*/ _mqls, _revenue, _IsDeployedToIntegration) {
            var $tableTactics = $('#table_tactics > tbody');
            var $table_activities = $('#table_activities > tbody');
            var $html = "";
            if ($tableTactics.find("tr td.gray").html() == "No saved tactics to display.") {
                $tableTactics.find("tr").remove();
            }
            /*  TFS Bug - 179 : Improper behavior when editing Tactic in model 
                Changed By : Nirav shah on 6 Feb 2014
                Change : Use condition _modelId == lastModelId Instead of _Clientid 
            */
            /*changed for TFS bug 176 : Model Creation - Tactic Defaults should Allow values of zero changed by Nirav Shah on 7 feb 2014*/
            if (_modelId == lastModelId) {
                $html += '<tr clientid="' + _Clientid + '" class="rejected" id="' + _id + '" data-index="' + _index + '">' +
                          '<td  class="border-r sm" id="' + _id + '"><span class="title-baseline-model">' + _title + '</span><span class="search-icon"></span></td>' +
                          '<td   class="sm border-r" id="' + _id + '">' + Stage + '</td>' +
                          //'<td   class="sm" id="' + _id + '">' + FormatCommas(_inquiries.toString(), false) + '</td>' +
                          '<td   class="sm" id="' + _id + '">' + FormatCommas(_mqls.toString(), false) + '</td>' +
                          '<td  class="border-r sm" id="' + _id + '">$' + FormatCommas(_revenue.toString(), false) + '</td>' +
                          '<td class="border-r"><span class="circle-check-icon-gray circle-check-icon-blue"  id = "' + "rej" + _id + '"></span></td>';

                if ($("#IsModelIntegrated").val() == 'True') {
                    $html += '<td><span class="circle-check-icon-gray-integration  ' + (_IsDeployedToIntegration == true ? "circle-check-icon-integration-blue" : "") + '"  id = "' + "int" + _id + '"></span></td>';
                }

                $html += '</tr>';

            } else {
                $html += '<tr clientid="0" class="rejected" id="' + _id + '" data-index="' + _index + '">' +
                            '<td id="' + _id + '" class="border-r sm"><span class="title-baseline-model">' + _title + '</span><span class="search-icon"></span></td>' +
                            '<td id="' + _id + '"  class="sm border-r">' + Stage + '</td>' +
                            //'<td  id="' + _id + '" class="sm">' + FormatCommas(_inquiries.toString(), false) + '</td>' +
                            '<td  id="' + _id + '" class="sm">' + FormatCommas(_mqls.toString(), false) + '</td>' +
                            '<td id="' + _id + '" class="border-r sm">$' + FormatCommas(_revenue.toString(), false) + '</td>' +
                            '<td class="border-r"><span class="circle-check-icon-gray"  id = "' + "rej" + _id + '"></span></td>';

                if ($("#IsModelIntegrated").val() == 'True') {
                    $html += '<td><span class="circle-check-icon-gray-integration  ' + (_IsDeployedToIntegration == true ? "circle-check-icon-integration-blue" : "") + '"  id = "' + "int" + _id + '"></span></td>';
                }
              
                $html += '</tr>';

            }
            $tableTactics.append($html);
        }

        $(document).on('click', '#table_tactics tbody tr td.sm', function (e) {
            if ($("#latestModelId").val() == lastModelId) {/* changed by Nirav shah for TFS Point :252 editing a published model*/
                var id = $(this).attr("id");
                $("#slidepanel").css("display", "block");
                var url = '@Url.Content("~/Model/DetailTacticData")';
                $('#slidepanel-container').load(url + '?id=' + id + '&ModelId=' + lastModelId);
                $("#slidepanel").css("right", "0px");
            }
        });

        $(document).on('click', '#create_new_tactic', function (e) {
            if ($("#latestModelId").val() == lastModelId) {
                $("#slidepanel").css("display", "block");
                var url = '@Url.Content("~/Model/CreateTacticData/")';
                $('#slidepanel-container').load(url + '?ModelId=' + lastModelId);
                $("#slidepanel").css("right", "0px");
            }
        });

        $(document).on('click', '#table_tactics tbody tr td span.circle-check-icon-gray', function (e) {
            if ($("#latestModelId").val() == lastModelId) {
                if ($(this).hasClass('circle-check-icon-blue')) {
                    $(this).removeClass('circle-check-icon-blue');

                    if ($(this).parent().next().find("span").hasClass("circle-check-icon-integration-blue"))
                    {
                        $(this).parent().next().find("span").removeClass("circle-check-icon-integration-blue")
                    }
                }
                else {
                    $(this).addClass('circle-check-icon-blue');
                }
            }
        });

        $(document).on('click', '#table_tactics tbody tr td span.circle-check-icon-gray-integration', function (e) {
            if ($("#latestModelId").val() == lastModelId) {

                if ($(this).parent().prev().find("span").hasClass("circle-check-icon-blue")) {

                    if ($(this).hasClass('circle-check-icon-integration-blue')) {
                        $(this).removeClass('circle-check-icon-integration-blue');
                    }
                    else {
                        $(this).addClass('circle-check-icon-integration-blue');
                    }
                }
                else {
                    alert("For Deploy to Integration, The tactic must be Deployed to Model.");
                }
            }
        });

        $("#cancel-button").click(function () {
            $('#DivBackgroundModel').css("display", "none");
            $('#DivPublishModelPopup').css("display", "none");
            return false;
        });
        $('#t_startdate').click(function () {
            $('#dp_end').datepicker('hide');
        })
        $("#Save-publish").click(function () {
            CheckUserSession("#Save-publish", true);
            if (reason == 'user') {
                return false;
            }
            var date = $("#t_startdate").val();
            $("#EffectiveDate").val(date);
            SaveAllTactic(true);
            return true;
        });
        $('#dp_start .add-on').click(function () {
            $('#dp_start').datepicker('show');
            $('#dp_end').datepicker('hide');

        });
        $('.dp').datepicker({
            format: "@RevenuePlanner.Helpers.Common.dateFormat",
            autoclose: true,
        }).on('changeDate', function (ev) {
            $(this).datepicker('hide');
        });;
        $('#publish').click(function (e) {
            if ($("#latestModelId").val() == lastModelId && $('#hdnStatus').val() == "Draft") {
                if ($('#PublisheStatus').val().toLocaleLowerCase() == 'true') {
                    if (confirm($("#PublishedMsg").val())) {
                        $('#DivBackgroundModel').css("display", "block");
                        $('#DivPublishModelPopup').css("display", "block");
                        var date = $("#EffectiveDate").val();
                        $("#t_startdate").val(date);
                        return false;
                    }
                    else {
                        $('#DivBackgroundModel').css("display", "none");
                        $('#DivPublishModelPopup').css("display", "none");
                        return false;
                    }
                }
                else {
                    $('#DivBackgroundModel').css("display", "block");
                    $('#DivPublishModelPopup').css("display", "block");
                    var date = $("#EffectiveDate").val();
                    $("#t_startdate").val(date);
                    return false;
                }
            }
            else {
                $('#DivBackgroundModel').css("display", "none");
                $('#DivPublishModelPopup').css("display", "none");
                return false;
            }
        });


        $("#continue").click(function () {
            CheckUserSession("#continue", true);
            if (reason == 'user') {
                return false;
            }
            SaveAllTactic(false);
        });
        
        function SaveAllTactic(isPublishToo) {
            var ids = [];
            var rejid = [];
            var ModelId = $("#latestModelId").val();
            $('#table_tactics tbody tr td span.circle-check-icon-gray.circle-check-icon-blue').each(function () {

                if ($(this).parent().next().find("span").hasClass("circle-check-icon-integration-blue")) {
                    ids.push(this.id + '_true');
                }
                else {
                    ids.push(this.id + '_false');
                }

            });

            $('#table_tactics tbody tr td span.circle-check-icon-gray').each(function () {

                if ($(this).parent().next().find("span").hasClass("circle-check-icon-integration-blue")) {
                    rejid.push(this.id + '_true');
                }
                else {
                    rejid.push(this.id + '_false');
                }

            });

            var totlen = rejid.length;
            if (ids.length > rejid.length) {
                totlen = ids.length;
            }
            for (var i = ids.length; i--;) {
                for (var j = rejid.length; j--;) {
                    if (rejid[j] == ids[i]) rejid.splice(j, 1);
                }
            }
            $.ajax({
                type: 'POST',
                url: '@Url.Content("~/Model/saveAllTactic/")',
                data: 'ids=' + ids + '&rejids=' + rejid + '&ModelId=' + ModelId + '&isModelPublished=' + isPublishToo + '&EffectiveDate=' + $("#EffectiveDate").val(),
                success: function (data) {
                    if (data.errorMessage != undefined) {
                        url = '@Url.Content("~/Model/Tactics")';
                        window.location.href = url + '?id=' + ModelId;
                    }
                    else if (data.successMessage != undefined) {
                        var hdnShowModelResultsTab = $("#hdnShowModelResultsTab").val();
                        if (hdnShowModelResultsTab == null || hdnShowModelResultsTab == '' || hdnShowModelResultsTab.toLowerCase() == 'true') {
                            url = '@Url.Content("~/Model/Results")';
                            window.location.href = url + '?mid1=' + ModelId + '&mid2=' + ModelId;
                            return;
                        }
                        else {
                            url = '@Url.Content("~/Model/Integration")';
                            window.location.href = url + '?id=' + ModelId;
                        }

                    }
                    else {
                        url = '@Url.Content("~/Model/Integration")';
                        window.location.href = url + '?id=' + ModelId;
                    }
                }
            });
    }
    });
</script>





