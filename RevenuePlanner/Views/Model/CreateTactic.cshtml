@model RevenuePlanner.Models.Tactic_TypeModel
@using RevenuePlanner.Models
@using RevenuePlanner.Helpers
@{
    bool IsModelIntegrated = ViewBag.IsModelIntegrated;
    //Start Manoj Limbachiya PL # 486
    bool IsDeplyed = ViewBag.IsDeployed;
    //End Manoj Limbachiya PL # 486
    // Start - Added By Sohel Pathan on 16/06/2014 for PL ticket #528
    string ModelStatus = Convert.ToString(ViewBag.ModelStatus);
    @Html.Hidden("hdnModelStatus", ModelStatus);
    string TacticTypeStageId = Convert.ToString(ViewBag.TacticTypeStageId);
    @Html.Hidden("hdnStageId", TacticTypeStageId);
    string ChangeTargetStageMsg = Convert.ToString(ViewBag.ChangeTargetStageMsg);
    @Html.Hidden("hdnChangeTargetStageMsg", ChangeTargetStageMsg);
    // End - Added By Sohel Pathan on 16/06/2014 for PL ticket #528
}
<div class="head">
    <span class="close-form source-sans-proregular">» CLOSE MENU</span>
    <div class="cf">
        <h2 class="source-sans-prolight">Tactic Detail</h2>
        @if ((bool)ViewBag.IsCreated == false && (bool)ViewBag.CanDelete == true)
        {
            <div class="btn-group pull-right gear-dropdown">
                <span class="gear-sidebar dropdown-toggle" data-toggle="dropdown"></span>
                <ul class="dropdown-menu">
                    <li><a id="deleteTactic">Delete Tactic</a></li>
                </ul>
            </div>
        }
    </div>
</div>
<div id="errorMsg" class="alert alert-error hide message-position-small">
    <a class="close">×</a>
    <strong>Error!</strong> <span id="spanMessage"></span>
</div>

@using (Html.BeginForm(new { @id = "frmSaveTactic" }))
{
    <script type="text/javascript">
        $(document).ready(function () {
            $(".verticalIdSelectBox select").selectbox();
        });
    </script>
    <div id="frm_tactics" name="frm_tactics">
        <div class="content">
            @Html.HiddenFor(model => model.TacticTypeId, new { id = "hdnTacticTypeId" })

            @Html.HiddenFor(model => model.ModelId, new { id = "hdnModelId" })
            @Html.HiddenFor(model => model.ClientId, new { id = "hdnClientId" })

            <label>Title</label>
            @Html.TextBoxFor(model => model.Title, new { placeholder = "Required", require = "true" })

            <label>Description</label>
            @Html.TextAreaFor(model => model.Description, new { placeholder = "Optional" })

            <label>Target Stage</label>
            <span class="verticalIdSelectBox">@Html.DropDownListFor(model => model.StageId, new SelectList((System.Collections.IEnumerable)ViewBag.Stages, "StageId", "Title"), "Please Select", new { @class = "ddlStyle", require = "true" })</span>

            <label class="margin-top10">Status</label>
            @{
    //Start Manoj Limbachiya PL # 486
    if (IsDeplyed)
    {
                <input id="t_model_status" name="t_status" type="text" class="icon-check-blue margin-top10" placeholder="Deployed to Model" maxlength="18" readonly />
    }
    else
    {
                <input id="t_model_status" name="t_status" type="text" class="icon-check-gray margin-top10" placeholder="Not Deployed to Model" maxlength="18" readonly />
    }
@*if (Model.ClientId != null)
                    {
                        <span id="t_status" class="setbackground">@Html.Raw("Deployed")</span>
                    }
                    else
                    {
                        <span id="t_status" class="setbackground">@Html.Raw("Not Deployed")</span>
                    }*@
    //End Manoj Limbachiya PL # 486

    if (IsModelIntegrated)
    {
        if (Model.IsDeployedToIntegration)
        {
                <input id="t_integration_status" name="t_status" type="text" class="icon-check-blue margin-top10" placeholder="Deployed to Integration" maxlength="18" readonly />
        }
        else
        {
                <input id="t_integration_status" name="t_status" type="text" class="icon-check-gray margin-top10" placeholder="Not Deployed to Integration" maxlength="18" readonly />
        }
    }
        
            }
        </div>
        <!--End content-->

        <div class="content dark">
            <p>Add two or more projected or historical values for projection purposes.</p>

            @*<label>Projected @Html.LabelForINQ("INQ")</label>
                @Html.TextBoxFor(model => model.ProjectedInquiries, new {  require = "true", id = "hdnProjectedInquiries", @class="priceValue", maxlength=@RevenuePlanner.Helpers.Common.maxLengthPriceValue })*@

            <label id="projectStage">Projected [Stage]</label>
            @*//changes done by uday for #497*@
            @Html.TextBoxFor(model => model.ProjectedStageValue, new { require = "true", id = "hdnProjectedStageValue", @class = "priceValue", maxlength = @RevenuePlanner.Helpers.Common.maxLengthPriceValue })

            <label>Projected Cost</label>
            @Html.TextBoxFor(model => model.ProjectedRevenue, new { require = "true", id = "hdnProjectedRevenue", @class = "currency_dollar", maxlength = @RevenuePlanner.Helpers.Common.maxLengthDollar })

        </div>
        <!--end content dark-->
        <div class="wraper-btns cf">
            <div class="span6">

                <button id="CreateTactic" class="btn btn-blue text-shadow-blue source-sans-proregular" type="button">Save</button>

            </div>
            <div class="span6">
                <button class="close-form btn-link source-sans-proregular" type="button">Cancel</button>
            </div>
        </div>
    </div>
}

<script type="text/javascript">

    $(document).ready(function () {
        $('#slidepanel-container').slimScroll({ scrollTo: '0px' });
        $('.currency_dollar').priceFormat({ prefix: '$', centsSeparator: '', thousandsSeparator: ',', centsLimit: 0 });
        $('.priceValue').priceFormat({ prefix: '', centsSeparator: '', thousandsSeparator: ',', centsLimit: 0 });

        if ($("#StageId option:selected").text() != "Please Select") {
            $("#projectStage").html();
            $("#projectStage").html('Projected [' + $("#StageId option:selected").text() + ']');
        }
        else {
            $("#projectStage").html();
            $("#projectStage").html('Projected [Stage]');
        }

        $("#StageId").on('change', function (e) {
            var optionSelected = $("option:selected", this);
            var valueSelected = optionSelected.val();
            var textSelected = optionSelected.text();
            if (textSelected != "Please Select") {
                $("#projectStage").html();
                $("#projectStage").html('Projected [' + textSelected + ']');
            }
            else {
                $("#projectStage").html();
                $("#projectStage").html('Projected [Stage]');
            }
        });
        $("#deleteTactic").click(function () {
            CheckUserSession("#deleteTactic", true);
            if (reason == 'user') {
                return false;
            }
            if (confirm('Are you sure you want to delete this tactic?')) {
                var idTactic = $("#hdnTacticTypeId").val();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Content("~/Model/DeleteTactic")',
                    data: {
                        ID: idTactic
                    },
                    success: function (data) {
                        if (data.status == 'SUCCESS') {
                            $('.close-form', this.$panel).click();
                            window.location.reload(true);
                        }
                        if (data.status == 'ERROR') {
                            ShowError(data.Message);
                        }

                    }
                });
            }
            else {
                return false;
            }
        });
        if ($("#latestModelId").val() == $("#mode").val()) {
            $("#CreateTactic").show();
           // $("#save_tactic").show();
            MakeEditable();
        }
        else {
            $("#CreateTactic").hide();
           // $("#save_tactic").hide();
            MakeViewOnly();//Bug 17:Should not be able to edit a published model
        }
        $("span.tool-tip").tooltip();

        $(".alert").find(".close").on("click", function (e) {
            e.stopPropagation();
            e.preventDefault();
            $(this).closest(".alert").slideUp(400);
        });

        $('.close-form', this.$panel).click(function (e) {
            $("#slidepanel").css("display", "none");
            $("#slidepanel-container").empty();
        });

        //Start Manoj Limbachiya PL # 486
        $("#frm_tactics #t_model_status").click(function () {
            if ($(this).hasClass("icon-check-blue")) {
                $(this).val("Not Deployed to Model");
                $(this).addClass("icon-check-gray");
                $(this).removeClass("icon-check-blue");

                /*changed for TFS bug #495 	Add/Edit Tactic under Model: Deploy to Integration is activated without Deploy to Model Activation by Maninder Singh Wadhva on 27 May 2014*/
                t_integration_status = $("#frm_tactics #t_integration_status");
                if (t_integration_status.hasClass("icon-check-blue")) {
                    t_integration_status.val("Not Deployed to Integration");
                    t_integration_status.addClass("icon-check-gray");
                    t_integration_status.removeClass("icon-check-blue");
                }
            }
            else {
                $(this).val("Deployed to Model");
                $(this).addClass("icon-check-blue");
                $(this).removeClass("icon-check-gray");
            }
        });

        //End Manoj Limbachiya PL # 486
        $("#frm_tactics #t_integration_status").click(function () {
            if ($(this).hasClass("icon-check-blue")) {
                $(this).val("Not Deployed to Integration");
                $(this).addClass("icon-check-gray");
                $(this).removeClass("icon-check-blue");
            }
            else if ($("#frm_tactics #t_model_status").hasClass("icon-check-gray")) {
                /*changed for TFS bug #495 	Add/Edit Tactic under Model: Deploy to Integration is activated without Deploy to Model Activation by Maninder Singh Wadhva on 27 May 2014*/
                alert("For Deploy to Integration, The tactic must be Deployed to Model.");
            }
            else {
                $(this).val("Deployed to Integration");
                $(this).addClass("icon-check-blue");
                $(this).removeClass("icon-check-gray");
            }
        });


        $('form').find('input[type=text], select, textarea').each(function () {
            $(this).change(function () {
                if ($(this).attr('require') == 'true') {
                    if ($(this).val() == '') {
                        $(this).addClass("error");
                    }
                    else {
                        $(this).removeClass("error");
                    }
                } /*changed for TFS bug 176 : Model Creation - Tactic Defaults should Allow values of zero changed by Nirav Shah on 7 feb 2014*/
                if ($(this).attr('id') == 'hdnProjectedInquiries') {
                    var tValue = ReplaceCC($("#hdnProjectedInquiries").val());
                    if (isNaN(tValue)) {
                        $(this).addClass("error");
                        iserror = true;
                    }
                }
                //changes done by uday for PL #497
                if ($(this).attr('id') == 'hdnProjectedStageValue') {
                    var tValue = ReplaceCC($("#hdnProjectedStageValue").val());
                    if (isNaN(tValue)) {
                        $(this).addClass("error");
                        iserror = true;
                    }
                }
                if ($(this).attr('id') == 'hdnProjectedRevenue') {
                    var tValue = ReplaceCC($("#hdnProjectedRevenue").val());
                    if (isNaN(tValue)) {
                        $(this).addClass("error");
                        iserror = true;
                    }
                }
            });
        });

        @*$("#save_tactic").click(function () {
            var iserror = false;
            $('form').find('input[type=text], select, textarea').each(function () {
                if ($(this).attr('require') == 'true') {
                    if ($(this).val() == '') {
                        $(this).addClass("error");
                        iserror = true;
                    }
                    else {
                        $(this).removeClass("error");
                    }
                } /*changed for TFS bug 176 : Model Creation - Tactic Defaults should Allow values of zero changed by Nirav Shah on 7 feb 2014*/
                //if ($(this).attr('id') == 'hdnProjectedInquiries') {
                //    var tValue = ReplaceCC($("#hdnProjectedInquiries").val());
                //    if (isNaN(tValue)) {
                //        $(this).addClass("error");
                //        iserror = true;
                //    }
                //} //changes done by uday for PL #497
                if ($(this).attr('id') == 'hdnProjectedStageValue') {
                    var tValue = ReplaceCC($("#hdnProjectedStageValue").val());
                    if (isNaN(tValue)) {
                        $(this).addClass("error");
                        iserror = true;
                    }
                }
                if ($(this).attr('id') == 'hdnProjectedRevenue') {
                    var tValue = ReplaceCC($("#hdnProjectedRevenue").val());
                    if (isNaN(tValue)) {
                        $(this).addClass("error");
                        iserror = true;
                    }
                }
            });

            /*changed for TFS bug #495 	Add/Edit Tactic under Model: Deploy to Integration is activated without Deploy to Model Activation by Maninder Singh Wadhva on 27 May 2014*/
            var isDeployedToIntegration = false;

            if ($("#t_integration_status").hasClass("icon-check-blue")) {
                isDeployedToIntegration = true;
            }

            var isDeployedToModel = false;

            if ($("#t_model_status").hasClass("icon-check-blue")) {
                isDeployedToModel = true;
            }

            if (iserror) {
                ShowError("Make sure all fields are filled and try again.");
                return false;
            }

            var Title = $("#Title").val();
            var Description = $("#Description").val();
            var StageId = $("#StageId").val();
            /*changed for TFS bug 176 : Model Creation - Tactic Defaults should Allow values of zero changed by Nirav Shah on 7 feb 2014*/
            //changes done by uday for PL #497 changed projectedmlqs to projectedstagevalue
            var ProjectedStageValue = ReplaceCC($("#hdnProjectedStageValue").val()); 
   
            var ProjectedRevenue = ReplaceCC($("#hdnProjectedRevenue").val());
            var TacticTypeId = $("#hdnTacticTypeId").val();
            //var clientId = $("#hdnClientId").val();
            var modelID = $("#hdnModelId").val();

            if (StageId == '' || StageId == 'Undefined') {
                StageId = 'null';
            }
            var ModelTacticTypeId = $("#hdnTacticTypeId").val();

            $.ajax({
                type: 'GET',
                url: '@Url.Content("~/Home/CheckUserId/")?UserId=' + $(window).attr('name'),
                success: function (data) {
                    if (data.returnURL == '#') {
                        $.ajax({
                            type: 'POST',
                            url: '@Url.Content("~/Model/SaveTactic/")',
                //changes done by uday for PL #497 changed projectedmlqs to projectedstagevalue
                data: 'Title=' + Title + '&Description=' + Description + '&StageId=' + StageId + '&ProjectedStageValue=' + ProjectedStageValue +
                                '&ProjectedRevenue=' + ProjectedRevenue + '&TacticTypeId=' + TacticTypeId
                            + '&modelID=' + modelID + '&isDeployedToIntegration=' + isDeployedToIntegration
                            + '&isDeployedToModel=' + isDeployedToModel,
                            success: function (data) {
                                if (data.redirect) {
                                    $("#slidepanel").css("display", "none");
                                    $("#slidepanel-container").empty();
                                    window.location.reload(true);
                                    return;
                                }
                                if (data.errormsg) {
                                    ShowError(data.errormsg);
                                    return;
                                }

                            }
                        });
                    }
                    else {
                        window.location = data.returnURL;
                    }
                }
            });


        });*@

        $('form').find(".sbSelector").each(function () {
            $(this).next().find('li').click(function () {
                if ($(this).parent().parent().prev().attr('require') == 'true') {
                    if ($(this).parent().prev().text() == 'Please Select') {
                        $(this).parent().prev().addClass("error");
                        iserror = true;
                    }
                    else {
                        $(this).parent().prev().removeClass("error");
                    }
                }
            });
        });

        /*Modified by Mitesh Vaishnav on 05/06/2014 for remove two buttons of save tactics */
        $("#CreateTactic").click(function () {
            var iserror = false;
            var isCreated = '@ViewBag.IsCreated';
            $('form').find('input[type=text], select, textarea').each(function () {
                if ($(this).attr('require') == 'true') {
                    if ($(this).val() == '') {
                        $(this).addClass("error");
                        iserror = true;
                    }
                    else {
                        $(this).removeClass("error");
                    }
                }
                /*changed for TFS bug 176 : Model Creation - Tactic Defaults should Allow values of zero changed by Nirav Shah on 7 feb 2014*/
              
                //changes done by uday for PL #497 changed projectedmlqs to projectedstagevalue
                if ($(this).attr('id') == 'hdnProjectedStageValue') {
                    var tValue = ReplaceCC($("#hdnProjectedStageValue").val());
                    if (isNaN(tValue)) {
                        $(this).addClass("error");
                        iserror = true;
                    }
                }
                if ($(this).attr('id') == 'hdnProjectedRevenue') {
                    var tValue = ReplaceCC($("#hdnProjectedRevenue").val());
                    if (isNaN(tValue)) {
                        $(this).addClass("error");
                        iserror = true;
                    }
                }
            });

            //sbSelector
                $('form').find('.sbSelector').each(function () {
                    if ($(this).parent().prev().attr('require') == 'true') {
                        if ($(this).text() == 'Please Select') {
                            $(this).addClass("error");
                            iserror = true;
                        }
                        else {
                            $(this).removeClass("error");
                        }
                    }
                });
            


            /*changed for TFS bug #495 	Add/Edit Tactic under Model: Deploy to Integration is activated without Deploy to Model Activation by Maninder Singh Wadhva on 27 May 2014*/
            var isDeployedToIntegration = false;

            if ($("#t_integration_status").hasClass("icon-check-blue")) {
                isDeployedToIntegration = true;
            }

            var isDeployedToModel = false;

            if ($("#t_model_status").hasClass("icon-check-blue")) {
                isDeployedToModel = true;
            }

            if (iserror) {
                ShowError("Make sure all fields are filled and try again.");
                return false;
            }

            var Title = $("#Title").val();
            var Description = $("#Description").val();
            var StageId = $("#StageId").val();
            if (StageId == '' || StageId == 'Undefined') {
                StageId = 'null';
            }
            /*changed for TFS bug 176 : Model Creation - Tactic Defaults should Allow values of zero changed by Nirav Shah on 7 feb 2014*/
            //changes done by uday for PL #497 changed projectedmlqs to projectedstagevalue
            var ProjectedStageValue = ReplaceCC($("#hdnProjectedStageValue").val());
 
            var ProjectedRevenue = ReplaceCC($("#hdnProjectedRevenue").val());
            var TacticTypeId = $("#hdnTacticTypeId").val();
            if (isCreated == 'True') {
                TacticTypeId = 0;
            }
            var clientId = $("#hdnClientId").val();
            var modelID = $("#hdnModelId").val();

            // Start - Added By Sohel Pathan on 16/06/2014 for PL ticket #528
            if ($('#hdnModelStatus').val().toLowerCase() == 'published' && $('#hdnStageId').val() != '') {
                if ($('#hdnStageId').val() != $('#StageId').val()) {
                    if (!confirm($('#hdnChangeTargetStageMsg').val().toString())) {
                        return false;
                        e.preventDefault();
                    }
                }
            }
            // End - Added By Sohel Pathan on 16/06/2014 for PL ticket #528

            $.ajax({
                type: 'POST',
                url: '@Url.Content("~/Home/CheckUserId/")?UserId=' + $(window).attr('name'),
                success: function (data) {
                    if (data.returnURL == '#') {
                        $.ajax({
                            type: 'POST',
                            url: '@Url.Content("~/Model/SaveTactic/")',
                            data: 'Title=' + Title + '&Description=' + Description + '&StageId=' + StageId + '&ProjectedStageValue=' + ProjectedStageValue
                            + '&ProjectedRevenue=' + ProjectedRevenue + '&TacticTypeId=' + TacticTypeId
                           + '&modelID=' + modelID + '&isDeployedToIntegration=' + isDeployedToIntegration
                            + '&isDeployedToModel=' + isDeployedToModel,
                            success: function (data) {
                                if (data.redirect) {
                                    $("#slidepanel").css("display", "none");
                                    $("#slidepanel-container").empty();
                                    window.location.reload(true);
                                    return;
                                }
                                if (data.errormsg) {
                                    ShowError(data.errormsg);
                                    return;
                                }

                            }
                        });
                    }
                    else {
                        window.location = data.returnURL;
                    }
                }
            });

        });
        /*End: Modified by Mitesh Vaishnav on 05/06/2014 for remove two buttons of save tactics */

        function ShowError(value) {
            $("#errorMsg").slideDown(400);
            $("#spanMessage").empty();
            $("#spanMessage").text(value);
        }


    });
</script>
