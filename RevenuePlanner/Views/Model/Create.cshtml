@model RevenuePlanner.Models.BaselineModel
@using RevenuePlanner.Models
@using RevenuePlanner.Helpers
@{
    ViewBag.Title = "Model";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string strValidateForEmptyField = Common.objCached.ValidateForValidField;
    string strErrorOccured = Common.objCached.ErrorOccured;
    string isViewOnly = ViewBag.IsViewOnly;
    string ModelId = Convert.ToString(ViewBag.ModelId);
    string BusinessUnitId = Convert.ToString(ViewBag.BusinessUnitId);
    bool IsBenchmarked = ViewBag.IsBenchmarked;
    string errormsg = Convert.ToString(TempData["StageNotExist"]);
    bool mflag = false;
    bool tflag = false;
    bool sflag = false;
    string ShowModelResultsTab = Convert.ToString(System.Configuration.ConfigurationManager.AppSettings["ShowModelResultsTab"]);
    /*Added by Nirav Shah on 18 feb 2014 for TFS Point 252: Editing a published model*/
    string ModelPublishEdit = ViewBag.ModelPublishEdit;
    string ModelPublishCreateNew = ViewBag.ModelPublishCreateNew;
    bool flag = ViewBag.Flag;
    string PublishedMsg = ViewBag.ModelPublishComfirmation;
    @Html.Hidden("PublishedMsg", PublishedMsg);
    @Html.Hidden("Planflag", flag);
                                  var currentdate = System.DateTime.Today.ToShortDateString();
}

@section nlFormContent{
    <link rel="stylesheet" href="@Url.Content("~/Content/css/NaturalLanguageForm/default.css")" type="text/css" />
    <link rel="stylesheet" href="@Url.Content("~/Content/css/NaturalLanguageForm/component.css")" type="text/css" />
    <script type="text/javascript" src="@Url.Content("~/Scripts/js/NaturalLanguageForm/modernizr.custom.js")"></script>
}
@section Sidebar
{
    <div class="padding-content padding-bottom0">
        <h4 class="text-shadow-black source-sans-prolight">@Html.Raw("Model Summary")</h4>
        <div class="wraper-btns cf">
            <div class="span6">
                <button id="newModel" class="btn btn-blue text-shadow-blue source-sans-proregular" href="@Url.Content("~/Model/Create")" type="button">@Html.Raw("New Model")</button>
            </div>
            <div class="span6">
                <button id="publishModelDisabled" class="btn btn-blue-disable text-shadow-blue source-sans-proregular" type="button">@Html.Raw("Publish")</button>
                <button id="publishModel" style="display: none" class="btn btn-blue text-shadow-blue source-sans-proregular" href="@Url.Content("~/Model/ModelZero")" type="button">@Html.Raw("Publish")</button>
            </div>
        </div>
    </div>
    @{
        //logic added to disable left navigation section when model is created.
        string ulclass = "";
        if (ModelId == "" || ModelId == "0")
        {
            ulclass = "nav nav-listc nav-gray-planc";
        }
        else
        {
            ulclass = "nav nav-listc nav-gray-plan";
        }
    }

    <ul class="@ulclass">
        <li class="item active">
            <a class="source-sans-probold inputs" id="aInput" href="#"><span></span>@Html.Raw("INPUTS")</a>
        </li>
        <li class="item">
            <a class="source-sans-probold audience leftnav" id="aAudience" href="#"><span></span>@Html.Raw("AUDIENCE")</a>
        </li>
        <li class="item">
            <a class="source-sans-probold tactics leftnav" id="aTactics" href="#"><span></span>@Html.Raw("TACTICS")</a>
        </li>
        @if (ShowModelResultsTab == null || ShowModelResultsTab == "" || ShowModelResultsTab.ToLower() == "true")
        {
            <li class="item">
                <a class="source-sans-probold result leftnav" id="aResults" href="#"><span></span>@Html.Raw("RESULTS")</a>
            </li>
        }
    </ul>

    <ul class="nav nav-list nav-gray-plan">
        <li id="change-log" class="nav-header">
            <span>@Html.Raw("Change Log")</span>
            <div class="changes"></div>
        </li>
    </ul>

}
@using (Html.BeginForm("Create", "Model", FormMethod.Post, new { id = "form1" }))
{
    @Html.Hidden("ValidateForEmptyField", @strValidateForEmptyField)
    @Html.Hidden("ErrorOccured", @strErrorOccured)
    @Html.Hidden("IsViewOnly", isViewOnly)
    @Html.Hidden("ModelId", ModelId)
    @Html.Hidden("_BusinessUnitId", BusinessUnitId)
    @Html.Hidden("Errormsg", errormsg)
    @Html.Hidden("hdnMsg", (string)ViewBag.Msg, new { id = "hdnMsg" })
    @Html.Hidden("TempDataErrorMsg", ((string)TempData["ErrorMessage"]))
@* <div id="errorMessage" class="alert alert-error hide message-position">
        <a class="close">×</a>
        <strong>Error!</strong> @Html.Raw(HttpUtility.HtmlDecode((string)TempData["ErrorMessage"]))
    </div>*@
    <div id="errorMessage" class="alert alert-error hide message-position">
        <a class="close">×</a>
        <div id="cError"></div>
    </div>
  
    TempData["ErrorMessage"] = "";
    <div id="DivBackgroundModel" class="modal-backdrop fade in" style="z-index: 1501;display: none;"></div>
    <div id="DivPublishModelPopup" class="form-inspect-share hide fade in" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="display:none; height: 205px;z-index: 1502;">
        <h2 class="primary-title source-sans-prosemibold">Select effective date</h2>
        <div class="dp datepicker input-append date  calendar-width" id="dp_start" data-date="today();" data-date-format="@RevenuePlanner.Helpers.Common.dateFormat">
            <input id="t_startdate" class="black-border-right font-size13 height30px" style="background-color: #ffffff; border-color: #f3f3f3; color: #000000; width: 240px; margin-top: 0px; border-radius: 4px;" size="16" type="text">
            <span class="add-on height30" style="border-radius: 4px;">
                <img src="~/Content/images/gray-calendar-icon.png"></span>
        </div>
        <div style="width: 100%; margin: 0px auto;">
            <button class="form-inspect-share-button btn btn-large" id="Save-publish" value="Submit" style="margin-top: 0px !important; margin-right: 10px; width: 80px;">Save</button>
            &nbsp;
        <button class="btn-link" id="cancel-button" type="button" style="margin-top: 0px !important; width: 80px; line-height: 41px;">Cancel</button>
        </div>
    </div>
           
    
    <ul class="nav nav-tabs">
        @if (Model.Versions != null)
        {
            foreach (ModelVersion v in Model.Versions)
            {
                if (v.IsLatest)
                {
            <input type="hidden" value="@v.ModelId" id="latestModelId" />
            <li class="title-header source-sans-proregular" title="@v.Title">
                <h2 id="lblTitle">@v.Title <span class="gray source-sans-prolight" title="@v.Status">@v.Status</span></h2>

            </li>
            <li id="ver_@v.ModelId" class="disabled pull-right" title="@v.Version">
                <a href="#" onclick="LoadModelData(@v.ModelId,'@v.BusinessUnitId', true)">@Html.Raw("v")@v.Version</a>
            </li>
                }
                else
                {
            <li id="ver_@v.ModelId" class="disabled pull-right" title="@v.Version">
                <a href="#" onclick="LoadModelData(@v.ModelId,'@v.BusinessUnitId',false)">@Html.Raw("v")@v.Version</a>
            </li>
                }
            }
            if (Model.Versions.Count == 1)
            {
            <li class="disabled pull-right">
                <a href="#">@Html.Raw("No Saved Versions")</a>
            </li>
            }
            if (Model.Versions.Count == 0)
            {
            <li class="title-header source-sans-proregular" title="Title">
                <h2>@Html.Raw("Baseline Model") <span class="gray source-sans-prolight" title="Draft">@Html.Raw("DRAFT")</span></h2>
            </li>
            <li class="active pull-right" title="1.0">
                <a href="#">@Html.Raw("v")1.0</a>
            </li>
            <li class="disabled pull-right">
                <a href="#">@Html.Raw("No Saved Versions")</a>
            </li>
            }
        }
    </ul>
    <div class="padding-content cf source-sans-proregular">

        <div class="row">
            <div class="span2 content-colum-left">
                <div class="padding-right70">
                    <p>@Html.Raw("Add your organization's unique behaviors to create assumptions for your baseline model in Gameplan. This model will be used to create recommendations when building your annual marketing plan.")</p>
                    <ul class="nav nav-pills nav-stacked nav-colum-bar">
                        <li class="subheader active">
                            <a href="#Overview">@Html.Raw("1. Model Overview")</a>
                        </li>
                        <li class="subheader"><a href="#Inquiries">@Html.Raw("2. Contacts and Inquiries")</a></li>
                        <li class="subheader"><a href="#Rates">@Html.Raw("3. Conversion Rates")</a></li>
                    </ul>
                </div>
            </div>
            <div class="span10 content-colum-right">
                <a name="Overview"></a>
                <h2 class="sub-title-forms source-sans-proregular">@Html.Raw("1. Model Overview")</h2>
                <div id="divModelOverview"></div>
                <a name="Inquiries"></a>
                <h2 class="sub-title-forms source-sans-proregular">@Html.Raw("2. Contacts and Inquiries")</h2>
                <div id="divcontactInquiry"></div>
                <a name="Rates"></a>
                @*      <h2 class="sub-title-forms source-sans-proregular">3. Conversion Rates</h2>*@
                <ul id="sub_nav_tabs" class="nav nav-tabs">
                    <li class="title-header source-sans-proregular">
                        <h2>3. Conversion Rates</h2>
                    </li>
                    <li id="benchmarked-option" class="disabled pull-right">
                        <a>Benchmarked</a>
                    </li>
                    <li id="advanced-option" class="active pull-right">
                        <a>Advanced</a>
                    </li>
                </ul>
                <div class="tab-content">
                    <div class="tab-pane" id="benchmarked">
                        <p>
                            @Html.Raw("  Click continue to populate your baseline model with benchmarked values for conversion and stage velocity. Select Advanced to add your organization's custom conversion rates.")

                        </p>
                    </div>

                    <div id="inputs-group">
                        @{
        if (Model.lstmodelstage.Count() > 0)
        {
            //foreach (var item in Model.lstmodelstage)
            //{
            //    if (@item.Funnel != "" && @item.Funnel != null)
            //    {
            //        string mstr = Enums.FunnelFlag.M.ToString();
            //        string tstr = Enums.FunnelFlag.T.ToString();
            //        string sstr = Enums.FunnelFlag.S.ToString();

            //        string strmflag = Enums.FunnelFlagValue.Single(s => s.Key.Equals(mstr)).Value;
            //        string strtflag = Enums.FunnelFlagValue.Single(s => s.Key.Equals(tstr)).Value;
            //        string strsflag = Enums.FunnelFlagValue.Single(s => s.Key.Equals(sstr)).Value;

            //        if (Array.IndexOf(@item.Funnel.Split(','), strmflag) >= 0)
            //        {
            //            mflag = true;
            //        }
            //        if (Array.IndexOf(@item.Funnel.Split(','), strtflag) >= 0)
            //        {
            //            tflag = true;
            //        }
            //        if (Array.IndexOf(@item.Funnel.Split(','), strsflag) >= 0)
            //        {
            //            sflag = true;
            //        }
            //    }
            //}

            if (Model.lstmodelstage.Exists(m => m.Funnel.Contains(Enums.FunnelFlag.M.ToString())))
            {
                mflag = true;
            }
            if (Model.lstmodelstage.Exists(m => m.Funnel.Contains(Enums.FunnelFlag.T.ToString())))
            {
                tflag = true;
            }
            if (Model.lstmodelstage.Exists(m => m.Funnel.Contains(Enums.FunnelFlag.S.ToString())))
            {
                sflag = true;
            }
        }
                        }
                        @{ 
        if (mflag == true)
        {  
                            @Html.Raw("Add your waterfall stage conversion rates for each source. Hover over the info icon for additional explanation about a stage.")
                            <h4 class="sub-title-forms">@Html.Raw("Marketing Conversion Rates")</h4>
        }
                        }
                        <div class="row">
                            @{
        var cnti = 0;
        foreach (var item in Model.lstmodelstage)
        {
            cnti = cnti + 1;
            if (cnti < Model.lstmodelstage.Count())
            {

                if (@item.Funnel != "" && @item.Funnel != null)
                {
                    string m = Enums.FunnelFlag.M.ToString();
                    string strmarketingflag = Enums.FunnelFlagValue.Single(s => s.Key.Equals(m)).Value;

                    if (Array.IndexOf(@item.Funnel.Split(','), strmarketingflag) >= 0)
                    {
                                <input type="hidden" value="@item.StageId" name="hdnSTAGEMCR" />
                                <div class="span3">
                                    <p class="ellipsis">@item.Level . @item.ConversionTitle</p>
                                    <div class="input-append">
                                        <input class="span7 input-small doubleTextPerc" type="text" maxlength="5" name="txtMCR" id="txtMCR_CR_@item.StageId" placeholder="0" >
                                        <span class="add-on">@Html.Raw("%")</span>
                                    </div>
                                    <span class="info-icon"></span>
                                </div>
                    }
                }
            }
        }
                            }


                        </div>
                        @{ 
        if (mflag == true)
        {
                           
                            <h4 class="sub-title-forms">@Html.Raw("Marketing Stage Velocity")</h4>
        }
                        }
                        <div class="row">
                            @{
        var cnt = 0;
        var velocitytitle = "";
        //bool flgm = false;
        foreach (var item in Model.lstmodelstage)
        {
            if (@item.Code == Convert.ToString(Enums.Stage.CW))
            {
                cnt = cnt + 1;
            }
            if (cnt < Model.lstmodelstage.Count())
            {

                if (@item.Funnel != "" && @item.Funnel != null)
                {
                    string m = Enums.FunnelFlag.M.ToString();
                    string strmarketingflag = Enums.FunnelFlagValue.Single(s => s.Key.Equals(m)).Value;

                    if (Array.IndexOf(@item.Funnel.Split(','), strmarketingflag) >= 0)
                    {
                                <input type="hidden" value="@item.StageId" name="hdnSTAGEMSV" />
                        //Start Manoj 03Feb2014 - Bug 115:Model Creation - Velocity Labels same as Conversion Labels
                        //flgm = item.Description.Equals(string.Empty);
                        //if (flgm == false)
                        //{
                        //    velocitytitle = @item.Description;

                        //}
                        //else
                        //{
                        //    velocitytitle = @item.VelocityTitle;
                        //}
                        velocitytitle = @item.VelocityTitle;
                        //End Manoj 03Feb2014 - Bug 115:Model Creation - Velocity Labels same as Conversion Labels
                                <div class="span3">
                                    <p class="ellipsis">@item.Level . @velocitytitle</p>
                                    <input class="span7 input-small doubleText" type="text" maxlength="12" name="txtMSV" id="txtMSV_SV_@item.StageId" placeholder="0" >
                                </div>  
                    }
                }
            }
            if (@item.Code != Convert.ToString(Enums.Stage.CW))
            {
                cnt = cnt + 1;
            }

        }
                            }

                        </div>

                        @{ 
        if (tflag == true)
        { 
                            
                            <div class="line-separator"></div>

                            <h4 class="sub-title-forms">@Html.Raw("Teleprospecting Conversion Rates")</h4>
        }
                        }
                        <div class="row">
                            @{   
        var cntTCR = 0;
        foreach (var item in Model.lstmodelstage)
        {
            cntTCR = cntTCR + 1;
            if (cntTCR < Model.lstmodelstage.Count())
            {
                if (@item.Funnel != "" && @item.Funnel != null)
                {
                    string t = Enums.FunnelFlag.T.ToString();
                    string strteleprospectingflag = Enums.FunnelFlagValue.Single(s => s.Key.Equals(t)).Value;

                    if (Array.IndexOf(@item.Funnel.Split(','), strteleprospectingflag) >= 0)
                    {   
                                <input type="hidden" value="@item.StageId" name="hdnSTAGETCR" />
                                <div class="span3">
                                    <p class="ellipsis">@item.Level . @item.ConversionTitle</p>
                                    <div class="input-append">
                                        <input class="span7 input-small doubleTextPerc" type="text" maxlength="5" name="txtTCR" id="txtTCR_CR_@item.StageId" placeholder="0" >
                                        <span class="add-on">@Html.Raw("%")</span>
                                    </div>
                                    <span class="info-icon"></span>
                                </div>
                    }
                }


            }
        }
                            }
                        </div>
                        @{ 
        if (tflag == true)
        {
                            <h4 class="sub-title-forms">@Html.Raw("Teleprospecting Stage Velocity")</h4>
        }
                        }
                        <div class="row">
                            @{   
        var cntTCV = 0;
        foreach (var item in Model.lstmodelstage)
        {
            if (@item.Code == Convert.ToString(Enums.Stage.CW))
            {
                cntTCV = cntTCV + 1;
            }
            if (cntTCV < Model.lstmodelstage.Count())
            {
                if (@item.Funnel != "" && @item.Funnel != null)
                {
                    string t = Enums.FunnelFlag.T.ToString();
                    string strteleprospectingflag = Enums.FunnelFlagValue.Single(s => s.Key.Equals(t)).Value;

                    if (Array.IndexOf(@item.Funnel.Split(','), strteleprospectingflag) >= 0)
                    { 

                                <input type="hidden" value="@item.StageId" name="hdnSTAGETSV" />
                                <div class="span3">
                                    <p class="ellipsis">@item.VelocityTitle</p>
                                    <input class="span7 input-small doubleText" type="text" maxlength="12" name="txtTSV" id="txtTSV_SV_@item.StageId" placeholder="0" >
                                </div>
                    }
                }

            }
            if (@item.Code != Convert.ToString(Enums.Stage.CW))
            {
                cntTCV = cntTCV + 1;
            }
        }
                            }
                        </div>

                        @{ 
        if (sflag == true)
        {
                            <div class="line-separator"></div>
                            <h4 class="sub-title-forms">@Html.Raw("Sales Conversion Rates")</h4>
        }
                        }
                        <div class="row">
                            @{
        var cntSCR = 0;
        foreach (var item in Model.lstmodelstage)
        {
            cntSCR = cntSCR + 1;
            if (cntSCR < Model.lstmodelstage.Count())
            {
                if (@item.Funnel != "" && @item.Funnel != null)
                {
                    string s = Enums.FunnelFlag.S.ToString();
                    string strteleprospectingflag = Enums.FunnelFlagValue.Single(f => f.Key.Equals(s)).Value;

                    if (Array.IndexOf(@item.Funnel.Split(','), strteleprospectingflag) >= 0)
                    { 

                                <input type="hidden" value="@item.StageId"  name="hdnSTAGESCR" />
                                <div class="span3">
                                    <p class="ellipsis">@item.Level . @item.ConversionTitle</p>
                                    <div class="input-append">
                                        <input class="span7 input-small doubleTextPerc" type="text" maxlength="5" name="txtSCR" id="txtSCR_CR_@item.StageId" placeholder="0" >
                                        <span class="add-on">@Html.Raw("%")</span>
                                    </div>
                                    <span class="info-icon"></span>
                                </div>
                    }
                }

            }
        }
                            }
                        </div>
                        @{ 
        if (sflag == true)
        {
                            <h4 class="sub-title-forms">@Html.Raw("Sales Stage Velocity")</h4>
        }
                        }
                        <div class="row">
                            @{   
        var cntSSV = 0;
        foreach (var item in Model.lstmodelstage)
        {
            if (@item.Code == Convert.ToString(Enums.Stage.CW))
            {
                cntSSV = cntSSV + 1;
            }
            if (cntSSV < Model.lstmodelstage.Count())
            {
                if (@item.Funnel != "" && @item.Funnel != null)
                {
                    string s = Enums.FunnelFlag.S.ToString();
                    string strteleprospectingflag = Enums.FunnelFlagValue.Single(f => f.Key.Equals(s)).Value;

                    if (Array.IndexOf(@item.Funnel.Split(','), strteleprospectingflag) >= 0)
                    { 
                                <input type="hidden" value="@item.StageId" name="hdnSTAGESSV" />
                                <div class="span3">
                                    <p class="ellipsis">@item.VelocityTitle</p>
                                    <input class="span7 input-small doubleText" type="text" name="txtSSV" maxlength="12" id="txtSSV_SV_@item.StageId" placeholder="0" >
                                </div>
                    }
                }
            }
            if (@item.Code != Convert.ToString(Enums.Stage.CW))
            {
                cntSSV = cntSSV + 1;
            }

        }
                            }


                        </div>
                    </div>
                </div>
                @{ 
        if (Model.lstmodelstage.Count() > 0)
        {
                    <div class="line-separator"></div>
        }
                }
                @Html.Hidden("isPublishButton")
                @Html.Hidden("whichButton")
                @Html.Hidden("CurrentModelId")
                @Html.Hidden("IsBenchmarked", IsBenchmarked)
                @*Added by Nirav Shah on 18 feb 2014 for TFS Point 252: Editing a published model*@
                @Html.Hidden("ModelPublishEdit", ModelPublishEdit)
                @Html.Hidden("ModelPublishCreateNew", ModelPublishCreateNew)
                @Html.Hidden("EffectiveDate", currentdate)
                @{ 
        if (isViewOnly != "true" && Model.lstmodelstage.Count() > 0)
        {@*changed by Nirav Shah on 18 feb 2014 for TFS Point 252: Editing a published model*@
                    <input id="btnsave" type="submit" class="btn btn-blue text-shadow-blue source-sans-proregular savebtn" style="display: inline" value="Save Current Version & Continue" />
                    <input id="button-save" type="submit" class="btn btn-blue text-shadow-blue source-sans-proregular savebtn" style="display: inline" value="Create New Version & Continue" />
        }@*end nirav changes*@
                }
            </div>
        </div>
    </div>
}
<script type="text/javascript">
    var lastModelId;
    var _AddressableContract;
    var modelStatus;/* changed by Nirav shah for TFS Point :252 editing a published model*/

    if ($("#Errormsg").val() != undefined && $("#Errormsg").val() != "") {
        $("#errorMessage").html('<a class="close">×</a><strong>Error!</strong>' + $("#Errormsg").val());
        $("#errorMessage").slideDown(1200);
    } else if ($("#TempDataErrorMsg").val() != undefined && $("#TempDataErrorMsg").val() != "") {
        $("#errorMessage").html('<a class="close">×</a><strong>Error!</strong>' + $("#TempDataErrorMsg").val());
        $("#errorMessage").slideDown(1200);
    }

    $("#newModel").click(function () {
        window.location.href = $(this).attr('href');
    });
    $(".leftnav").click(function () {
        var url = '';
        var isResults = '';
        if ($(this).attr('id') == 'aAudience') {
            url = '@Url.Content("~/Model/Audience")';
        }
        else if ($(this).attr('id') == 'aTactics') {
            url = '@Url.Content("~/Model/Tactics")';
        }
        else if ($(this).attr('id') == 'aResults') {
            url = '@Url.Content("~/Model/Results")';
            isResults = '1';
        }
        if (url != '' && lastModelId != null && lastModelId != 0) {
            if (isResults == '1') {
                window.location.href = url + '?mid1=' + lastModelId + '&mid2=' + lastModelId;
            }
            else {
                window.location.href = url + '?id=' + lastModelId;
            }
        }
    });
$(document).ready(function () {
    $('#DivBackgroundModel').css("display", "none");
    $('#DivPublishModelPopup').css("display", "none");
    $('#form1').bind("keyup keypress", function (e) {
        var code = e.keyCode || e.which;
        if (code == 13) {
            e.preventDefault();
            return false;
        }
    });

    //// Added By Maninder Singh 
    //// Date 1/28/2014
    //// Added Set tooltip
    SetToolTip();

    //// Added By Maninder Singh 
    //// Date 1/28/2014
    //// Function to set tooltip for large numbers.
    function SetToolTip() {
        SetTitleToolTip(".ellipsis");
    }

       @* $('.changes').html('');
        var url = '@Url.Content("~/Model/LoadChangeLog/")';
        $('.changes').load(url + '?objectId=' + $("#ModelId").val());*@
    if ($('#IsBenchmarked').val() == 'True') { benchmark(); }
    else { advanced(); }
    $('#advanced-option').click(function () {
        advanced();
    });

    $('#benchmarked-option').click(function () {
        benchmark();
    });
    $('#dp_start .add-on').click(function () {
        $('#dp_start').datepicker('show');
    })
    function benchmark() {

        $('#inputs-group').hide();
        $('#benchmarked').show();
        $("#IsBenchmarked").val(true);
        $('#benchmarked-option').removeClass('disabled pull-right');
        $('#benchmarked-option').addClass('active pull-right');
        $('#advanced-option').removeClass('active pull-right');
        $('#advanced-option').addClass('disabled pull-right');
    }
    function advanced() {
        $('#advanced-option').removeClass('disabled pull-right');
        $('#advanced-option').addClass('active pull-right');
        $('#benchmarked-option').removeClass('active pull-right');
        $('#benchmarked-option').addClass('disabled pull-right');
        $('#inputs-group').show();
        $('#benchmarked').hide();
        $("#IsBenchmarked").val(false);
    }

    $('.doubleText').priceFormat({ prefix: '', centsSeparator: '', thousandsSeparator: ',', centsLimit: 0 });
    $("#content_wraper").removeClass("span10 all-height").addClass("span10 padding-top40");
    if ($('#IsViewOnly').val() != '') {
        MakeViewOnly(); //Bug 17:Should not be able to edit a published model
        $("#errorMessage").html('<a class="close">×</a> View only permission');
        $("#errorMessage").slideDown(1200);
        $("#errorMessage").slideUp(3000);
    }
    LoadModelData($("#ModelId").val(), $("#_BusinessUnitId").val(), true);
});
$(".subheader").click(function () {
    $(".subheader").removeClass('active');
    $(this).addClass('active');
});
function LoadModelData(modelId, BusinessUnitId, bool) {

    if (modelId == $("#latestModelId").val()) {
        $("#button-save").show();
        $("#btnsave").show();
        MakeEditable();
    }
    else {
        $("#button-save").hide();
        $("#btnsave").hide();
        MakeViewOnly();//Bug 17:Should not be able to edit a published model
    }
    if (modelId == 0) {
        $("#btnsave").show();
        MakeEditable();//Bug 17:Should not be able to edit a published model
    }
    $('#ver_' + modelId).removeClass('disabled pull-right');
    $('#ver_' + modelId).addClass('active pull-right');
    if (lastModelId != null) {
        $('#ver_' + lastModelId).removeClass('active pull-right');
        $('#ver_' + lastModelId).addClass('disabled pull-right');
    }
    lastModelId = modelId;

    $.ajax(
     {
         type: "GET",
         cache: false,
         url: '@Url.Action("GetModelData", "Model")',
         data: { id: modelId },
         dataType: "json",
         success: function (data) {

             if (!$.isEmptyObject(data)) {
                 fillmodel(data, modelId);
                 fillmodelfunnel(data);
                 fillfunnelstage(data);
                 $('.doubleText').priceFormat({ prefix: '', centsSeparator: '', thousandsSeparator: ',', centsLimit: 0 });
                 //if (modelId == $("#latestModelId").val()) {
                 //    //$("#publishModelDisabled").hide();
                 //    //$("#publishModel").show();
                 //    alert(data.Status);
                 //}
                 //else {
                 //    $("#publishModelDisabled").show();
                 //    $("#publishModel").hide();
                 //}
             }
             else {
                 $("#divModelOverview").html('');
                 $("#divcontactInquiry").html('');
                 //$("#divModelOverview").load('LoadModelOverview' + '?title=Title&BusinessUnitId=0&ModelId=0');
                 $("#divModelOverview").load('LoadModelOverview' + '?title=' + encodeURIComponent("Baseline Model") + '&BusinessUnitId=0&ModelId=0');
                 $("#divcontactInquiry").load('LoadContactInquiry' + '?AC=0&MLeads=0&MSize=0&TLeads=0&TSize=0&SLeads=0&SSize=0');
             }
         },
         error: function () {
             GoToLogin();
         }
     });
     $('.changes').html('');
     var url = '@Url.Content("~/Model/LoadChangeLog/")';
     if (modelId > 0) {
         $('.changes').load(url + '?objectId=' + modelId);
     }

 }
 function fillmodel(data, modelId) {
     $.each(data.lstmodellist, function (index, obj) {
         $("#lblTitle").html(obj.Title + '<span class="gray source-sans-prolight">' + obj.Status + '</span>');
         modelStatus = obj.Status;/* changed by Nirav shah for TFS Point :252 editing a published model*/
         _AddressableContract = obj.AddressableContacts;
         if (modelId == $("#latestModelId").val()) {
             if (obj.Status.toString().toLocaleLowerCase() == 'draft') {
                 $("#publishModelDisabled").hide();
                 $("#publishModel").show();
                 $("#publishModel").attr('ModelId', obj.ModelId);
             }
             else {
                 $("#publishModelDisabled").show();
                 $("#publishModel").hide();
                 $("#publishModel").attr('ModelId', '0');
                 @*changed by Nirav Shah on 18 feb 2014 for TFS Point 252: Editing a published model*@
                 //  $("#button-save").hide();
                 // $("#btnsave").hide();
                 //  MakeViewOnly();//Bug 17:Should not be able to edit a published model
             }
         }
         else {
             $("#publishModelDisabled").show();
             $("#publishModel").hide();
             $("#publishModel").attr('ModelId', '0');
         }
         $("#divModelOverview").html('');
         $("#divModelOverview").load('LoadModelOverview' + '?title=' + encodeURIComponent(obj.Title) + '&BusinessUnitId=' + obj.BusinessUnitId + '&ModelId=' + obj.ModelId);
     });
 }
 function fillmodelfunnel(data) {
     var cnt = 1;
     var MExpectedLeadCount;
     var MAverageDealSize;
     var TExpectedLeadCount;
     var TAverageDealSize;
     var SExpectedLeadCount;
     var SAverageDealSize;

     $.each(data.lstmodelfunnelist, function (index, obj) {
         if (cnt == 1) {
             MExpectedLeadCount = obj.ExpectedLeadCount;
             MAverageDealSize = obj.AverageDealSize;
         }
         else if (cnt == 2) {
             TExpectedLeadCount = obj.ExpectedLeadCount;
             TAverageDealSize = obj.AverageDealSize;
         }
         else if (cnt == 3) {
             SExpectedLeadCount = obj.ExpectedLeadCount;
             SAverageDealSize = obj.AverageDealSize;
         }
         cnt = cnt + 1;
     });
     if (MExpectedLeadCount == null || MExpectedLeadCount == 'undefined') {
         MExpectedLeadCount = 0;
     }
     if (MAverageDealSize == null || MAverageDealSize == 'undefined') {
         MAverageDealSize = 0;
     }
     if (TExpectedLeadCount == null || TExpectedLeadCount == 'undefined') {
         TExpectedLeadCount = 0;
     }
     if (TAverageDealSize == null || TAverageDealSize == 'undefined') {
         TAverageDealSize = 0;
     }
     if (SExpectedLeadCount == null || SExpectedLeadCount == 'undefined') {
         SExpectedLeadCount = 0;
     }
     if (SAverageDealSize == null || SAverageDealSize == 'undefined') {
         SAverageDealSize = 0;
     }
     if (_AddressableContract == null || _AddressableContract == 'undefined') {
         _AddressableContract = 0;
     }
     $("#divcontactInquiry").html('');
     $("#divcontactInquiry").load('LoadContactInquiry' + '?AC=' + _AddressableContract + '&MLeads=' + MExpectedLeadCount + "&MSize=" + MAverageDealSize + "&TLeads=" + TExpectedLeadCount + "&TSize=" + TAverageDealSize + "&SLeads=" + SExpectedLeadCount + "&SSize=" + SAverageDealSize);
 }

 function fillfunnelstage(data) {
     var crcnt = 1;
     var cvcnt = 1;
     $.each(data.lstmodelfunnelstagelist, function (index, obj) {
         if (crcnt == 1) {
             if (obj.StageType == "CR") {
                 $("#txtMCR_CR_" + obj.StageId).val(obj.Value);
             }
             else if (obj.StageType == "SV") {
                 crcnt = 2;
                 $("#txtMSV_SV_" + obj.StageId).val(obj.Value);
             }
         }
         if (obj.StageType == "SV" && cvcnt == 1) {
             $("#txtMSV_SV_" + obj.StageId).val(obj.Value);
             crcnt = 2;
         }
         else {
             if (obj.StageType == "CR" && crcnt == 2) {
                 $("#txtTCR_CR_" + obj.StageId).val(obj.Value);
                 cvcnt = 2;
             }
             else if (obj.StageType == "SV" && cvcnt == 2) {
                 crcnt = 3;
                 $("#txtTSV_SV_" + obj.StageId).val(obj.Value);
             }
             else if (obj.StageType == "CR" && crcnt == 3) {
                 $("#txtSCR_CR_" + obj.StageId).val(obj.Value);
                 cvcnt = 3;
             }
             else if (obj.StageType == "SV" && crcnt == 3) {
                 $("#txtSSV_SV_" + obj.StageId).val(obj.Value);
                 cvcnt = 3;
             }
         }
     });
 }

 $("#cancel-button").click(function () {
     $('#DivBackgroundModel').css("display", "none");
     $('#DivPublishModelPopup').css("display", "none");
     return false;
 });
 $('#dp_start .add-on').click(function () {
     $('#dp_start').datepicker('show');
     $('#dp_end').datepicker('hide');

 });
 $('#t_startdate').click(function () {
     $('#dp_end').datepicker('hide');
 })
 $("#Save-publish").click(function () {
     var date = $("#t_startdate").val();
     $("#EffectiveDate").val(date);
     return true;
 });
 $('.dp').datepicker({
     format: "@RevenuePlanner.Helpers.Common.dateFormat",
        autoclose: true,
    }).on('changeDate', function (ev) {
        $(this).datepicker('hide');
    });;
     $(".savebtn").click(function () {

         if ($("#hdnmoelexist").val() == "true") {
             $("#errorMessage").html('<a class="close">×</a><strong>Error!</strong> Model with same Title already exist.')
             $("#errorMessage").slideDown(400);
             $("html, body").animate({ scrollTop: 0 }, 1000);
             return false;
         }
         $("#CurrentModelId").val($("#latestModelId").val());

         if ($('#isPublishButton').val() == 'publish') {
             if ($("#Planflag").val().toLocaleLowerCase() == 'true') {
                 if (confirm($("#PublishedMsg").val())) {
                     $("#whichButton").val('publish');
                     $('#DivBackgroundModel').css("display", "block");
                     $('#DivPublishModelPopup').css("display", "block");
                     var date = $("#EffectiveDate").val();
                     $("#t_startdate").val(date);
                     return false;
                 }
                 else {
                     $('#DivBackgroundModel').css("display", "none");
                     $('#DivPublishModelPopup').css("display", "none");
                     return false;
                 }
             }
             else {
                 $("#whichButton").val('publish');
                 $('#DivBackgroundModel').css("display", "block");
                 $('#DivPublishModelPopup').css("display", "block");
                 var date = $("#EffectiveDate").val();
                 $("#t_startdate").val(date);
                 return false;
             }
         } else if ($(this).attr('id') == 'btnsave') {
             $("#whichButton").val('save');
         @*Added by Nirav Shah on 18 feb 2014 for TFS Point 252: Editing a published model*@
         if (ModelId != 0 && $("#latestModelId").val() != undefined) {
             if (modelStatus.toLocaleLowerCase() != 'draft') {
                 if ($("#publishModelDisabled").hasClass("btn-blue-disable")) {
                     if (confirm($("#ModelPublishEdit").val())) {
                         return true;
                     }
                     else {
                         return false;
                     }
                 }
             }
         }
     }
     else if ($(this).attr('id') == 'button-save') {
         $("#whichButton").val('version');
         @*Added by Nirav Shah on 18 feb 2014 for TFS Point 252: Editing a published model*@
         if (modelStatus.toLocaleLowerCase() != 'draft') {
             if ($("#publishModelDisabled").hasClass("btn-blue-disable")) {
                 if (confirm($("#ModelPublishCreateNew").val())) {
                     return true;
                 }
                 else {
                     return false;
                 }
             }
         }
     }
     else {
         $("#whichButton").val('');
     }
     needAlert = false;

     $('.nl-field').each(function () {

         if ($(this).next().attr('datadefault') == "Title") {
             $(this).children('a').attr('id', 'lnkTitle');
             var tValue = $(this).children('a').text();
             if (tValue == '' || tValue == "Baseline Model") {
                 $(this).children('a').addClass("error-form");
                 needAlert = true;
             }
             else {
                 $(this).children('a').removeClass("error-form");
             }
             if ($("#Title").val() == '' || $("#Title").val() == "Baseline Model") {
                 $(this).children('a').addClass("error-form");
                 needAlert = true;
             }
             else {
                 $(this).children('a').removeClass("error-form");
             }
         }
         else if ($(this).next().attr('datadefault') == "AddressableContract") {
             var tValue = $(this).children('a').text();
             if (tValue == '' || tValue == '0') {
                 $(this).children('a').addClass("error-form");
                 needAlert = true;
             }
             else {
                 $(this).children('a').removeClass("error-form");
             }
             //Manoj : 31Jan2014 - to resolve the issue in nlForm editing: it makes 0 when we click on pop-up
             if ($("#AddressableContract").val() == '' || $("#AddressableContract").val() == "0") {
                 $(this).children('a').addClass("error-form");
                 needAlert = true;
             }
             else {
                 $(this).children('a').removeClass("error-form");
             }
         }
         else if ($(this).next().attr('datadefault') == "ML") {
             var tValue = $(this).children('a').text();
             if (tValue == '' || tValue == '0') {
                 $(this).children('a').addClass("error-form");
                 needAlert = true;
             }
             else {
                 $(this).children('a').removeClass("error-form");
             }
             //Manoj : 31Jan2014 - to resolve the issue in nlForm editing: it makes 0 when we click on pop-up
             if ($("#MarketingLeads").val() == '' || $("#MarketingLeads").val() == "0") {
                 $(this).children('a').addClass("error-form");
                 needAlert = true;
             }
             else {
                 $(this).children('a').removeClass("error-form");
             }
         }
         else if ($(this).next().attr('datadefault') == "MS") {
             var tValue = $(this).children('a').text();
             if (tValue == '' || tValue == '0' || tValue == '$0' || tValue == '$') {
                 $(this).children('a').addClass("error-form");
                 needAlert = true;
             }
             else {
                 $(this).children('a').removeClass("error-form");
             }
             //Manoj : 31Jan2014 - to resolve the issue in nlForm editing: it makes 0 when we click on pop-up
             if ($("#MarketingDealSize").val() == '' || $("#MarketingDealSize").val() == "0") {
                 $(this).children('a').addClass("error-form");
                 needAlert = true;
             }
             else {
                 $(this).children('a').removeClass("error-form");
             }
         }
     });
     if (needAlert == true) {
         $("#errorMessage").html('<a class="close">×</a><strong>Error!</strong> ' + $("#ValidateForEmptyField").val())
         $("#errorMessage").slideDown(400);
         $("html, body").animate({ scrollTop: 0 }, 1000); // added by juned to slide up the page on error.
         return false;
     }
     else {
         $("#errorMessage").slideUp(400);
     }
     var bln = 0;
     $('.doubleTextPerc').each(function () {
         if ($(this).val() != '' && $(this).val() > 100) {
             $(this).css('borderColor', '#C6605A');
             $(this).css('background-color', '#F1DBDE');
             bln = 1;
         }
         else {
             $(this).css('borderColor', '#CCCCCC');
             $(this).css('background-color', '#FFFFFF');
         }
     });
     if (bln == 1) {
         $("#errorMessage").html('<a class="close">×</a><strong>Error!</strong> ' + $("#ValidateForEmptyField").val())
         $("#errorMessage").slideDown(400);
         return false;
     }
         @*if ($("#CurrentModelId").val() == '' || $("#CurrentModelId").val() == '0') {
             $.ajax(
            {
                type: "GET",
                cache: false,
                url: '@Url.Content("~/Model/CheckDuplicateModelTitle")',
               data: { Title: encodeURIComponent($("#Title").val()), BusinessUnitId: $("#BusinessUnitId").val() },
               dataType: "json",
               success: function (data) {
                   if (data == 'exist') {
                       $("#errorMessage").html('<a class="close">×</a><strong>Error!</strong> Model with same Title already exist.')
                       $("#errorMessage").slideDown(400);
                       return false;
                   }
                   else {
                       return true;
                   }
               },
               error: function () {
                   $("#errorMessage").html('<a class="close">×</a><strong>Error!</strong> ' + $("#ErrorOccured").val())
                   $("#errorMessage").slideDown(400);
                   return false;
               }
           });
       }*@
 });

    $(".doubleText").keyup(function (event) {
        var $this = $(this);
        $this.val($this.val().replace(/[^\d.]/g, ''));
    });
    $(".doubleTextPerc").keyup(function (event) {
        var $this = $(this);
        $this.val($this.val().replace(/[^\d.]/g, ''));
        if ($this.val() > 100) {
            $(this).css('borderColor', '#C6605A');
            $(this).css('background-color', '#F1DBDE');
        }
        else {
            $(this).css('borderColor', '#CCCCCC');
            $(this).css('background-color', '#FFFFFF');
        }
    });

    //// Added By Maninder Singh Wadhva to address TFS Bug#239
    var ismsg = $("#hdnMsg").val();
    $("#publishModel").click(function () {
        $('#isPublishButton').val('publish');
        $('#btnsave').click();
        $('#isPublishButton').val('');
    });


    // function added to handle the click event of NaturalLanguageForm dropdown to check for duplicate model
    function onClickActivity() {
        $('#nl-form > div[class="nl-field nl-dd"]').find('li').click(function (e) {
            var Title = $(this).text();
            var option = $.grep($('#BusinessUnitId option'), function (value) { return $(value).text() == Title; })
            $.ajax(
            {
                type: "GET",
                cache: false,
                url: '@Url.Content("~/Model/CheckDuplicateModelTitle")',
                data: { Title: encodeURIComponent($("#lnkTitle").html().trim()), BusinessUnitId: $(option[0]).val() },
                dataType: "json",
                success: function (data) {
                    if (data == 'exist') {
                        $("#hdnmoelexist").val("true");
                    }
                    else {
                        $("#hdnmoelexist").val("false");
                    }
                }
            });
        });
    
    }
</script>

