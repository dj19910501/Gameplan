@model RevenuePlanner.Models.BaselineModel
@using RevenuePlanner.Models
@using RevenuePlanner.Helpers
@{
    ViewBag.Title = "Integrations";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string modelId = Convert.ToString(ViewBag.ModelId);
    ViewBag.ModelIdPartial = ViewBag.ModelId;//Added by Mitesh Vaishnav on 11/07/2014 for functional review point 49
    ViewBag.PageTitle = "Integration";//Added by Mitesh Vaishnav on 11/07/2014 for functional review point 49
    ViewBag.PageChildTitle = "IntegrationSelection";
    string ModelStatus = Convert.ToString(ViewBag.ModelStatus);
    string ModelTitle = Convert.ToString(ViewBag.ModelTitle);
    int LatestModelID = Convert.ToInt32(ViewBag.LatestModelID);
    string message = TempData["SuccessMessageIntegration"] == null ? "" : TempData["SuccessMessageIntegration"].ToString();
    string PublishedMsg = ViewBag.ModelPublishComfirmation;
    @Html.Hidden("PublishedMsg", PublishedMsg);
    bool PublisheStatus = ViewBag.Flag;
    @Html.Hidden("PublisheStatus", PublisheStatus);
    var currentdate = System.DateTime.Today.ToShortDateString();
    string IsOwner = Convert.ToString(ViewBag.IsOwner);
    @Html.Hidden("IsOwner", IsOwner);
}
@section Sidebar
{
    @Html.Partial("~/Views/Model/_model.cshtml")
}
@*Start- Added by Viral Kadiya on 11/19/2014 to implement Internal Review Points.*@
<style type="text/css">
    .inputs-aligned-horizontal .selectBox .sbSelector {
        font-size: 11.9px !important;
    }

    .publishmdl, .datepicker{
        z-index: 2005 !important;
    }
    
</style>
@*End- Added by Viral Kadiya on 11/19/2014 to implement Internal Review Points.*@
@Html.Hidden("hdnMsg", (string)TempData["ErrorMessage"], new { id = "hdnMsg" })
<!--success message-->
<div id="successMessage" class="alert hide alert-success message-position">
    <a class="close">×</a>
    <div id="cSuccess">@Html.Raw(HttpUtility.HtmlDecode((string)TempData["SuccessMessage"]))</div>
</div>
<div id="errorMessage" class="alert alert-error hide message-position">
    <a class="close">×</a>
    <div id="cError">@Html.Raw(HttpUtility.HtmlDecode((string)TempData["ErrorMessage"]))</div>
</div>

@Html.HiddenFor(model => ModelStatus, new { id = "hdnStatus" })
@Html.Hidden("EffectiveDate", currentdate)
<div id="DivBackgroundModel" class="modal-backdrop fade in" style="z-index: 2000; display: none;"></div>
<div id="DivNoIntegrationModelPopup" class="form-inspect-share hide fade in" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="display: none; height: 220px; z-index: 1502;">
    <h2 class="primary-title source-sans-prosemibold">No Integration Exists</h2>
    <p class="source-sans-prosemi" style="font-weight: normal; color: #FFFFFF; font-size: 17px; margin-bottom: 40px;">
        Gameplan syncs activities to existing external automation systems via API integration. To utilize this ability, you must add an integration.
    </p>
    <div style="width: 100%; margin: 0px auto;">
        <button class="form-inspect-share-button btn btn-large" id="Add-Integration" value="Submit" style="margin-top: 0px !important; margin-right: 10px; width: 80px;">Add Integration</button>
        &nbsp;
        <button class="btn-link" id="integration-cancel-button" type="button" style="margin-top: 0px !important; width: 80px; line-height: 41px;">Cancel</button>
    </div>
</div>
@Html.Partial("~/Views/Model/_publishmodel.cshtml")
<div class="padding-content cf source-sans-proregular">
    <ul class="nav nav-tabs" style="margin-bottom: 20px; padding-bottom: 10px;">
        <input type="hidden" value="@ViewBag.ModelId" id="latestModelId" />
        <li class="title-header source-sans-proregular" title="@ViewBag.ModelTitle">
            <h2 id="lblTitle">@ViewBag.ModelTitle <span class="gray source-sans-prolight" title="Published">@ViewBag.ModelStatus</span></h2>
        </li>
    </ul>
    <div class="row">
        @Html.Partial("~/Views/Model/_modelIntegration.cshtml")

        <div class="span10 content-colum-info-user">
            @using (Html.BeginForm("SaveIntegration", "Model", new { id = @modelId }, FormMethod.Post))
            {
                <h4 style="display: block; margin-left: 180px; margin-bottom: 20px;">Instance Selection</h4> 
                <div class="cf inputs-aligned-horizontal">
                    <label>Push Tactic Data</label>

                    <div class="selectBox" id="ddlIntegrationInstance">
                        @Html.DropDownListFor(model => model.IntegrationInstanceId, new SelectList((System.Collections.IEnumerable)ViewData["IntegrationInstances"], "InstanceId", "InstanceName"), "None", new { @class = "hide" })
                    </div>

                </div>
                <div class="cf inputs-aligned-horizontal">
                    <label>Pull Responses</label>

                    <div class="selectBox" id="ddlIntegrationInstanceINQ">
                        @Html.DropDownListFor(model => model.IntegrationInstanceIdINQ, new SelectList((System.Collections.IEnumerable)ViewData["IntegrationInstances"], "InstanceId", "InstanceName"), "None", new { @class = "hide" })
                    </div>

                </div>
                <div class="cf inputs-aligned-horizontal">
                    <label>Pull Qualified Leads</label>

                    <div class="selectBox" id="ddlIntegrationInstanceMQL">
                        @Html.DropDownListFor(model => model.IntegrationInstanceIdMQL, new SelectList((System.Collections.IEnumerable)ViewData["MQLFilteredEloquaIntegrationInstances"], "InstanceId", "InstanceName"), "None", new { @class = "hide" })
                    </div>

                </div>
                <div class="cf inputs-aligned-horizontal">
                    <label>Pull Closed Deals</label>

                    <div class="selectBox" id="ddlIntegrationInstanceCW">
                        @Html.DropDownListFor(model => model.IntegrationInstanceIdCW, new SelectList((System.Collections.IEnumerable)ViewData["IntegrationInstancesSalesforce"], "InstanceId", "InstanceName"), "None", new { @class = "hide" })
                    </div>

                </div>                
                <div class="cf inputs-aligned-horizontal">
                    <div>
                        <input id="btnSubmit" type="button" value="Save" title="save" class="btn btn-blue btn-save text-shadow-blue source-sans-proregular" style="margin-left: 179px; float: left; margin-right: 30px;" />
                        <button id="btnCancel" class="close-form btn-link source-sans-proregular" style="padding-top: 8px; color: #999999; text-decoration: underline;" type="button" tabindex="12">Cancel</button>
                    </div>
                </div>               
            }
        </div>

        @if ((bool)ViewBag.IsIntegrationCredentialCreateEditAuthorized)   // Added by Sohel Pathan on 19/06/2014 for PL ticket #519 to implement user permission Logic    
        {
            <p class="small-content source-sans-prolight" style="clear: both;">Manage integration instances in <a href="@Url.Action("Index", "ExternalService")" style="text-decoration:underline;">Preferences > Integrations.</a></p>
        }
    </div>

</div>
@Html.Partial("~/Views/Model/_DuplicateModel.cshtml")
<script type="text/javascript">
    var lastModelId = '@modelId';
    $(document).ready(function () {

        if ('@message' != null && '@message' != '') {
            var msgspan = '@message';
            $('#cSuccess').html('<strong>Success!</strong> ' + $('#cSuccess').html())
            $("#cSuccess").text(msgspan);
            $("#successMessage").slideDown(600);
        }
        $("#btnCancel").click(function () {
            // window.location.reload(true);   // Modified by Viral Kadiya on 11/19/2014 to implement cancel event.
            var url = '@Url.Content("~/Model/IntegrationSelection")';
            var queryStringArr = [];
            queryStringArr.push(
                    {
                        key: 'id',
                        Value: lastModelId
                    });
            formSubmitEvent(url, queryStringArr);
        });

        $('#dp_start .add-on').click(function () {
            $('#dp_start').datepicker('show');
        });

        $('#btnSubmit').click(function () {
            /*Modified by Mitesh vaishnav on 13/08/2014 for PL ticket #690*/
            /*Check for Integration instanse of pushing tactic data is changed than confirm process*/
            if ('@Model.IntegrationInstanceId.ToString()' == $('#IntegrationInstanceId').val() || '@Model.IntegrationInstanceId' == null || '@Model.IntegrationInstanceId' == '') {
                SaveIntegration(false);
            }
            else {
                var confirmMessage = confirm('@Common.objCached.ConfirmationForModifyTargetIntegration');
                if (confirmMessage == true) {
                    SaveIntegration(true);
                }
            }

            return false;
        });

        function SaveIntegration(IsIntegrationChanged) {
            var modelId = parseInt('@modelId');
            var ajaxData = $("form").serialize() + "&id=" + modelId;

            if (IsIntegrationChanged) {
                ajaxData = ajaxData + "&IsIntegrationChanged=" + true;
            }

            $.ajax({
                url: '@Url.Content("~/Model/SaveIntegration")',
                data: ajaxData,
                success: function (data) {
                    var queryStringArr = [];
                    var url = '@Url.Content("~/Model/IntegrationSelection")';
                    queryStringArr.push(
                        {
                            key: 'id',
                            Value: data.Id
                        });
                    formSubmitEvent(url, queryStringArr);
                   @* window.location = '@Url.Content("~/Model/IntegrationSelection?id=")' + data.Id;*@
                }
            });
            }

        var ismsg = $("#hdnMsg").val();
        if ($('#cSuccess').html() != '') {
            $('#cSuccess').html('<strong>Success!</strong> ' + $('#cSuccess').html())
            $("#successMessage").slideDown(1200);
        }
        if ($('#cError').html() != '') {
            $("#errorMessage").slideDown(1200);
        }
        $("#content_wraper").removeClass("span10 all-height").addClass("span10 padding-top40");
        $(".selectBox select").selectbox();
        $('#DivBackgroundModel').css("display", "none");
        $('#DivPublishModelPopup').css("display", "none");
        $('#DivNoIntegrationModelPopup').css("display", "none");
        $('#NewModel').click(function (e) {
            window.location.href = "@Url.Action("Create", "Model")";
        });

        if ('@ModelStatus' == "Draft" && ('@IsOwner.ToString().ToLower()' == 'true' || ('@Convert.ToString(ViewBag.IsAuthorized)'.toLowerCase() == "true"))) {
            $("#publish").removeClass('btn-blue-disable');
            $("#publish").addClass('btn-blue');
        }

        $('#publish').click(function (e) {
            if ('@LatestModelID' == lastModelId && '@ModelStatus' == "Draft") {
                if ($('#PublisheStatus').val().toLocaleLowerCase() == 'true') {
                    if (confirm($("#PublishedMsg").val())) {
                        $('#DivBackgroundModel').css("display", "block");
                        $('#DivPublishModelPopup').css("display", "block");
                        var date = $("#EffectiveDate").val();
                        $("#t_startdate").val(date);
                        return false;
                    }
                    else {
                        $('#DivBackgroundModel').css("display", "none");
                        $('#DivPublishModelPopup').css("display", "none");
                        return false;
                    }
                }
                else {
                    $('#DivBackgroundModel').css("display", "block");
                    $('#DivPublishModelPopup').css("display", "block");
                    var date = $("#EffectiveDate").val();
                    $("#t_startdate").val(date);
                    return false;
                }
            }
            else {
                $('#DivBackgroundModel').css("display", "none");
                $('#DivPublishModelPopup').css("display", "none");
                return false;
            }
        });
        $("#cancel-button").click(function () {
            $('#DivBackgroundModel').css("display", "none");
            $('#DivPublishModelPopup').css("display", "none");
            return false;
        });

        $("#Save-publish").click(function () {
            var date = $("#t_startdate").val();
            $("#EffectiveDate").val(date);
            publishModel();
            return true;
        });
        $('#BtnGroup').click(function (e) {
            if ($(this).html().toLowerCase() == "duplicate") {

                $.ajax({
                    type: 'POST',
                    url: '@Url.Content("~/Model/GetDefaultDuplicateModelName/")',
                    data: { modelId: '@LatestModelID' },
                    dataType: "json",
                    success: function (data) {
                        if (data.status == 1) {
                            $("#copymodeldesc").val(htmlDecode(data.msg));
                            $("#original").text(htmlDecode(data.name));
                            $("#errorMessagecopy").css("display", "none");
                            $("#copymodeldesc").removeClass("error");
                            $('#DivPartialShareModelDuplicate').show();
                        }
                        else {
                            $("#cError").html('<strong>Error! </strong>' + data.msg)
                            $("#errorMessage").slideDown(400);
                            $("html, body").animate({ scrollTop: 0 }, 1000);
                        }
                    }
                });
            }
            else {
                var url = '@Url.Content("~/Model/CreateModel")';
                formSubmitEvent(url);
                //window.location.href = url;
            }
        });
        $('#copymodelbtn').click(function () {
            $(".copymodeldesc").removeClass("error");
            var flag = 0;

            if ($("#copymodeldesc").val() == "") {
                $("#copymodeldesc").addClass("error");
                flag = 1;
            }

            if (flag == 1) {
                var msgspan = "@Common.objCached.ValidateEnteredField";
                $("#errorMessagecopy").css("display", "block");
                $("#spanErrorMessageModelcopy").text(msgspan);
            } else {

                var titleName = htmlEncode($("#copymodeldesc").val().trim());
                $.ajax(
                {
                    type: "GET",
                    cache: false,
                    url: '@Url.Content("~/Model/CheckDuplicateModelTitle")',
                    data: { Title: titleName },
                    dataType: "json",
                    success: function (data) {
                        if (data == 'exist') {
                            var msgspan = "@Common.objCached.ModelAlreadyExits";
                            $("#errorMessagecopy").css("display", "block");
                            $("#spanErrorMessageModelcopy").text(msgspan);
                        }
                        else {
                            $('#DivPartialShareModelDuplicate').hide();
                            DuplicateModel();
                        }
                    }
                });
            }
            return false;
        });
        $('#cancelbtncopy').click(function () {
            $('#DivPartialShareModelDuplicate').hide();
        });

    });
    /*Function for make model status published*/
    function publishModel() {

        var ModelId = '@modelId';

            $.ajax({
                type: 'POST',
                url: '@Url.Content("~/Model/ModelPublish/")',
                data: 'ModelId=' + ModelId + '&EffectiveDate=' + $("#EffectiveDate").val(),
                success: function (data) {
                    if (data.errorMessage != undefined) {
                        url = '@Url.Content("~/Model/IntegrationSelection")';
                        var queryStringArr = [];
                        queryStringArr.push(
                            {
                                key: 'id',
                                Value: ModelId
                            });
                        formSubmitEvent(url, queryStringArr);
                        //window.location.href = url + '?id=' + ModelId;
                }
                else {
                    url = '@Url.Content("~/Model/ModelZero")';
                    window.location.href = url;
                }
            }
            });

    }
    /*Function for create duplicate model*/
    function DuplicateModel() {
        var titleName = htmlEncode($("#copymodeldesc").val().trim());

        $.ajax({
            type: 'POST',
            url: '@Url.Content("~/Model/DuplicateModel/")',
            data: { modelId: '@LatestModelID', title: titleName },
            dataType: "json",
            success: function (data) {
                if (data.status == 1) {
                    var url = '@Url.Content("~/Model/ModelZero")';
                    window.location.href = url;
                }
                else {
                    $("#cError").html('<strong>Error! </strong>' + data.msg)
                    $("#errorMessage").slideDown(400);
                    $("html, body").animate({ scrollTop: 0 }, 1000);
                }
            }
        });
    }
</script>

