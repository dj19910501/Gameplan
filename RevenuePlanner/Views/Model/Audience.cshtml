@model RevenuePlanner.Models.AudiencePlanModel
@{
    ViewBag.Title = "Model-Audience";
    string activeMenu = Convert.ToString(ViewBag.ActiveMenu);
    Layout = "~/Views/Shared/_Layout.cshtml";
    string isViewOnly = ViewBag.IsViewOnly;
    string strValidateForValidField = RevenuePlanner.Helpers.Common.objCached.ValidateForValidField;
    string ShowModelResultsTab = Convert.ToString(System.Configuration.ConfigurationManager.AppSettings["ShowModelResultsTab"]);
    bool flag = ViewBag.Flag;
    string PublishedMsg = ViewBag.ModelPublishComfirmation;
    @Html.Hidden("PublishedMsg", PublishedMsg);
    @Html.Hidden("Planflag", flag);
                                  var currentdate = System.DateTime.Today.ToShortDateString();
}

@{
    bool IsBenchmarked = ViewBag.IsBenchmarked;
    int MID = ViewBag.MId;
}
@section nlFormContent{
    <link rel="stylesheet" href="@Url.Content("~/Content/css/NaturalLanguageForm/default.css")" type="text/css" />
    <link rel="stylesheet" href="@Url.Content("~/Content/css/NaturalLanguageForm/component.css")" type="text/css" />
    <script type="text/javascript" src="@Url.Content("~/Scripts/js/NaturalLanguageForm/modernizr.custom.js")"></script>
}

@Html.Hidden("ActiveMenu", activeMenu)
@Html.Hidden("TempDataErrorMsg", ((string)TempData["ErrorMessage"]))
@section Sidebar
{
    <div class="padding-content padding-bottom0">
        <h4 class="text-shadow-black source-sans-prolight">Model Summary</h4>
        <div class="wraper-btns cf">
            <div class="span6">
                <button id="newModel" class="btn btn-blue text-shadow-blue source-sans-proregular" type="button" href="@Url.Content("~/Model/Create")">New Model</button>
            </div>
            <div class="span6">
                <button id="btnpublish" class="btn btn-blue-disable text-shadow-blue source-sans-proregular" type="button">Publish</button>
            </div>
        </div>
    </div>

    <ul class="nav nav-list nav-gray">
        <li class="item">
            <a class="source-sans-probold inputs leftnav" id="aInputs" href="#"><span></span>INPUTS</a>
        </li>
        <li class="item  active">
            <a class="source-sans-probold audience leftnav" href="#"><span></span>AUDIENCE</a>
        </li>
        <li class="item">
            <a class="source-sans-probold tactics leftnav" id="aTactics" href="#"><span></span>TACTICS</a>
        </li>
        @if (ShowModelResultsTab == null || ShowModelResultsTab == "" || ShowModelResultsTab.ToLower() == "true")
        {
            <li class="item">
                <a class="source-sans-probold result leftnav" id="aResults" href="#"><span></span>RESULTS</a>
            </li>
        }

    </ul>
    <ul class="nav nav-list nav-gray-plan">
        <li id="change-log" class="nav-header">
            <span>Change Log</span>
            <div class="changes"></div>
        </li>
    </ul>

}
@using (Html.BeginForm())
{  
    @Html.Hidden("ValidateForValidField", @strValidateForValidField)
    @Html.Hidden("hdnAllQUsableDatabaseTotal", "0")
    @Html.Hidden("hdnAllQCumulativeListTotal", "0")
    @Html.Hidden("hdnMsg", (string)ViewBag.Msg, new { id = "hdnMsg" })
    <!--success message-->
    <div id="successMessage" class="alert hide alert-success message-position">
        <a class="close">×</a>

        <div id="cSuccess">@Html.Raw(HttpUtility.HtmlDecode((string)TempData["SuccessMessage"]))</div>
    </div>
    <!--success message-->

    <!--Error message-->
    <div id="errorMessage" class="alert alert-error hide message-position">
        <a class="close" id="aclose">×</a>
        <strong>Error!</strong> Make sure all fields are filled and try again.
    </div>
    <!--Error message-->
    <div id="DivBackgroundModel" class="modal-backdrop fade in" style="z-index: 1501; display: None;"></div>
    <div id="DivPublishModelPopup" class="form-inspect-share hide fade in" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="display: None; height: 205px; z-index: 1502;">
        <h2 class="primary-title source-sans-prosemibold">Select effective date</h2>
        <div class="dp datepicker input-append date  calendar-width" id="dp_start" data-date="today();" data-date-format="@RevenuePlanner.Helpers.Common.dateFormat">
            <input id="t_startdate" class="black-border-right font-size13 height30px" style="background-color: #ffffff; border-color: #f3f3f3; color: #000000; width: 240px; margin-top: 0px; border-radius: 4px;" size="16" type="text">
            <span class="add-on height30" style="border-radius: 4px;">
                <img src="~/Content/images/gray-calendar-icon.png"></span>
        </div>
        <div style="width: 100%; margin: 0px auto;">
            <button class="form-inspect-share-button btn btn-large" id="Save-publish" value="Submit" style="margin-top: 0px !important; margin-right: 10px; width: 80px;">Save</button>
            &nbsp;
        <button class="btn-link" id="cancel-button" type="button" style="margin-top: 0px !important; width: 80px; line-height: 41px;">Cancel</button>
        </div>
    </div>
    <ul class="nav nav-tabs">
        @if (Model != null)
        {
            if (Model.Versions != null)
            {
                int latestModelId = 0;
                foreach (RevenuePlanner.Models.ModelVersion v in Model.Versions)
                {
                    if (v.IsLatest)
                    {
                        latestModelId = v.ModelId;
            <input type="hidden" value="@v.ModelId" id="latestModelId" runat="server" />
            <li class="title-header source-sans-proregular" title="@v.Title">
                <h2>@v.Title <span id="spnstatus" class="gray source-sans-prolight" title="@v.Status">@v.Status</span></h2>

            </li>
            <li id="ver_@v.ModelId" class="active pull-right" title="@v.Version">
                <a href="@Url.Action("Audience", "Model", new { id = latestModelId, modelvid = v.ModelId })">@Html.Raw("v")@v.Version</a>
            </li>
            
                    }
                    else
                    {
                   
            <li id="ver_@v.ModelId" class="disabled pull-right" title="@v.Version">
                <a href="@Url.Action("Audience", "Model", new { id = latestModelId, modelvid = v.ModelId })" id="aherfversionclick">@Html.Raw("v")@v.Version</a>


            </li>
                    }
                }
                if (Model.Versions.Count == 1)
                {
            <li class="disabled pull-right">
                <a href="#">No Saved Versions</a>
            </li>
                }
                if (Model.Versions.Count == 0)
                {
            <li class="title-header source-sans-proregular" title="Title">
                <h2>@Html.Raw("Title") <span class="gray source-sans-prolight" title="DRAFT">@Html.Raw("DRAFT")</span></h2>
            </li>
            <li class="active pull-right" title="1.0">
                <a href="#">@Html.Raw("v")1.0</a>
            </li>
            <li class="disabled pull-right">
                <a href="#">@Html.Raw("No Saved Versions")</a>
            </li>
                }
            }
        }
    </ul>


    <div class="padding-content cf source-sans-proregular">
        <div class="row">
            <div class="span2 content-colum-left">
                <div class="padding-right70">
                    <p>
                        Create your organization's audience acquisition<br />
                        plan across multiple channels.
                    </p>
                    <ul class="nav nav-pills nav-stacked nav-colum-bar">
                        <li class="subheader active">
                            <a href="#BookmarkAudiencePlanningOverview">1. Audience Planning Overview</a>
                        </li>
                        <li class="subheader"><a href="#BookmarkOutbound">2. Outbound</a></li>
                        <li class="subheader"><a href="#BookmarkInbound">3. Inbound</a></li>
                        <li class="subheader"><a href="#BookmarkEvents">4. Events</a></li>
                        <li class="subheader"><a href="#BookmarkSummary">5. Summary</a></li>
                    </ul>
                </div>
            </div>

            <div class="span10 content-colum-right">
                <ul id="sub_nav_tabs" class="nav nav-tabs">

                    <li class="title-header source-sans-proregular">
                        <h2 id="BookmarkAudiencePlanningOverview">1. Audience Planning Overview</h2>
                    </li>
                    <li id="benchmarked-option" class="disabled pull-right">
                        <a href="#">Benchmarked</a>
                    </li>
                    <li id="advanced-option" class="active pull-right">
                        <a href="#">Advanced</a>
                    </li>
                </ul>
                <div class="tab-content">
                    <div class="tab-pane" id="benchmarked">
                        <p>
                            @Html.Raw("Click continue to populate your baseline model with benchmarked channel values for your audience acquisition plan. Add your organization's custom values in the Advanced tab.")
                        </p>
                    </div>
                    <div class="tab-pane" id="advanced">
                        <p>
                            @Html.Raw("Add your organization's unique values audience planning across multiple channels.")
                        </p>
                    </div>
                    <div id="nl-form" class="nl-form">
                        My database shrinks  quarterly by
										@Html.TextBoxFor(model => model.NormalErosion, new { placeholder = @Model.NormalErosion, datasubline = "For example: <em>1.5</em> or <em>3.1</em>", text = "NormalErosion", datadefault = "NormalErosion", formattype = "percentValue", maxlength = "6" })
                        from normal erosion and 
										@Html.TextBoxFor(model => model.UnsubscribeRate, new { placeholder = @Model.UnsubscribeRate, datasubline = "For example: <em>1.5</em> or <em>3.1</em>", text = "UnsubscribeRate", datadefault = "UnsubscribeRate", formattype = "percentValue", maxlength = "6" })
                        from unsubscribes.
										<br />
                        My delivered click through rate is
										@Html.TextBoxFor(model => model.CTRDelivered, new { placeholder = @Model.CTRDelivered, datasubline = "For example: <em>1.5</em> or <em>3.1</em>", text = "CTRDelivered", datadefault = "CTRDelivered", formattype = "percentValue", maxlength = "6" })
                        and registration rate is
                            <br />
                        @Html.TextBoxFor(model => model.RegistrationRate, new { placeholder = @Model.RegistrationRate, datasubline = "For example: <em>100</em> or <em>50</em>", text = "RegistrationRate", datadefault = "RegistrationRate", formattype = "percentValue", maxlength = "6" }).	 																			
									    <div class="nl-overlay"></div>
                    </div>


                    <div class="tab-pane active">
                        <!--To call js for forms animations-->
                        <script type="text/javascript" src="@Url.Content("~/Scripts/js/NaturalLanguageForm/nlform.js")"></script>
                        <script>
                            var nlform = new NLForm(document.getElementById('nl-form'));
                        </script>
                        <script>
                            var nlform2 = new NLForm(document.getElementById('nl-form2'));
                        </script>
                        <div id="inputs-group">
                            <!--Inbound block-->
                            <h2 id="BookmarkOutbound" class="sub-title-forms-margin source-sans-proregular">2. Outbound</h2>
                            <div class="table-wrapper cf">
                                <div class="table-main-column">
                                    <h5>CAMPAIGN DRIVEN</h5>
                                    <p class="source-sans-prolight">Usable Database</p>
                                    <p class="source-sans-prolight">Normal Erosion</p>
                                    <p class="source-sans-prolight">Unsubscribe Rate</p>
                                    <p class="source-sans-prolight">Number of Touches</p>
                                    <p class="source-sans-prolight">CTR Delivered</p>
                                    <p class="source-sans-prolight">Registration Rate</p>
                                    <h6 class="conv_helveticaltstd-light">Modeled Outbound<br />
                                        Unpaid Inquiries</h6>
                                </div>
                                <div class="regular-column-wrapper">
                                    <div class="table-regular-column">
                                        <h6 class="conv_helveticaltstd-light">Q1</h6>
                                        @* <input id="Q1UsableDatabase" class="gray-input" type="text" disabled="disabled" />*@
                                        @Html.TextBoxFor(model => model.Q1UsableDatabase, new { disabled = "disabled", @class = "gray-input" })
                                        <div class="input-append">
                                            @* <input id="Q1NormalErosion" type="text" placeholder="0" required value="3.0">*@
                                            @Html.TextBoxFor(model => model.Q1NormalErosion, new { placeholder = "0", required = "", @class = "doubleText doubleTextPerc", tabindex = "1", maxlength = "5" })
                                            <span class="add-on">%</span>
                                        </div>
                                        <div class="input-append">
                                            @* <input id="Q1UnsubscribeRate" type="text" placeholder="0" required value="1.5">*@
                                            @Html.TextBoxFor(model => model.Q1UnsubscribeRate, new { placeholder = "0", required = "", @class = "doubleText doubleTextPerc", tabindex = "2", maxlength = "5" })
                                            <span class="add-on">%</span>
                                        </div>
                                        @Html.TextBoxFor(model => model.NumberOfTouchesQ1, new { placeholder = "0", required = "", @class = "pricevalue", tabindex = "3" })
                                        <div class="input-append">
                                            @*<input id="Q1CTRDelivered" type="text" placeholder="0" required value="1.2">*@
                                            @Html.TextBoxFor(model => model.Q1CTRDelivered, new { placeholder = "0", required = "", @class = "doubleText doubleTextPerc", tabindex = "7", maxlength = "5" })
                                            <span class="add-on">%</span>
                                        </div>
                                        <div class="input-append">
                                            @*<input id="Q1RegistrationRate" type="text" placeholder="0" required>*@
                                            @Html.TextBoxFor(model => model.Q1RegistrationRate, new { placeholder = "0", required = "", @class = "doubleText doubleTextPerc", tabindex = "8", maxlength = "5" })
                                            <span class="add-on">%</span>
                                        </div>
                                        <input id="Q1ModeledOutboundUnpaidInquiries" type="text" class="gray-input twodigit" disabled="disabled" />
                                    </div>
                                    <div class="table-regular-column">
                                        <h6 class="conv_helveticaltstd-light">Q2</h6>
                                        <input id="Q2UsableDatabase" class="gray-input twodigit" disabled="disabled" type="text" />
                                        <input id="Q2NormalErosion" type="text" class="gray-input twodigit" disabled="disabled" />
                                        <input id="Q2UnsubscribeRate" type="text" class="gray-input twodigit" disabled="disabled" />

                                        @Html.TextBoxFor(model => model.NumberOfTouchesQ2, new { placeholder = "0", required = "", @class = "pricevalue", tabindex = "4" })
                                        <input id="Q2CTRDelivered" class="gray-input twodigit" disabled="disabled" type="text" />
                                        <input id="Q2RegistrationRate" type="text" class="gray-input twodigit" disabled="disabled" />
                                        <input id="Q2ModeledOutboundUnpaidInquiries" type="text" class="gray-input twodigit" disabled="disabled" />
                                    </div>
                                    <div class="table-regular-column">
                                        <h6 class="conv_helveticaltstd-light">Q3</h6>
                                        <input id="Q3UsableDatabase" type="text" class="gray-input twodigit" disabled="disabled" />
                                        <input id="Q3NormalErosion" type="text" class="gray-input twodigit" disabled="disabled" />
                                        <input id="Q3UnsubscribeRate" type="text" class="gray-input twodigit" disabled="disabled" />
                                        @Html.TextBoxFor(model => model.NumberOfTouchesQ3, new { placeholder = "0", required = "", @class = "pricevalue", tabindex = "5" })
                                        <input id="Q3CTRDelivered" type="text" class="gray-input twodigit" disabled="disabled" />
                                        <input id="Q3RegistrationRate" type="text" class="gray-input twodigit" disabled="disabled" />
                                        <input id="Q3ModeledOutboundUnpaidInquiries" type="text" class="gray-input twodigit" disabled="disabled" />
                                    </div>
                                    <div class="table-regular-column">
                                        <h6 class="conv_helveticaltstd-light">Q4</h6>
                                        <input id="Q4UsableDatabase" type="text" class="gray-input twodigit" disabled="disabled" />
                                        <input id="Q4NormalErosion" type="text" class="gray-input twodigit" disabled="disabled" />
                                        <input id="Q4UnsubscribeRate" type="text" class="gray-input twodigit" disabled="disabled" />
                                        @Html.TextBoxFor(model => model.NumberOfTouchesQ4, new { placeholder = "0", required = "", @class = "pricevalue", tabindex = "6" })
                                        <input id="Q4CTRDelivered" type="text" class="gray-input twodigit" disabled="disabled" />
                                        <input id="Q4RegistrationRate" type="text" class="gray-input twodigit" disabled="disabled" />
                                        <input id="Q4ModeledOutboundUnpaidInquiries" type="text" class="gray-input twodigit" disabled="disabled" />
                                    </div>
                                    <div class="table-regular-column">
                                        <h6 class="conv_helveticaltstd-light">Total</h6>
                                        <input id="AllQUsableDatabaseTotal" class="gray-input twodigit" type="text" disabled="disabled" />
                                        <input id="AllQNormalErosionTotal" class="gray-input twodigit" type="text" disabled="disabled" />
                                        <input id="AllQUnsubscribeRateTotal" class="gray-input twodigit" type="text" disabled="disabled" />
                                        <input id="AllQNumberOfTouchesTotal" class="gray-input" type="text" disabled="disabled" />
                                        <input id="AllQCTRDeliveredTotal" class="gray-input twodigit" type="text" disabled="disabled" />
                                        <input id="AllQRegistrationRateTotal" class="gray-input twodigit" type="text" disabled="disabled" />
                                        <input id="AllQModeledOutboundUnpaidInquiriesTotal" class="gray-input twodigit" type="text" disabled="disabled" />
                                    </div>
                                </div>
                            </div>

                            <div class="simple-line-separator"></div>

                            <div class="table-wrapper cf">
                                <div class="table-main-column">
                                    <h5>LIST ACQUISITION</h5>
                                    <p class="source-sans-prolight">List Acquisitions</p>
                                    <p class="source-sans-prolight">Cost per Contact</p>
                                    <p class="source-sans-prolight">Cost per List</p>
                                    <p class="source-sans-prolight">Cumulative List</p>
                                    <p class="source-sans-prolight">Cost per Cumulative Contact</p>
                                    <p class="source-sans-prolight">Erosion</p>
                                    <p class="source-sans-prolight">Unsubscribe Rate</p>
                                    <p class="source-sans-prolight">Number of Touches</p>
                                    <p class="source-sans-prolight">CTR Delivered</p>
                                    <p class="source-sans-prolight">Registration Rate</p>
                                    <h6 class="conv_helveticaltstd-light">Modeled Outbound<br />
                                        Unpaid Inquiries</h6>
                                </div>
                                <div class="regular-column-wrapper">
                                    <div class="table-regular-column">
                                        <h6 class="conv_helveticaltstd-light">Q1</h6>

                                        @Html.TextBoxFor(model => model.ListAcquisitionsQ1, new { placeholder = "0", required = "", @class = "pricevalue", tabindex = "9" })
                                        <div class="input-prepend">
                                            <span class="add-on">$</span>

                                            @Html.TextBoxFor(model => model.Acquisition_CostperContactQ1, new { placeholder = "0", required = "", @class = "pricevaluewithdot", tabindex = "13" })
                                        </div>
                                        <input id="Q1CostperList" class="gray-input" type="text" disabled="disabled">
                                        <input id="Q1CumulativeList" class="gray-input" type="text" disabled="disabled">
                                        <input id="Q1CostperCumulativeContact" class="gray-input" type="text" disabled="disabled">

                                        <div class="input-append">
                                            @Html.TextBoxFor(model => model.Q1OutBoundErosion, new { placeholder = "0", required = "", @class = "doubleText doubleTextPerc", tabindex = "14", maxlength = "5" })
                                            <span class="add-on">%</span>
                                        </div>
                                        <div class="input-append">
                                            @Html.TextBoxFor(model => model.Q1OutBoundUnsubscribeRate, new { placeholder = "0", required = "", @class = "doubleText doubleTextPerc", tabindex = "15", maxlength = "5" })
                                            <span class="add-on">%</span>
                                        </div>


                                        @Html.TextBoxFor(model => model.Acquisition_NumberofTouchesQ1, new { placeholder = "0", required = "", @class = "pricevalue", tabindex = "16" })
                                        <div class="input-append">
                                            @Html.TextBoxFor(model => model.Q1OutboundCTRDelivered, new { placeholder = "0", required = "", @class = "doubleText doubleTextPerc", tabindex = "20", maxlength = "5" })
                                            <span class="add-on">%</span>
                                        </div>

                                        <div class="input-append">
                                            @Html.TextBoxFor(model => model.Acquisition_RegistrationRate, new { placeholder = "0", required = "", @class = "doubleText doubleTextPerc", tabindex = "21", maxlength = "5" })
                                            <span class="add-on">%</span>
                                        </div>
                                        <input id="Q1ListAcquisitionsModeledOutboundUnpaidInquiriesTotal" class="gray-input twodigit" type="text" disabled="disabled">
                                    </div>
                                    <div class="table-regular-column">
                                        <h6 class="conv_helveticaltstd-light">Q2</h6>

                                        @Html.TextBoxFor(model => model.ListAcquisitionsQ2, new { placeholder = "0", required = "", @class = "pricevalue", tabindex = "10" })
                                        <div class="input-prepend">
                                            <span class="add-on">$</span>
                                            <input id="Acquisition_CostperContactQ2" class="gray-input" type="text" disabled="disabled">
                                        </div>
                                        <input id="Q2CostperList" class="gray-input" type="text" disabled="disabled">
                                        <input id="Q2CumulativeList" class="gray-input twodigit" type="text" disabled="disabled">
                                        <input id="Q2CostperCumulativeContact" class="gray-input twodigit" type="text" disabled="disabled">
                                        <input id="Q2OutBoundErosion" class="gray-input" type="text" disabled="disabled">
                                        <input id="Q2OutBoundUnsubscribeRate" class="gray-input" type="text" disabled="disabled">
                                        @Html.TextBoxFor(model => model.Acquisition_NumberofTouchesQ2, new { placeholder = "0", required = "", @class = "pricevalue", tabindex = "17" })
                                        <input id="Q2OutboundCTRDelivered" class="gray-input" type="text" disabled="disabled">
                                        <input id="Q2AcquisitionRegistrationRate" class="gray-input" type="text" disabled="disabled">
                                        <input id="Q2ListAcquisitionsModeledOutboundUnpaidInquiriesTotal" class="gray-input twodigit" type="text" disabled="disabled">
                                    </div>
                                    <div class="table-regular-column">
                                        <h6 class="conv_helveticaltstd-light">Q3</h6>

                                        @Html.TextBoxFor(model => model.ListAcquisitionsQ3, new { placeholder = "0", required = "", @class = "pricevalue", tabindex = "11" })
                                        <div class="input-prepend">
                                            <span class="add-on">$</span>

                                            <input id="Acquisition_CostperContactQ3" class="gray-input" type="text" disabled="disabled">
                                        </div>
                                        <input id="Q3CostperList" class="gray-input" type="text" disabled="disabled">
                                        <input id="Q3CumulativeList" class="gray-input twodigit" type="text" disabled="disabled">
                                        <input id="Q3CostperCumulativeContact" class="gray-input twodigit" type="text" disabled="disabled">
                                        <input id="Q3OutBoundErosion" class="gray-input" type="text" disabled="disabled">
                                        <input id="Q3OutBoundUnsubscribeRate" class="gray-input" type="text" disabled="disabled">
                                        @Html.TextBoxFor(model => model.Acquisition_NumberofTouchesQ3, new { placeholder = "0", required = "", @class = "pricevalue", tabindex = "18" })
                                        <input id="Q3OutboundCTRDelivered" class="gray-input" type="text" disabled="disabled">
                                        <input id="Q3AcquisitionRegistrationRate" class="gray-input" type="text" disabled="disabled">
                                        <input id="Q3ListAcquisitionsModeledOutboundUnpaidInquiriesTotal" class="gray-input twodigit" type="text" disabled="disabled">
                                    </div>
                                    <div class="table-regular-column">
                                        <h6 class="conv_helveticaltstd-light">Q4</h6>

                                        @Html.TextBoxFor(model => model.ListAcquisitionsQ4, new { placeholder = "0", required = "", @class = "pricevalue", tabindex = "12" })
                                        <div class="input-prepend">
                                            <span class="add-on">$</span>

                                            <input id="Acquisition_CostperContactQ4" class="gray-input" type="text" disabled="disabled">
                                        </div>
                                        <input id="Q4CostperList" class="gray-input" type="text" disabled="disabled">
                                        <input id="Q4CumulativeList" class="gray-input twodigit" type="text" disabled="disabled">
                                        <input id="Q4CostperCumulativeContact" class="gray-input twodigit" type="text" disabled="disabled">
                                        <input id="Q4OutBoundErosion" class="gray-input" type="text" disabled="disabled">
                                        <input id="Q4OutBoundUnsubscribeRate" class="gray-input" type="text" disabled="disabled">
                                        @Html.TextBoxFor(model => model.Acquisition_NumberofTouchesQ4, new { placeholder = "0", required = "", @class = "pricevalue", tabindex = "19" })
                                        <input id="Q4OutboundCTRDelivered" class="gray-input" type="text" disabled="disabled">
                                        <input id="Q4AcquisitionRegistrationRate" class="gray-input" type="text" disabled="disabled">
                                        <input id="Q4ListAcquisitionsModeledOutboundUnpaidInquiriesTotal" class="gray-input twodigit" type="text" disabled="disabled">
                                    </div>
                                    <div class="table-regular-column">
                                        <h6 class="conv_helveticaltstd-light">Total</h6>
                                        <input id="AllListAcquisitionsQTotal" class="gray-input" type="text" disabled="disabled">
                                        <input id="AllAcquisitionCostperContactQTotal" class="gray-input" type="text" disabled="disabled">
                                        <input id="AllQCostperListTotal" class="gray-input" type="text" disabled="disabled">
                                        <input id="AllQCumulativeListTotal" class="gray-input twodigit" type="text" disabled="disabled">
                                        <input id="AllQCostperCumulativeContactTotal" class="gray-input twodigit" type="text" disabled="disabled">
                                        <input id="AllQOutBoundErosionTotal" class="gray-input" type="text" disabled="disabled">
                                        <input id="AllQOutBoundUnsubscribeRateTotal" class="gray-input" type="text" disabled="disabled">
                                        <input id="AllAcquisitionNumberofTouchesQTotal" class="gray-input" type="text" disabled="disabled">
                                        <input id="AllQOutboundCTRDeliveredTotal" class="gray-input" type="text" disabled="disabled">
                                        <input id="AllQAcquisitionRegistrationRateTotal" class="gray-input" type="text" disabled="disabled">
                                        <input id="AllQListAcquisitionsModeledOutboundUnpaidInquiriesTotal" class="gray-input twodigit" type="text" disabled="disabled">
                                    </div>
                                </div>
                            </div>

                            <!--Inbound block-->
                            <h2 id="BookmarkInbound" class="sub-title-forms-margin source-sans-proregular">3. Inbound</h2>
                            <div class="table-wrapper cf">
                                <div class="table-main-column">
                                    <h5>SITE SEO + SOCIAL MEDIA</h5>
                                    <p class="source-sans-prolight">Impressions</p>
                                    <p class="source-sans-prolight">Click Through Rate</p>
                                    <p class="source-sans-prolight">Visits</p>
                                    <p class="source-sans-prolight">Registration Rate</p>
                                    <p class="source-sans-prolight">Total Organic Inquiries</p>
                                    <p class="source-sans-prolight">Orig. Inbound Inquiries</p>
                                    <h6 class="conv_helveticaltstd-light">Total Unpaid Inbound<br />
                                        Inquiries</h6>
                                </div>
                                <div class="regular-column-wrapper">
                                    <div class="table-regular-column">
                                        <h6 class="conv_helveticaltstd-light">Q1</h6>

                                        @Html.TextBoxFor(model => model.Impressions, new { placeholder = "0", required = "", @class = "pricevalue", tabindex = "22" })
                                        <div class="input-append">
                                            @Html.TextBoxFor(model => model.ClickThroughRate, new { placeholder = "0", required = "", @class = "doubleText doubleTextPerc", tabindex = "23", maxlength = "5" })
                                            <span class="add-on">%</span>
                                        </div>
                                        <input id="Visits" class="gray-input" disabled="disabled" type="text">
                                        <div class="input-append">
                                            @Html.TextBoxFor(model => model.InboundRegistrationRate, new { placeholder = "0", required = "", @class = "doubleText doubleTextPerc", tabindex = "24", maxlength = "5" })
                                            <span class="add-on">%</span>
                                        </div>
                                        <input id="Q1TotalOrganicInquiries" class="gray-input twodigit" disabled="disabled" type="text" />
                                        <input id="Q1OrigInboundInquiries" class="gray-input" disabled="disabled" type="text" value="0" />
                                        <input id="Q1TotalUnpaidInboundInquiries" class="gray-input twodigit" disabled="disabled" type="text" />
                                    </div>
                                    <div class="table-regular-column">
                                        <h6 class="conv_helveticaltstd-light">Q2</h6>
                                        <input id="Q2Impressions" class="gray-input" disabled="disabled" type="text" />
                                        <input id="Q2ClickThroughRate" class="gray-input" disabled="disabled" type="text" />
                                        <input id="Q2Visits" class="gray-input" disabled="disabled" type="text" />
                                        <input id="Q2InboundRegistrationRate" class="gray-input" disabled="disabled" type="text" />
                                        <input id="Q2TotalOrganicInquiries" class="gray-input twodigit" disabled="disabled" type="text" />
                                        <input id="Q2OrigInboundInquiries" class="gray-input" disabled="disabled" type="text" value="0" />
                                        <input id="Q2TotalUnpaidInboundInquiries" class="gray-input twodigit" disabled="disabled" type="text" />
                                    </div>
                                    <div class="table-regular-column">
                                        <h6 class="conv_helveticaltstd-light">Q3</h6>
                                        <input id="Q3Impressions" class="gray-input" disabled="disabled" type="text" />
                                        <input id="Q3ClickThroughRate" class="gray-input" disabled="disabled" type="text" />
                                        <input id="Q3Visits" class="gray-input" disabled="disabled" type="text" />
                                        <input id="Q3InboundRegistrationRate" class="gray-input" disabled="disabled" type="text" />
                                        <input id="Q3TotalOrganicInquiries" class="gray-input twodigit" disabled="disabled" type="text" />
                                        <input id="Q3OrigInboundInquiries" class="gray-input" disabled="disabled" type="text" value="0" />
                                        <input id="Q3TotalUnpaidInboundInquiries" class="gray-input twodigit" disabled="disabled" type="text" />
                                    </div>
                                    <div class="table-regular-column">
                                        <h6 class="conv_helveticaltstd-light">Q4</h6>
                                        <input id="Q4Impressions" class="gray-input" disabled="disabled" type="text" />
                                        <input id="Q4ClickThroughRate" class="gray-input" disabled="disabled" type="text" />
                                        <input id="Q4Visits" class="gray-input" disabled="disabled" type="text" />
                                        <input id="Q4InboundRegistrationRate" class="gray-input" disabled="disabled" type="text" />
                                        <input id="Q4TotalOrganicInquiries" class="gray-input twodigit" disabled="disabled" type="text" />
                                        <input id="Q4OrigInboundInquiries" class="gray-input" disabled="disabled" type="text" value="0" />
                                        <input id="Q4TotalUnpaidInboundInquiries" class="gray-input twodigit" disabled="disabled" type="text" />
                                    </div>
                                    <div class="table-regular-column">
                                        <h6 class="conv_helveticaltstd-light">Total</h6>
                                        <input id="AllQImpressionsTotal" class="gray-input" disabled="disabled" type="text" />
                                        <input id="AllQClickThroughRateTotal" class="gray-input" disabled="disabled" type="text" />
                                        <input id="AllQVisitsTotal" class="gray-input" disabled="disabled" type="text" />
                                        <input id="AllQInboundRegistrationRateTotal" class="gray-input" disabled="disabled" type="text" />
                                        <input id="AllQTotalOrganicInquiriesTotal" class="gray-input" disabled="disabled" type="text" />
                                        @Html.TextBoxFor(model => model.AllQOrigInboundInquiriesTotal, new { disabled = "disabled", @class = "gray-input", value = "0" })
                                        <input id="AllQTotalUnpaidInboundInquiriesTotal" class="gray-input twodigit" disabled="disabled" type="text" />
                                    </div>
                                </div>
                            </div>

                            <div class="simple-line-separator"></div>

                            <div class="table-wrapper cf">
                                <div class="table-main-column">
                                    <h5>PPC</h5>
                                    <p class="source-sans-prolight">Click Throughs</p>
                                    <p class="source-sans-prolight">Cost per Click Through</p>
                                    <p class="source-sans-prolight">PPC Cost</p>
                                    <p class="source-sans-prolight">Registration Rate</p>
                                    <h6 class="conv_helveticaltstd-light">Total Inbound Paid<br />
                                        Search Inquiries</h6>
                                </div>
                                <div class="regular-column-wrapper">
                                    <div class="table-regular-column">
                                        <h6 class="conv_helveticaltstd-light">Q1</h6>
                                        @Html.TextBoxFor(model => model.PPC_ClickThroughs, new { placeholder = "0", required = "", @class = "pricevalue", tabindex = "25" })
                                        <div class="input-prepend">
                                            <span class="add-on">$</span>
                                            @Html.TextBoxFor(model => model.PPC_CostperClickThrough, new { placeholder = "0", required = "", @class = "pricevaluewithdot", tabindex = "26" })
                                        </div>
                                        <input id="Q1PPCCost" class="gray-input" disabled="disabled" type="text">
                                        <div class="input-append">
                                            @Html.TextBoxFor(model => model.PPC_RegistrationRate, new { placeholder = "0", required = "", @class = "doubleText doubleTextPerc", tabindex = "27", maxlength = "5" })
                                            <span class="add-on">%</span>
                                        </div>
                                        <input id="Q1TotalInboundPaidSearchInquiries" class="gray-input" disabled="disabled" type="text" />
                                    </div>
                                    <div class="table-regular-column">
                                        <h6 class="conv_helveticaltstd-light">Q2</h6>
                                        <input id="Q2PPCClickThroughs" class="gray-input" disabled="disabled" type="text" />
                                        <input id="Q2PPCCostperClickThrough" class="gray-input" disabled="disabled" type="text" />
                                        <input id="Q2PPCCost" class="gray-input" disabled="disabled" type="text" />
                                        <input id="Q2PPCRegistrationRate" class="gray-input" disabled="disabled" type="text" />
                                        <input id="Q2TotalInboundPaidSearchInquiries" class="gray-input" disabled="disabled" type="text" />
                                    </div>
                                    <div class="table-regular-column">
                                        <h6 class="conv_helveticaltstd-light">Q3</h6>
                                        <input id="Q3PPCClickThroughs" class="gray-input" disabled="disabled" type="text" />
                                        <input id="Q3PPCCostperClickThrough" class="gray-input" disabled="disabled" type="text" />
                                        <input id="Q3PPCCost" class="gray-input" disabled="disabled" type="text" />
                                        <input id="Q3PPCRegistrationRate" class="gray-input" disabled="disabled" type="text" />
                                        <input id="Q3TotalInboundPaidSearchInquiries" class="gray-input" disabled="disabled" type="text" />
                                    </div>
                                    <div class="table-regular-column">
                                        <h6 class="conv_helveticaltstd-light">Q4</h6>
                                        <input id="Q4PPCClickThroughs" class="gray-input" disabled="disabled" type="text" />
                                        <input id="Q4PPCCostperClickThrough" class="gray-input" disabled="disabled" type="text" />
                                        <input id="Q4PPCCost" class="gray-input" disabled="disabled" type="text" />
                                        <input id="Q4PPCRegistrationRate" class="gray-input" disabled="disabled" type="text" />
                                        <input id="Q4TotalInboundPaidSearchInquiries" class="gray-input" disabled="disabled" type="text" />
                                    </div>
                                    <div class="table-regular-column">
                                        <h6 class="conv_helveticaltstd-light">Total</h6>
                                        <input id="AllQPPCClickThroughsTotal" class="gray-input" disabled="disabled" type="text" />
                                        <input id="AllQPPCCostperClickThroughTotal" class="gray-input" disabled="disabled" type="text" />
                                        <input id="AllQPPCCostTotal" class="gray-input" disabled="disabled" type="text" />
                                        <input id="AllQPPCRegistrationRateTotal" class="gray-input" disabled="disabled" type="text" />
                                        <input id="AllQTotalInboundPaidSearchInquiriesTotal" class="gray-input" disabled="disabled" type="text" />
                                    </div>
                                </div>
                            </div>

                            <div class="simple-line-separator"></div>
                            <div class="table-wrapper cf">
                                <div class="table-main-column">
                                    <h5>GUARANTEED CPL</h5>
                                    <p class="source-sans-prolight">Guaranteed CPL Budget</p>
                                    <p class="source-sans-prolight">Cost per Lead</p>
                                    <h6 class="conv_helveticaltstd-light">Total Inbound Paid<br />
                                        Media Inquiries</h6>
                                </div>
                                <div class="regular-column-wrapper">
                                    <div class="table-regular-column">
                                        <h6 class="conv_helveticaltstd-light">Q1</h6>
                                        <div class="input-prepend">
                                            <span class="add-on">$</span>
                                            @Html.TextBoxFor(model => model.GC_GuaranteedCPLBudget, new { placeholder = "0", required = "", @class = "pricevalue", tabindex = "28" })
                                        </div>
                                        <div class="input-prepend">
                                            <span class="add-on">$</span>
                                            @Html.TextBoxFor(model => model.GC_CostperLead, new { placeholder = "0", required = "", @class = "pricevalue", tabindex = "29" })
                                        </div>
                                        <input id="Q1TotalInboundPaidMediaInquiries" class="gray-input" disabled="disabled" type="text" />
                                    </div>
                                    <div class="table-regular-column">
                                        <h6 class="conv_helveticaltstd-light">Q2</h6>
                                        <input id="Q2GCGuaranteedCPLBudget" class="gray-input" disabled="disabled" type="text" />
                                        <input id="Q2GCCostperLead" class="gray-input" disabled="disabled" type="text" />
                                        <input id="Q2TotalInboundPaidMediaInquiries" class="gray-input" disabled="disabled" type="text" />
                                    </div>
                                    <div class="table-regular-column">
                                        <h6 class="conv_helveticaltstd-light">Q3</h6>
                                        <input id="Q3GCGuaranteedCPLBudget" class="gray-input" disabled="disabled" type="text" />
                                        <input id="Q3GCCostperLead" class="gray-input" disabled="disabled" type="text" />
                                        <input id="Q3TotalInboundPaidMediaInquiries" class="gray-input" disabled="disabled" type="text" />
                                    </div>
                                    <div class="table-regular-column">
                                        <h6 class="conv_helveticaltstd-light">Q4</h6>
                                        <input id="Q4GCGuaranteedCPLBudget" class="gray-input" disabled="disabled" type="text" />
                                        <input id="Q4GCCostperLead" class="gray-input" disabled="disabled" type="text" />
                                        <input id="Q4TotalInboundPaidMediaInquiries" class="gray-input" disabled="disabled" type="text" />
                                    </div>
                                    <div class="table-regular-column">
                                        <h6 class="conv_helveticaltstd-light">Total</h6>
                                        <input id="AllQGCGuaranteedCPLBudgetTotal" class="gray-input" disabled="disabled" type="text" />
                                        <input id="AllQGCCostperLeadTotal" class="gray-input" disabled="disabled" type="text" />
                                        <input id="AllQTotalInboundPaidMediaInquiriesTotal" class="gray-input" disabled="disabled" type="text" />
                                    </div>
                                </div>
                            </div>

                            <div class="simple-line-separator"></div>
                            <div class="table-wrapper cf">
                                <div class="table-main-column">
                                    <h5>CONTENT SYNDICATION CPL</h5>
                                    <p class="source-sans-prolight">Non-Guar. CPL Budget</p>
                                    <p class="source-sans-prolight">Cost per Lead</p>
                                    <h6 class="conv_helveticaltstd-light">Total Inbound Paid<br />
                                        Syndicated Inquiries</h6>
                                </div>
                                <div class="regular-column-wrapper">
                                    <div class="table-regular-column">
                                        <h6 class="conv_helveticaltstd-light">Q1</h6>
                                        <div class="input-prepend">
                                            <span class="add-on">$</span>
                                            @Html.TextBoxFor(model => model.CSC_NonGuaranteedCPLBudget, new { placeholder = "0", required = "", @class = "pricevalue", tabindex = "30" })
                                        </div>
                                        <div class="input-prepend">
                                            <span class="add-on">$</span>
                                            @Html.TextBoxFor(model => model.CSC_CostperLead, new { placeholder = "0", required = "", @class = "pricevaluewithdot", tabindex = "31" })
                                        </div>
                                        <input id="Q1TotalInboundPaidSyndicatedInquiries" class="gray-input" disabled="disabled" type="text" />
                                    </div>
                                    <div class="table-regular-column">
                                        <h6 class="conv_helveticaltstd-light">Q2</h6>
                                        <input id="Q2CSCNonGuaranteedCPLBudget" class="gray-input" disabled="disabled" type="text" />
                                        <input id="Q2CSCCostperLead" class="gray-input" disabled="disabled" type="text" />
                                        <input id="Q2TotalInboundPaidSyndicatedInquiries" class="gray-input" disabled="disabled" type="text" />
                                    </div>
                                    <div class="table-regular-column">
                                        <h6 class="conv_helveticaltstd-light">Q3</h6>
                                        <input id="Q3CSCNonGuaranteedCPLBudget" class="gray-input" disabled="disabled" type="text" />
                                        <input id="Q3CSCCostperLead" class="gray-input" disabled="disabled" type="text" />
                                        <input id="Q3TotalInboundPaidSyndicatedInquiries" class="gray-input" disabled="disabled" type="text" />
                                    </div>
                                    <div class="table-regular-column">
                                        <h6 class="conv_helveticaltstd-light">Q4</h6>
                                        <input id="Q4CSCNonGuaranteedCPLBudget" class="gray-input" disabled="disabled" type="text" />
                                        <input id="Q4CSCCostperLead" class="gray-input" disabled="disabled" type="text" />
                                        <input id="Q4TotalInboundPaidSyndicatedInquiries" class="gray-input" disabled="disabled" type="text" />
                                    </div>
                                    <div class="table-regular-column">
                                        <h6 class="conv_helveticaltstd-light">Total</h6>
                                        <input id="AllQCSCNonGuaranteedCPLBudgetTotal" class="gray-input" disabled="disabled" type="text" />
                                        <input id="AllQCSCCostperLeadTotal" class="gray-input" disabled="disabled" type="text" />
                                        <input id="AllQTotalInboundPaidSyndicatedInquiriesTotal" class="gray-input" disabled="disabled" type="text" />
                                    </div>
                                </div>
                            </div>

                            <div class="simple-line-separator"></div>
                            <div class="table-wrapper cf">
                                <div class="table-main-column">
                                    <h5>TRADITIONAL DIGITAL MEDIA</h5>
                                    <p class="source-sans-prolight">Digital Media Budget</p>
                                    <p class="source-sans-prolight">Cost per Lead </p>
                                    <h6 class="conv_helveticaltstd-light">Total Traditional Digital<br />
                                        Media Inquiries</h6>
                                </div>
                                <div class="regular-column-wrapper">
                                    <div class="table-regular-column">
                                        <h6 class="conv_helveticaltstd-light">Q1</h6>
                                        <div class="input-prepend">
                                            <span class="add-on">$</span>
                                            @Html.TextBoxFor(model => model.TDM_DigitalMediaBudget, new { placeholder = "0", required = "", @class = "pricevalue", tabindex = "32" })
                                        </div>
                                        <div class="input-prepend">
                                            <span class="add-on">$</span>
                                            @Html.TextBoxFor(model => model.TDM_CostperLead, new { placeholder = "0", required = "", @class = "pricevaluewithdot", tabindex = "33" })
                                        </div>
                                        <input id="Q1TotalTraditionalDigitalMediaInquiries" class="gray-input" disabled="disabled" type="text" />
                                    </div>
                                    <div class="table-regular-column">
                                        <h6 class="conv_helveticaltstd-light">Q2</h6>
                                        <input id="Q2TDMDigitalMediaBudget" class="gray-input" disabled="disabled" type="text" />
                                        <input id="Q2TDMCostperLead" class="gray-input" disabled="disabled" type="text" />
                                        <input id="Q2TotalTraditionalDigitalMediaInquiries" class="gray-input" disabled="disabled" type="text" />
                                    </div>
                                    <div class="table-regular-column">
                                        <h6 class="conv_helveticaltstd-light">Q3</h6>
                                        <input id="Q3TDMDigitalMediaBudget" class="gray-input" disabled="disabled" type="text" />
                                        <input id="Q3TDMCostperLead" class="gray-input" disabled="disabled" type="text" />
                                        <input id="Q3TotalTraditionalDigitalMediaInquiries" class="gray-input" disabled="disabled" type="text" />
                                    </div>
                                    <div class="table-regular-column">
                                        <h6 class="conv_helveticaltstd-light">Q4</h6>
                                        <input id="Q4TDMDigitalMediaBudget" class="gray-input" disabled="disabled" type="text" />
                                        <input id="Q4TDMCostperLead" class="gray-input" disabled="disabled" type="text" />
                                        <input id="Q4TotalTraditionalDigitalMediaInquiries" class="gray-input" disabled="disabled" type="text" />
                                    </div>
                                    <div class="table-regular-column">
                                        <h6 class="conv_helveticaltstd-light">Total</h6>
                                        <input id="AllQTDMDigitalMediaBudgetTotal" class="gray-input" disabled="disabled" type="text" />
                                        <input id="AllQTDMCostperLeadTotal" class="gray-input" disabled="disabled" type="text" />
                                        <input id="AllQTotalTraditionalDigitalMediaInquiriesTotal" class="gray-input" disabled="disabled" type="text" />
                                    </div>
                                </div>
                            </div>

                            <div class="simple-line-separator"></div>
                            <div class="table-wrapper cf">
                                <div class="table-main-column">
                                    <h5>TRADITIONAL PRINT</h5>
                                    <p class="source-sans-prolight">Print Media Budget</p>
                                    <p class="source-sans-prolight">Cost per Lead </p>
                                    <h6 class="conv_helveticaltstd-light">Total Traditional Print<br />
                                        Inquiries</h6>
                                </div>
                                <div class="regular-column-wrapper">
                                    <div class="table-regular-column">
                                        <h6 class="conv_helveticaltstd-light">Q1</h6>
                                        <div class="input-prepend">
                                            <span class="add-on">$</span>
                                            @Html.TextBoxFor(model => model.TP_PrintMediaBudget, new { placeholder = "0", required = "", @class = "pricevalue", tabindex = "34" })
                                        </div>
                                        <div class="input-prepend">
                                            <span class="add-on">$</span>
                                            @Html.TextBoxFor(model => model.TP_CostperLead, new { placeholder = "0", required = "", @class = "pricevaluewithdot", tabindex = "35" })
                                        </div>
                                        <input id="Q1TotalTraditionalPrintInquiries" class="gray-input" disabled="disabled" type="text" />
                                    </div>
                                    <div class="table-regular-column">
                                        <h6 class="conv_helveticaltstd-light">Q2</h6>
                                        <input id="Q2TPPrintMediaBudget" class="gray-input" disabled="disabled" type="text" />
                                        <input id="Q2TPCostperLead" class="gray-input" disabled="disabled" type="text" />
                                        <input id="Q2TotalTraditionalPrintInquiries" class="gray-input" disabled="disabled" type="text" />
                                    </div>
                                    <div class="table-regular-column">
                                        <h6 class="conv_helveticaltstd-light">Q3</h6>
                                        <input id="Q3TPPrintMediaBudget" class="gray-input" disabled="disabled" type="text" />
                                        <input id="Q3TPCostperLead" class="gray-input" disabled="disabled" type="text" />
                                        <input id="Q3TotalTraditionalPrintInquiries" class="gray-input" disabled="disabled" type="text" />
                                    </div>
                                    <div class="table-regular-column">
                                        <h6 class="conv_helveticaltstd-light">Q4</h6>
                                        <input id="Q4TPPrintMediaBudget" class="gray-input" disabled="disabled" type="text" />
                                        <input id="Q4TPCostperLead" class="gray-input" disabled="disabled" type="text" />
                                        <input id="Q4TotalTraditionalPrintInquiries" class="gray-input" disabled="disabled" type="text" />
                                    </div>
                                    <div class="table-regular-column">
                                        <h6 class="conv_helveticaltstd-light">Total</h6>
                                        <input id="AllQTPPrintMediaBudgetTotal" class="gray-input" disabled="disabled" type="text" />
                                        <input id="AllQ4TPCostperLeadTotal" class="gray-input" disabled="disabled" type="text" />
                                        <input id="AllQTotalTraditionalPrintInquiriesTotal" class="gray-input" disabled="disabled" type="text" />
                                    </div>
                                </div>
                            </div>

                            <!--Events block-->
                            <h2 id="BookmarkEvents" class="sub-title-forms-margin source-sans-proregular">4. Events</h2>
                            <div class="table-wrapper cf">
                                <div class="table-main-column">
                                    <h5>TRADESHOWS, ETC</h5>
                                    <p class="source-sans-prolight">Number of Contacts</p>
                                    <p class="source-sans-prolight">Contact to Inquiry Conv</p>
                                    <p class="source-sans-prolight">Number of Inquiries</p>
                                    <p class="source-sans-prolight">Events Budget</p>
                                    <p class="source-sans-prolight">Cost per Contact</p>
                                    <p class="source-sans-prolight">Cost per Inquiry</p>
                                </div>
                                <div class="regular-column-wrapper">
                                    <div class="table-regular-column">
                                        <h6 class="conv_helveticaltstd-light">Q1</h6>
                                        @Html.TextBoxFor(model => model.NumberofContactsQ1, new { placeholder = "0", required = "", @class = "pricevalue", tabindex = "36" })
                                        <div class="input-append">
                                            @Html.TextBoxFor(model => model.ContactToInquiryConversion, new { placeholder = "0", required = "", @class = "doubleText doubleTextPerc", tabindex = "40", maxlength = "5" })
                                            <span class="add-on">%</span>
                                        </div>
                                        <input id="Q1EventsNumberofInquiries" class="gray-input" disabled="disabled" type="text" />
                                        <div class="input-prepend">
                                            <span class="add-on">$</span>
                                            @Html.TextBoxFor(model => model.EventsBudgetQ1, new { placeholder = "0", required = "", @class = "pricevaluewithdot", tabindex = "41" })
                                        </div>
                                        <input id="Q1EventsCostperContact" class="gray-input" disabled="disabled" type="text" />
                                        <input id="Q1EventsCostperInquiry" class="gray-input twodigit" disabled="disabled" type="text" />
                                    </div>

                                    <div class="table-regular-column">
                                        <h6 class="conv_helveticaltstd-light">Q2</h6>
                                        @Html.TextBoxFor(model => model.NumberofContactsQ2, new { placeholder = "0", required = "", @class = "pricevalue", tabindex = "37" })
                                        <div class="input-append">
                                            <input id="Q2ContactToInquiryConversion" class="gray-input" type="text" disabled="disabled" />
                                            <span class="add-on">%</span>
                                        </div>
                                        <input id="Q2EventsNumberofInquiries" class="gray-input" disabled="disabled" type="text" />
                                        <div class="input-prepend">
                                            <span class="add-on">$</span>
                                            @Html.TextBoxFor(model => model.EventsBudgetQ2, new { placeholder = "0", required = "", @class = "pricevaluewithdot", tabindex = "42" })
                                        </div>
                                        <input id="Q2EventsCostperContact" class="gray-input" disabled="disabled" type="text" />
                                        <input id="Q2EventsCostperInquiry" class="gray-input twodigit" disabled="disabled" type="text" />
                                    </div>

                                    <div class="table-regular-column">
                                        <h6 class="conv_helveticaltstd-light">Q3</h6>
                                        @Html.TextBoxFor(model => model.NumberofContactsQ3, new { placeholder = "0", required = "", @class = "pricevalue", tabindex = "38" })
                                        <div class="input-append">
                                            <input id="Q3ContactToInquiryConversion" disabled="disabled" class="gray-input" type="text" />
                                            <span class="add-on">%</span>
                                        </div>
                                        <input id="Q3EventsNumberofInquiries" class="gray-input" disabled="disabled" type="text" />
                                        <div class="input-prepend">
                                            <span class="add-on">$</span>
                                            @Html.TextBoxFor(model => model.EventsBudgetQ3, new { placeholder = "0", required = "", @class = "pricevaluewithdot", tabindex = "43" })
                                        </div>
                                        <input id="Q3EventsCostperContact" class="gray-input" type="text" disabled="disabled" />
                                        <input id="Q3EventsCostperInquiry" class="gray-input twodigit" type="text" disabled="disabled" />
                                    </div>

                                    <div class="table-regular-column">
                                        <h6 class="conv_helveticaltstd-light">Q4</h6>
                                        @Html.TextBoxFor(model => model.NumberofContactsQ4, new { placeholder = "0", required = "", @class = "pricevalue", tabindex = "39" })
                                        <div class="input-append">
                                            <input id="Q4ContactToInquiryConversion" type="text" disabled="disabled" class="gray-input" />
                                            <span class="add-on">%</span>
                                        </div>
                                        <input id="Q4EventsNumberofInquiries" class="gray-input" type="text" disabled="disabled" />
                                        <div class="input-prepend">
                                            <span class="add-on">$</span>
                                            @Html.TextBoxFor(model => model.EventsBudgetQ4, new { placeholder = "0", required = "", @class = "pricevaluewithdot", tabindex = "44" })
                                        </div>
                                        <input id="Q4EventsCostperContact" class="gray-input" type="text" disabled="disabled" />
                                        <input id="Q4EventsCostperInquiry" class="gray-input twodigit" type="text" disabled="disabled" />
                                    </div>

                                    <div class="table-regular-column">
                                        <h6 class="conv_helveticaltstd-light">Total</h6>
                                        <input id="AllNumberofContactsQTotal" class="gray-input" type="text" disabled="disabled" />
                                        <input id="AllQContactToInquiryConversionTotal" class="gray-input" type="text" disabled="disabled" />
                                        <input id="AllQEventsNumberofInquiriesTotal" class="gray-input" type="text" disabled="disabled" />
                                        <input id="AllEventsBudgetQTotal" class="gray-input" type="text" disabled="disabled" />
                                        <input id="AllQEventsCostperContactTotal" class="gray-input" type="text" disabled="disabled" />
                                        <input id="AllQEventsCostperInquiryTotal" class="gray-input twodigit" type="text" disabled="disabled" />
                                    </div>
                                </div>
                            </div>

                            <!--Summary block-->
                            <h2 id="BookmarkSummary" class="sub-title-forms-margin source-sans-proregular">5. Audience Planning Summary</h2>
                            <div class="table-wrapper cf">
                                <div class="table-main-column">
                                    <br />
                                    <br />
                                    <p class="source-sans-prolight">Outbound Inquiries</p>
                                    <p class="source-sans-prolight">Inbound Inquiries</p>
                                    <p class="source-sans-prolight">List Acquisition Budget</p>
                                    <p class="source-sans-prolight">Media Budget</p>
                                    <p class="source-sans-prolight">Events Budget</p>
                                </div>
                                <div class="regular-column-wrapper">
                                    <div class="table-regular-column">
                                        <h6 class="conv_helveticaltstd-light">Q1</h6>
                                        <input id="Q1OutboundInquiries" class="gray-input twodigit" type="text" disabled="disabled" />
                                        <input id="Q1InboundInquiries" class="gray-input twodigit" type="text" disabled="disabled" />
                                        <input id="Q1SummaryListAcquisitionBudget" class="gray-input" type="text" disabled="disabled" />
                                        <input id="Q1SummaryMediaBudget" class="gray-input" type="text" disabled="disabled" />
                                        <input id="Q1SummaryEventsBudget" class="gray-input" type="text" disabled="disabled" />
                                    </div>

                                    <div class="table-regular-column">
                                        <h6 class="conv_helveticaltstd-light">Q2</h6>
                                        <input id="Q2OutboundInquiries" class="gray-input twodigit" type="text" disabled="disabled" />
                                        <input id="Q2InboundInquiries" class="gray-input twodigit" type="text" disabled="disabled" />
                                        <input id="Q2SummaryListAcquisitionBudget" class="gray-input" type="text" disabled="disabled" />
                                        <input id="Q2SummaryMediaBudget" class="gray-input" type="text" disabled="disabled" />
                                        <input id="Q2SummaryEventsBudget" class="gray-input" type="text" disabled="disabled" />
                                    </div>

                                    <div class="table-regular-column">
                                        <h6 class="conv_helveticaltstd-light">Q3</h6>
                                        <input id="Q3OutboundInquiries" class="gray-input twodigit" type="text" disabled="disabled" />
                                        <input id="Q3InboundInquiries" class="gray-input twodigit" type="text" disabled="disabled" />
                                        <input id="Q3SummaryListAcquisitionBudget" class="gray-input" type="text" disabled="disabled" />
                                        <input id="Q3SummaryMediaBudget" class="gray-input" type="text" disabled="disabled" />
                                        <input id="Q3SummaryEventsBudget" class="gray-input" type="text" disabled="disabled" />
                                    </div>

                                    <div class="table-regular-column">
                                        <h6 class="conv_helveticaltstd-light">Q4</h6>
                                        <input id="Q4OutboundInquiries" class="gray-input twodigit" type="text" disabled="disabled" />
                                        <input id="Q4InboundInquiries" class="gray-input twodigit" type="text" disabled="disabled" />
                                        <input id="Q4SummaryListAcquisitionBudget" class="gray-input" type="text" disabled="disabled" />
                                        <input id="Q4SummaryMediaBudget" class="gray-input" type="text" disabled="disabled" />
                                        <input id="Q4SummaryEventsBudget" class="gray-input" type="text" disabled="disabled" />
                                    </div>

                                    <div class="table-regular-column">
                                        <h6 class="conv_helveticaltstd-light">Total</h6>
                                        <input id="AllQOutboundInquiriesTotal" class="gray-input twodigit" type="text" disabled="disabled" />
                                        <input id="AllQInboundInquiriesTotal" class="gray-input twodigit" type="text" disabled="disabled" />
                                        <input id="AllQSummaryListAcquisitionBudgetTotal" class="gray-input" type="text" disabled="disabled" />
                                        <input id="AllQSummaryMediaBudgetTotal" class="gray-input" type="text" disabled="disabled" />
                                        <input id="AllQSummaryEventsBudgetTotal" class="gray-input" type="text" disabled="disabled" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="line-separator"></div>
                @if (isViewOnly != "true")
                {
                    <input type="submit" id="button-save" class="btn btn-blue text-shadow-blue source-sans-proregular" name="button-save" value="Save & Continue" tabindex="45" />
                }
            </div>
        </div>
    </div>
    
    @Html.Hidden("isPublishButton")
    @Html.Hidden("IsBenchmarked", IsBenchmarked)
    @Html.Hidden("MID", MID)
    @Html.Hidden("IsViewOnly", isViewOnly)
    @Html.Hidden("EffectiveDate", currentdate)
}
<script type="text/javascript">

    if ($("#TempDataErrorMsg").val() != undefined && $("#TempDataErrorMsg").val() != "") {
        $("#errorMessage").html('<a class="close">×</a><strong>Error!</strong>' + $("#TempDataErrorMsg").val());
        $("#errorMessage").slideDown(1200);
    }

    $("#newModel").click(function () {
        window.location.href = $(this).attr('href');
    });

    $(".leftnav").click(function () {
        var url = '';
        var isResults = '';
        if ($(this).attr('id') == 'aInputs') {
            url = '@Url.Content("~/Model/Create")';
        }
        else if ($(this).attr('id') == 'aTactics') {
            url = '@Url.Content("~/Model/Tactics")';
        }
        else if ($(this).attr('id') == 'aResults') {
            url = '@Url.Content("~/Model/Results")';
            isResults = '1';
        }
        var curMid = 0;
        if ($('#MID').val() != '') {
            curMid = parseInt($('#MID').val());
        }
        if (isResults == '1') {
            window.location.href = url + '?mid1=' + curMid + '&mid2=' + curMid;
        }
        else {
            window.location.href = url + '?id=' + curMid;
        }
    });

$(document).ready(function () {
    $('#DivBackgroundModel').css("display", "none");
    $('#DivPublishModelPopup').css("display", "none");
    if ($('#IsViewOnly').val() != '') {
        MakeViewOnly();//Bug 17:Should not be able to edit a published model
        $("#errorMessage").html('<a class="close">×</a> View only permission');
        $("#errorMessage").slideDown(400);
    }
    $('#dp_start .add-on').click(function () {
        $('#dp_start').datepicker('show');
    });
    $('.pricevaluewithdot').priceFormat({ prefix: '', centsSeparator: '', thousandsSeparator: ',', centsLimit: 0, isDouble: true });
    $('.pricevalue').priceFormat({ prefix: '', centsSeparator: '', thousandsSeparator: ',', centsLimit: 0, isDouble: false });

    $('.percentValue').priceFormat({ prefix: '', suffix: '%', centsSeparator: '', thousandsSeparator: '', centsLimit: 0, isDouble: true });
    var curMid = 0;
    if ($('#MID').val() != '') {
        curMid = parseInt($('#MID').val());
    }
    $('.changes').html('');
    var url = '@Url.Content("~/Model/LoadChangeLog/")';
    $('.changes').load(url + '?objectId=' + curMid);
    // added by Nirav Shah for Benchmark on 2 Jan 2014
    if ($('#IsBenchmarked').val() == 'True') { benchmark(); }
    else { advanced(); }
    $('#advanced-option').click(function () {
        advanced();
    });

    $('#benchmarked-option').click(function () {
        benchmark();
    });

    //// Modified by Maninder Singh Wadhva for TFS Bug 240.
    $(".subheader").click(function () {
        $(".subheader").removeClass('active');
        $(this).addClass('active');
        advanced();
    });

    function benchmark() {

        $('#inputs-group').hide();
        $('#advanced').hide();
        $('#benchmarked').show();
        $("#IsBenchmarked").val(true);
        $('#benchmarked-option').removeClass('disabled pull-right');
        $('#benchmarked-option').addClass('active pull-right');
        $('#advanced-option').removeClass('active pull-right');
        $('#advanced-option').addClass('disabled pull-right');
    }
    function advanced() {
        $('#advanced-option').removeClass('disabled pull-right');
        $('#advanced-option').addClass('active pull-right');
        $('#benchmarked-option').removeClass('active pull-right');
        $('#benchmarked-option').addClass('disabled pull-right');
        $('#inputs-group').show();
        $('#advanced').show();
        $('#benchmarked').hide();
        $("#IsBenchmarked").val(false);
    }

    // added by Nirav Shah for Publish button on 1 Jan 2014
    var latid = $('#latestModelId').val();
    var status = $('#spnstatus').attr("title");
    if (curMid != 0) {
        if (latid == curMid) {
            if (status.toString().toLocaleLowerCase() == "draft") {

                $("#btnpublish").removeClass('btn-blue-disable');
                $("#btnpublish").addClass('btn-blue');
                $('#button-save').show();
            }
            else {

                $("#btnpublish").removeClass('btn-blue');
                $("#btnpublish").addClass('btn-blue-disable');
                /*changed by Nirav Shah on 18 feb 2014 for TFS Point 252: Editing a published model*/
                //MakeViewOnly(); //Bug 17:Should not be able to edit a published model
                //$('#button-save').hide();
            }

        }
        else {
            $('#button-save').hide();
            MakeViewOnly(); //Bug 17:Should not be able to edit a published model
            $("li[id^='ver_']").each(function () {
                var id = this.id;

                if (id == "ver_" + curMid) {

                    $("#" + id).removeClass('disabled pull-right');
                    $("#" + id).addClass('active pull-right');
                }
                else {
                    $("#" + id).removeClass('active pull-right');
                    $("#" + id).addClass('disabled pull-right');
                }
            });
        }
    }
    $('.model').addClass('active');

    if ($('#cSuccess').html() == '') {

    }
    else {
        $('#cSuccess').html("<strong>Success.</strong>" + $('#cSuccess').html());
        $("#successMessage").slideDown(1200);
        $("#successMessage").slideUp(3000);
    }

    $("#content_wraper").removeClass("span10 all-height").addClass("span10 padding-top40");

    $.urlParam = function (name, url) {
        if (!url) {
            url = window.location.href;
        }
        var results = new RegExp('[\\?&]' + name + '=([^&#]*)').exec(url);
        if (!results) {
            return 0;
        }
        return results[1] || 0;
    }

    var querystringval = $.urlParam('modelvid');


    var curmodelid = 0;
    if ($('#latestModelId').val() != '') {
        curmodelid = parseInt($('#latestModelId').val());
    }

    if (querystringval != 0) {

        $('.changes').html('');
        var urlver = '@Url.Content("~/Model/LoadChangeLog/")';
        $('.changes').load(urlver + '?objectId=' + querystringval);

        if (parseInt(querystringval) != curmodelid) {
            $('#button-save').hide();
            MakeViewOnly(); //Bug 17:Should not be able to edit a published model
            $("#btnpublish").removeClass('btn-blue');
            $("#btnpublish").addClass('btn-blue-disable');
            CalOnBlur();

            $("li[id^='ver_']").each(function () {
                var id = this.id;

                if (id == "ver_" + querystringval) {

                    $("#" + id).removeClass('disabled pull-right');
                    $("#" + id).addClass('active pull-right');
                }
                else {
                    $("#" + id).removeClass('active pull-right');
                    $("#" + id).addClass('disabled pull-right');
                }
            });
        }
        else {
            $('#button-save').show();

            $("#btnpublish").removeClass('btn-blue-disable');
            $("#btnpublish").addClass('btn-blue');
            CalOnBlur();
        }

    }

    $('.nl-field').each(function () {
        if ($(this).next().attr('text') == 'NormalErosion') {
            $(this).children('a').attr('id', 'lnkNormalErosion');
        }
        if ($(this).next().attr('text') == 'UnsubscribeRate') {
            $(this).children('a').attr('id', 'lnkUnsubscribeRate');
        }
        if ($(this).next().attr('text') == 'CTRDelivered') {
            $(this).children('a').attr('id', 'lnkCTRDelivered');
        }
        if ($(this).next().attr('text') == 'RegistrationRate') {
            $(this).children('a').attr('id', 'lnkRegistrationRate');
        }
    });

    var marleads = 0;

    if (IsNumeric($("#AllQOrigInboundInquiriesTotal").val())) {
        marleads = parseInt($("#AllQOrigInboundInquiriesTotal").val());
    }

    //marleads = 2000; // STATIC For Testing
    if (marleads != 0) {
        var qmarleads = 0;
        qmarleads = marleads / 4;
        $("#Q1OrigInboundInquiries").val(number_format(qmarleads, 2, '.', ','));
        $("#Q2OrigInboundInquiries").val(number_format(qmarleads, 2, '.', ','));
        $("#Q3OrigInboundInquiries").val(number_format(qmarleads, 2, '.', ','));
        $("#Q4OrigInboundInquiries").val(number_format(qmarleads, 2, '.', ','));
    }
    calculateUsableDBSizeQuaterWise();
    CalOnBlur();

});

$(".nl-field-go").click(function () {
    var needAlert = false;
    $('.nl-field').each(function () {

        if ($(this).next().attr('datadefault') == "NormalErosion") {

            var tValue = $(this).children('a').text();
            tValue = tValue ? parseFloat(tValue.replace(/%/g, '')) : 0;
            if (IsNumeric(tValue) == false) {
                $(this).children('a').addClass("error-form");
                needAlert = true;
            }
            else {
                if (tValue > 100) {
                    $(this).children('a').addClass("error-form");
                    $("#errorMessage").html('<a class="close">×</a><strong>Error!</strong> ' + $("#ValidateForValidField").val());
                    needAlert = true;
                }
                else {
                    $(this).children('a').removeClass("error-form");
                    $("#Q1NormalErosion").val($("#lnkNormalErosion").html().replace(/%/g, ''));
                    $("#Q2NormalErosion").val($("#lnkNormalErosion").html().replace(/%/g, ''));
                    $("#Q3NormalErosion").val($("#lnkNormalErosion").html().replace(/%/g, ''));
                    $("#Q4NormalErosion").val($("#lnkNormalErosion").html().replace(/%/g, ''));
                    $("#Q1NormalErosion").blur();
                }
            }
        }

        if ($(this).next().attr('datadefault') == "UnsubscribeRate") {

            var tValue = $(this).children('a').text();
            tValue = tValue ? parseFloat(tValue.replace(/%/g, '')) : 0;
            if (IsNumeric(tValue) == false) {
                $(this).children('a').addClass("error-form");
                needAlert = true;
            }
            else {
                if (tValue > 100) {
                    $(this).children('a').addClass("error-form");
                    $("#errorMessage").html('<a class="close">×</a><strong>Error!</strong> ' + $("#ValidateForValidField").val());
                    needAlert = true;
                }
                else {
                    $(this).children('a').removeClass("error-form");
                    $("#Q1UnsubscribeRate").val($("#lnkUnsubscribeRate").html().replace(/%/g, ''));
                    $("#Q2UnsubscribeRate").val($("#lnkUnsubscribeRate").html().replace(/%/g, ''));
                    $("#Q3UnsubscribeRate").val($("#lnkUnsubscribeRate").html().replace(/%/g, ''));
                    $("#Q4UnsubscribeRate").val($("#lnkUnsubscribeRate").html().replace(/%/g, ''));
                    $("#Q1UnsubscribeRate").blur();
                }
            }
        }

        if ($(this).next().attr('datadefault') == "CTRDelivered") {

            var tValue = $(this).children('a').text();
            tValue = tValue ? parseFloat(tValue.replace(/%/g, '')) : 0;
            if (IsNumeric(tValue) == false) {
                $(this).children('a').addClass("error-form");
                needAlert = true;
            }
            else {
                if (tValue > 100) {
                    $(this).children('a').addClass("error-form");
                    $("#errorMessage").html('<a class="close">×</a><strong>Error!</strong> ' + $("#ValidateForValidField").val());
                    needAlert = true;
                }
                else {
                    $(this).children('a').removeClass("error-form");
                    $("#Q1CTRDelivered").val($("#lnkCTRDelivered").html().replace(/%/g, ''));
                    $("#Q2CTRDelivered").val($("#lnkCTRDelivered").html().replace(/%/g, ''));
                    $("#Q3CTRDelivered").val($("#lnkCTRDelivered").html().replace(/%/g, ''));
                    $("#Q4CTRDelivered").val($("#lnkCTRDelivered").html().replace(/%/g, ''));
                    $("#Q1CTRDelivered").blur();
                }
            }
        }

        if ($(this).next().attr('datadefault') == "RegistrationRate") {
            var tValue = $(this).children('a').text();
            tValue = tValue ? parseFloat(tValue.replace(/%/g, '')) : 0;
            if (IsNumeric(tValue) == false) {
                $(this).children('a').addClass("error-form");
                needAlert = true;
            }
            else {
                if (tValue > 100) {
                    $(this).children('a').addClass("error-form");
                    $("#errorMessage").html('<a class="close">×</a><strong>Error!</strong> ' + $("#ValidateForValidField").val());
                    needAlert = true;
                }
                else {
                    $(this).children('a').removeClass("error-form");
                    $("#Q1RegistrationRate").val($("#lnkRegistrationRate").html().replace(/%/g, ''));
                    $("#Q2RegistrationRate").val($("#lnkRegistrationRate").html().replace(/%/g, ''));
                    $("#Q3RegistrationRate").val($("#lnkRegistrationRate").html().replace(/%/g, ''));
                    $("#Q4RegistrationRate").val($("#lnkRegistrationRate").html().replace(/%/g, ''));
                    $("#Q1RegistrationRate").blur();
                }
            }
        }
    });
    //show alert or disappear alert
    if (needAlert == true) {
        $("#successMessage").slideUp(40);
        $("#errorMessage").slideDown(400);
        return true;
        // Show the Alert
    }
    else {
        $("#errorMessage").slideUp(400);
    }
});

function calculateUsableDBSizeQuaterWise() {
    var intQtr = 0;
    if (IsNumeric($("#Q1UsableDatabase").val())) {
        intQtr = parseInt($("#Q1UsableDatabase").val());
    }
    var floatNormalErosion = 0;
    var floatUnsubscribeRate = 0;
    var floatNumberOfTouchesQ1 = 1;
    var floatNumberOfTouchesQ2 = 1;
    var floatNumberOfTouchesQ3 = 1;
    var floatNumberOfTouchesQ4 = 1;

    var floatInboundInquiriesQ1 = 0;
    var floatInboundInquiriesQ2 = 0;
    var floatInboundInquiriesQ3 = 0;
    var floatInboundInquiriesQ4 = 0;

    if ($("#Q1NormalErosion").val().trim() != '') {
        if (IsNumeric($("#Q1NormalErosion").val())) {
            floatNormalErosion = parseFloat($("#Q1NormalErosion").val());
        }
    }
    if ($("#Q1UnsubscribeRate").val().trim() != '') {
        if (IsNumeric($("#Q1UnsubscribeRate").val())) {
            floatUnsubscribeRate = parseFloat($("#Q1UnsubscribeRate").val());
        }
    }

    if ($("#Q1InboundInquiries").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q1InboundInquiries").val().replace(/,/g, ''))) {
            floatInboundInquiriesQ1 = parseFloat($("#Q1InboundInquiries").val().replace(/,/g, ''));
        }
    }
    if ($("#Q2InboundInquiries").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q2InboundInquiries").val().replace(/,/g, ''))) {
            floatInboundInquiriesQ2 = parseFloat($("#Q2InboundInquiries").val().replace(/,/g, ''));
        }
    }
    if ($("#Q3InboundInquiries").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q3InboundInquiries").val().replace(/,/g, ''))) {
            floatInboundInquiriesQ3 = parseFloat($("#Q3InboundInquiries").val().replace(/,/g, ''));
        }
    }
    if ($("#Q4InboundInquiries").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q4InboundInquiries").val().replace(/,/g, ''))) {
            floatInboundInquiriesQ4 = parseFloat($("#Q4InboundInquiries").val().replace(/,/g, ''));
        }
    }

    if ($("#NumberOfTouchesQ1").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#NumberOfTouchesQ1").val().replace(/,/g, ''))) {
            floatNumberOfTouchesQ1 = parseInt($("#NumberOfTouchesQ1").val().replace(/,/g, ''));
        }
    }

    if ($("#NumberOfTouchesQ2").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#NumberOfTouchesQ2").val().replace(/,/g, ''))) {
            floatNumberOfTouchesQ2 = parseInt($("#NumberOfTouchesQ2").val().replace(/,/g, ''));
        }
    }

    if ($("#NumberOfTouchesQ3").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#NumberOfTouchesQ3").val().replace(/,/g, ''))) {
            floatNumberOfTouchesQ3 = parseInt($("#NumberOfTouchesQ3").val().replace(/,/g, ''));
        }
    }

    if ($("#NumberOfTouchesQ4").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#NumberOfTouchesQ4").val().replace(/,/g, ''))) {
            floatNumberOfTouchesQ4 = parseInt($("#NumberOfTouchesQ4").val().replace(/,/g, ''));
        }
    }
    var calDBSizeQuaterWise2 = intQtr * (1 - (floatNormalErosion / 100)) * Math.pow((1 - (floatUnsubscribeRate / 100)), floatNumberOfTouchesQ1) + (floatInboundInquiriesQ1)

    $("#Q2UsableDatabase").val(number_format(calDBSizeQuaterWise2, 2, '.', ','));

    if ($("#Q2UsableDatabase").val().replace(/,/g, '') != "") {
        var calDBSizeQuaterWise3 = parseInt($("#Q2UsableDatabase").val().replace(/,/g, '')) * (1 - (floatNormalErosion / 100)) * (Math.pow((1 - (floatUnsubscribeRate / 100)), floatNumberOfTouchesQ2)) + (floatInboundInquiriesQ2)
        $("#Q3UsableDatabase").val(number_format(calDBSizeQuaterWise3, 2, '.', ','));
    }

    if ($("#Q3UsableDatabase").val().replace(/,/g, '') != "") {
        var calDBSizeQuaterWise3 = parseInt($("#Q3UsableDatabase").val().replace(/,/g, '')) * (1 - (floatNormalErosion / 100)) * (Math.pow((1 - (floatUnsubscribeRate / 100)), floatNumberOfTouchesQ3)) + (floatInboundInquiriesQ3)
        $("#Q4UsableDatabase").val(number_format(calDBSizeQuaterWise3, 2, '.', ','));
    }

    if ($("#Q4UsableDatabase").val().replace(/,/g, '') != '') {

        $("#AllQUsableDatabaseTotal").val($("#Q4UsableDatabase").val());
        $("#hdnAllQUsableDatabaseTotal").val($("#AllQUsableDatabaseTotal").val().replace(/,/g, ''));

    }
    else {
        $("#AllQUsableDatabaseTotal").val(parseFloat(0).toFixed(2));
    }
    calAudiencePlanningSummaryOutboundInquiries();

}

//OUTBOUND Section Calculations.
//To set Outbound CAMPAIGN DRIVEN Normal Erosion of Quarter 2,3 and 4 from Quater 1 Normal Erosion's blur event
$("#Q1NormalErosion").blur(function () {
    if ($("#Q1NormalErosion").val().trim() != '') {
        if (IsNumeric($("#Q1NormalErosion").val())) {
            var floatQ1NormalErosion = 0;
            $("#Q2NormalErosion").val($("#Q1NormalErosion").val());
            $("#Q3NormalErosion").val($("#Q1NormalErosion").val());
            $("#Q4NormalErosion").val($("#Q1NormalErosion").val());
            $("#AllQNormalErosionTotal").val($("#Q1NormalErosion").val());
            calculateUsableDBSizeQuaterWise();
            changeValueToTwoDigit();
            setToolTip();
        }
    }
});

//To set Outbound CAMPAIGN DRIVEN Unsubscribe Rate of Quarter 2,3 and 4 from Quater 1 Unsubscribe Rate's blur event
$("#Q1UnsubscribeRate").blur(function () {
    if ($("#Q1UnsubscribeRate").val().trim() != '') {
        if (IsNumeric($("#Q1UnsubscribeRate").val())) {
            $("#Q2UnsubscribeRate").val($("#Q1UnsubscribeRate").val());
            $("#Q3UnsubscribeRate").val($("#Q2UnsubscribeRate").val());
            $("#Q4UnsubscribeRate").val($("#Q3UnsubscribeRate").val());
            $("#AllQUnsubscribeRateTotal").val($("#Q4UnsubscribeRate").val());
            calculateUsableDBSizeQuaterWise();
            changeValueToTwoDigit();
        }
    }
});

//Call blur event of each Outbound Number of Touches's text box to caluclate total Number of Touches
$("#NumberOfTouchesQ1").blur(function () {
    calculateTotalNumberofTouches();
    calCampaigndrivenModeledOutboundUnpaidInquiries("Q1");
    calAudiencePlanningSummaryOutboundInquiries();
    calculateUsableDBSizeQuaterWise();
    changeValueToTwoDigit();
    setToolTip();
});
$("#NumberOfTouchesQ2").blur(function () {
    calculateTotalNumberofTouches();
    calCampaigndrivenModeledOutboundUnpaidInquiries("Q2");
    calAudiencePlanningSummaryOutboundInquiries();
    calculateUsableDBSizeQuaterWise();
    changeValueToTwoDigit();
    setToolTip();
});
$("#NumberOfTouchesQ3").blur(function () {
    calculateTotalNumberofTouches();
    calCampaigndrivenModeledOutboundUnpaidInquiries("Q3");
    calAudiencePlanningSummaryOutboundInquiries();
    calculateUsableDBSizeQuaterWise();
    changeValueToTwoDigit();
    setToolTip();
});
$("#NumberOfTouchesQ4").blur(function () {
    calculateTotalNumberofTouches();
    calCampaigndrivenModeledOutboundUnpaidInquiries("Q4");
    calAudiencePlanningSummaryOutboundInquiries();
    calculateUsableDBSizeQuaterWise();
    changeValueToTwoDigit();
    setToolTip();
});

//Function to calculate Outbound Number of Touches's Total on blur event of  Quarter 1,2,3 and 4 Number of Touches blur event
function calculateTotalNumberofTouches() {
    var intNumberOfTouchesQ1 = 0;
    var intNumberOfTouchesQ2 = 0;
    var intNumberOfTouchesQ3 = 0;
    var intNumberOfTouchesQ4 = 0;
    var cal = 0;
    if ($("#NumberOfTouchesQ1").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#NumberOfTouchesQ1").val().replace(/,/g, ''))) {
            intNumberOfTouchesQ1 = parseInt($("#NumberOfTouchesQ1").val().replace(/,/g, ''));
        }
    }
    if ($("#NumberOfTouchesQ2").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#NumberOfTouchesQ2").val().replace(/,/g, ''))) {
            intNumberOfTouchesQ2 = parseInt($("#NumberOfTouchesQ2").val().replace(/,/g, ''));
        }
    }
    if ($("#NumberOfTouchesQ3").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#NumberOfTouchesQ3").val().replace(/,/g, ''))) {
            intNumberOfTouchesQ3 = parseInt($("#NumberOfTouchesQ3").val().replace(/,/g, ''));
        }
    }
    if ($("#NumberOfTouchesQ4").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#NumberOfTouchesQ4").val().replace(/,/g, ''))) {
            intNumberOfTouchesQ4 = parseInt($("#NumberOfTouchesQ4").val().replace(/,/g, ''));
        }
    }
    cal = intNumberOfTouchesQ1 + intNumberOfTouchesQ2 + intNumberOfTouchesQ3 + intNumberOfTouchesQ4;
    $("#AllQNumberOfTouchesTotal").val(number_format(cal, 0, '.', ','));

}

//To set Outbound CAMPAIGN DRIVEN CTR Delivered of Quarter 2,3 and 4 from Quater 1 CTR Delivered's blur event
$("#Q1CTRDelivered").blur(function () {
    if ($("#Q1CTRDelivered").val().trim() != '') {
        if (IsNumeric($("#Q1CTRDelivered").val())) {
            $("#Q2CTRDelivered").val($("#Q1CTRDelivered").val());
            $("#Q3CTRDelivered").val($("#Q2CTRDelivered").val());
            $("#Q4CTRDelivered").val($("#Q3CTRDelivered").val());
            $("#AllQCTRDeliveredTotal").val($("#Q4CTRDelivered").val());
            calCampaigndrivenModeledOutboundUnpaidInquiries("ALL");
            calAudiencePlanningSummaryOutboundInquiries();
            changeValueToTwoDigit();
            setToolTip();
        }
    }
});

//To set Outbound CAMPAIGN DRIVEN Registration Rate of Quarter 2,3 and 4 from Quater 1 Registration Rate's blur event
$("#Q1RegistrationRate").blur(function () {
    if ($("#Q1RegistrationRate").val().trim() != '') {
        if (IsNumeric($("#Q1RegistrationRate").val())) {
            $("#Q2RegistrationRate").val($("#Q1RegistrationRate").val());
            $("#Q3RegistrationRate").val($("#Q2RegistrationRate").val());
            $("#Q4RegistrationRate").val($("#Q3RegistrationRate").val());
            $("#AllQRegistrationRateTotal").val(parseFloat($("#Q4RegistrationRate").val()));
            calCampaigndrivenModeledOutboundUnpaidInquiries("ALL");
            calAudiencePlanningSummaryOutboundInquiries();
            changeValueToTwoDigit();
            setToolTip();
        }
    }
});


//function to calculate CAMPAIGN DRIVEN Modeled Outbound Unpaid Inquiries
function calCampaigndrivenModeledOutboundUnpaidInquiries(qtr) {
    var intUsableDatabase = 0;
    var intNumberOfTouches = 0;
    var floatCTRDelivered = 0;
    var floatRegistrationRate = 0;
    var sumAllQModeledOutboundUnpaidInquiriesTotal = 0;

    if (qtr == "ALL" || qtr == "Q1") {
        if ($("#Q1UsableDatabase").val().trim() != '') {
            if (IsNumeric($("#Q1UsableDatabase").val())) {
                intUsableDatabase = parseInt($("#Q1UsableDatabase").val());
            }
        }
        if ($("#NumberOfTouchesQ1").val().replace(/,/g, '').trim() != '') {
            if (IsNumeric($("#NumberOfTouchesQ1").val().replace(/,/g, ''))) {
                intNumberOfTouches = parseInt($("#NumberOfTouchesQ1").val().replace(/,/g, ''));
            }
        }
        if ($("#Q1CTRDelivered").val().trim() != '') {
            if (IsNumeric($("#Q1CTRDelivered").val())) {
                floatCTRDelivered = parseFloat($("#Q1CTRDelivered").val()) / 100;
            }
        }
        if ($("#Q1RegistrationRate").val().trim() != '') {
            if (IsNumeric($("#Q1RegistrationRate").val())) {
                floatRegistrationRate = parseFloat($("#Q1RegistrationRate").val()) / 100;
            }
        }
        var cal = 0;
        cal = (intUsableDatabase * intNumberOfTouches * floatCTRDelivered * floatRegistrationRate);
        sumAllQModeledOutboundUnpaidInquiriesTotal = sumAllQModeledOutboundUnpaidInquiriesTotal + cal;



        //$("#Q1ModeledOutboundUnpaidInquiries").val(cal);
        $("#Q1ModeledOutboundUnpaidInquiries").val(number_format(cal, 2, '.', ','));

        intUsableDatabase = 0;
        intNumberOfTouches = 0;
        floatCTRDelivered = 0;
        floatRegistrationRate = 0;
    }
    if (qtr == "ALL" || qtr == "Q2") {
        if ($("#Q2UsableDatabase").val().replace(/,/g, '').trim() != '') {
            if (IsNumeric($("#Q2UsableDatabase").val().replace(/,/g, ''))) {
                intUsableDatabase = parseInt($("#Q2UsableDatabase").val().replace(/,/g, ''));
            }
        }
        if ($("#NumberOfTouchesQ2").val().replace(/,/g, '').trim() != '') {
            if (IsNumeric($("#NumberOfTouchesQ2").val().replace(/,/g, ''))) {
                intNumberOfTouches = parseInt($("#NumberOfTouchesQ2").val().replace(/,/g, ''));
            }
        }
        if ($("#Q2CTRDelivered").val().trim() != '') {
            if (IsNumeric($("#Q2CTRDelivered").val())) {
                floatCTRDelivered = parseFloat($("#Q2CTRDelivered").val()) / 100;
            }
        }
        if ($("#Q2RegistrationRate").val().trim() != '') {
            if (IsNumeric($("#Q2RegistrationRate").val())) {
                floatRegistrationRate = parseFloat($("#Q2RegistrationRate").val()) / 100;
            }
        }
        var cal = 0;
        cal = (intUsableDatabase * intNumberOfTouches * floatCTRDelivered * floatRegistrationRate);
        sumAllQModeledOutboundUnpaidInquiriesTotal = sumAllQModeledOutboundUnpaidInquiriesTotal + cal;

        //$("#Q2ModeledOutboundUnpaidInquiries").val(cal);
        $("#Q2ModeledOutboundUnpaidInquiries").val(number_format(cal, 2, '.', ','));

        intUsableDatabase = 0;
        intNumberOfTouches = 0;
        floatCTRDelivered = 0;
        floatRegistrationRate = 0;
    }
    if (qtr == "ALL" || qtr == "Q3") {
        if ($("#Q3UsableDatabase").val().replace(/,/g, '').trim() != '') {
            if (IsNumeric($("#Q3UsableDatabase").val().replace(/,/g, ''))) {
                intUsableDatabase = parseInt($("#Q3UsableDatabase").val().replace(/,/g, ''));
            }
        }
        if ($("#NumberOfTouchesQ3").val().trim().replace(/,/g, '') != '') {
            if (IsNumeric($("#NumberOfTouchesQ3").val().replace(/,/g, ''))) {
                intNumberOfTouches = parseInt($("#NumberOfTouchesQ3").val().replace(/,/g, ''));
            }
        }
        if ($("#Q3CTRDelivered").val().trim() != '') {
            if (IsNumeric($("#Q3CTRDelivered").val())) {
                floatCTRDelivered = parseFloat($("#Q3CTRDelivered").val()) / 100;
            }
        }
        if ($("#Q3RegistrationRate").val().trim() != '') {
            if (IsNumeric($("#Q3RegistrationRate").val())) {
                floatRegistrationRate = parseFloat($("#Q3RegistrationRate").val()) / 100;
            }
        }

        var cal = 0;
        cal = (intUsableDatabase * intNumberOfTouches * floatCTRDelivered * floatRegistrationRate);
        sumAllQModeledOutboundUnpaidInquiriesTotal = sumAllQModeledOutboundUnpaidInquiriesTotal + cal;

        //$("#Q3ModeledOutboundUnpaidInquiries").val(cal);
        $("#Q3ModeledOutboundUnpaidInquiries").val(number_format(cal, 2, '.', ','));

        intUsableDatabase = 0;
        intNumberOfTouches = 0;
        floatCTRDelivered = 0;
        floatRegistrationRate = 0;
    }
    if (qtr == "ALL" || qtr == "Q4") {
        if ($("#Q4UsableDatabase").val().replace(/,/g, '').trim() != '') {
            if (IsNumeric($("#Q4UsableDatabase").val().replace(/,/g, ''))) {
                intUsableDatabase = parseInt($("#Q4UsableDatabase").val().replace(/,/g, ''));
            }
        }
        if ($("#NumberOfTouchesQ4").val().replace(/,/g, '').trim() != '') {
            if (IsNumeric($("#NumberOfTouchesQ4").val().replace(/,/g, ''))) {
                intNumberOfTouches = parseInt($("#NumberOfTouchesQ4").val().replace(/,/g, ''));
            }
        }
        if ($("#Q4CTRDelivered").val().trim() != '') {
            if (IsNumeric($("#Q4CTRDelivered").val())) {
                floatCTRDelivered = parseFloat($("#Q4CTRDelivered").val()) / 100;
            }
        }
        if ($("#Q4RegistrationRate").val().trim() != '') {
            if (IsNumeric($("#Q4RegistrationRate").val())) {
                floatRegistrationRate = parseFloat($("#Q4RegistrationRate").val()) / 100;
            }
        }

        var cal = 0;
        cal = (intUsableDatabase * intNumberOfTouches * floatCTRDelivered * floatRegistrationRate);
        sumAllQModeledOutboundUnpaidInquiriesTotal = sumAllQModeledOutboundUnpaidInquiriesTotal + cal;

        //$("#Q4ModeledOutboundUnpaidInquiries").val(cal);
        $("#Q4ModeledOutboundUnpaidInquiries").val(number_format(cal, 2, '.', ','));

        intUsableDatabase = 0;
        intNumberOfTouches = 0;
        floatCTRDelivered = 0;
        floatRegistrationRate = 0;
    }
    //$("#AllQModeledOutboundUnpaidInquiriesTotal").val(sumAllQModeledOutboundUnpaidInquiriesTotal);
    $("#AllQModeledOutboundUnpaidInquiriesTotal").val(number_format(sumAllQModeledOutboundUnpaidInquiriesTotal, 2, '.', ','));
}


//Call blur event of each Outbound List Acquisitions's text box to caluclate total List Acquisitions
$("#ListAcquisitionsQ1").blur(function () {
    calculateTotalListAcquisitions();
    calAcquisitionCostperContactTotal();
    calculateTotalNumberofTouches();
    calListAcquisitionCostperList("Q1");
    calTotalListAcquisitionCostperList();

    //set Q1 CumulativeList value
    if ($("#ListAcquisitionsQ1").val().replace(/,/g, '') != '') {
        if (IsNumeric($("#ListAcquisitionsQ1").val().replace(/,/g, ''))) {
            //$("#Q1CumulativeList").val($("#ListAcquisitionsQ1").val().replace(/,/g, ''));
            $("#Q1CumulativeList").val($("#ListAcquisitionsQ1").val());
            calOutboundCumulativeList("ALL");
            calOutboundCostperCumulativeContact("Q1");
        }
    }
    calAudiencePlanningSummaryOutboundInquiries();
    calAudiencePlanningSummaryListAcquisitionBudget();
    changeValueToTwoDigit();
    setToolTip();
});
$("#ListAcquisitionsQ2").blur(function () {
    calculateTotalListAcquisitions();
    calAcquisitionCostperContactTotal();
    calculateTotalNumberofTouches();
    calListAcquisitionCostperList("Q2");
    calTotalListAcquisitionCostperList();
    calOutboundCumulativeList("Q2");
    calOutboundCostperCumulativeContact("Q2");
    calAudiencePlanningSummaryOutboundInquiries();
    calAudiencePlanningSummaryListAcquisitionBudget();
    changeValueToTwoDigit();
    setToolTip();

});
$("#ListAcquisitionsQ3").blur(function () {
    calculateTotalListAcquisitions();
    calAcquisitionCostperContactTotal();
    calculateTotalNumberofTouches();
    calListAcquisitionCostperList("Q3");
    calTotalListAcquisitionCostperList();
    calOutboundCumulativeList("Q3");
    calOutboundCostperCumulativeContact("Q3");
    calAudiencePlanningSummaryOutboundInquiries();
    calAudiencePlanningSummaryListAcquisitionBudget();
    changeValueToTwoDigit();
    setToolTip();

});
$("#ListAcquisitionsQ4").blur(function () {
    calculateTotalListAcquisitions();
    calAcquisitionCostperContactTotal();
    calculateTotalNumberofTouches();
    calListAcquisitionCostperList("Q4");
    calTotalListAcquisitionCostperList();
    calOutboundCumulativeList("Q4");
    calOutboundCostperCumulativeContact("Q4");
    calAudiencePlanningSummaryOutboundInquiries();
    calAudiencePlanningSummaryListAcquisitionBudget();
    changeValueToTwoDigit();
    setToolTip();

});

//Function to calculate Outbound List Acquisitions's Total on blur event of  Quarter 1,2,3 and 4 List Acquisitions blur event
function calculateTotalListAcquisitions() {
    var intListAcquisitionsQ1 = 0;
    var intListAcquisitionsQ2 = 0;
    var intListAcquisitionsQ3 = 0;
    var intListAcquisitionsQ4 = 0;
    var cal = 0;
    if ($("#ListAcquisitionsQ1").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#ListAcquisitionsQ1").val().replace(/,/g, ''))) {
            intListAcquisitionsQ1 = parseInt($("#ListAcquisitionsQ1").val().replace(/,/g, ''));
        }
    }
    if ($("#ListAcquisitionsQ2").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#ListAcquisitionsQ2").val().replace(/,/g, ''))) {
            intListAcquisitionsQ2 = parseInt($("#ListAcquisitionsQ2").val().replace(/,/g, ''));
        }
    }
    if ($("#ListAcquisitionsQ3").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#ListAcquisitionsQ3").val().replace(/,/g, ''))) {
            intListAcquisitionsQ3 = parseInt($("#ListAcquisitionsQ3").val().replace(/,/g, ''));
        }
    }
    if ($("#ListAcquisitionsQ4").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#ListAcquisitionsQ4").val().replace(/,/g, ''))) {
            intListAcquisitionsQ4 = parseInt($("#ListAcquisitionsQ4").val().replace(/,/g, ''));
        }
    }
    cal = intListAcquisitionsQ1 + intListAcquisitionsQ2 + intListAcquisitionsQ3 + intListAcquisitionsQ4;
    $("#AllListAcquisitionsQTotal").val(number_format(cal, 2, '.', ','));

}

//To set Outbound CAMPAIGN DRIVEN Cost per Contact of Quarter 2,3 and 4 from Quater 1 Cost per Contact's blur event
$("#Acquisition_CostperContactQ1").blur(function () {
    if ($("#Acquisition_CostperContactQ1").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Acquisition_CostperContactQ1").val().replace(/,/g, ''))) {
            $("#Acquisition_CostperContactQ2").val($("#Acquisition_CostperContactQ1").val());
            $("#Acquisition_CostperContactQ3").val($("#Acquisition_CostperContactQ2").val());
            $("#Acquisition_CostperContactQ4").val($("#Acquisition_CostperContactQ3").val());
            calListAcquisitionCostperList("ALL");
            calTotalListAcquisitionCostperList();
            calAudiencePlanningSummaryListAcquisitionBudget();
            changeValueToTwoDigit();
            setToolTip();
        }
    }
});

//function to calculate outbound LIST ACQUISITION Cost per List of all quarter
function calListAcquisitionCostperList(qtr) {
    var intListAcquisitions = 0;
    var floatAcquisitionCostperContact = 0;
    var sumAllAcquisitionCostperContactQTotal = 0;

    if (qtr == "ALL" || qtr == "Q1") {
        if ($("#ListAcquisitionsQ1").val().replace(/,/g, '').trim() != '') {
            if (IsNumeric($("#ListAcquisitionsQ1").val().replace(/,/g, ''))) {
                intListAcquisitions = parseInt($("#ListAcquisitionsQ1").val().replace(/,/g, ''));
            }
        }
        if ($("#Acquisition_CostperContactQ1").val().replace(/,/g, '').trim() != '') {
            if (IsNumeric($("#Acquisition_CostperContactQ1").val().replace(/,/g, ''))) {
                floatAcquisitionCostperContact = parseFloat($("#Acquisition_CostperContactQ1").val().replace(/,/g, ''));
            }
        }
        var cal = 0;
        cal = intListAcquisitions * floatAcquisitionCostperContact;
        $("#Q1CostperList").val(number_format(cal, 2, '.', ','));
        calOutboundCostperCumulativeContact("Q1");
        sumAllAcquisitionCostperContactQTotal = sumAllAcquisitionCostperContactQTotal + cal;
        intListAcquisitions = 0;
        floatAcquisitionCostperContact = 0;
    }

    if (qtr == "ALL" || qtr == "Q2") {
        if ($("#ListAcquisitionsQ2").val().replace(/,/g, '').trim() != '') {
            if (IsNumeric($("#ListAcquisitionsQ2").val().replace(/,/g, ''))) {
                intListAcquisitions = parseInt($("#ListAcquisitionsQ2").val().replace(/,/g, ''));
            }
        }
        if ($("#Acquisition_CostperContactQ2").val().replace(/,/g, '').trim() != '') {
            if (IsNumeric($("#Acquisition_CostperContactQ2").val().replace(/,/g, ''))) {
                floatAcquisitionCostperContact = parseFloat($("#Acquisition_CostperContactQ2").val().replace(/,/g, ''));
            }
        }

        var cal = 0;
        cal = intListAcquisitions * floatAcquisitionCostperContact;
        //$("#Q2CostperList").val(cal);
        $("#Q2CostperList").val(number_format(cal, 2, '.', ','));
        calOutboundCostperCumulativeContact("Q2");
        sumAllAcquisitionCostperContactQTotal = sumAllAcquisitionCostperContactQTotal + cal;
        intListAcquisitions = 0;
        floatAcquisitionCostperContact = 0;
    }

    if (qtr == "ALL" || qtr == "Q3") {
        if ($("#ListAcquisitionsQ3").val().replace(/,/g, '').trim() != '') {
            if (IsNumeric($("#ListAcquisitionsQ3").val().replace(/,/g, ''))) {
                intListAcquisitions = parseInt($("#ListAcquisitionsQ3").val().replace(/,/g, ''));
            }
        }
        if ($("#Acquisition_CostperContactQ3").val().replace(/,/g, '').trim() != '') {
            if (IsNumeric($("#Acquisition_CostperContactQ3").val().replace(/,/g, ''))) {
                floatAcquisitionCostperContact = parseFloat($("#Acquisition_CostperContactQ3").val().replace(/,/g, ''));
            }
        }

        var cal = 0;
        cal = intListAcquisitions * floatAcquisitionCostperContact;
        $("#Q3CostperList").val(number_format(cal, 2, '.', ','));
        calOutboundCostperCumulativeContact("Q3");
        sumAllAcquisitionCostperContactQTotal = sumAllAcquisitionCostperContactQTotal + cal;
        intListAcquisitions = 0;
        floatAcquisitionCostperContact = 0;
    }

    if (qtr == "ALL" || qtr == "Q4") {
        if ($("#ListAcquisitionsQ4").val().replace(/,/g, '').trim() != '') {
            if (IsNumeric($("#ListAcquisitionsQ4").val().replace(/,/g, ''))) {
                intListAcquisitions = parseInt($("#ListAcquisitionsQ4").val().replace(/,/g, ''));
            }
        }
        if ($("#Acquisition_CostperContactQ4").val().replace(/,/g, '').trim() != '') {
            if (IsNumeric($("#Acquisition_CostperContactQ4").val().replace(/,/g, ''))) {
                floatAcquisitionCostperContact = parseFloat($("#Acquisition_CostperContactQ4").val().replace(/,/g, ''));
            }
        }
        var cal = 0;
        cal = intListAcquisitions * floatAcquisitionCostperContact;
        //$("#Q4CostperList").val(cal);
        $("#Q4CostperList").val(number_format(cal, 2, '.', ','));
        calOutboundCostperCumulativeContact("Q4");
        sumAllAcquisitionCostperContactQTotal = sumAllAcquisitionCostperContactQTotal + cal;
    }

}

//Function to calculate Outbound Cost per Lists Total
function calTotalListAcquisitionCostperList() {
    var floatQ1CostperList = 0;
    var floatQ2CostperList = 0;
    var floatQ3CostperList = 0;
    var floatQ4CostperList = 0;
    var cal = 0;
    var QCostperListTotal = 0;

    if ($("#Q1CostperList").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q1CostperList").val().replace(/,/g, ''))) {
            floatQ1CostperList = parseFloat($("#Q1CostperList").val().replace(/,/g, ''));
        }
    }
    if ($("#Q2CostperList").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q2CostperList").val().replace(/,/g, ''))) {
            floatQ2CostperList = parseFloat($("#Q2CostperList").val().replace(/,/g, ''));
        }
    }
    if ($("#Q3CostperList").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q3CostperList").val().replace(/,/g, ''))) {
            floatQ3CostperList = parseFloat($("#Q3CostperList").val().replace(/,/g, ''));
        }
    }
    if ($("#Q4CostperList").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q4CostperList").val().replace(/,/g, ''))) {
            floatQ4CostperList = parseFloat($("#Q4CostperList").val().replace(/,/g, ''));
        }
    }
    QCostperListTotal = floatQ1CostperList + floatQ2CostperList + floatQ3CostperList + floatQ4CostperList;
    $("#AllQCostperListTotal").val(number_format(QCostperListTotal, 2, '.', ','));

    if ($("#AllListAcquisitionsQTotal").val().replace(/,/g, '') != "0") {
        if ($("#AllQCostperListTotal").val() != "0.00" || $("#AllListAcquisitionsQTotal").val().replace(/,/g, '') != "0") {
            cal = parseFloat($("#AllQCostperListTotal").val()) / parseFloat($("#AllListAcquisitionsQTotal").val().replace(/,/g, ''))
            //$("#AllAcquisitionCostperContactQTotal").val(parseFloat($("#AllQCostperListTotal").val()) / parseFloat($("#AllListAcquisitionsQTotal").val().replace(/,/g, '')));
            $("#AllAcquisitionCostperContactQTotal").val(number_format(cal, 2, '.', ','));
        }
    }

}

//Function to calculate Outbound Cost per Contact Total
function calAcquisitionCostperContactTotal() {
    var cal = 0;
    if ($("#AllListAcquisitionsQTotal").val().replace(/,/g, '') != "0") {
        if ($("#AllQCostperListTotal").val() != "0.00" || $("#AllQCumulativeListTotal").val() != "0") {
            //$("#AllQCostperCumulativeContactTotal").val(parseFloat($("#AllQCostperListTotal").val()) / parseFloat($("#AllListAcquisitionsQTotal").val().replace(/,/g, '')));
            cal = parseFloat($("#AllQCostperListTotal").val()) / parseFloat($("#AllQCumulativeListTotal").val().replace(/,/g, ''));
            $("#AllQCostperCumulativeContactTotal").val(number_format(cal, 2, '.', ','));
        }
    }
    else {
        $("#AllQCostperCumulativeContactTotal").val(parseFloat(0))
    }
}

//function to calculate Outbound Cumulative List

function calOutboundCumulativeList(qtr) {
    var floatCumulativeList = 1;
    var floatOutBoundErosion = 0;
    var floatOutBoundUnsubscribeRate = 0;
    var intAcquisitionNumberofTouches = 1;
    var floatListAcquisitions = 0;
    var varpow = 1;

    if (qtr == "ALL" || qtr == "Q2") {
        if ($("#ListAcquisitionsQ2").val().replace(/,/g, '').trim() != '') {
            if (IsNumeric($("#ListAcquisitionsQ2").val().replace(/,/g, ''))) {
                floatListAcquisitions = parseFloat($("#ListAcquisitionsQ2").val().replace(/,/g, ''));
            }
        }
        if ($("#Q1CumulativeList").val().replace(/,/g, '').trim() != '') {
            if (IsNumeric($("#Q1CumulativeList").val().replace(/,/g, ''))) {
                floatCumulativeList = parseFloat($("#Q1CumulativeList").val().replace(/,/g, ''));
            }
        }
        if ($("#Q1OutBoundErosion").val().trim() != '') {
            if (IsNumeric($("#Q1OutBoundErosion").val())) {
                floatOutBoundErosion = parseFloat($("#Q1OutBoundErosion").val()) / 100;
            }
        }
        if ($("#Q1OutBoundUnsubscribeRate").val().trim() != '') {
            if (IsNumeric($("#Q1OutBoundUnsubscribeRate").val())) {
                floatOutBoundUnsubscribeRate = parseFloat($("#Q1OutBoundUnsubscribeRate").val()) / 100;
            }
        }
        if ($("#Acquisition_NumberofTouchesQ1").val().replace(/,/g, '').trim() != '') {
            if (IsNumeric($("#Acquisition_NumberofTouchesQ1").val().replace(/,/g, ''))) {
                intAcquisitionNumberofTouches = parseFloat($("#Acquisition_NumberofTouchesQ1").val().replace(/,/g, ''));
            }
        }

        varpow = Math.pow((1 - floatOutBoundUnsubscribeRate), intAcquisitionNumberofTouches);

        var cal = 0;
        cal = floatCumulativeList * (1 - floatOutBoundErosion) * (varpow) + floatListAcquisitions;
        //$("#Q2CumulativeList").val(cal);
        $("#Q2CumulativeList").val(number_format(cal, 2, '.', ','));
    }

    floatCumulativeList = 1;
    floatOutBoundErosion = 0;
    floatOutBoundUnsubscribeRate = 0;
    intAcquisitionNumberofTouches = 1;
    floatListAcquisitions = 0;
    if (qtr == "ALL" || qtr == "Q3") {
        if ($("#ListAcquisitionsQ3").val().replace(/,/g, '').trim() != '') {
            if (IsNumeric($("#ListAcquisitionsQ3").val().replace(/,/g, ''))) {
                floatListAcquisitions = parseFloat($("#ListAcquisitionsQ3").val().replace(/,/g, ''));
            }
        }
        if ($("#Q2CumulativeList").val().replace(/,/g, '').trim() != '') {
            if (IsNumeric($("#Q2CumulativeList").val().replace(/,/g, ''))) {
                floatCumulativeList = parseFloat($("#Q2CumulativeList").val().replace(/,/g, ''));
            }
        }
        if ($("#Q2OutBoundErosion").val().trim() != '') {
            if (IsNumeric($("#Q2OutBoundErosion").val())) {
                floatOutBoundErosion = parseFloat($("#Q2OutBoundErosion").val()) / 100;
            }
        }
        if ($("#Q2OutBoundUnsubscribeRate").val().trim() != '') {
            if (IsNumeric($("#Q2OutBoundUnsubscribeRate").val())) {
                floatOutBoundUnsubscribeRate = parseFloat($("#Q2OutBoundUnsubscribeRate").val()) / 100;
            }
        }
        if ($("#Acquisition_NumberofTouchesQ2").val().replace(/,/g, '').trim() != '') {
            if (IsNumeric($("#Acquisition_NumberofTouchesQ2").val().replace(/,/g, ''))) {
                intAcquisitionNumberofTouches = parseFloat($("#Acquisition_NumberofTouchesQ2").val().replace(/,/g, ''));
            }
        }

        var cal = 0;
        varpow = Math.pow((1 - floatOutBoundUnsubscribeRate), intAcquisitionNumberofTouches);
        cal = floatCumulativeList * (1 - floatOutBoundErosion) * (varpow) + floatListAcquisitions;

        //$("#Q3CumulativeList").val(cal);
        $("#Q3CumulativeList").val(number_format(cal, 2, '.', ','));
    }
    floatCumulativeList = 1;
    floatOutBoundErosion = 0;
    floatOutBoundUnsubscribeRate = 0;
    intAcquisitionNumberofTouches = 1;
    floatListAcquisitions = 0;
    if (qtr == "ALL" || qtr == "Q4") {
        if ($("#ListAcquisitionsQ4").val().replace(/,/g, '').trim() != '') {
            if (IsNumeric($("#ListAcquisitionsQ4").val().replace(/,/g, ''))) {
                floatListAcquisitions = parseFloat($("#ListAcquisitionsQ4").val().replace(/,/g, ''));
            }
        }
        if ($("#Q3CumulativeList").val().replace(/,/g, '').trim() != '') {
            if (IsNumeric($("#Q3CumulativeList").val().replace(/,/g, ''))) {
                floatCumulativeList = parseFloat($("#Q3CumulativeList").val().replace(/,/g, ''));
            }
        }
        if ($("#Q3OutBoundErosion").val().trim() != '') {
            if (IsNumeric($("#Q3OutBoundErosion").val())) {
                floatOutBoundErosion = parseFloat($("#Q3OutBoundErosion").val()) / 100;
            }
        }
        if ($("#Q3OutBoundUnsubscribeRate").val().trim() != '') {
            if (IsNumeric($("#Q3OutBoundUnsubscribeRate").val())) {
                floatOutBoundUnsubscribeRate = parseFloat($("#Q3OutBoundUnsubscribeRate").val()) / 100;
            }
        }
        if ($("#Acquisition_NumberofTouchesQ3").val().replace(/,/g, '').trim() != '') {
            if (IsNumeric($("#Acquisition_NumberofTouchesQ3").val().replace(/,/g, ''))) {
                intAcquisitionNumberofTouches = parseFloat($("#Acquisition_NumberofTouchesQ3").val().replace(/,/g, ''));
            }
        }

        var cal = 0;
        varpow = Math.pow((1 - floatOutBoundUnsubscribeRate), intAcquisitionNumberofTouches);
        cal = floatCumulativeList * (1 - floatOutBoundErosion) * (varpow) + floatListAcquisitions;

        //$("#Q4CumulativeList").val(cal);
        $("#Q4CumulativeList").val(number_format(cal, 2, '.', ','));

        $("#AllQCumulativeListTotal").val(number_format(cal, 2, '.', ','));
        $("#hdnAllQCumulativeListTotal").val(cal);
        calAcquisitionCostperContactTotal();
    }
    calListAcquisitionsModeledOutboundUnpaidInquiriesTotal("ALL");
}

//function to calculate outbound Cost per Cumulative Contact
function calOutboundCostperCumulativeContact(qtr) {

    var cal = 0;
    if (qtr == "ALL" || qtr == "Q1") {
        if ($("#Q1CumulativeList").val().replace(/,/g, '').trim() != '' && $("#Q1CostperList").val().replace(/,/g, '').trim() != '') {
            if (IsNumeric($("#Q1CumulativeList").val().replace(/,/g, '')) && IsNumeric($("#Q1CostperList").val().replace(/,/g, ''))) {
                if ($("#Q1CumulativeList").val().replace(/,/g, '') != "0" && $("#Q1CostperList").val().replace(/,/g, '') != "0") {
                    cal = parseFloat($("#Q1CostperList").val().replace(/,/g, '')) / parseFloat($("#Q1CumulativeList").val().replace(/,/g, ''));
                    //$("#Q1CostperCumulativeContact").val(cal);
                    $("#Q1CostperCumulativeContact").val(number_format(cal, 2, '.', ','));
                }
                else {
                    $("#Q1CostperCumulativeContact").val(cal);
                }
            }
        }
    }
    cal = 0;

    if (qtr == "ALL" || qtr == "Q2") {
        if ($("#Q2CumulativeList").val().replace(/,/g, '').trim() != '' && $("#Q2CostperList").val().replace(/,/g, '').trim() != '') {
            if (IsNumeric($("#Q2CumulativeList").val().replace(/,/g, '')) && IsNumeric($("#Q2CostperList").val().replace(/,/g, ''))) {
                if ($("#Q2CumulativeList").val().replace(/,/g, '') != "0" && $("#Q2CostperList").val().replace(/,/g, '') != "0") {
                    cal = parseFloat($("#Q2CostperList").val().replace(/,/g, '')) / parseFloat($("#Q2CumulativeList").val().replace(/,/g, ''));
                    $("#Q2CostperCumulativeContact").val(number_format(cal, 2, '.', ','));
                }
                else {
                    $("#Q2CostperCumulativeContact").val(cal);
                }
            }
        }
    }

    cal = 0;
    if (qtr == "ALL" || qtr == "Q3") {
        if ($("#Q3CumulativeList").val().replace(/,/g, '').trim() != '' && $("#Q3CostperList").val().replace(/,/g, '').trim() != '') {
            if (IsNumeric($("#Q3CumulativeList").val().replace(/,/g, '')) && IsNumeric($("#Q3CostperList").val().replace(/,/g, ''))) {
                if ($("#Q3CumulativeList").val().replace(/,/g, '') != "0" && $("#Q3CostperList").val().replace(/,/g, '') != "0") {
                    cal = parseFloat($("#Q3CostperList").val().replace(/,/g, '')) / parseFloat($("#Q3CumulativeList").val().replace(/,/g, ''));
                    $("#Q3CostperCumulativeContact").val(number_format(cal, 2, '.', ','));
                }
                else {
                    $("#Q3CostperCumulativeContact").val(cal);
                }
            }
        }
        cal = 0;
    }

    if (qtr == "ALL" || qtr == "Q4") {
        if ($("#Q4CumulativeList").val().replace(/,/g, '').trim() != '' && $("#Q4CostperList").val().replace(/,/g, '').trim() != '') {
            if (IsNumeric($("#Q4CumulativeList").val().replace(/,/g, '')) && IsNumeric($("#Q4CostperList").val().replace(/,/g, ''))) {
                if ($("#Q4CumulativeList").val().replace(/,/g, '') != "0" && $("#Q4CostperList").val().replace(/,/g, '') != "0") {
                    cal = parseFloat($("#Q4CostperList").val().replace(/,/g, '')) / parseFloat($("#Q4CumulativeList").val().replace(/,/g, ''));
                    //$("#Q4CostperCumulativeContact").val(cal);
                    $("#Q4CostperCumulativeContact").val(number_format(cal, 2, '.', ','));
                }
                else {
                    $("#Q4CostperCumulativeContact").val(cal);
                }
            }
        }
    }

}


//To set OutBound Erosion for Quarter 2,3 and 4 on Quater 1's Erosion blur event
$("#Q1OutBoundErosion").blur(function () {
    if ($("#Q1OutBoundErosion").val().trim() != '') {
        if (IsNumeric($("#Q1OutBoundErosion").val())) {

            $("#Q2OutBoundErosion").val($("#Q1OutBoundErosion").val());
            $("#Q3OutBoundErosion").val($("#Q1OutBoundErosion").val());
            $("#Q4OutBoundErosion").val($("#Q1OutBoundErosion").val());
            $("#AllQOutBoundErosionTotal").val(parseFloat($("#Q4OutBoundErosion").val()));
            calOutboundCumulativeList("ALL");
            calOutboundCostperCumulativeContact("ALL");
            changeValueToTwoDigit();
            setToolTip();
        }
    }
});

//To set OutBound Unsubscribe Rate for Quarter 2,3 and 4 on Quater 1's Unsubscribe Rate blur event
$("#Q1OutBoundUnsubscribeRate").blur(function () {
    if ($("#Q1OutBoundUnsubscribeRate").val().trim() != '') {
        if (IsNumeric($("#Q1OutBoundUnsubscribeRate").val())) {

            $("#Q2OutBoundUnsubscribeRate").val($("#Q1OutBoundUnsubscribeRate").val());
            $("#Q3OutBoundUnsubscribeRate").val($("#Q1OutBoundUnsubscribeRate").val());
            $("#Q4OutBoundUnsubscribeRate").val($("#Q1OutBoundUnsubscribeRate").val());
            $("#AllQOutBoundUnsubscribeRateTotal").val(parseFloat($("#Q4OutBoundUnsubscribeRate").val()));
            calOutboundCumulativeList("ALL");
            calOutboundCostperCumulativeContact("ALL");
            changeValueToTwoDigit();
            setToolTip();
        }
    }
});

//function to caluclate total of  Outbound List Acquisitions number of touches 

function calOutboundListAcquisitionsnumberoftouches() {

    var intAcquisitionNumberofTouchesQ1 = 0;
    var intAcquisitionNumberofTouchesQ2 = 0;
    var intAcquisitionNumberofTouchesQ3 = 0;
    var intAcquisitionNumberofTouchesQ4 = 0;
    var cal = 0;
    if ($("#Acquisition_NumberofTouchesQ1").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Acquisition_NumberofTouchesQ1").val().replace(/,/g, ''))) {
            intAcquisitionNumberofTouchesQ1 = parseFloat($("#Acquisition_NumberofTouchesQ1").val().replace(/,/g, ''));
        }
    }
    if ($("#Acquisition_NumberofTouchesQ2").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Acquisition_NumberofTouchesQ2").val().replace(/,/g, ''))) {
            intAcquisitionNumberofTouchesQ2 = parseFloat($("#Acquisition_NumberofTouchesQ2").val().replace(/,/g, ''));
        }
    }
    if ($("#Acquisition_NumberofTouchesQ3").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Acquisition_NumberofTouchesQ3").val().replace(/,/g, ''))) {
            intAcquisitionNumberofTouchesQ3 = parseFloat($("#Acquisition_NumberofTouchesQ3").val().replace(/,/g, ''));
        }
    }
    if ($("#Acquisition_NumberofTouchesQ4").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Acquisition_NumberofTouchesQ4").val().replace(/,/g, ''))) {
            intAcquisitionNumberofTouchesQ4 = parseFloat($("#Acquisition_NumberofTouchesQ4").val().replace(/,/g, ''));
        }
    }
    cal = intAcquisitionNumberofTouchesQ1 + intAcquisitionNumberofTouchesQ2 + intAcquisitionNumberofTouchesQ3 + intAcquisitionNumberofTouchesQ4;
    $("#AllAcquisitionNumberofTouchesQTotal").val(number_format(cal, 2, '.', ','));

}

$("#Acquisition_NumberofTouchesQ1").blur(function () {
    calOutboundListAcquisitionsnumberoftouches();
    calOutboundCumulativeList("Q1");
    calListAcquisitionsModeledOutboundUnpaidInquiriesTotal("Q1");
    calAudiencePlanningSummaryOutboundInquiries();
    calOutboundCostperCumulativeContact("ALL");
    changeValueToTwoDigit();
    setToolTip();
});
$("#Acquisition_NumberofTouchesQ2").blur(function () {
    calOutboundListAcquisitionsnumberoftouches();
    calOutboundCumulativeList("Q2");
    calListAcquisitionsModeledOutboundUnpaidInquiriesTotal("Q2");
    calAudiencePlanningSummaryOutboundInquiries();
    calOutboundCostperCumulativeContact("ALL");
    changeValueToTwoDigit();
    setToolTip();
});
$("#Acquisition_NumberofTouchesQ3").blur(function () {
    calOutboundListAcquisitionsnumberoftouches();
    calOutboundCumulativeList("Q3");
    calListAcquisitionsModeledOutboundUnpaidInquiriesTotal("Q3");
    calAudiencePlanningSummaryOutboundInquiries();
    calOutboundCostperCumulativeContact("ALL");
    changeValueToTwoDigit();
    setToolTip();
});
$("#Acquisition_NumberofTouchesQ4").blur(function () {
    calOutboundListAcquisitionsnumberoftouches();
    calOutboundCumulativeList("Q4");
    calListAcquisitionsModeledOutboundUnpaidInquiriesTotal("Q4");
    calAudiencePlanningSummaryOutboundInquiries();
    calOutboundCostperCumulativeContact("ALL");
    changeValueToTwoDigit();
    setToolTip();
});


//To set OutBound List Acquisitions CTR Delivered for Quarter 2,3 and 4 on Quater 1's CTR Delivered blur event
$("#Q1OutboundCTRDelivered").blur(function () {
    if ($("#Q1OutboundCTRDelivered").val().trim() != '') {
        if (IsNumeric($("#Q1OutboundCTRDelivered").val())) {



            $("#Q2OutboundCTRDelivered").val($("#Q1OutboundCTRDelivered").val());
            $("#Q3OutboundCTRDelivered").val($("#Q1OutboundCTRDelivered").val());
            $("#Q4OutboundCTRDelivered").val($("#Q1OutboundCTRDelivered").val());
            $("#AllQOutboundCTRDeliveredTotal").val(parseFloat($("#Q1OutboundCTRDelivered").val()));

            calListAcquisitionsModeledOutboundUnpaidInquiriesTotal("ALL");
            calAudiencePlanningSummaryOutboundInquiries();
            changeValueToTwoDigit();
            setToolTip();
        }
    }
});


//To set OutBound List Acquisitions Registration Rate for Quarter 2,3 and 4 on Quater 1's Registration Rate blur event
$("#Acquisition_RegistrationRate").blur(function () {
    if ($("#Acquisition_RegistrationRate").val().trim() != '') {
        if (IsNumeric($("#Acquisition_RegistrationRate").val())) {



            $("#Q2AcquisitionRegistrationRate").val($("#Acquisition_RegistrationRate").val());
            $("#Q3AcquisitionRegistrationRate").val($("#Acquisition_RegistrationRate").val());
            $("#Q4AcquisitionRegistrationRate").val($("#Acquisition_RegistrationRate").val());
            $("#AllQAcquisitionRegistrationRateTotal").val(parseFloat($("#Acquisition_RegistrationRate").val()));
            calListAcquisitionsModeledOutboundUnpaidInquiriesTotal("ALL");
            calAudiencePlanningSummaryOutboundInquiries();
            changeValueToTwoDigit();
            setToolTip();
        }
    }
});

//function to calculate List Acquisitions Modeled OutboundUnpaid Inquiries Total

function calListAcquisitionsModeledOutboundUnpaidInquiriesTotal(qtr) {

    var floatCumulativeListSize = 0;
    var intNumberoftouches = 0;
    var floatCTRDelivered = 0;
    var floatRegistrationRate = 0;
    var sumAllQListAcquisitionsModeledOutboundUnpaidInquiriesTotal = 0;

    if (qtr == "ALL" || qtr == "Q1") {
        if ($("#Q1CumulativeList").val().replace(/,/g, '').trim() != '') {
            if (IsNumeric($("#Q1CumulativeList").val().replace(/,/g, ''))) {
                floatCumulativeListSize = parseFloat($("#Q1CumulativeList").val().replace(/,/g, ''));
            }
        }
        if ($("#Acquisition_NumberofTouchesQ1").val().replace(/,/g, '').trim() != '') {
            if (IsNumeric($("#Acquisition_NumberofTouchesQ1").val().replace(/,/g, ''))) {
                intNumberoftouches = parseFloat($("#Acquisition_NumberofTouchesQ1").val().replace(/,/g, ''));
            }
        }
        if ($("#Q1OutboundCTRDelivered").val().trim() != '') {
            if (IsNumeric($("#Q1OutboundCTRDelivered").val())) {
                floatCTRDelivered = parseFloat($("#Q1OutboundCTRDelivered").val()) / 100;
            }
        }
        if ($("#Acquisition_RegistrationRate").val().trim() != '') {
            if (IsNumeric($("#Acquisition_RegistrationRate").val())) {
                floatRegistrationRate = parseFloat($("#Acquisition_RegistrationRate").val()) / 100;
            }
        }

        var cal = 0;
        cal = (floatCumulativeListSize * intNumberoftouches * floatCTRDelivered * floatRegistrationRate)
        $("#Q1ListAcquisitionsModeledOutboundUnpaidInquiriesTotal").val(number_format(cal, 2, '.', ','));
        sumAllQListAcquisitionsModeledOutboundUnpaidInquiriesTotal = sumAllQListAcquisitionsModeledOutboundUnpaidInquiriesTotal + cal;

        floatCumulativeListSize = 0;
        intNumberoftouches = 0;
        floatCTRDelivered = 0;
        floatRegistrationRate = 0;
    }

    if (qtr == "ALL" || qtr == "Q2") {
        if ($("#Q2CumulativeList").val().replace(/,/g, '').trim() != '') {
            if (IsNumeric($("#Q2CumulativeList").val().replace(/,/g, ''))) {
                floatCumulativeListSize = parseFloat($("#Q2CumulativeList").val().replace(/,/g, ''));
            }
        }
        if ($("#Acquisition_NumberofTouchesQ2").val().replace(/,/g, '').trim() != '') {
            if (IsNumeric($("#Acquisition_NumberofTouchesQ2").val().replace(/,/g, ''))) {
                intNumberoftouches = parseFloat($("#Acquisition_NumberofTouchesQ2").val().replace(/,/g, ''));
            }
        }
        if ($("#Q2OutboundCTRDelivered").val().trim() != '') {
            if (IsNumeric($("#Q2OutboundCTRDelivered").val())) {
                floatCTRDelivered = parseFloat($("#Q2OutboundCTRDelivered").val() / 100);
            }
        }
        if ($("#Q2AcquisitionRegistrationRate").val().trim() != '') {
            if (IsNumeric($("#Q2AcquisitionRegistrationRate").val())) {
                floatRegistrationRate = parseFloat($("#Q2AcquisitionRegistrationRate").val() / 100);
            }
        }

        var cal = 0;
        cal = (floatCumulativeListSize * intNumberoftouches * floatCTRDelivered * floatRegistrationRate)
        $("#Q2ListAcquisitionsModeledOutboundUnpaidInquiriesTotal").val(number_format(cal, 2, '.', ','));
        sumAllQListAcquisitionsModeledOutboundUnpaidInquiriesTotal = sumAllQListAcquisitionsModeledOutboundUnpaidInquiriesTotal + cal;

        floatCumulativeListSize = 0;
        intNumberoftouches = 0;
        floatCTRDelivered = 0;
        floatRegistrationRate = 0;
    }

    if (qtr == "ALL" || qtr == "Q3") {
        if ($("#Q3CumulativeList").val().replace(/,/g, '').trim() != '') {
            if (IsNumeric($("#Q3CumulativeList").val().replace(/,/g, ''))) {
                floatCumulativeListSize = parseFloat($("#Q3CumulativeList").val().replace(/,/g, ''));
            }
        }
        if ($("#Acquisition_NumberofTouchesQ3").val().replace(/,/g, '').trim() != '') {
            if (IsNumeric($("#Acquisition_NumberofTouchesQ3").val().replace(/,/g, ''))) {
                intNumberoftouches = parseFloat($("#Acquisition_NumberofTouchesQ3").val().replace(/,/g, ''));
            }
        }
        if ($("#Q3OutboundCTRDelivered").val().trim() != '') {
            if (IsNumeric($("#Q3OutboundCTRDelivered").val())) {
                floatCTRDelivered = parseFloat($("#Q3OutboundCTRDelivered").val() / 100);
            }
        }
        if ($("#Q3AcquisitionRegistrationRate").val().trim() != '') {
            if (IsNumeric($("#Q3AcquisitionRegistrationRate").val())) {
                floatRegistrationRate = parseFloat($("#Q3AcquisitionRegistrationRate").val() / 100);
            }
        }

        var cal = 0;
        cal = (floatCumulativeListSize * intNumberoftouches * floatCTRDelivered * floatRegistrationRate)
        $("#Q3ListAcquisitionsModeledOutboundUnpaidInquiriesTotal").val(number_format(cal, 2, '.', ','));
        sumAllQListAcquisitionsModeledOutboundUnpaidInquiriesTotal = sumAllQListAcquisitionsModeledOutboundUnpaidInquiriesTotal + cal;


        floatCumulativeListSize = 0;
        intNumberoftouches = 0;
        floatCTRDelivered = 0;
        floatRegistrationRate = 0;
    }

    if (qtr == "ALL" || qtr == "Q4") {
        if ($("#Q4CumulativeList").val().replace(/,/g, '').trim() != '') {
            if (IsNumeric($("#Q4CumulativeList").val().replace(/,/g, ''))) {
                floatCumulativeListSize = parseFloat($("#Q4CumulativeList").val().replace(/,/g, ''));
            }
        }
        if ($("#Acquisition_NumberofTouchesQ4").val().replace(/,/g, '').trim() != '') {
            if (IsNumeric($("#Acquisition_NumberofTouchesQ4").val().replace(/,/g, ''))) {
                intNumberoftouches = parseFloat($("#Acquisition_NumberofTouchesQ4").val().replace(/,/g, ''));
            }
        }
        if ($("#Q4OutboundCTRDelivered").val().trim() != '') {
            if (IsNumeric($("#Q4OutboundCTRDelivered").val())) {
                floatCTRDelivered = parseFloat($("#Q4OutboundCTRDelivered").val() / 100);
            }
        }
        if ($("#Q4AcquisitionRegistrationRate").val().trim() != '') {
            if (IsNumeric($("#Q4AcquisitionRegistrationRate").val())) {
                floatRegistrationRate = parseFloat($("#Q4AcquisitionRegistrationRate").val() / 100);
            }
        }

        var cal = 0;
        cal = (floatCumulativeListSize * intNumberoftouches * floatCTRDelivered * floatRegistrationRate)
        $("#Q4ListAcquisitionsModeledOutboundUnpaidInquiriesTotal").val(number_format(cal, 2, '.', ','));
        sumAllQListAcquisitionsModeledOutboundUnpaidInquiriesTotal = sumAllQListAcquisitionsModeledOutboundUnpaidInquiriesTotal + cal;




        floatCumulativeListSize = 0;
        intNumberoftouches = 0;
        floatCTRDelivered = 0;
        floatRegistrationRate = 0;

        $("#AllQListAcquisitionsModeledOutboundUnpaidInquiriesTotal").val(number_format(sumAllQListAcquisitionsModeledOutboundUnpaidInquiriesTotal, 2, '.', ','));
    }

}

//Inbound Site Seo + Social Media

// Set Inbound Site Seo + Social Media Impressions Quarter 2,3 and 4 values from Quarter 1 Impressions blur event.

$("#Impressions").blur(function () {
    if ($("#Impressions").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Impressions").val().replace(/,/g, ''))) {
            $("#Q2Impressions").val($("#Impressions").val());
            $("#Q3Impressions").val($("#Q2Impressions").val());
            $("#Q4Impressions").val($("#Q3Impressions").val());
            calInboundSiteSeoSocialMediaImpressions();
            calInboundSiteSeoSocialMediaVisits();
            calInboundSiteSeoSocialMediaTotalOrganicInquiries();
            calInboundSiteSeoSocialMediaTotalUnpaidInboundInquiries();
            changeValueToTwoDigit();
            setToolTip();
        }
    }
});

function calInboundSiteSeoSocialMediaImpressions() {

    var intQ1Impressions = 0;
    var intQ2Impressions = 0;
    var intQ3Impressions = 0;
    var intQ4Impressions = 0;
    var cal = 0;

    if ($("#Impressions").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Impressions").val().replace(/,/g, ''))) {
            intQ1Impressions = parseInt($("#Impressions").val().replace(/,/g, ''));
        }
    }
    if ($("#Q2Impressions").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q2Impressions").val().replace(/,/g, ''))) {
            intQ2Impressions = parseInt($("#Q2Impressions").val().replace(/,/g, ''));
        }
    }
    if ($("#Q3Impressions").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q3Impressions").val().replace(/,/g, ''))) {
            intQ3Impressions = parseInt($("#Q3Impressions").val().replace(/,/g, ''));
        }
    }
    if ($("#Q4Impressions").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q4Impressions").val().replace(/,/g, ''))) {
            intQ4Impressions = parseInt($("#Q4Impressions").val().replace(/,/g, ''));
        }
    }
    cal = intQ1Impressions + intQ2Impressions + intQ3Impressions + intQ4Impressions;
    $("#AllQImpressionsTotal").val(number_format(cal, 2, '.', ','));
}

// Set Inbound Site Seo + Social Media Click Through Rate Quarter 2,3 and 4 values from Quarter 1 Click Through Rate blur event.
$("#ClickThroughRate").blur(function () {
    if ($("#ClickThroughRate").val().trim() != '') {
        if (IsNumeric($("#ClickThroughRate").val())) {

            $("#Q2ClickThroughRate").val($("#ClickThroughRate").val());
            $("#Q3ClickThroughRate").val($("#Q2ClickThroughRate").val());
            $("#Q4ClickThroughRate").val($("#Q3ClickThroughRate").val());
            calInboundSiteSeoSocialMediaClickThroughRate();
            calInboundSiteSeoSocialMediaVisits();
            calInboundSiteSeoSocialMediaTotalOrganicInquiries();
            calInboundSiteSeoSocialMediaTotalUnpaidInboundInquiries();
            changeValueToTwoDigit();
            setToolTip();
        }
    }
});

function calInboundSiteSeoSocialMediaClickThroughRate() {

    var floatQ1ClickThroughRate = 0;
    var floatQ2ClickThroughRate = 0;
    var floatQ3ClickThroughRate = 0;
    var floatQ4ClickThroughRate = 0;

    if ($("#ClickThroughRate").val().trim() != '') {
        if (IsNumeric($("#ClickThroughRate").val())) {
            floatQ1ClickThroughRate = parseFloat($("#ClickThroughRate").val());
        }
    }
    if ($("#Q2ClickThroughRate").val().trim() != '') {
        if (IsNumeric($("#Q2ClickThroughRate").val())) {
            floatQ2ClickThroughRate = parseFloat($("#Q2ClickThroughRate").val());
        }
    }
    if ($("#Q3ClickThroughRate").val().trim() != '') {
        if (IsNumeric($("#Q3ClickThroughRate").val())) {
            floatQ3ClickThroughRate = parseFloat($("#Q3ClickThroughRate").val());
        }
    }
    if ($("#Q4ClickThroughRate").val().trim() != '') {
        if (IsNumeric($("#Q4ClickThroughRate").val())) {
            floatQ4ClickThroughRate = parseFloat($("#Q4ClickThroughRate").val());
        }
    }

    var cal = floatQ1ClickThroughRate + floatQ2ClickThroughRate + floatQ3ClickThroughRate + floatQ4ClickThroughRate
    if (cal != 0) {
        $("#AllQClickThroughRateTotal").val(cal / 4);
    }


}

//function to calculate Inbound Site Seo + Social Media Visits
function calInboundSiteSeoSocialMediaVisits() {
    var floatImpressions = 0;
    var floatClickThroughRate = 0;
    var sumVisit = 0;

    if ($("#Impressions").val().replace(/,/g, '').trim() != '' && $("#ClickThroughRate").val().trim() != '') {
        if (IsNumeric($("#Impressions").val().replace(/,/g, '')) && IsNumeric($("#ClickThroughRate").val())) {
            floatImpressions = parseFloat($("#Impressions").val().replace(/,/g, ''));
            floatClickThroughRate = parseFloat($("#ClickThroughRate").val()) / 100;
            var cal = floatImpressions * floatClickThroughRate;

            $("#Visits").val(number_format(cal, 2, '.', ','));
            sumVisit = sumVisit + cal;

        }
    }
    floatImpressions = 0;
    floatClickThroughRate = 0;

    if ($("#Q2Impressions").val().replace(/,/g, '').trim() != '' && $("#Q2ClickThroughRate").val().trim() != '') {
        if (IsNumeric($("#Q2Impressions").val().replace(/,/g, '')) && IsNumeric($("#Q2ClickThroughRate").val())) {
            floatImpressions = parseFloat($("#Q2Impressions").val().replace(/,/g, ''));
            floatClickThroughRate = parseFloat($("#Q2ClickThroughRate").val()) / 100;
            var cal = floatImpressions * floatClickThroughRate;

            $("#Q2Visits").val(number_format(cal, 2, '.', ','));
            sumVisit = sumVisit + cal;

        }
    }
    floatImpressions = 0;
    floatClickThroughRate = 0;

    if ($("#Q3Impressions").val().replace(/,/g, '').trim() != '' && $("#Q3ClickThroughRate").val().trim() != '') {
        if (IsNumeric($("#Q3Impressions").val().replace(/,/g, '')) && IsNumeric($("#Q3ClickThroughRate").val())) {
            floatImpressions = parseFloat($("#Q3Impressions").val().replace(/,/g, ''));
            floatClickThroughRate = parseFloat($("#Q3ClickThroughRate").val()) / 100;
            var cal = floatImpressions * floatClickThroughRate;

            $("#Q3Visits").val(number_format(cal, 2, '.', ','));
            sumVisit = sumVisit + cal;

        }
    }
    floatImpressions = 0;
    floatClickThroughRate = 0;

    if ($("#Q4Impressions").val().replace(/,/g, '').trim() != '' && $("#Q4ClickThroughRate").val().trim() != '') {
        if (IsNumeric($("#Q4Impressions").val().replace(/,/g, '')) && IsNumeric($("#Q4ClickThroughRate").val())) {
            floatImpressions = parseFloat($("#Q4Impressions").val().replace(/,/g, ''));
            floatClickThroughRate = parseFloat($("#Q4ClickThroughRate").val()) / 100;
            var cal = floatImpressions * floatClickThroughRate;

            $("#Q4Visits").val(number_format(cal, 2, '.', ','));
            sumVisit = sumVisit + cal;

        }
    }

    //$("#AllQVisitsTotal").val(sumVisit);
    $("#AllQVisitsTotal").val(number_format(sumVisit, 2, '.', ','));
}

// Set Inbound Site Seo + Social Media Registration Rate Quarter 2,3 and 4 values from Quarter 1 Registration Rate blur event.
$("#InboundRegistrationRate").blur(function () {
    if ($("#InboundRegistrationRate").val().trim() != '') {
        if (IsNumeric($("#InboundRegistrationRate").val())) {

            $("#Q2InboundRegistrationRate").val($("#InboundRegistrationRate").val());
            $("#Q3InboundRegistrationRate").val($("#Q2InboundRegistrationRate").val());
            $("#Q4InboundRegistrationRate").val($("#Q3InboundRegistrationRate").val());
            calInboundSiteSeoSocialMediaRegistrationRate();
            calInboundSiteSeoSocialMediaTotalOrganicInquiries();
            calInboundSiteSeoSocialMediaTotalUnpaidInboundInquiries();
            changeValueToTwoDigit();
            setToolTip();

        }
    }
});

function calInboundSiteSeoSocialMediaRegistrationRate() {

    var floatQ1InboundRegistrationRate = 0;
    var floatQ2InboundRegistrationRate = 0;
    var floatQ3InboundRegistrationRate = 0;
    var floatQ4InboundRegistrationRate = 0;

    if ($("#InboundRegistrationRate").val().trim() != '') {
        if (IsNumeric($("#InboundRegistrationRate").val())) {
            floatQ1InboundRegistrationRate = parseFloat($("#InboundRegistrationRate").val());
        }
    }
    if ($("#Q2InboundRegistrationRate").val().trim() != '') {
        if (IsNumeric($("#Q2InboundRegistrationRate").val())) {
            floatQ2InboundRegistrationRate = parseFloat($("#Q2InboundRegistrationRate").val());
        }
    }
    if ($("#Q3InboundRegistrationRate").val().trim() != '') {
        if (IsNumeric($("#Q3InboundRegistrationRate").val())) {
            floatQ3InboundRegistrationRate = parseFloat($("#Q3InboundRegistrationRate").val());
        }
    }
    if ($("#Q4InboundRegistrationRate").val().trim() != '') {
        if (IsNumeric($("#Q4InboundRegistrationRate").val())) {
            floatQ4InboundRegistrationRate = parseFloat($("#Q4InboundRegistrationRate").val());
        }
    }

    var cal = floatQ1InboundRegistrationRate + floatQ2InboundRegistrationRate + floatQ3InboundRegistrationRate + floatQ4InboundRegistrationRate
    if (cal != 0) {
        $("#AllQInboundRegistrationRateTotal").val(cal / 4);
    }
}

//function to calculate Inbound Site Seo + Social Media Total Organic Inquiries
function calInboundSiteSeoSocialMediaTotalOrganicInquiries() {
    var floatVisits = 0;
    var floatInboundRegistrationRate = 0;
    var sumTotalOrganicInquiries = 0;

    if ($("#Visits").val().replace(/,/g, '').trim() != '' && $("#InboundRegistrationRate").val().trim() != '') {
        if (IsNumeric($("#Visits").val().replace(/,/g, '')) && IsNumeric($("#InboundRegistrationRate").val())) {
            floatVisits = parseFloat($("#Visits").val().replace(/,/g, ''));
            floatInboundRegistrationRate = parseFloat($("#InboundRegistrationRate").val()) / 100;
            var cal = floatVisits * floatInboundRegistrationRate;
            $("#Q1TotalOrganicInquiries").val(number_format(cal, 2, '.', ','));
            sumTotalOrganicInquiries = sumTotalOrganicInquiries + cal;

        }
    }
    floatVisits = 0;
    floatInboundRegistrationRate = 0;

    if ($("#Q2Visits").val().replace(/,/g, '').trim() != '' && $("#Q2InboundRegistrationRate").val().trim() != '') {
        if (IsNumeric($("#Q2Visits").val().replace(/,/g, '')) && IsNumeric($("#Q2InboundRegistrationRate").val())) {
            floatVisits = parseFloat($("#Q2Visits").val().replace(/,/g, ''));
            floatInboundRegistrationRate = parseFloat($("#Q2InboundRegistrationRate").val()) / 100;
            var cal = floatVisits * floatInboundRegistrationRate;
            $("#Q2TotalOrganicInquiries").val(number_format(cal, 2, '.', ','));
            sumTotalOrganicInquiries = sumTotalOrganicInquiries + cal;

        }
    }
    floatVisits = 0;
    floatInboundRegistrationRate = 0;

    if ($("#Q3Visits").val().replace(/,/g, '').trim() != '' && $("#Q3InboundRegistrationRate").val().trim() != '') {
        if (IsNumeric($("#Q3Visits").val().replace(/,/g, '')) && IsNumeric($("#Q3InboundRegistrationRate").val())) {
            floatVisits = parseFloat($("#Q3Visits").val().replace(/,/g, ''));
            floatInboundRegistrationRate = parseFloat($("#Q3InboundRegistrationRate").val()) / 100;
            var cal = floatVisits * floatInboundRegistrationRate;
            $("#Q3TotalOrganicInquiries").val(number_format(cal, 2, '.', ','));
            sumTotalOrganicInquiries = sumTotalOrganicInquiries + cal;

        }
    }
    floatVisits = 0;
    floatInboundRegistrationRate = 0;


    if ($("#Q4Visits").val().replace(/,/g, '').trim() != '' && $("#Q4InboundRegistrationRate").val().trim() != '') {
        if (IsNumeric($("#Q4Visits").val().replace(/,/g, '')) && IsNumeric($("#Q4InboundRegistrationRate").val())) {
            floatVisits = parseFloat($("#Q4Visits").val().replace(/,/g, ''));
            floatInboundRegistrationRate = parseFloat($("#Q4InboundRegistrationRate").val()) / 100;
            var cal = floatVisits * floatInboundRegistrationRate;
            $("#Q4TotalOrganicInquiries").val(number_format(cal, 2, '.', ','));
            sumTotalOrganicInquiries = sumTotalOrganicInquiries + cal;

        }
    }


    $("#AllQTotalOrganicInquiriesTotal").val(number_format(sumTotalOrganicInquiries, 2, '.', ','));

    calAudiencePlanningSummaryInboundInquiries();
    calculateUsableDBSizeQuaterWise();
}

//function to calculate Inbound Site Seo + Social Media Total Unpaid Inbound Inquiries
function calInboundSiteSeoSocialMediaTotalUnpaidInboundInquiries() {



    var floatTotalOrganicInquiries = 0;
    var floatOrigInboundInquiries = 0;
    var sumTotalUnpaidInboundInquiries = 0;

    if ($("#Q1TotalOrganicInquiries").val().replace(/,/g, '').trim() != '' && $("#Q1OrigInboundInquiries").val().trim() != '') {
        if (IsNumeric($("#Q1TotalOrganicInquiries").val().replace(/,/g, '')) && IsNumeric($("#Q1OrigInboundInquiries").val())) {
            floatTotalOrganicInquiries = parseFloat($("#Q1TotalOrganicInquiries").val().replace(/,/g, ''));
            floatOrigInboundInquiries = parseFloat($("#Q1OrigInboundInquiries").val());
            var cal = 0;
            cal = floatTotalOrganicInquiries + floatOrigInboundInquiries;
            $("#Q1TotalUnpaidInboundInquiries").val(number_format(cal, 2, '.', ','));
            sumTotalUnpaidInboundInquiries = sumTotalUnpaidInboundInquiries + cal;

        }
    }

    if ($("#Q2TotalOrganicInquiries").val().replace(/,/g, '').trim() != '' && $("#Q2OrigInboundInquiries").val().trim() != '') {
        if (IsNumeric($("#Q2TotalOrganicInquiries").val().replace(/,/g, '')) && IsNumeric($("#Q2OrigInboundInquiries").val())) {
            floatTotalOrganicInquiries = parseFloat($("#Q2TotalOrganicInquiries").val().replace(/,/g, ''));
            floatOrigInboundInquiries = parseFloat($("#Q2OrigInboundInquiries").val());
            var cal = 0;
            cal = floatTotalOrganicInquiries + floatOrigInboundInquiries;
            $("#Q2TotalUnpaidInboundInquiries").val(number_format(cal, 2, '.', ','));
            sumTotalUnpaidInboundInquiries = sumTotalUnpaidInboundInquiries + cal;

        }
    }

    if ($("#Q3TotalOrganicInquiries").val().replace(/,/g, '').trim() != '' && $("#Q3OrigInboundInquiries").val().trim() != '') {
        if (IsNumeric($("#Q3TotalOrganicInquiries").val().replace(/,/g, '')) && IsNumeric($("#Q3OrigInboundInquiries").val())) {
            floatTotalOrganicInquiries = parseFloat($("#Q3TotalOrganicInquiries").val().replace(/,/g, ''));
            floatOrigInboundInquiries = parseFloat($("#Q3OrigInboundInquiries").val());
            var cal = 0;
            cal = floatTotalOrganicInquiries + floatOrigInboundInquiries;
            $("#Q3TotalUnpaidInboundInquiries").val(number_format(cal, 2, '.', ','));
            sumTotalUnpaidInboundInquiries = sumTotalUnpaidInboundInquiries + cal;

        }
    }

    if ($("#Q4TotalOrganicInquiries").val().replace(/,/g, '').trim() != '' && $("#Q4OrigInboundInquiries").val().trim() != '') {
        if (IsNumeric($("#Q4TotalOrganicInquiries").val().replace(/,/g, '')) && IsNumeric($("#Q4OrigInboundInquiries").val())) {
            floatTotalOrganicInquiries = parseFloat($("#Q4TotalOrganicInquiries").val().replace(/,/g, ''));
            floatOrigInboundInquiries = parseFloat($("#Q4OrigInboundInquiries").val());
            var cal = 0;
            cal = floatTotalOrganicInquiries + floatOrigInboundInquiries;
            $("#Q4TotalUnpaidInboundInquiries").val(number_format(cal, 2, '.', ','));
            sumTotalUnpaidInboundInquiries = sumTotalUnpaidInboundInquiries + cal;

        }
    }

    $("#AllQTotalUnpaidInboundInquiriesTotal").val(number_format(sumTotalUnpaidInboundInquiries, 2, '.', ','));

}

// Inbound PPC
// To set Inbound PPC Click Throughs of Quarter 2,3 and 4 from PPC Click Throughs of Quarter 1
$("#PPC_ClickThroughs").blur(function () {
    if ($("#PPC_ClickThroughs").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#PPC_ClickThroughs").val().replace(/,/g, ''))) {
            $("#Q2PPCClickThroughs").val($("#PPC_ClickThroughs").val());
            $("#Q3PPCClickThroughs").val($("#Q2PPCClickThroughs").val());
            $("#Q4PPCClickThroughs").val($("#Q3PPCClickThroughs").val());
            calInboundPPCClickThroughsTotal();
            calInboundPPCCost();
            calInboundPPCTotalInboundPaidSearchInquiries();
            calAudiencePlanningSummaryInboundInquiries();
            calculateUsableDBSizeQuaterWise();
            calAudiencePlanningSummaryMediaBudget();
            changeValueToTwoDigit();
            setToolTip();
        }
    }
});

// function calculate Inbound PPC Click Throughs Total
function calInboundPPCClickThroughsTotal() {
    var intQ1PPCClickThroughs = 0;
    var intQ2PPCClickThroughs = 0;
    var intQ3PPCClickThroughs = 0;
    var intQ4PPCClickThroughs = 0;
    if ($("#PPC_ClickThroughs").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#PPC_ClickThroughs").val().replace(/,/g, ''))) {
            intQ1PPCClickThroughs = parseInt($("#PPC_ClickThroughs").val().replace(/,/g, ''));
        }
    }

    if ($("#Q2PPCClickThroughs").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q2PPCClickThroughs").val().replace(/,/g, ''))) {
            intQ2PPCClickThroughs = parseInt($("#Q2PPCClickThroughs").val().replace(/,/g, ''));
        }
    }

    if ($("#Q3PPCClickThroughs").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q3PPCClickThroughs").val().replace(/,/g, ''))) {
            intQ3PPCClickThroughs = parseInt($("#Q3PPCClickThroughs").val().replace(/,/g, ''));
        }
    }

    if ($("#Q4PPCClickThroughs").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q4PPCClickThroughs").val().replace(/,/g, ''))) {
            intQ4PPCClickThroughs = parseInt($("#Q4PPCClickThroughs").val().replace(/,/g, ''));
        }
    }

    var cal = 0;
    cal = intQ1PPCClickThroughs + intQ2PPCClickThroughs + intQ3PPCClickThroughs + intQ4PPCClickThroughs;
    $("#AllQPPCClickThroughsTotal").val(number_format(cal, 2, '.', ','));
}

// To set Inbound PPC Costper Click Through of Quarter 2,3 and 4 from PPC Costper Click Through of Quarter 1
$("#PPC_CostperClickThrough").blur(function () {
    if ($("#PPC_CostperClickThrough").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#PPC_CostperClickThrough").val().replace(/,/g, ''))) {
            $("#Q2PPCCostperClickThrough").val($("#PPC_CostperClickThrough").val());
            $("#Q3PPCCostperClickThrough").val($("#Q2PPCCostperClickThrough").val());
            $("#Q4PPCCostperClickThrough").val($("#Q3PPCCostperClickThrough").val());
            calPPCCostperClickThroughTotal();
            calInboundPPCCost();
            calAudiencePlanningSummaryMediaBudget();
            changeValueToTwoDigit();
            setToolTip();

        }
    }
});

//function to calucalte PPC Cost per Click Through Total
function calPPCCostperClickThroughTotal() {
    var floatAllQPPCClickThroughsTotal = 0;
    var floatAllQPPCCostTotal = 0;
    if ($("#AllQPPCClickThroughsTotal").val().replace(/,/g, '').trim() != '' && $("#AllQPPCCostTotal").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#AllQPPCClickThroughsTotal").val().replace(/,/g, '')) && IsNumeric($("#AllQPPCCostTotal").val().replace(/,/g, ''))) {
            if ($("#AllQPPCClickThroughsTotal").val().replace(/,/g, '') != "0" && $("#AllQPPCCostTotal").val().replace(/,/g, '') != "0") {
                floatAllQPPCClickThroughsTotal = parseFloat($("#AllQPPCClickThroughsTotal").val().replace(/,/g, ''));
                floatAllQPPCCostTotal = parseFloat($("#AllQPPCCostTotal").val().replace(/,/g, ''));
                var cal = floatAllQPPCCostTotal / floatAllQPPCClickThroughsTotal;
                $("#AllQPPCCostperClickThroughTotal").val(number_format(cal, 2, '.', ','));
            }
        }
    }
}


//function to calculate Inbound PPC Cost
function calInboundPPCCost() {
    var floatPPCClickThroughs = 0;
    var floatPPCCostperClickThrough = 0;
    var sumPPCCostTotal = 0;

    if ($("#PPC_ClickThroughs").val().replace(/,/g, '').trim() != '' && $("#PPC_CostperClickThrough").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#PPC_ClickThroughs").val().replace(/,/g, '')) && IsNumeric($("#PPC_CostperClickThrough").val().replace(/,/g, ''))) {
            floatPPCClickThroughs = parseFloat($("#PPC_ClickThroughs").val().replace(/,/g, ''));
            floatPPCCostperClickThrough = parseFloat($("#PPC_CostperClickThrough").val().replace(/,/g, ''));
            var cal = floatPPCClickThroughs * floatPPCCostperClickThrough;
            $("#Q1PPCCost").val(number_format(cal, 2, '.', ','));


            sumPPCCostTotal = sumPPCCostTotal + cal;

        }
    }
    floatPPCClickThroughs = 0;
    floatPPCCostperClickThrough = 0;

    if ($("#Q2PPCClickThroughs").val().replace(/,/g, '').trim() != '' && $("#Q2PPCCostperClickThrough").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q2PPCClickThroughs").val().replace(/,/g, '')) && IsNumeric($("#Q2PPCCostperClickThrough").val().replace(/,/g, ''))) {
            floatPPCClickThroughs = parseFloat($("#Q2PPCClickThroughs").val().replace(/,/g, ''));
            floatPPCCostperClickThrough = parseFloat($("#Q2PPCCostperClickThrough").val().replace(/,/g, ''));
            var cal = floatPPCClickThroughs * floatPPCCostperClickThrough;
            $("#Q2PPCCost").val(number_format(cal, 2, '.', ','));


            sumPPCCostTotal = sumPPCCostTotal + cal;

        }
    }
    floatPPCClickThroughs = 0;
    floatPPCCostperClickThrough = 0;

    if ($("#Q3PPCClickThroughs").val().replace(/,/g, '').trim() != '' && $("#Q3PPCCostperClickThrough").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q3PPCClickThroughs").val().replace(/,/g, '')) && IsNumeric($("#Q3PPCCostperClickThrough").val().replace(/,/g, ''))) {
            floatPPCClickThroughs = parseFloat($("#Q3PPCClickThroughs").val().replace(/,/g, ''));
            floatPPCCostperClickThrough = parseFloat($("#Q3PPCCostperClickThrough").val().replace(/,/g, ''));
            var cal = floatPPCClickThroughs * floatPPCCostperClickThrough;
            $("#Q3PPCCost").val(number_format(cal, 2, '.', ','));


            sumPPCCostTotal = sumPPCCostTotal + cal;

        }
    }
    floatPPCClickThroughs = 0;
    floatPPCCostperClickThrough = 0;

    if ($("#Q4PPCClickThroughs").val().replace(/,/g, '').trim() != '' && $("#Q4PPCCostperClickThrough").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q4PPCClickThroughs").val().replace(/,/g, '')) && IsNumeric($("#Q4PPCCostperClickThrough").val().replace(/,/g, ''))) {
            floatPPCClickThroughs = parseFloat($("#Q4PPCClickThroughs").val().replace(/,/g, ''));
            floatPPCCostperClickThrough = parseFloat($("#Q4PPCCostperClickThrough").val().replace(/,/g, ''));
            var cal = floatPPCClickThroughs * floatPPCCostperClickThrough;
            $("#Q4PPCCost").val(number_format(cal, 2, '.', ','));


            sumPPCCostTotal = sumPPCCostTotal + cal;

        }
    }

    $("#AllQPPCCostTotal").val(number_format(sumPPCCostTotal, 2, '.', ','));
    calPPCCostperClickThroughTotal();
}

// To set Inbound PPC Registration Rate Through of Quarter 2,3 and 4 from blur event of Registration Rate of Quarter 1
$("#PPC_RegistrationRate").blur(function () {
    if ($("#PPC_RegistrationRate").val().trim() != '') {
        if (IsNumeric($("#PPC_RegistrationRate").val())) {


            $("#Q2PPCRegistrationRate").val($("#PPC_RegistrationRate").val());
            $("#Q3PPCRegistrationRate").val($("#Q2PPCRegistrationRate").val());
            $("#Q4PPCRegistrationRate").val($("#Q3PPCRegistrationRate").val());
            calPPCRegistrationRateTotal();
            calInboundPPCTotalInboundPaidSearchInquiries();
            calAudiencePlanningSummaryInboundInquiries();
            calculateUsableDBSizeQuaterWise();
            changeValueToTwoDigit();
            setToolTip();
        }
    }
});

//function to calucalte PPC RegistrationRate Total
function calPPCRegistrationRateTotal() {
    var floatAllQTotalInboundPaidSearchInquiriesTotal = 0;
    var floatAllQPPCClickThroughsTotal = 0;
    if ($("#AllQTotalInboundPaidSearchInquiriesTotal").val().replace(/,/g, '').trim() != '' && $("#AllQPPCClickThroughsTotal").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#AllQTotalInboundPaidSearchInquiriesTotal").val().replace(/,/g, '')) && IsNumeric($("#AllQPPCClickThroughsTotal").val().replace(/,/g, ''))) {
            if ($("#AllQTotalInboundPaidSearchInquiriesTotal").val().replace(/,/g, '') != "0" && $("#AllQPPCClickThroughsTotal").val().replace(/,/g, '') != "0") {
                floatAllQTotalInboundPaidSearchInquiriesTotal = parseFloat($("#AllQTotalInboundPaidSearchInquiriesTotal").val().replace(/,/g, ''));
                floatAllQPPCClickThroughsTotal = parseFloat($("#AllQPPCClickThroughsTotal").val().replace(/,/g, ''));
                var cal = floatAllQPPCClickThroughsTotal / floatAllQTotalInboundPaidSearchInquiriesTotal;
                $("#AllQPPCRegistrationRateTotal").val(number_format(cal, 2, '.', ','));
            }
        }
    }
}

//function to calculate Inbound PPC Total Inbound Paid Search Inquiries
function calInboundPPCTotalInboundPaidSearchInquiries() {
    var floatPPCClickThroughs = 0;
    var floatPPCRegistrationRate = 0;
    var sumAllQTotalInboundPaidSearchInquiriesTotal = 0;

    if ($("#PPC_ClickThroughs").val().replace(/,/g, '').trim() != '' && $("#PPC_RegistrationRate").val().trim() != '') {
        if (IsNumeric($("#PPC_ClickThroughs").val().replace(/,/g, '')) && IsNumeric($("#PPC_RegistrationRate").val())) {
            floatPPCClickThroughs = parseFloat($("#PPC_ClickThroughs").val().replace(/,/g, ''));
            floatPPCRegistrationRate = parseFloat($("#PPC_RegistrationRate").val()) / 100;
            var cal = floatPPCClickThroughs * floatPPCRegistrationRate;

            $("#Q1TotalInboundPaidSearchInquiries").val(number_format(cal, 2, '.', ','));
            sumAllQTotalInboundPaidSearchInquiriesTotal = sumAllQTotalInboundPaidSearchInquiriesTotal + cal;

        }
    }
    floatPPCClickThroughs = 0;
    floatPPCRegistrationRate = 0;

    if ($("#Q2PPCClickThroughs").val().replace(/,/g, '').trim() != '' && $("#Q2PPCRegistrationRate").val().trim() != '') {
        if (IsNumeric($("#Q2PPCClickThroughs").val().replace(/,/g, '')) && IsNumeric($("#Q2PPCRegistrationRate").val())) {
            floatPPCClickThroughs = parseFloat($("#Q2PPCClickThroughs").val().replace(/,/g, ''));
            floatPPCRegistrationRate = parseFloat($("#Q2PPCRegistrationRate").val()) / 100;
            var cal = floatPPCClickThroughs * floatPPCRegistrationRate;

            $("#Q2TotalInboundPaidSearchInquiries").val(number_format(cal, 2, '.', ','));
            sumAllQTotalInboundPaidSearchInquiriesTotal = sumAllQTotalInboundPaidSearchInquiriesTotal + cal;

        }
    }
    floatPPCClickThroughs = 0;
    floatPPCRegistrationRate = 0;

    if ($("#Q3PPCClickThroughs").val().replace(/,/g, '').trim() != '' && $("#Q3PPCRegistrationRate").val().trim() != '') {
        if (IsNumeric($("#Q3PPCClickThroughs").val().replace(/,/g, '')) && IsNumeric($("#Q3PPCRegistrationRate").val())) {
            floatPPCClickThroughs = parseFloat($("#Q3PPCClickThroughs").val().replace(/,/g, ''));
            floatPPCRegistrationRate = parseFloat($("#Q3PPCRegistrationRate").val()) / 100;
            var cal = floatPPCClickThroughs * floatPPCRegistrationRate;

            $("#Q3TotalInboundPaidSearchInquiries").val(number_format(cal, 2, '.', ','));
            sumAllQTotalInboundPaidSearchInquiriesTotal = sumAllQTotalInboundPaidSearchInquiriesTotal + cal;

        }
    }
    floatPPCClickThroughs = 0;
    floatPPCRegistrationRate = 0;

    if ($("#Q4PPCClickThroughs").val().replace(/,/g, '').trim() != '' && $("#Q4PPCRegistrationRate").val().trim() != '') {
        if (IsNumeric($("#Q4PPCClickThroughs").val().replace(/,/g, '')) && IsNumeric($("#Q4PPCRegistrationRate").val())) {
            floatPPCClickThroughs = parseFloat($("#Q4PPCClickThroughs").val().replace(/,/g, ''));
            floatPPCRegistrationRate = parseFloat($("#Q4PPCRegistrationRate").val()) / 100;
            var cal = floatPPCClickThroughs * floatPPCRegistrationRate;

            $("#Q4TotalInboundPaidSearchInquiries").val(number_format(cal, 2, '.', ','));
            sumAllQTotalInboundPaidSearchInquiriesTotal = sumAllQTotalInboundPaidSearchInquiriesTotal + cal;

        }
    }

    $("#AllQTotalInboundPaidSearchInquiriesTotal").val(number_format(sumAllQTotalInboundPaidSearchInquiriesTotal, 2, '.', ','));
    if (sumAllQTotalInboundPaidSearchInquiriesTotal != 0) {

        if ($("#AllQPPCClickThroughsTotal").val().replace(/,/g, '').trim() != '') {
            if (IsNumeric($("#AllQPPCClickThroughsTotal").val().replace(/,/g, ''))) {
                if ($("#AllQPPCClickThroughsTotal").val().replace(/,/g, '') != "0") {
                    var cal = 0;
                    cal = sumAllQTotalInboundPaidSearchInquiriesTotal / parseFloat($("#AllQPPCClickThroughsTotal").val().replace(/,/g, ''));
                    $("#AllQPPCRegistrationRateTotal").val(number_format(cal, 2, '.', ','));
                }
            }
        }
    }

}

//Inbound GUARANTEED CPL
// To set Inbound Guaranteed CPL Budget  of Quarter 2,3 and 4 from blur of Guaranteed CPL Budget of Quarter 1
$("#GC_GuaranteedCPLBudget").blur(function () {
    if ($("#GC_GuaranteedCPLBudget").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#GC_GuaranteedCPLBudget").val().replace(/,/g, ''))) {
            $("#Q2GCGuaranteedCPLBudget").val($("#GC_GuaranteedCPLBudget").val());
            $("#Q3GCGuaranteedCPLBudget").val($("#Q2GCGuaranteedCPLBudget").val());
            $("#Q4GCGuaranteedCPLBudget").val($("#Q3GCGuaranteedCPLBudget").val());
            calInboundGCGuaranteedCPLBudgetTotal();
            calInboundGUARANTEEDCPLTotalInboundPaidMediaInquiries();
            calAudiencePlanningSummaryInboundInquiries();
            calculateUsableDBSizeQuaterWise();
            calAudiencePlanningSummaryMediaBudget();
            changeValueToTwoDigit();
            setToolTip();
        }
    }
});

// function calculate Inbound GC Guaranteed CPL Budget Total
function calInboundGCGuaranteedCPLBudgetTotal() {
    var intQ1GCGuaranteedCPLBudget = 0;
    var intQ2GCGuaranteedCPLBudget = 0;
    var intQ3GCGuaranteedCPLBudget = 0;
    var intQ4GCGuaranteedCPLBudget = 0;
    if ($("#GC_GuaranteedCPLBudget").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#GC_GuaranteedCPLBudget").val().replace(/,/g, ''))) {
            intQ1GCGuaranteedCPLBudget = parseInt($("#GC_GuaranteedCPLBudget").val().replace(/,/g, ''));
        }
    }

    if ($("#Q2GCGuaranteedCPLBudget").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q2GCGuaranteedCPLBudget").val().replace(/,/g, ''))) {
            intQ2GCGuaranteedCPLBudget = parseInt($("#Q2GCGuaranteedCPLBudget").val().replace(/,/g, ''));
        }
    }

    if ($("#Q3GCGuaranteedCPLBudget").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q3GCGuaranteedCPLBudget").val().replace(/,/g, ''))) {
            intQ3GCGuaranteedCPLBudget = parseInt($("#Q3GCGuaranteedCPLBudget").val().replace(/,/g, ''));
        }
    }

    if ($("#Q4GCGuaranteedCPLBudget").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q4GCGuaranteedCPLBudget").val().replace(/,/g, ''))) {
            intQ4GCGuaranteedCPLBudget = parseInt($("#Q4GCGuaranteedCPLBudget").val().replace(/,/g, ''));
        }
    }

    var cal = 0;
    cal = intQ1GCGuaranteedCPLBudget + intQ2GCGuaranteedCPLBudget + intQ3GCGuaranteedCPLBudget + intQ4GCGuaranteedCPLBudget;
    $("#AllQGCGuaranteedCPLBudgetTotal").val(number_format(cal, 2, '.', ','));
}

// To set Inbound Guaranteed CPL Cost per Lead  of Quarter 2,3 and 4 from blur of Guaranteed CPL Cost per Lead of Quarter 1
$("#GC_CostperLead").blur(function () {
    if ($("#GC_CostperLead").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#GC_CostperLead").val().replace(/,/g, ''))) {
            $("#Q2GCCostperLead").val($("#GC_CostperLead").val());
            $("#Q3GCCostperLead").val($("#Q2GCCostperLead").val());
            $("#Q4GCCostperLead").val($("#Q3GCCostperLead").val());
            calInboundGCCostperLeadTotal();
            calInboundGUARANTEEDCPLTotalInboundPaidMediaInquiries();
            calAudiencePlanningSummaryInboundInquiries();
            calculateUsableDBSizeQuaterWise();
            changeValueToTwoDigit();
            setToolTip();
        }
    }
});

//function to calucalte Inbound GC Cost per Lead Total
function calInboundGCCostperLeadTotal() {
    var floatAllQGCGuaranteedCPLBudgetTotal = 0;
    var floatAllQTotalInboundPaidMediaInquiriesTotal = 0;
    if ($("#AllQGCGuaranteedCPLBudgetTotal").val().replace(/,/g, '').trim() != '' && $("#AllQTotalInboundPaidMediaInquiriesTotal").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#AllQGCGuaranteedCPLBudgetTotal").val().replace(/,/g, '')) && IsNumeric($("#AllQTotalInboundPaidMediaInquiriesTotal").val().replace(/,/g, ''))) {
            if ($("#AllQGCGuaranteedCPLBudgetTotal").val().replace(/,/g, '') != "0" && $("#AllQTotalInboundPaidMediaInquiriesTotal").val().replace(/,/g, '') != "0") {
                floatAllQGCGuaranteedCPLBudgetTotal = parseFloat($("#AllQGCGuaranteedCPLBudgetTotal").val().replace(/,/g, ''));
                floatAllQTotalInboundPaidMediaInquiriesTotal = parseFloat($("#AllQTotalInboundPaidMediaInquiriesTotal").val().replace(/,/g, ''));
                var cal = floatAllQTotalInboundPaidMediaInquiriesTotal / floatAllQGCGuaranteedCPLBudgetTotal;
                $("#AllQGCCostperLeadTotal").val(number_format(cal, 2, '.', ','));
            }
        }
    }
}

//function to calculate Inbound GUARANTEED CPL Total Inbound Paid Media Inquiries
function calInboundGUARANTEEDCPLTotalInboundPaidMediaInquiries() {
    var floatGCGuaranteedCPLBudget = 0;
    var floatGCCostperLead = 0;
    var sumInboundPaidMediaInquiriesTotal = 0;

    if ($("#GC_GuaranteedCPLBudget").val().replace(/,/g, '').trim() != '' && $("#GC_CostperLead").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#GC_GuaranteedCPLBudget").val().replace(/,/g, '')) && IsNumeric($("#GC_CostperLead").val().replace(/,/g, ''))) {
            if ($("#GC_GuaranteedCPLBudget").val().replace(/,/g, '') != "0" && $("#GC_CostperLead").val().replace(/,/g, '') != "0") {
                floatGCGuaranteedCPLBudget = parseFloat($("#GC_GuaranteedCPLBudget").val().replace(/,/g, ''));
                floatGCCostperLead = parseFloat($("#GC_CostperLead").val().replace(/,/g, ''));
                var cal = floatGCGuaranteedCPLBudget / floatGCCostperLead;
                $("#Q1TotalInboundPaidMediaInquiries").val(number_format(cal, 2, '.', ','));
                sumInboundPaidMediaInquiriesTotal = sumInboundPaidMediaInquiriesTotal + cal;

            }
        }
    }
    floatGCGuaranteedCPLBudget = 0;
    floatGCCostperLead = 0;

    if ($("#Q2GCGuaranteedCPLBudget").val().replace(/,/g, '').trim() != '' && $("#Q2GCCostperLead").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q2GCGuaranteedCPLBudget").val().replace(/,/g, '')) && IsNumeric($("#Q2GCCostperLead").val().replace(/,/g, ''))) {
            if ($("#Q2GCGuaranteedCPLBudget").val().replace(/,/g, '') != "0" && $("#Q2GCCostperLead").val().replace(/,/g, '') != "0") {
                floatGCGuaranteedCPLBudget = parseFloat($("#Q2GCGuaranteedCPLBudget").val().replace(/,/g, ''));
                floatGCCostperLead = parseFloat($("#Q2GCCostperLead").val().replace(/,/g, ''));
                var cal = floatGCGuaranteedCPLBudget / floatGCCostperLead;
                $("#Q2TotalInboundPaidMediaInquiries").val(number_format(cal, 2, '.', ','));
                sumInboundPaidMediaInquiriesTotal = sumInboundPaidMediaInquiriesTotal + cal;

            }
        }
    }
    floatGCGuaranteedCPLBudget = 0;
    floatGCCostperLead = 0;

    if ($("#Q3GCGuaranteedCPLBudget").val().replace(/,/g, '').trim() != '' && $("#Q3GCCostperLead").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q3GCGuaranteedCPLBudget").val().replace(/,/g, '')) && IsNumeric($("#Q3GCCostperLead").val().replace(/,/g, ''))) {
            if ($("#Q3GCGuaranteedCPLBudget").val().replace(/,/g, '') != "0" && $("#Q3GCCostperLead").val().replace(/,/g, '') != "0") {
                floatGCGuaranteedCPLBudget = parseFloat($("#Q3GCGuaranteedCPLBudget").val().replace(/,/g, ''));
                floatGCCostperLead = parseFloat($("#Q3GCCostperLead").val().replace(/,/g, ''));
                var cal = floatGCGuaranteedCPLBudget / floatGCCostperLead;
                $("#Q3TotalInboundPaidMediaInquiries").val(number_format(cal, 2, '.', ','));
                sumInboundPaidMediaInquiriesTotal = sumInboundPaidMediaInquiriesTotal + cal;

            }
        }
    }
    floatGCGuaranteedCPLBudget = 0;
    floatGCCostperLead = 0;

    if ($("#Q4GCGuaranteedCPLBudget").val().replace(/,/g, '').trim() != '' && $("#Q4GCCostperLead").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q4GCGuaranteedCPLBudget").val().replace(/,/g, '')) && IsNumeric($("#Q4GCCostperLead").val().replace(/,/g, ''))) {
            if ($("#Q4GCGuaranteedCPLBudget").val().replace(/,/g, '') != "0" && $("#Q4GCCostperLead").val().replace(/,/g, '') != "0") {
                floatGCGuaranteedCPLBudget = parseFloat($("#Q4GCGuaranteedCPLBudget").val().replace(/,/g, ''));
                floatGCCostperLead = parseFloat($("#Q4GCCostperLead").val().replace(/,/g, ''));
                var cal = floatGCGuaranteedCPLBudget / floatGCCostperLead;
                $("#Q4TotalInboundPaidMediaInquiries").val(number_format(cal, 2, '.', ','));
                sumInboundPaidMediaInquiriesTotal = sumInboundPaidMediaInquiriesTotal + cal;

            }
        }
    }

    $("#AllQTotalInboundPaidMediaInquiriesTotal").val(number_format(sumInboundPaidMediaInquiriesTotal, 2, '.', ','));


    if (sumInboundPaidMediaInquiriesTotal != 0) {

        if ($("#AllQGCGuaranteedCPLBudgetTotal").val().replace(/,/g, '').trim() != '') {
            if (IsNumeric($("#AllQGCGuaranteedCPLBudgetTotal").val().replace(/,/g, ''))) {
                if ($("#AllQGCGuaranteedCPLBudgetTotal").val().replace(/,/g, '') != "0") {
                    var cal = 0;
                    cal = parseFloat($("#AllQGCGuaranteedCPLBudgetTotal").val().replace(/,/g, '') / sumInboundPaidMediaInquiriesTotal);
                    $("#AllQGCCostperLeadTotal").val(number_format(cal, 2, '.', ','));
                }
            }
        }
    }

}


//Inbound CONTENT SYNDICATION CPL
// To set CONTENT SYNDICATION CPL Non-Guar. CPL Budget  of Quarter 2,3 and 4 from blur of CONTENT SYNDICATION CPL Non-Guar. CPL Budget of Quarter 1
$("#CSC_NonGuaranteedCPLBudget").blur(function () {
    if ($("#CSC_NonGuaranteedCPLBudget").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#CSC_NonGuaranteedCPLBudget").val().replace(/,/g, ''))) {
            $("#Q2CSCNonGuaranteedCPLBudget").val($("#CSC_NonGuaranteedCPLBudget").val());
            $("#Q3CSCNonGuaranteedCPLBudget").val($("#Q2CSCNonGuaranteedCPLBudget").val());
            $("#Q4CSCNonGuaranteedCPLBudget").val($("#Q3CSCNonGuaranteedCPLBudget").val());
            calInboundCSCNonGuaranteedCPLBudgetTotal();
            calCONTENTSYNDICATIONCPLTotalInboundPaidSyndicatedInquiries();
            calAudiencePlanningSummaryInboundInquiries();
            calculateUsableDBSizeQuaterWise();
            calAudiencePlanningSummaryMediaBudget();
            changeValueToTwoDigit();
            setToolTip();
        }
    }
});

// function calculate Inbound CSC Non Guaranteed CPL Budget Total
function calInboundCSCNonGuaranteedCPLBudgetTotal() {
    var intQ1CSCNonGuaranteedCPLBudget = 0;
    var intQ2CSCNonGuaranteedCPLBudget = 0;
    var intQ3CSCNonGuaranteedCPLBudget = 0;
    var intQ4CSCNonGuaranteedCPLBudget = 0;
    if ($("#CSC_NonGuaranteedCPLBudget").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#CSC_NonGuaranteedCPLBudget").val().replace(/,/g, ''))) {
            intQ1CSCNonGuaranteedCPLBudget = parseInt($("#CSC_NonGuaranteedCPLBudget").val().replace(/,/g, ''));
        }
    }

    if ($("#Q2CSCNonGuaranteedCPLBudget").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q2CSCNonGuaranteedCPLBudget").val().replace(/,/g, ''))) {
            intQ2CSCNonGuaranteedCPLBudget = parseInt($("#Q2CSCNonGuaranteedCPLBudget").val().replace(/,/g, ''));
        }
    }

    if ($("#Q3CSCNonGuaranteedCPLBudget").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q3CSCNonGuaranteedCPLBudget").val().replace(/,/g, ''))) {
            intQ3CSCNonGuaranteedCPLBudget = parseInt($("#Q3CSCNonGuaranteedCPLBudget").val().replace(/,/g, ''));
        }
    }

    if ($("#Q4CSCNonGuaranteedCPLBudget").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q4CSCNonGuaranteedCPLBudget").val().replace(/,/g, ''))) {
            intQ4CSCNonGuaranteedCPLBudget = parseInt($("#Q4CSCNonGuaranteedCPLBudget").val().replace(/,/g, ''));
        }
    }


    var cal = 0;
    cal = intQ1CSCNonGuaranteedCPLBudget + intQ2CSCNonGuaranteedCPLBudget + intQ3CSCNonGuaranteedCPLBudget + intQ4CSCNonGuaranteedCPLBudget;
    $("#AllQCSCNonGuaranteedCPLBudgetTotal").val(number_format(cal, 2, '.', ','));
}

// To set Inbound Guaranteed CPL Cost per Lead  of Quarter 2,3 and 4 from blur of Guaranteed CPL Cost per Lead of Quarter 1
$("#CSC_CostperLead").blur(function () {
    if ($("#CSC_CostperLead").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#CSC_CostperLead").val().replace(/,/g, ''))) {
            $("#Q2CSCCostperLead").val($("#CSC_CostperLead").val());
            $("#Q3CSCCostperLead").val($("#Q2CSCCostperLead").val());
            $("#Q4CSCCostperLead").val($("#Q3CSCCostperLead").val());
            calInboundCSCCostperLeadTotal();
            calCONTENTSYNDICATIONCPLTotalInboundPaidSyndicatedInquiries();
            calAudiencePlanningSummaryInboundInquiries();
            calculateUsableDBSizeQuaterWise();
            changeValueToTwoDigit();
            setToolTip();
        }
    }
});

//function to calucalte Inbound CSC Cost per Lead Total
function calInboundCSCCostperLeadTotal() {
    var floatAllQCSCNonGuaranteedCPLBudgetTotal = 0;
    var floatAllQTotalInboundPaidSyndicatedInquiriesTotal = 0;
    if ($("#AllQCSCNonGuaranteedCPLBudgetTotal").val().replace(/,/g, '').trim() != '' && $("#AllQTotalInboundPaidSyndicatedInquiriesTotal").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#AllQCSCNonGuaranteedCPLBudgetTotal").val().replace(/,/g, '')) && IsNumeric($("#AllQTotalInboundPaidSyndicatedInquiriesTotal").val().replace(/,/g, ''))) {
            if ($("#AllQCSCNonGuaranteedCPLBudgetTotal").val().replace(/,/g, '') != "0" && $("#AllQTotalInboundPaidSyndicatedInquiriesTotal").val().replace(/,/g, '') != "0") {
                floatAllQCSCNonGuaranteedCPLBudgetTotal = parseFloat($("#AllQCSCNonGuaranteedCPLBudgetTotal").val().replace(/,/g, ''));
                floatAllQTotalInboundPaidSyndicatedInquiriesTotal = parseFloat($("#AllQTotalInboundPaidSyndicatedInquiriesTotal").val().replace(/,/g, ''));
                var cal = floatAllQCSCNonGuaranteedCPLBudgetTotal / floatAllQTotalInboundPaidSyndicatedInquiriesTotal;
                $("#AllQCSCCostperLeadTotal").val(number_format(cal, 2, '.', ','));
            }
        }
    }
}

//function to calculate Inbound CONTENT SYNDICATION CPL Total Inbound Paid Syndicated Inquiries
function calCONTENTSYNDICATIONCPLTotalInboundPaidSyndicatedInquiries() {
    var floatCSCNonGuaranteedCPLBudget = 0;
    var floatCSCCostperLead = 0;
    var sumInboundPaidSyndicatedInquiriesTotal = 0;

    if ($("#CSC_NonGuaranteedCPLBudget").val().replace(/,/g, '').trim() != '' && $("#CSC_CostperLead").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#CSC_NonGuaranteedCPLBudget").val().replace(/,/g, '')) && IsNumeric($("#CSC_CostperLead").val().replace(/,/g, ''))) {
            if ($("#CSC_NonGuaranteedCPLBudget").val().replace(/,/g, '') != "0" && $("#CSC_CostperLead").val().replace(/,/g, '') != "0") {
                floatCSCNonGuaranteedCPLBudget = parseFloat($("#CSC_NonGuaranteedCPLBudget").val().replace(/,/g, ''));
                floatCSCCostperLead = parseFloat($("#CSC_CostperLead").val().replace(/,/g, ''));
                var cal = floatCSCNonGuaranteedCPLBudget / floatCSCCostperLead;
                $("#Q1TotalInboundPaidSyndicatedInquiries").val(number_format(cal, 2, '.', ','));
                sumInboundPaidSyndicatedInquiriesTotal = sumInboundPaidSyndicatedInquiriesTotal + cal;
            }
        }
    }
    floatCSCNonGuaranteedCPLBudget = 0;
    floatCSCCostperLead = 0;

    if ($("#Q2CSCNonGuaranteedCPLBudget").val().replace(/,/g, '').trim() != '' && $("#Q2CSCCostperLead").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q2CSCNonGuaranteedCPLBudget").val().replace(/,/g, '')) && IsNumeric($("#Q2CSCCostperLead").val().replace(/,/g, ''))) {
            if ($("#Q2CSCNonGuaranteedCPLBudget").val().replace(/,/g, '') != "0" && $("#Q2CSCCostperLead").val().replace(/,/g, '') != "0") {
                floatCSCNonGuaranteedCPLBudget = parseFloat($("#Q2CSCNonGuaranteedCPLBudget").val().replace(/,/g, ''));
                floatCSCCostperLead = parseFloat($("#Q2CSCCostperLead").val().replace(/,/g, ''));
                var cal = floatCSCNonGuaranteedCPLBudget / floatCSCCostperLead;
                $("#Q2TotalInboundPaidSyndicatedInquiries").val(number_format(cal, 2, '.', ','));
                sumInboundPaidSyndicatedInquiriesTotal = sumInboundPaidSyndicatedInquiriesTotal + cal;
            }
        }
    }
    floatCSCNonGuaranteedCPLBudget = 0;
    floatCSCCostperLead = 0;

    if ($("#Q3CSCNonGuaranteedCPLBudget").val().replace(/,/g, '').trim() != '' && $("#Q3CSCCostperLead").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q3CSCNonGuaranteedCPLBudget").val().replace(/,/g, '')) && IsNumeric($("#Q3CSCCostperLead").val().replace(/,/g, ''))) {
            if ($("#Q3CSCNonGuaranteedCPLBudget").val().replace(/,/g, '') != "0" && $("#Q3CSCCostperLead").val().replace(/,/g, '') != "0") {
                floatCSCNonGuaranteedCPLBudget = parseFloat($("#Q3CSCNonGuaranteedCPLBudget").val().replace(/,/g, ''));
                floatCSCCostperLead = parseFloat($("#Q3CSCCostperLead").val().replace(/,/g, ''));
                var cal = floatCSCNonGuaranteedCPLBudget / floatCSCCostperLead;
                $("#Q3TotalInboundPaidSyndicatedInquiries").val(number_format(cal, 2, '.', ','));
                sumInboundPaidSyndicatedInquiriesTotal = sumInboundPaidSyndicatedInquiriesTotal + cal;
            }
        }
    }
    floatCSCNonGuaranteedCPLBudget = 0;
    floatCSCCostperLead = 0;

    if ($("#Q4CSCNonGuaranteedCPLBudget").val().replace(/,/g, '').trim() != '' && $("#Q4CSCCostperLead").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q4CSCNonGuaranteedCPLBudget").val().replace(/,/g, '')) && IsNumeric($("#Q4CSCCostperLead").val().replace(/,/g, ''))) {
            if ($("#Q4CSCNonGuaranteedCPLBudget").val().replace(/,/g, '') != "0" && $("#Q4CSCCostperLead").val().replace(/,/g, '') != "0") {
                floatCSCNonGuaranteedCPLBudget = parseFloat($("#Q4CSCNonGuaranteedCPLBudget").val().replace(/,/g, ''));
                floatCSCCostperLead = parseFloat($("#Q4CSCCostperLead").val().replace(/,/g, ''));
                var cal = floatCSCNonGuaranteedCPLBudget / floatCSCCostperLead;
                $("#Q4TotalInboundPaidSyndicatedInquiries").val(number_format(cal, 2, '.', ','));
                sumInboundPaidSyndicatedInquiriesTotal = sumInboundPaidSyndicatedInquiriesTotal + cal;
            }
        }
    }
    $("#AllQTotalInboundPaidSyndicatedInquiriesTotal").val(number_format(sumInboundPaidSyndicatedInquiriesTotal, 2, '.', ','));

    if (sumInboundPaidSyndicatedInquiriesTotal != 0) {

        if ($("#AllQCSCNonGuaranteedCPLBudgetTotal").val().replace(/,/g, '').trim() != '') {
            if (IsNumeric($("#AllQCSCNonGuaranteedCPLBudgetTotal").val().replace(/,/g, ''))) {
                if ($("#AllQCSCNonGuaranteedCPLBudgetTotal").val().replace(/,/g, '') != "0") {
                    var cal = 0;
                    cal = parseFloat($("#AllQCSCNonGuaranteedCPLBudgetTotal").val().replace(/,/g, '')) / sumInboundPaidSyndicatedInquiriesTotal;
                    $("#AllQCSCCostperLeadTotal").val(number_format(cal, 2, '.', ','));
                }
            }
        }
    }

}


//Inbound TRADITIONAL DIGITAL MEDIA
// To set TRADITIONAL DIGITAL MEDIAL Digital Media Budget  of Quarter 2,3 and 4 from blur of Digital Media Budget of Quarter 1
$("#TDM_DigitalMediaBudget").blur(function () {
    if ($("#TDM_DigitalMediaBudget").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#TDM_DigitalMediaBudget").val().replace(/,/g, ''))) {
            $("#Q2TDMDigitalMediaBudget").val($("#TDM_DigitalMediaBudget").val());
            $("#Q3TDMDigitalMediaBudget").val($("#Q2TDMDigitalMediaBudget").val());
            $("#Q4TDMDigitalMediaBudget").val($("#Q3TDMDigitalMediaBudget").val());
            calInboundTDMDigitalMediaBudgetTotal();
            calInboundTotalTraditionalDigitalMediaInquiries();
            calAudiencePlanningSummaryInboundInquiries();
            calculateUsableDBSizeQuaterWise();
            calAudiencePlanningSummaryMediaBudget();
            changeValueToTwoDigit();
            setToolTip();
        }
    }
});

// function calculate Inbound TDM Digital Media Budget Total
function calInboundTDMDigitalMediaBudgetTotal() {
    var intQ1TDMDigitalMediaBudget = 0;
    var intQ2TDMDigitalMediaBudget = 0;
    var intQ3TDMDigitalMediaBudget = 0;
    var intQ4TDMDigitalMediaBudget = 0;
    if ($("#TDM_DigitalMediaBudget").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#TDM_DigitalMediaBudget").val().replace(/,/g, ''))) {
            intQ1TDMDigitalMediaBudget = parseInt($("#TDM_DigitalMediaBudget").val().replace(/,/g, ''));
        }
    }
    if ($("#Q2TDMDigitalMediaBudget").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q2TDMDigitalMediaBudget").val().replace(/,/g, ''))) {
            intQ2TDMDigitalMediaBudget = parseInt($("#Q2TDMDigitalMediaBudget").val().replace(/,/g, ''));
        }
    }
    if ($("#Q3TDMDigitalMediaBudget").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q3TDMDigitalMediaBudget").val().replace(/,/g, ''))) {
            intQ3TDMDigitalMediaBudget = parseInt($("#Q3TDMDigitalMediaBudget").val().replace(/,/g, ''));
        }
    }
    if ($("#Q4TDMDigitalMediaBudget").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q4TDMDigitalMediaBudget").val().replace(/,/g, ''))) {
            intQ4TDMDigitalMediaBudget = parseInt($("#Q4TDMDigitalMediaBudget").val().replace(/,/g, ''));
        }
    }


    var cal = 0;
    cal = intQ1TDMDigitalMediaBudget + intQ2TDMDigitalMediaBudget + intQ3TDMDigitalMediaBudget + intQ4TDMDigitalMediaBudget;
    $("#AllQTDMDigitalMediaBudgetTotal").val(number_format(cal, 2, '.', ','));
}

// To set Inbound TRADITIONAL DIGITAL MEDIAL Cost per Lead  of Quarter 2,3 and 4 from blur of Cost per Lead of Quarter 1
$("#TDM_CostperLead").blur(function () {
    if ($("#TDM_CostperLead").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#TDM_CostperLead").val().replace(/,/g, ''))) {
            $("#Q2TDMCostperLead").val($("#TDM_CostperLead").val());
            $("#Q3TDMCostperLead").val($("#Q2TDMCostperLead").val());
            $("#Q4TDMCostperLead").val($("#Q3TDMCostperLead").val());
            calInboundTDMCostperLeadTotal();
            calInboundTotalTraditionalDigitalMediaInquiries();
            calAudiencePlanningSummaryInboundInquiries();
            calculateUsableDBSizeQuaterWise();
            changeValueToTwoDigit();
            setToolTip();
        }
    }
});

//function to calucalte Inbound TDM Cost per Lead Total
function calInboundTDMCostperLeadTotal() {
    var floatAllQTDMDigitalMediaBudgetTotal = 0;
    var floatAllQTotalTraditionalDigitalMediaInquiriesTotal = 0;
    if ($("#AllQTDMDigitalMediaBudgetTotal").val().replace(/,/g, '').trim() != '' && $("#AllQTotalTraditionalDigitalMediaInquiriesTotal").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#AllQTDMDigitalMediaBudgetTotal").val().replace(/,/g, '')) && IsNumeric($("#AllQTotalTraditionalDigitalMediaInquiriesTotal").val().replace(/,/g, ''))) {
            if ($("#AllQTDMDigitalMediaBudgetTotal").val().replace(/,/g, '') != "0" && $("#AllQTotalTraditionalDigitalMediaInquiriesTotal").val().replace(/,/g, '') != "0") {
                floatAllQTDMDigitalMediaBudgetTotal = parseFloat($("#AllQTDMDigitalMediaBudgetTotal").val().replace(/,/g, ''));
                floatAllQTotalTraditionalDigitalMediaInquiriesTotal = parseFloat($("#AllQTotalTraditionalDigitalMediaInquiriesTotal").val().replace(/,/g, ''));
                var cal = floatAllQTDMDigitalMediaBudgetTotal / floatAllQTotalTraditionalDigitalMediaInquiriesTotal;
                $("#AllQTDMCostperLeadTotal").val(number_format(cal, 2, '.', ','));
            }
        }
    }
}

//function to calculate Inbound Total Traditional Digital Media Inquiries
function calInboundTotalTraditionalDigitalMediaInquiries() {
    var floatTDMDigitalMediaBudget = 0;
    var floatTDMCostperLead = 0;
    var sumTraditionalDigitalMediaInquiriesTotal = 0;

    if ($("#TDM_DigitalMediaBudget").val().replace(/,/g, '').trim() != '' && $("#TDM_CostperLead").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#TDM_DigitalMediaBudget").val().replace(/,/g, '')) && IsNumeric($("#TDM_CostperLead").val().replace(/,/g, ''))) {
            if ($("#TDM_DigitalMediaBudget").val().replace(/,/g, '') != "0" && $("#TDM_CostperLead").val().replace(/,/g, '') != "0") {
                floatTDMDigitalMediaBudget = parseFloat($("#TDM_DigitalMediaBudget").val().replace(/,/g, ''));
                floatTDMCostperLead = parseFloat($("#TDM_CostperLead").val().replace(/,/g, ''));
                var cal = floatTDMDigitalMediaBudget / floatTDMCostperLead;
                $("#Q1TotalTraditionalDigitalMediaInquiries").val(number_format(cal, 2, '.', ','));
                sumTraditionalDigitalMediaInquiriesTotal = sumTraditionalDigitalMediaInquiriesTotal + cal;
            }
        }
    }
    floatTDMDigitalMediaBudget = 0;
    floatTDMCostperLead = 0;

    if ($("#Q2TDMDigitalMediaBudget").val().replace(/,/g, '').trim() != '' && $("#Q2TDMCostperLead").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q2TDMDigitalMediaBudget").val().replace(/,/g, '')) && IsNumeric($("#Q2TDMCostperLead").val().replace(/,/g, ''))) {
            if ($("#Q2TDMDigitalMediaBudget").val().replace(/,/g, '') != "0" && $("#Q2TDMCostperLead").val().replace(/,/g, '') != "0") {
                floatTDMDigitalMediaBudget = parseFloat($("#Q2TDMDigitalMediaBudget").val().replace(/,/g, ''));
                floatTDMCostperLead = parseFloat($("#Q2TDMCostperLead").val().replace(/,/g, ''));
                var cal = floatTDMDigitalMediaBudget / floatTDMCostperLead;
                $("#Q2TotalTraditionalDigitalMediaInquiries").val(number_format(cal, 2, '.', ','));
                sumTraditionalDigitalMediaInquiriesTotal = sumTraditionalDigitalMediaInquiriesTotal + cal;
            }
        }
    }
    floatTDMDigitalMediaBudget = 0;
    floatTDMCostperLead = 0;

    if ($("#Q3TDMDigitalMediaBudget").val().replace(/,/g, '').trim() != '' && $("#Q3TDMCostperLead").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q3TDMDigitalMediaBudget").val().replace(/,/g, '')) && IsNumeric($("#Q3TDMCostperLead").val().replace(/,/g, ''))) {
            if ($("#Q3TDMDigitalMediaBudget").val().replace(/,/g, '') != "0" && $("#Q3TDMCostperLead").val().replace(/,/g, '') != "0") {
                floatTDMDigitalMediaBudget = parseFloat($("#Q3TDMDigitalMediaBudget").val().replace(/,/g, ''));
                floatTDMCostperLead = parseFloat($("#Q3TDMCostperLead").val().replace(/,/g, ''));
                var cal = floatTDMDigitalMediaBudget / floatTDMCostperLead;
                $("#Q3TotalTraditionalDigitalMediaInquiries").val(number_format(cal, 2, '.', ','));
                sumTraditionalDigitalMediaInquiriesTotal = sumTraditionalDigitalMediaInquiriesTotal + cal;
            }
        }
    }
    floatTDMDigitalMediaBudget = 0;
    floatTDMCostperLead = 0;

    if ($("#Q4TDMDigitalMediaBudget").val().replace(/,/g, '').trim() != '' && $("#Q4TDMCostperLead").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q4TDMDigitalMediaBudget").val().replace(/,/g, '')) && IsNumeric($("#Q4TDMCostperLead").val().replace(/,/g, ''))) {
            if ($("#Q4TDMDigitalMediaBudget").val().replace(/,/g, '') != "0" && $("#Q4TDMCostperLead").val().replace(/,/g, '') != "0") {
                floatTDMDigitalMediaBudget = parseFloat($("#Q4TDMDigitalMediaBudget").val().replace(/,/g, ''));
                floatTDMCostperLead = parseFloat($("#Q4TDMCostperLead").val().replace(/,/g, ''));
                var cal = floatTDMDigitalMediaBudget / floatTDMCostperLead;
                $("#Q4TotalTraditionalDigitalMediaInquiries").val(number_format(cal, 2, '.', ','));
                sumTraditionalDigitalMediaInquiriesTotal = sumTraditionalDigitalMediaInquiriesTotal + cal;
            }
        }
    }

    $("#AllQTotalTraditionalDigitalMediaInquiriesTotal").val(number_format(sumTraditionalDigitalMediaInquiriesTotal, 2, '.', ','));

    if (sumTraditionalDigitalMediaInquiriesTotal != 0) {

        if ($("#AllQTDMDigitalMediaBudgetTotal").val().replace(/,/g, '').trim() != '') {
            if (IsNumeric($("#AllQTDMDigitalMediaBudgetTotal").val().replace(/,/g, ''))) {
                if ($("#AllQTDMDigitalMediaBudgetTotal").val().replace(/,/g, '') != "0") {
                    var cal = 0;
                    cal = parseFloat($("#AllQTDMDigitalMediaBudgetTotal").val().replace(/,/g, '') / sumTraditionalDigitalMediaInquiriesTotal);
                    $("#AllQTDMCostperLeadTotal").val(number_format(cal, 2, '.', ','));
                }
            }
        }
    }

}

//Inbound TRADITIONAL PRINT
// To set TRADITIONAL PRINT Print Media Budget  of Quarter 2,3 and 4 from blur of Print Media Budget of Quarter 1
$("#TP_PrintMediaBudget").blur(function () {
    if ($("#TP_PrintMediaBudget").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#TP_PrintMediaBudget").val().replace(/,/g, ''))) {
            $("#Q2TPPrintMediaBudget").val($("#TP_PrintMediaBudget").val());
            $("#Q3TPPrintMediaBudget").val($("#Q2TPPrintMediaBudget").val());
            $("#Q4TPPrintMediaBudget").val($("#Q3TPPrintMediaBudget").val());
            calInboundTPPrintMediaBudgetTotal();
            calInboundTPTotalTraditionalPrintInquiries();
            calAudiencePlanningSummaryInboundInquiries();
            calculateUsableDBSizeQuaterWise();
            calAudiencePlanningSummaryMediaBudget();
            changeValueToTwoDigit();
            setToolTip();
        }
    }
});

// function calculate Inbound TP Print Media Budget Total
function calInboundTPPrintMediaBudgetTotal() {
    var intQ1TPPrintMediaBudget = 0;
    var intQ2TPPrintMediaBudget = 0;
    var intQ3TPPrintMediaBudget = 0;
    var intQ4TPPrintMediaBudget = 0;
    if ($("#TP_PrintMediaBudget").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#TP_PrintMediaBudget").val().replace(/,/g, ''))) {
            intQ1TPPrintMediaBudget = parseInt($("#TP_PrintMediaBudget").val().replace(/,/g, ''));
        }
    }
    if ($("#Q2TPPrintMediaBudget").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q2TPPrintMediaBudget").val().replace(/,/g, ''))) {
            intQ2TPPrintMediaBudget = parseInt($("#Q2TPPrintMediaBudget").val().replace(/,/g, ''));
        }
    }
    if ($("#Q3TPPrintMediaBudget").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q3TPPrintMediaBudget").val().replace(/,/g, ''))) {
            intQ3TPPrintMediaBudget = parseInt($("#Q3TPPrintMediaBudget").val().replace(/,/g, ''));
        }
    }
    if ($("#Q4TPPrintMediaBudget").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q4TPPrintMediaBudget").val().replace(/,/g, ''))) {
            intQ4TPPrintMediaBudget = parseInt($("#Q4TPPrintMediaBudget").val().replace(/,/g, ''));
        }
    }

    var cal = 0;
    cal = intQ1TPPrintMediaBudget + intQ2TPPrintMediaBudget + intQ3TPPrintMediaBudget + intQ4TPPrintMediaBudget;
    $("#AllQTPPrintMediaBudgetTotal").val(number_format(cal, 2, '.', ','));
}

// To set Inbound TRADITIONAL PRINT Cost per Lead of Quarter 2,3 and 4 from blur of Cost per Lead of Quarter 1
$("#TP_CostperLead").blur(function () {
    if ($("#TP_CostperLead").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#TP_CostperLead").val().replace(/,/g, ''))) {
            $("#Q2TPCostperLead").val($("#TP_CostperLead").val());
            $("#Q3TPCostperLead").val($("#Q2TPCostperLead").val());
            $("#Q4TPCostperLead").val($("#Q3TPCostperLead").val());
            calInboundTPCostperLeadTotal();
            calInboundTPTotalTraditionalPrintInquiries();
            calAudiencePlanningSummaryInboundInquiries();
            calculateUsableDBSizeQuaterWise();
            changeValueToTwoDigit();
            setToolTip();
        }
    }
});

//function to calucalte Inbound TP Cost per Lead Total
function calInboundTPCostperLeadTotal() {
    var floatAllQTPPrintMediaBudgetTotal = 0;
    var floatAllQTotalTraditionalPrintInquiriesTotal = 0;
    if ($("#AllQTPPrintMediaBudgetTotal").val().replace(/,/g, '').trim() != '' && $("#AllQTotalTraditionalPrintInquiriesTotal").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#AllQTPPrintMediaBudgetTotal").val().replace(/,/g, '')) && IsNumeric($("#AllQTotalTraditionalPrintInquiriesTotal").val().replace(/,/g, ''))) {
            if ($("#AllQTPPrintMediaBudgetTotal").val().replace(/,/g, '') != "0" && $("#AllQTotalTraditionalPrintInquiriesTotal").val().replace(/,/g, '') != "0") {
                floatAllQTPPrintMediaBudgetTotal = parseFloat($("#AllQTPPrintMediaBudgetTotal").val().replace(/,/g, ''));
                floatAllQTotalTraditionalPrintInquiriesTotal = parseFloat($("#AllQTotalTraditionalPrintInquiriesTotal").val().replace(/,/g, ''));
                var cal = floatAllQTPPrintMediaBudgetTotal / floatAllQTotalTraditionalPrintInquiriesTotal;
                $("#AllQ4TPCostperLeadTotal").val(number_format(cal, 2, '.', ','));
            }
        }
    }
}

//function to calculate Inbound TP Total Traditional Print Inquiries
function calInboundTPTotalTraditionalPrintInquiries() {
    var floatTPPrintMediaBudget = 0;
    var floatTPCostperLead = 0;
    var sumTraditionalPrintInquiriesTotal = 0;

    if ($("#TP_PrintMediaBudget").val().replace(/,/g, '').trim() != '' && $("#TP_CostperLead").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#TP_PrintMediaBudget").val().replace(/,/g, '')) && IsNumeric($("#TP_CostperLead").val().replace(/,/g, ''))) {
            if ($("#TP_PrintMediaBudget").val().replace(/,/g, '') != "0" && $("#TP_CostperLead").val().replace(/,/g, '') != "0") {
                floatTPPrintMediaBudget = parseFloat($("#TP_PrintMediaBudget").val().replace(/,/g, ''));
                floatTPCostperLead = parseFloat($("#TP_CostperLead").val().replace(/,/g, ''));
                var cal = floatTPPrintMediaBudget / floatTPCostperLead;
                $("#Q1TotalTraditionalPrintInquiries").val(number_format(cal, 2, '.', ','));
                sumTraditionalPrintInquiriesTotal = sumTraditionalPrintInquiriesTotal + cal;
            }
        }
    }
    floatTPPrintMediaBudget = 0;
    floatTPCostperLead = 0;

    if ($("#Q2TPPrintMediaBudget").val().replace(/,/g, '').trim() != '' && $("#Q2TPCostperLead").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q2TPPrintMediaBudget").val().replace(/,/g, '')) && IsNumeric($("#Q2TPCostperLead").val().replace(/,/g, ''))) {
            if ($("#Q2TPPrintMediaBudget").val().replace(/,/g, '') != "0" && $("#Q2TPCostperLead").val().replace(/,/g, '') != "0") {
                floatTPPrintMediaBudget = parseFloat($("#Q2TPPrintMediaBudget").val().replace(/,/g, ''));
                floatTPCostperLead = parseFloat($("#Q2TPCostperLead").val().replace(/,/g, ''));
                var cal = floatTPPrintMediaBudget / floatTPCostperLead;
                $("#Q2TotalTraditionalPrintInquiries").val(number_format(cal, 2, '.', ','));
                sumTraditionalPrintInquiriesTotal = sumTraditionalPrintInquiriesTotal + cal;
            }
        }
    }
    floatTPPrintMediaBudget = 0;
    floatTPCostperLead = 0;

    if ($("#Q3TPPrintMediaBudget").val().replace(/,/g, '').trim() != '' && $("#Q3TPCostperLead").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q3TPPrintMediaBudget").val().replace(/,/g, '')) && IsNumeric($("#Q3TPCostperLead").val().replace(/,/g, ''))) {
            if ($("#Q3TPPrintMediaBudget").val().replace(/,/g, '') != "0" && $("#Q3TPCostperLead").val().replace(/,/g, '') != "0") {
                floatTPPrintMediaBudget = parseFloat($("#Q3TPPrintMediaBudget").val().replace(/,/g, ''));
                floatTPCostperLead = parseFloat($("#Q3TPCostperLead").val().replace(/,/g, ''));
                var cal = floatTPPrintMediaBudget / floatTPCostperLead;
                $("#Q3TotalTraditionalPrintInquiries").val(number_format(cal, 2, '.', ','));
                sumTraditionalPrintInquiriesTotal = sumTraditionalPrintInquiriesTotal + cal;
            }
        }
    }
    floatTPPrintMediaBudget = 0;
    floatTPCostperLead = 0;

    if ($("#Q4TPPrintMediaBudget").val().replace(/,/g, '').trim() != '' && $("#Q4TPCostperLead").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q4TPPrintMediaBudget").val().replace(/,/g, '')) && IsNumeric($("#Q4TPCostperLead").val().replace(/,/g, ''))) {
            if ($("#Q4TPPrintMediaBudget").val().replace(/,/g, '') != "0" && $("#Q4TPCostperLead").val().replace(/,/g, '') != "0") {
                floatTPPrintMediaBudget = parseFloat($("#Q4TPPrintMediaBudget").val().replace(/,/g, ''));
                floatTPCostperLead = parseFloat($("#Q4TPCostperLead").val().replace(/,/g, ''));
                var cal = floatTPPrintMediaBudget / floatTPCostperLead;
                $("#Q4TotalTraditionalPrintInquiries").val(number_format(cal, 2, '.', ','));
                sumTraditionalPrintInquiriesTotal = sumTraditionalPrintInquiriesTotal + cal;
            }
        }
    }


    $("#AllQTotalTraditionalPrintInquiriesTotal").val(number_format(sumTraditionalPrintInquiriesTotal, 2, '.', ','));

    if (sumTraditionalPrintInquiriesTotal != 0) {

        if ($("#AllQTPPrintMediaBudgetTotal").val().replace(/,/g, '').trim() != '') {
            if (IsNumeric($("#AllQTPPrintMediaBudgetTotal").val().replace(/,/g, ''))) {
                if ($("#AllQTPPrintMediaBudgetTotal").val().replace(/,/g, '') != "0") {
                    var cal = 0;
                    cal = parseFloat($("#AllQTPPrintMediaBudgetTotal").val().replace(/,/g, '')) / sumTraditionalPrintInquiriesTotal;
                    $("#AllQ4TPCostperLeadTotal").val(number_format(cal, 2, '.', ','));
                }
            }
        }
    }
}

function IsNumeric(num) {
    return (num >= 0 || num < 0);
}


//Events

$("#NumberofContactsQ1").blur(function () {
    calsumofEventsNumberofContacts("ALL");
    calEventsNumberofInquiries();
    calEventsCostperContact();
    calEventsCostperInquiry();
    calAudiencePlanningSummaryInboundInquiries();
    calculateUsableDBSizeQuaterWise();
    changeValueToTwoDigit();
    setToolTip();
});

$("#NumberofContactsQ2").blur(function () {
    calsumofEventsNumberofContacts("ALL");
    calEventsNumberofInquiries();
    calEventsCostperContact();
    calEventsCostperInquiry();
    calAudiencePlanningSummaryInboundInquiries();
    calculateUsableDBSizeQuaterWise();
    changeValueToTwoDigit();
    setToolTip();
});


$("#NumberofContactsQ3").blur(function () {
    calsumofEventsNumberofContacts("ALL");
    calEventsNumberofInquiries();
    calEventsCostperContact();
    calEventsCostperInquiry();
    calAudiencePlanningSummaryInboundInquiries();
    calculateUsableDBSizeQuaterWise();
    changeValueToTwoDigit();
    setToolTip();
});


$("#NumberofContactsQ4").blur(function () {
    calsumofEventsNumberofContacts("ALL");
    calEventsNumberofInquiries();
    calEventsCostperContact();
    calEventsCostperInquiry();
    calAudiencePlanningSummaryInboundInquiries();
    calculateUsableDBSizeQuaterWise();
    changeValueToTwoDigit();
    setToolTip();
});

//function to calculate sum of Events Number of Contacts
function calsumofEventsNumberofContacts(qtr) {
    var intNumberofContactsQ1 = 0;
    var intNumberofContactsQ2 = 0;
    var intNumberofContactsQ3 = 0;
    var intNumberofContactsQ4 = 0;

    if (qtr == "ALL" || qtr == "Q1") {
        if ($("#NumberofContactsQ1").val().replace(/,/g, '').trim() != '') {
            if (IsNumeric($("#NumberofContactsQ1").val().replace(/,/g, ''))) {
                intNumberofContactsQ1 = parseInt($("#NumberofContactsQ1").val().replace(/,/g, ''));
            }
        }
    }
    if (qtr == "ALL" || qtr == "Q2") {
        if ($("#NumberofContactsQ2").val().replace(/,/g, '').trim() != '') {
            if (IsNumeric($("#NumberofContactsQ2").val().replace(/,/g, ''))) {
                intNumberofContactsQ2 = parseInt($("#NumberofContactsQ2").val().replace(/,/g, ''));
            }
        }
    }
    if (qtr == "ALL" || qtr == "Q3") {
        if ($("#NumberofContactsQ3").val().replace(/,/g, '').trim() != '') {
            if (IsNumeric($("#NumberofContactsQ3").val().replace(/,/g, ''))) {
                intNumberofContactsQ3 = parseInt($("#NumberofContactsQ3").val().replace(/,/g, ''));
            }
        }
    }
    if (qtr == "ALL" || qtr == "Q4") {
        if ($("#NumberofContactsQ4").val().replace(/,/g, '').trim() != '') {
            if (IsNumeric($("#NumberofContactsQ4").val().replace(/,/g, ''))) {
                intNumberofContactsQ4 = parseInt($("#NumberofContactsQ4").val().replace(/,/g, ''));
            }
        }
    }

    var cal = 0;
    cal = intNumberofContactsQ1 + intNumberofContactsQ2 + intNumberofContactsQ3 + intNumberofContactsQ4;
    $("#AllNumberofContactsQTotal").val(number_format(cal, 2, '.', ','));
}

// To set Events Contact to Inquiry Conv of Quarter 2,3 and 4 from blur of Contact to Inquiry Conv of Quarter 1
$("#ContactToInquiryConversion").blur(function () {
    if ($("#ContactToInquiryConversion").val().trim() != '') {
        if (IsNumeric($("#ContactToInquiryConversion").val())) {

            //var floatContactToInquiryConversion = 0;
            //floatContactToInquiryConversion = parseFloat($("#ContactToInquiryConversion").val()) / 100;
            //$("#ContactToInquiryConversion").val(floatContactToInquiryConversion);

            $("#Q2ContactToInquiryConversion").val($("#ContactToInquiryConversion").val());
            $("#Q3ContactToInquiryConversion").val($("#Q2ContactToInquiryConversion").val());
            $("#Q4ContactToInquiryConversion").val($("#Q3ContactToInquiryConversion").val());
            calEventsContactToInquiryConversionTotal();
            calEventsNumberofInquiries();
            calEventsCostperInquiry();
            calAudiencePlanningSummaryInboundInquiries();
            calculateUsableDBSizeQuaterWise();
            changeValueToTwoDigit();
            setToolTip();
        }
    }
});

//function to calucalte Events Contact To Inquiry Conversion Total
function calEventsContactToInquiryConversionTotal() {
    var floatAllQEventsNumberofInquiriesTotal = 0;
    var floatAllNumberofContactsQTotal = 0;

    if ($("#AllQEventsNumberofInquiriesTotal").val().replace(/,/g, '').trim() != '' && $("#AllNumberofContactsQTotal").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#AllQEventsNumberofInquiriesTotal").val().replace(/,/g, '')) && IsNumeric($("#AllNumberofContactsQTotal").val().replace(/,/g, ''))) {
            if ($("#AllQEventsNumberofInquiriesTotal").val().replace(/,/g, '') != "0" && $("#AllNumberofContactsQTotal").val().replace(/,/g, '') != "0") {
                floatAllQEventsNumberofInquiriesTotal = parseFloat($("#AllQEventsNumberofInquiriesTotal").val().replace(/,/g, ''));
                floatAllNumberofContactsQTotal = parseFloat($("#AllNumberofContactsQTotal").val().replace(/,/g, ''));
                var cal = 0;
                if (floatAllQEventsNumberofInquiriesTotal != 0 && floatAllNumberofContactsQTotal != 0) {
                    cal = floatAllQEventsNumberofInquiriesTotal / floatAllNumberofContactsQTotal;
                }

                $("#AllQContactToInquiryConversionTotal").val(cal);
            }
        }
    }
}

//function to calculate Events Number of Inquiries
function calEventsNumberofInquiries() {
    var floatNumberofContacts = 0;
    var floatContactToInquiryConversion = 0;
    var sumAllQEventsNumberofInquiriesTotal = 0;

    if ($("#NumberofContactsQ1").val().replace(/,/g, '').trim() != '' && $("#ContactToInquiryConversion").val().trim() != '') {
        if (IsNumeric($("#NumberofContactsQ1").val().replace(/,/g, '')) && IsNumeric($("#ContactToInquiryConversion").val())) {
            floatNumberofContacts = parseFloat($("#NumberofContactsQ1").val().replace(/,/g, ''));
            floatContactToInquiryConversion = parseFloat($("#ContactToInquiryConversion").val()) / 100;
            var cal = floatNumberofContacts * floatContactToInquiryConversion;

            $("#Q1EventsNumberofInquiries").val(number_format(cal, 2, '.', ','));
            sumAllQEventsNumberofInquiriesTotal = sumAllQEventsNumberofInquiriesTotal + cal;

        }
    }
    floatNumberofContacts = 0;
    floatContactToInquiryConversion = 0;

    if ($("#NumberofContactsQ2").val().replace(/,/g, '').trim() != '' && $("#Q2ContactToInquiryConversion").val().trim() != '') {
        if (IsNumeric($("#NumberofContactsQ2").val().replace(/,/g, '')) && IsNumeric($("#Q2ContactToInquiryConversion").val())) {
            floatNumberofContacts = parseFloat($("#NumberofContactsQ2").val().replace(/,/g, ''));
            floatContactToInquiryConversion = parseFloat($("#Q2ContactToInquiryConversion").val()) / 100;
            var cal = floatNumberofContacts * floatContactToInquiryConversion;

            $("#Q2EventsNumberofInquiries").val(number_format(cal, 2, '.', ','));
            sumAllQEventsNumberofInquiriesTotal = sumAllQEventsNumberofInquiriesTotal + cal;

        }
    }
    floatNumberofContacts = 0;
    floatContactToInquiryConversion = 0;

    if ($("#NumberofContactsQ3").val().replace(/,/g, '').trim() != '' && $("#Q3ContactToInquiryConversion").val().trim() != '') {
        if (IsNumeric($("#NumberofContactsQ3").val().replace(/,/g, '')) && IsNumeric($("#Q3ContactToInquiryConversion").val())) {
            floatNumberofContacts = parseFloat($("#NumberofContactsQ3").val().replace(/,/g, ''));
            floatContactToInquiryConversion = parseFloat($("#Q3ContactToInquiryConversion").val()) / 100;
            var cal = floatNumberofContacts * floatContactToInquiryConversion;

            $("#Q3EventsNumberofInquiries").val(number_format(cal, 2, '.', ','));
            sumAllQEventsNumberofInquiriesTotal = sumAllQEventsNumberofInquiriesTotal + cal;

        }
    }
    floatNumberofContacts = 0;
    floatContactToInquiryConversion = 0;

    if ($("#NumberofContactsQ4").val().replace(/,/g, '').trim() != '' && $("#Q4ContactToInquiryConversion").val().trim() != '') {
        if (IsNumeric($("#NumberofContactsQ4").val().replace(/,/g, '')) && IsNumeric($("#Q4ContactToInquiryConversion").val())) {
            floatNumberofContacts = parseFloat($("#NumberofContactsQ4").val().replace(/,/g, ''));
            floatContactToInquiryConversion = parseFloat($("#Q4ContactToInquiryConversion").val()) / 100;
            var cal = floatNumberofContacts * floatContactToInquiryConversion;

            $("#Q4EventsNumberofInquiries").val(number_format(cal, 2, '.', ','));
            sumAllQEventsNumberofInquiriesTotal = sumAllQEventsNumberofInquiriesTotal + cal;

        }
    }

    $("#AllQEventsNumberofInquiriesTotal").val(number_format(sumAllQEventsNumberofInquiriesTotal, 2, '.', ','));

    if (sumAllQEventsNumberofInquiriesTotal != 0) {

        if ($("#AllNumberofContactsQTotal").val().replace(/,/g, '').trim() != '') {
            if (IsNumeric($("#AllNumberofContactsQTotal").val().replace(/,/g, ''))) {
                if ($("#AllNumberofContactsQTotal").val().replace(/,/g, '') != "0") {
                    var cal = 0;
                    cal = parseFloat($("#AllNumberofContactsQTotal").val().replace(/,/g, '')) / sumAllQEventsNumberofInquiriesTotal;
                    var modulo = 0;
                    modulo = parseFloat($("#AllNumberofContactsQTotal").val().replace(/,/g, '')) % sumAllQEventsNumberofInquiriesTotal;
                    if (modulo == 0) {
                        $("#AllQContactToInquiryConversionTotal").val(cal * 100);
                    }
                    else {
                        $("#AllQContactToInquiryConversionTotal").val(cal);
                    }
                }
            }
        }
    }

}

$("#EventsBudgetQ1").blur(function () {
    calsumofEventsBudget("ALL");
    calEventsCostperContact();
    calEventsCostperInquiry();
    calAudiencePlanningSummaryEventBudget();
    changeValueToTwoDigit();
    setToolTip();

});

$("#EventsBudgetQ2").blur(function () {
    calsumofEventsBudget("ALL");
    calEventsCostperContact();
    calEventsCostperInquiry();
    calAudiencePlanningSummaryEventBudget();
    changeValueToTwoDigit();
    setToolTip();
});


$("#EventsBudgetQ3").blur(function () {
    calsumofEventsBudget("ALL");
    calEventsCostperContact();
    calEventsCostperInquiry();
    calAudiencePlanningSummaryEventBudget();
    changeValueToTwoDigit();
    setToolTip();
});


$("#EventsBudgetQ4").blur(function () {
    calsumofEventsBudget("ALL");
    calEventsCostperContact();
    calEventsCostperInquiry();
    calAudiencePlanningSummaryEventBudget();
    changeValueToTwoDigit();
    setToolTip();
});

//function to calculate sum of Events Budget
function calsumofEventsBudget(qtr) {
    var intEventsBudgetQ1 = 0;
    var intEventsBudgetQ2 = 0;
    var intEventsBudgetQ3 = 0;
    var intEventsBudgetQ4 = 0;

    if (qtr == "ALL" || qtr == "Q1") {
        if ($("#EventsBudgetQ1").val().replace(/,/g, '').trim() != '') {
            if (IsNumeric($("#EventsBudgetQ1").val().replace(/,/g, ''))) {
                intEventsBudgetQ1 = parseInt($("#EventsBudgetQ1").val().replace(/,/g, ''));
            }
        }
    }
    if (qtr == "ALL" || qtr == "Q2") {
        if ($("#EventsBudgetQ2").val().replace(/,/g, '').trim() != '') {
            if (IsNumeric($("#EventsBudgetQ2").val().replace(/,/g, ''))) {
                intEventsBudgetQ2 = parseInt($("#EventsBudgetQ2").val().replace(/,/g, ''));
            }
        }
    }
    if (qtr == "ALL" || qtr == "Q3") {
        if ($("#EventsBudgetQ3").val().replace(/,/g, '').trim() != '') {
            if (IsNumeric($("#EventsBudgetQ3").val().replace(/,/g, ''))) {
                intEventsBudgetQ3 = parseInt($("#EventsBudgetQ3").val().replace(/,/g, ''));
            }
        }
    }
    if (qtr == "ALL" || qtr == "Q4") {
        if ($("#EventsBudgetQ4").val().replace(/,/g, '').trim() != '') {
            if (IsNumeric($("#EventsBudgetQ4").val().replace(/,/g, ''))) {
                intEventsBudgetQ4 = parseInt($("#EventsBudgetQ4").val().replace(/,/g, ''));
            }
        }
    }

    var cal = 0;
    cal = intEventsBudgetQ1 + intEventsBudgetQ2 + intEventsBudgetQ3 + intEventsBudgetQ4;
    $("#AllEventsBudgetQTotal").val(cal);
}

//function to calcualte Events Cost per Contact
function calEventsCostperContact() {
    var floatEventsBudget = 0;
    var floatNumberofContacts = 0;

    if ($("#EventsBudgetQ1").val().replace(/,/g, '').trim() != '' && $("#NumberofContactsQ1").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#EventsBudgetQ1").val().replace(/,/g, '')) && IsNumeric($("#NumberofContactsQ1").val().replace(/,/g, ''))) {
            if ($("#EventsBudgetQ1").val().replace(/,/g, '') != "0" && $("#NumberofContactsQ1").val().replace(/,/g, '') != "0") {
                floatEventsBudget = parseFloat($("#EventsBudgetQ1").val().replace(/,/g, ''));
                floatNumberofContacts = parseFloat($("#NumberofContactsQ1").val().replace(/,/g, ''));
                var cal = floatEventsBudget / floatNumberofContacts;
                $("#Q1EventsCostperContact").val(number_format(cal, 2, '.', ','));

            }
        }
    }
    floatEventsBudget = 0;
    floatNumberofContacts = 0;

    if ($("#EventsBudgetQ2").val().replace(/,/g, '').trim() != '' && $("#NumberofContactsQ2").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#EventsBudgetQ2").val().replace(/,/g, '')) && IsNumeric($("#NumberofContactsQ2").val().replace(/,/g, ''))) {
            if ($("#EventsBudgetQ2").val().replace(/,/g, '') != "0" && $("#NumberofContactsQ2").val().replace(/,/g, '') != "0") {
                floatEventsBudget = parseFloat($("#EventsBudgetQ2").val().replace(/,/g, ''));
                floatNumberofContacts = parseFloat($("#NumberofContactsQ2").val().replace(/,/g, ''));
                var cal = floatEventsBudget / floatNumberofContacts;
                $("#Q2EventsCostperContact").val(number_format(cal, 2, '.', ','));

            }
        }
    }
    floatEventsBudget = 0;
    floatNumberofContacts = 0;

    if ($("#EventsBudgetQ3").val().replace(/,/g, '').trim() != '' && $("#NumberofContactsQ3").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#EventsBudgetQ3").val().replace(/,/g, '')) && IsNumeric($("#NumberofContactsQ3").val().replace(/,/g, ''))) {
            if ($("#EventsBudgetQ3").val().replace(/,/g, '') != "0" && $("#NumberofContactsQ3").val().replace(/,/g, '') != "0") {
                floatEventsBudget = parseFloat($("#EventsBudgetQ3").val().replace(/,/g, ''));
                floatNumberofContacts = parseFloat($("#NumberofContactsQ3").val().replace(/,/g, ''));
                var cal = floatEventsBudget / floatNumberofContacts;
                $("#Q3EventsCostperContact").val(number_format(cal, 2, '.', ','));

            }
        }
    }
    floatEventsBudget = 0;
    floatNumberofContacts = 0;

    if ($("#EventsBudgetQ4").val().replace(/,/g, '').trim() != '' && $("#NumberofContactsQ4").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#EventsBudgetQ4").val().replace(/,/g, '')) && IsNumeric($("#NumberofContactsQ4").val().replace(/,/g, ''))) {
            if ($("#EventsBudgetQ4").val().replace(/,/g, '') != "0" && $("#NumberofContactsQ4").val().replace(/,/g, '') != "0") {
                floatEventsBudget = parseFloat($("#EventsBudgetQ4").val().replace(/,/g, ''));
                floatNumberofContacts = parseFloat($("#NumberofContactsQ4").val().replace(/,/g, ''));
                var cal = floatEventsBudget / floatNumberofContacts;
                $("#Q4EventsCostperContact").val(number_format(cal, 2, '.', ','));

            }
        }
    }

    floatEventsBudget = 0;
    floatNumberofContacts = 0;

    if ($("#AllEventsBudgetQTotal").val().trim() != '' && $("#AllNumberofContactsQTotal").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#AllEventsBudgetQTotal").val()) && IsNumeric($("#AllNumberofContactsQTotal").val().replace(/,/g, ''))) {
            if ($("#AllEventsBudgetQTotal").val() != "0" && $("#AllNumberofContactsQTotal").val().replace(/,/g, '') != "0") {
                floatEventsBudget = parseFloat($("#AllEventsBudgetQTotal").val());
                floatNumberofContacts = parseFloat($("#AllNumberofContactsQTotal").val().replace(/,/g, ''));
                var cal = floatEventsBudget / floatNumberofContacts;
                $("#AllQEventsCostperContactTotal").val(number_format(cal, 2, '.', ','));

            }
        }
    }

}

//function to calcualte Events Cost per Inquiry
function calEventsCostperInquiry() {
    var floatEventsBudget = 0;
    var floatEventsNumberofInquiries = 0;
    if ($("#EventsBudgetQ1").val().replace(/,/g, '').trim() != '' && $("#Q1EventsNumberofInquiries").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#EventsBudgetQ1").val().replace(/,/g, '')) && IsNumeric($("#Q1EventsNumberofInquiries").val().replace(/,/g, ''))) {
            if ($("#EventsBudgetQ1").val().replace(/,/g, '') != "0" && $("#Q1EventsNumberofInquiries").val().replace(/,/g, '') != "0") {
                floatEventsBudget = parseFloat($("#EventsBudgetQ1").val().replace(/,/g, ''));
                floatEventsNumberofInquiries = parseFloat($("#Q1EventsNumberofInquiries").val().replace(/,/g, ''));
                var cal = floatEventsBudget / floatEventsNumberofInquiries;
                $("#Q1EventsCostperInquiry").val(number_format(cal, 2, '.', ','));

            }
            else {
                $("#Q1EventsCostperInquiry").val(0);
            }
        }
        else {
            $("#Q1EventsCostperInquiry").val(0);
        }
    }
    else {
        $("#Q1EventsCostperInquiry").val(0);
    }
    floatEventsBudget = 0;
    floatEventsNumberofInquiries = 0;

    if ($("#EventsBudgetQ2").val().replace(/,/g, '').trim() != '' && $("#Q2EventsNumberofInquiries").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#EventsBudgetQ2").val().replace(/,/g, '')) && IsNumeric($("#Q2EventsNumberofInquiries").val().replace(/,/g, ''))) {
            if ($("#EventsBudgetQ2").val().replace(/,/g, '') != "0" && $("#Q2EventsNumberofInquiries").val().replace(/,/g, '') != "0") {
                floatEventsBudget = parseFloat($("#EventsBudgetQ2").val().replace(/,/g, ''));
                floatEventsNumberofInquiries = parseFloat($("#Q2EventsNumberofInquiries").val().replace(/,/g, ''));
                var cal = floatEventsBudget / floatEventsNumberofInquiries;
                $("#Q2EventsCostperInquiry").val(number_format(cal, 2, '.', ','));

            }
            else {
                $("#Q2EventsCostperInquiry").val(0);
            }
        }
        else {
            $("#Q2EventsCostperInquiry").val(0);
        }
    }
    else {
        $("#Q2EventsCostperInquiry").val(0);
    }
    floatEventsBudget = 0;
    floatEventsNumberofInquiries = 0;

    if ($("#EventsBudgetQ3").val().replace(/,/g, '').trim() != '' && $("#Q3EventsNumberofInquiries").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#EventsBudgetQ3").val().replace(/,/g, '')) && IsNumeric($("#Q3EventsNumberofInquiries").val().replace(/,/g, ''))) {
            if ($("#EventsBudgetQ3").val().replace(/,/g, '') != "0" && $("#Q3EventsNumberofInquiries").val().replace(/,/g, '') != "0") {
                floatEventsBudget = parseFloat($("#EventsBudgetQ3").val().replace(/,/g, ''));
                floatEventsNumberofInquiries = parseFloat($("#Q3EventsNumberofInquiries").val().replace(/,/g, ''));
                var cal = floatEventsBudget / floatEventsNumberofInquiries;
                $("#Q3EventsCostperInquiry").val(number_format(cal, 2, '.', ','));

            }
            else {
                $("#Q3EventsCostperInquiry").val(0);
            }
        }
        else {
            $("#Q3EventsCostperInquiry").val(0);
        }
    }
    else {
        $("#Q3EventsCostperInquiry").val(0);
    }
    floatEventsBudget = 0;
    floatEventsNumberofInquiries = 0;

    if ($("#EventsBudgetQ4").val().replace(/,/g, '').trim() != '' && $("#Q4EventsNumberofInquiries").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#EventsBudgetQ4").val().replace(/,/g, '')) && IsNumeric($("#Q4EventsNumberofInquiries").val().replace(/,/g, ''))) {
            if ($("#EventsBudgetQ4").val().replace(/,/g, '') != "0" && $("#Q4EventsNumberofInquiries").val().replace(/,/g, '') != "0") {
                floatEventsBudget = parseFloat($("#EventsBudgetQ4").val().replace(/,/g, ''));
                floatEventsNumberofInquiries = parseFloat($("#Q4EventsNumberofInquiries").val().replace(/,/g, ''));
                var cal = floatEventsBudget / floatEventsNumberofInquiries;
                $("#Q4EventsCostperInquiry").val(number_format(cal, 2, '.', ','));

            }
            else {
                $("#Q4EventsCostperInquiry").val(0);
            }
        }
        else {
            $("#Q4EventsCostperInquiry").val(0);
        }
    }
    else {
        $("#Q4EventsCostperInquiry").val(0);
    }
    floatEventsBudget = 0;
    floatEventsNumberofInquiries = 0;

    if ($("#AllEventsBudgetQTotal").val().trim() != '' && $("#AllQEventsNumberofInquiriesTotal").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#AllEventsBudgetQTotal").val()) && IsNumeric($("#AllQEventsNumberofInquiriesTotal").val().replace(/,/g, ''))) {
            if ($("#AllEventsBudgetQTotal").val() != "0" && $("#AllQEventsNumberofInquiriesTotal").val().replace(/,/g, '') != "0") {
                floatEventsBudget = parseFloat($("#AllEventsBudgetQTotal").val());
                floatEventsNumberofInquiries = parseFloat($("#AllQEventsNumberofInquiriesTotal").val().replace(/,/g, ''));
                var cal = floatEventsBudget / floatEventsNumberofInquiries;
                $("#AllQEventsCostperInquiryTotal").val(number_format(cal, 2, '.', ','));

            }
            else {
                $("#AllQEventsCostperInquiryTotal").val(0);
            }
        }
        else {
            $("#AllQEventsCostperInquiryTotal").val(0);
        }
    }
    else {
        $("#AllQEventsCostperInquiryTotal").val(0);
    }


}


//Audience Planning Summary

//function to calculate  Audience Planning Summary Outbound Inquiries
function calAudiencePlanningSummaryOutboundInquiries() {
    var floatModeledOutboundUnpaidInquiries = 0;
    var floatListAcquisitionsModeledOutboundUnpaidInquiriesTotal = 0;
    var sumAllQOutboundInquiriesTotal = 0;

    if ($("#Q1ModeledOutboundUnpaidInquiries").val().replace(/,/g, '').trim() != '' && $("#Q1ListAcquisitionsModeledOutboundUnpaidInquiriesTotal").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q1ModeledOutboundUnpaidInquiries").val().replace(/,/g, '')) && IsNumeric($("#Q1ListAcquisitionsModeledOutboundUnpaidInquiriesTotal").val().replace(/,/g, ''))) {
            floatModeledOutboundUnpaidInquiries = parseFloat($("#Q1ModeledOutboundUnpaidInquiries").val().replace(/,/g, ''));
            floatListAcquisitionsModeledOutboundUnpaidInquiriesTotal = parseFloat($("#Q1ListAcquisitionsModeledOutboundUnpaidInquiriesTotal").val().replace(/,/g, ''));
            var cal = 0;
            cal = floatModeledOutboundUnpaidInquiries + floatListAcquisitionsModeledOutboundUnpaidInquiriesTotal;
            //$("#Q1OutboundInquiries").val(cal);
            $("#Q1OutboundInquiries").val(number_format(cal, 2, '.', ','));
            sumAllQOutboundInquiriesTotal = sumAllQOutboundInquiriesTotal + cal;
        }
        else {

        }
    }

    floatModeledOutboundUnpaidInquiries = 0;
    floatListAcquisitionsModeledOutboundUnpaidInquiriesTotal = 0;

    if ($("#Q2ModeledOutboundUnpaidInquiries").val().replace(/,/g, '').trim() != '' && $("#Q2ListAcquisitionsModeledOutboundUnpaidInquiriesTotal").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q2ModeledOutboundUnpaidInquiries").val().replace(/,/g, '')) && IsNumeric($("#Q2ListAcquisitionsModeledOutboundUnpaidInquiriesTotal").val().replace(/,/g, ''))) {
            floatModeledOutboundUnpaidInquiries = parseFloat($("#Q2ModeledOutboundUnpaidInquiries").val().replace(/,/g, ''));
            floatListAcquisitionsModeledOutboundUnpaidInquiriesTotal = parseFloat($("#Q2ListAcquisitionsModeledOutboundUnpaidInquiriesTotal").val().replace(/,/g, ''));
            var cal = 0;
            cal = floatModeledOutboundUnpaidInquiries + floatListAcquisitionsModeledOutboundUnpaidInquiriesTotal;
            //$("#Q2OutboundInquiries").val(cal);
            $("#Q2OutboundInquiries").val(number_format(cal, 2, '.', ','));
            sumAllQOutboundInquiriesTotal = sumAllQOutboundInquiriesTotal + cal;
        }
    }

    floatModeledOutboundUnpaidInquiries = 0;
    floatListAcquisitionsModeledOutboundUnpaidInquiriesTotal = 0;

    if ($("#Q3ModeledOutboundUnpaidInquiries").val().replace(/,/g, '').trim() != '' && $("#Q3ListAcquisitionsModeledOutboundUnpaidInquiriesTotal").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q3ModeledOutboundUnpaidInquiries").val().replace(/,/g, '')) && IsNumeric($("#Q3ListAcquisitionsModeledOutboundUnpaidInquiriesTotal").val().replace(/,/g, ''))) {
            floatModeledOutboundUnpaidInquiries = parseFloat($("#Q3ModeledOutboundUnpaidInquiries").val().replace(/,/g, ''));
            floatListAcquisitionsModeledOutboundUnpaidInquiriesTotal = parseFloat($("#Q3ListAcquisitionsModeledOutboundUnpaidInquiriesTotal").val().replace(/,/g, ''));
            var cal = 0;
            cal = floatModeledOutboundUnpaidInquiries + floatListAcquisitionsModeledOutboundUnpaidInquiriesTotal;
            //$("#Q3OutboundInquiries").val(cal);
            $("#Q3OutboundInquiries").val(number_format(cal, 2, '.', ','));
            sumAllQOutboundInquiriesTotal = sumAllQOutboundInquiriesTotal + cal;
        }
    }

    floatModeledOutboundUnpaidInquiries = 0;
    floatListAcquisitionsModeledOutboundUnpaidInquiriesTotal = 0;

    if ($("#Q4ModeledOutboundUnpaidInquiries").val().replace(/,/g, '').trim() != '' && $("#Q4ListAcquisitionsModeledOutboundUnpaidInquiriesTotal").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q4ModeledOutboundUnpaidInquiries").val().replace(/,/g, '')) && IsNumeric($("#Q4ListAcquisitionsModeledOutboundUnpaidInquiriesTotal").val().replace(/,/g, ''))) {
            floatModeledOutboundUnpaidInquiries = parseFloat($("#Q4ModeledOutboundUnpaidInquiries").val().replace(/,/g, ''));
            floatListAcquisitionsModeledOutboundUnpaidInquiriesTotal = parseFloat($("#Q4ListAcquisitionsModeledOutboundUnpaidInquiriesTotal").val().replace(/,/g, ''));
            var cal = 0;
            cal = floatModeledOutboundUnpaidInquiries + floatListAcquisitionsModeledOutboundUnpaidInquiriesTotal;
            //$("#Q4OutboundInquiries").val(cal);
            $("#Q4OutboundInquiries").val(number_format(cal, 2, '.', ','));
            sumAllQOutboundInquiriesTotal = sumAllQOutboundInquiriesTotal + cal;
        }
    }
    //$("#AllQOutboundInquiriesTotal").val(sumAllQOutboundInquiriesTotal);
    $("#AllQOutboundInquiriesTotal").val(number_format(sumAllQOutboundInquiriesTotal, 2, '.', ','));
}

//function to calculate  Audience Planning Summary Inbound Inquiries
function calAudiencePlanningSummaryInboundInquiries() {
    var floatTotalUnpaidInboundInquiries = 0;
    var floatTotalInboundPaidSearchInquiries = 0;
    var floatTotalInboundPaidMediaInquiries = 0;
    var floatTotalInboundPaidSyndicatedInquiries = 0;
    var floatTotalTraditionalDigitalMediaInquiries = 0;
    var floatTotalTraditionalPrintInquiries = 0;
    var floatEventsNumberofInquiries = 0;
    var sumAllQInboundInquiriesTotal = 0;
    var cal = 0;

    if ($("#Q1TotalUnpaidInboundInquiries").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q1TotalUnpaidInboundInquiries").val().replace(/,/g, ''))) {
            floatTotalUnpaidInboundInquiries = parseFloat($("#Q1TotalUnpaidInboundInquiries").val().replace(/,/g, ''));
        }
    }

    if ($("#Q1TotalInboundPaidSearchInquiries").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q1TotalInboundPaidSearchInquiries").val().replace(/,/g, ''))) {
            floatTotalInboundPaidSearchInquiries = parseFloat($("#Q1TotalInboundPaidSearchInquiries").val().replace(/,/g, ''));
        }
    }
    if ($("#Q1TotalInboundPaidMediaInquiries").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q1TotalInboundPaidMediaInquiries").val().replace(/,/g, ''))) {
            floatTotalInboundPaidMediaInquiries = parseFloat($("#Q1TotalInboundPaidMediaInquiries").val().replace(/,/g, ''));
        }
    }
    if ($("#Q1TotalInboundPaidSyndicatedInquiries").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q1TotalInboundPaidSyndicatedInquiries").val().replace(/,/g, ''))) {
            floatTotalInboundPaidSyndicatedInquiries = parseFloat($("#Q1TotalInboundPaidSyndicatedInquiries").val().replace(/,/g, ''));
        }
    }
    if ($("#Q1TotalTraditionalDigitalMediaInquiries").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q1TotalTraditionalDigitalMediaInquiries").val().replace(/,/g, ''))) {
            floatTotalTraditionalDigitalMediaInquiries = parseFloat($("#Q1TotalTraditionalDigitalMediaInquiries").val().replace(/,/g, ''));
        }
    }
    if ($("#Q1TotalTraditionalPrintInquiries").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q1TotalTraditionalPrintInquiries").val().replace(/,/g, ''))) {
            floatTotalTraditionalPrintInquiries = parseFloat($("#Q1TotalTraditionalPrintInquiries").val().replace(/,/g, ''));
        }
    }
    if ($("#Q1EventsNumberofInquiries").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q1EventsNumberofInquiries").val().replace(/,/g, ''))) {
            floatEventsNumberofInquiries = parseFloat($("#Q1EventsNumberofInquiries").val().replace(/,/g, ''));
        }
    }
    cal = floatTotalUnpaidInboundInquiries + floatTotalInboundPaidSearchInquiries + floatTotalInboundPaidMediaInquiries + floatTotalInboundPaidSyndicatedInquiries + floatTotalTraditionalDigitalMediaInquiries + floatTotalTraditionalPrintInquiries + floatEventsNumberofInquiries;
    $("#Q1InboundInquiries").val(number_format(cal, 2, '.', ','));
    sumAllQInboundInquiriesTotal = sumAllQInboundInquiriesTotal + parseFloat($("#Q1InboundInquiries").val().replace(/,/g, ''));

    floatTotalUnpaidInboundInquiries = 0;
    floatTotalInboundPaidSearchInquiries = 0;
    floatTotalInboundPaidMediaInquiries = 0;
    floatTotalInboundPaidSyndicatedInquiries = 0;
    floatTotalTraditionalDigitalMediaInquiries = 0;
    floatTotalTraditionalPrintInquiries = 0;
    floatEventsNumberofInquiries = 0;
    cal = 0;
    /////
    if ($("#Q2TotalUnpaidInboundInquiries").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q2TotalUnpaidInboundInquiries").val().replace(/,/g, ''))) {
            floatTotalUnpaidInboundInquiries = parseFloat($("#Q2TotalUnpaidInboundInquiries").val().replace(/,/g, ''));
        }
    }

    if ($("#Q2TotalInboundPaidSearchInquiries").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q2TotalInboundPaidSearchInquiries").val().replace(/,/g, ''))) {
            floatTotalInboundPaidSearchInquiries = parseFloat($("#Q2TotalInboundPaidSearchInquiries").val().replace(/,/g, ''));
        }
    }
    if ($("#Q2TotalInboundPaidMediaInquiries").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q2TotalInboundPaidMediaInquiries").val().replace(/,/g, ''))) {
            floatTotalInboundPaidMediaInquiries = parseFloat($("#Q2TotalInboundPaidMediaInquiries").val().replace(/,/g, ''));
        }
    }
    if ($("#Q2TotalInboundPaidSyndicatedInquiries").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q2TotalInboundPaidSyndicatedInquiries").val().replace(/,/g, ''))) {
            floatTotalInboundPaidSyndicatedInquiries = parseFloat($("#Q2TotalInboundPaidSyndicatedInquiries").val().replace(/,/g, ''));
        }
    }
    if ($("#Q2TotalTraditionalDigitalMediaInquiries").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q2TotalTraditionalDigitalMediaInquiries").val().replace(/,/g, ''))) {
            floatTotalTraditionalDigitalMediaInquiries = parseFloat($("#Q2TotalTraditionalDigitalMediaInquiries").val().replace(/,/g, ''));
        }
    }
    if ($("#Q2TotalTraditionalPrintInquiries").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q2TotalTraditionalPrintInquiries").val().replace(/,/g, ''))) {
            floatTotalTraditionalPrintInquiries = parseFloat($("#Q2TotalTraditionalPrintInquiries").val().replace(/,/g, ''));
        }
    }
    if ($("#Q2EventsNumberofInquiries").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q2EventsNumberofInquiries").val().replace(/,/g, ''))) {
            floatEventsNumberofInquiries = parseFloat($("#Q2EventsNumberofInquiries").val().replace(/,/g, ''));
        }
    }
    cal = floatTotalUnpaidInboundInquiries + floatTotalInboundPaidSearchInquiries + floatTotalInboundPaidMediaInquiries + floatTotalInboundPaidSyndicatedInquiries + floatTotalTraditionalDigitalMediaInquiries + floatTotalTraditionalPrintInquiries + floatEventsNumberofInquiries
    $("#Q2InboundInquiries").val(number_format(cal, 2, '.', ','));
    sumAllQInboundInquiriesTotal = sumAllQInboundInquiriesTotal + parseFloat($("#Q2InboundInquiries").val().replace(/,/g, ''));

    floatTotalUnpaidInboundInquiries = 0;
    floatTotalInboundPaidSearchInquiries = 0;
    floatTotalInboundPaidMediaInquiries = 0;
    floatTotalInboundPaidSyndicatedInquiries = 0;
    floatTotalTraditionalDigitalMediaInquiries = 0;
    floatTotalTraditionalPrintInquiries = 0;
    floatEventsNumberofInquiries = 0;
    cal = 0;
    /////
    if ($("#Q3TotalUnpaidInboundInquiries").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q3TotalUnpaidInboundInquiries").val().replace(/,/g, ''))) {
            floatTotalUnpaidInboundInquiries = parseFloat($("#Q3TotalUnpaidInboundInquiries").val().replace(/,/g, ''));
        }
    }

    if ($("#Q3TotalInboundPaidSearchInquiries").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q3TotalInboundPaidSearchInquiries").val().replace(/,/g, ''))) {
            floatTotalInboundPaidSearchInquiries = parseFloat($("#Q3TotalInboundPaidSearchInquiries").val().replace(/,/g, ''));
        }
    }
    if ($("#Q3TotalInboundPaidMediaInquiries").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q3TotalInboundPaidMediaInquiries").val().replace(/,/g, ''))) {
            floatTotalInboundPaidMediaInquiries = parseFloat($("#Q3TotalInboundPaidMediaInquiries").val().replace(/,/g, ''));
        }
    }
    if ($("#Q3TotalInboundPaidSyndicatedInquiries").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q3TotalInboundPaidSyndicatedInquiries").val().replace(/,/g, ''))) {
            floatTotalInboundPaidSyndicatedInquiries = parseFloat($("#Q3TotalInboundPaidSyndicatedInquiries").val().replace(/,/g, ''));
        }
    }
    if ($("#Q3TotalTraditionalDigitalMediaInquiries").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q3TotalTraditionalDigitalMediaInquiries").val().replace(/,/g, ''))) {
            floatTotalTraditionalDigitalMediaInquiries = parseFloat($("#Q3TotalTraditionalDigitalMediaInquiries").val().replace(/,/g, ''));
        }
    }
    if ($("#Q3TotalTraditionalPrintInquiries").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q3TotalTraditionalPrintInquiries").val().replace(/,/g, ''))) {
            floatTotalTraditionalPrintInquiries = parseFloat($("#Q3TotalTraditionalPrintInquiries").val().replace(/,/g, ''));
        }
    }
    if ($("#Q3EventsNumberofInquiries").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q3EventsNumberofInquiries").val().replace(/,/g, ''))) {
            floatEventsNumberofInquiries = parseFloat($("#Q3EventsNumberofInquiries").val().replace(/,/g, ''));
        }
    }
    cal = floatTotalUnpaidInboundInquiries + floatTotalInboundPaidSearchInquiries + floatTotalInboundPaidMediaInquiries + floatTotalInboundPaidSyndicatedInquiries + floatTotalTraditionalDigitalMediaInquiries + floatTotalTraditionalPrintInquiries + floatEventsNumberofInquiries;
    $("#Q3InboundInquiries").val(number_format(cal, 2, '.', ','));
    sumAllQInboundInquiriesTotal = sumAllQInboundInquiriesTotal + parseFloat($("#Q3InboundInquiries").val().replace(/,/g, ''));

    floatTotalUnpaidInboundInquiries = 0;
    floatTotalInboundPaidSearchInquiries = 0;
    floatTotalInboundPaidMediaInquiries = 0;
    floatTotalInboundPaidSyndicatedInquiries = 0;
    floatTotalTraditionalDigitalMediaInquiries = 0;
    floatTotalTraditionalPrintInquiries = 0;
    floatEventsNumberofInquiries = 0;

    /////
    if ($("#Q4TotalUnpaidInboundInquiries").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q4TotalUnpaidInboundInquiries").val().replace(/,/g, ''))) {
            floatTotalUnpaidInboundInquiries = parseFloat($("#Q4TotalUnpaidInboundInquiries").val().replace(/,/g, ''));
        }
    }

    if ($("#Q4TotalInboundPaidSearchInquiries").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q4TotalInboundPaidSearchInquiries").val().replace(/,/g, ''))) {
            floatTotalInboundPaidSearchInquiries = parseFloat($("#Q4TotalInboundPaidSearchInquiries").val().replace(/,/g, ''));
        }
    }
    if ($("#Q4TotalInboundPaidMediaInquiries").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q4TotalInboundPaidMediaInquiries").val().replace(/,/g, ''))) {
            floatTotalInboundPaidMediaInquiries = parseFloat($("#Q4TotalInboundPaidMediaInquiries").val().replace(/,/g, ''));
        }
    }
    if ($("#Q4TotalInboundPaidSyndicatedInquiries").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q4TotalInboundPaidSyndicatedInquiries").val().replace(/,/g, ''))) {
            floatTotalInboundPaidSyndicatedInquiries = parseFloat($("#Q4TotalInboundPaidSyndicatedInquiries").val().replace(/,/g, ''));
        }
    }
    if ($("#Q4TotalTraditionalDigitalMediaInquiries").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q4TotalTraditionalDigitalMediaInquiries").val().replace(/,/g, ''))) {
            floatTotalTraditionalDigitalMediaInquiries = parseFloat($("#Q4TotalTraditionalDigitalMediaInquiries").val().replace(/,/g, ''));
        }
    }
    if ($("#Q4TotalTraditionalPrintInquiries").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q4TotalTraditionalPrintInquiries").val().replace(/,/g, ''))) {
            floatTotalTraditionalPrintInquiries = parseFloat($("#Q4TotalTraditionalPrintInquiries").val().replace(/,/g, ''));
        }
    }
    if ($("#Q4EventsNumberofInquiries").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q4EventsNumberofInquiries").val().replace(/,/g, ''))) {
            floatEventsNumberofInquiries = parseFloat($("#Q4EventsNumberofInquiries").val().replace(/,/g, ''));
        }
    }
    cal = floatTotalUnpaidInboundInquiries + floatTotalInboundPaidSearchInquiries + floatTotalInboundPaidMediaInquiries + floatTotalInboundPaidSyndicatedInquiries + floatTotalTraditionalDigitalMediaInquiries + floatTotalTraditionalPrintInquiries + floatEventsNumberofInquiries;
    $("#Q4InboundInquiries").val(number_format(cal, 2, '.', ','));
    sumAllQInboundInquiriesTotal = sumAllQInboundInquiriesTotal + parseFloat($("#Q4InboundInquiries").val().replace(/,/g, ''));

    $("#AllQInboundInquiriesTotal").val(number_format(sumAllQInboundInquiriesTotal, 2, '.', ','));

    calCampaigndrivenModeledOutboundUnpaidInquiries("ALL");
}

//function to calculate  Audience Planning Summary List Acquisition Budget
function calAudiencePlanningSummaryListAcquisitionBudget() {
    var floatCostperList = 0;
    var sumAllQSummaryListAcquisitionBudgetTotal = 0;
    if ($("#Q1CostperList").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q1CostperList").val().replace(/,/g, ''))) {
            floatCostperList = parseFloat($("#Q1CostperList").val().replace(/,/g, ''));
        }
    }
    $("#Q1SummaryListAcquisitionBudget").val(number_format(floatCostperList, 2, '.', ','));
    sumAllQSummaryListAcquisitionBudgetTotal = sumAllQSummaryListAcquisitionBudgetTotal + floatCostperList;
    floatCostperList = 0;

    if ($("#Q2CostperList").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q2CostperList").val().replace(/,/g, ''))) {
            floatCostperList = parseFloat($("#Q2CostperList").val().replace(/,/g, ''));
        }
    }
    $("#Q2SummaryListAcquisitionBudget").val(number_format(floatCostperList, 2, '.', ','));
    sumAllQSummaryListAcquisitionBudgetTotal = sumAllQSummaryListAcquisitionBudgetTotal + floatCostperList;
    floatCostperList = 0;

    if ($("#Q3CostperList").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q3CostperList").val().replace(/,/g, ''))) {
            floatCostperList = parseFloat($("#Q3CostperList").val().replace(/,/g, ''));
        }
    }
    $("#Q3SummaryListAcquisitionBudget").val(number_format(floatCostperList, 2, '.', ','));
    sumAllQSummaryListAcquisitionBudgetTotal = sumAllQSummaryListAcquisitionBudgetTotal + floatCostperList;
    floatCostperList = 0;

    if ($("#Q4CostperList").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q4CostperList").val().replace(/,/g, ''))) {
            floatCostperList = parseFloat($("#Q4CostperList").val().replace(/,/g, ''));
        }
    }
    $("#Q4SummaryListAcquisitionBudget").val(number_format(floatCostperList, 2, '.', ','));
    sumAllQSummaryListAcquisitionBudgetTotal = sumAllQSummaryListAcquisitionBudgetTotal + floatCostperList;

    $("#AllQSummaryListAcquisitionBudgetTotal").val(number_format(sumAllQSummaryListAcquisitionBudgetTotal, 2, '.', ','));

}

//function to calculate Audience Planning Summary Media Budget
function calAudiencePlanningSummaryMediaBudget() {
    var floatPPCCost = 0;
    var floatGCGuaranteedCPLBudget = 0;
    var floatCSCNonGuaranteedCPLBudget = 0;
    var floatTDMDigitalMediaBudget = 0;
    var floatTPPrintMediaBudget = 0;
    var sumAllQSummaryMediaBudgetTotal = 0;
    var cal = 0;

    if ($("#Q1PPCCost").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q1PPCCost").val().replace(/,/g, ''))) {
            floatPPCCost = parseFloat($("#Q1PPCCost").val().replace(/,/g, ''));
        }
    }
    sumAllQSummaryMediaBudgetTotal = sumAllQSummaryMediaBudgetTotal + floatPPCCost;
    if ($("#GC_GuaranteedCPLBudget").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#GC_GuaranteedCPLBudget").val().replace(/,/g, ''))) {
            floatGCGuaranteedCPLBudget = parseFloat($("#GC_GuaranteedCPLBudget").val().replace(/,/g, ''));
        }
    }
    sumAllQSummaryMediaBudgetTotal = sumAllQSummaryMediaBudgetTotal + floatGCGuaranteedCPLBudget;
    if ($("#CSC_NonGuaranteedCPLBudget").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#CSC_NonGuaranteedCPLBudget").val().replace(/,/g, ''))) {
            floatCSCNonGuaranteedCPLBudget = parseFloat($("#CSC_NonGuaranteedCPLBudget").val().replace(/,/g, ''));
        }
    }
    sumAllQSummaryMediaBudgetTotal = sumAllQSummaryMediaBudgetTotal + floatCSCNonGuaranteedCPLBudget;
    if ($("#TDM_DigitalMediaBudget").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#TDM_DigitalMediaBudget").val().replace(/,/g, ''))) {
            floatTDMDigitalMediaBudget = parseFloat($("#TDM_DigitalMediaBudget").val().replace(/,/g, ''));
        }
    }
    sumAllQSummaryMediaBudgetTotal = sumAllQSummaryMediaBudgetTotal + floatTDMDigitalMediaBudget;
    if ($("#TP_PrintMediaBudget").val().trim() != '') {
        if (IsNumeric($("#TP_PrintMediaBudget").val())) {
            floatTPPrintMediaBudget = parseFloat($("#TP_PrintMediaBudget").val());
        }
    }
    sumAllQSummaryMediaBudgetTotal = sumAllQSummaryMediaBudgetTotal + floatTPPrintMediaBudget;
    cal = floatPPCCost + floatGCGuaranteedCPLBudget + floatCSCNonGuaranteedCPLBudget + floatTDMDigitalMediaBudget + floatTPPrintMediaBudget;
    $("#Q1SummaryMediaBudget").val(number_format(cal, 2, '.', ','));

    floatPPCCost = 0;
    floatGCGuaranteedCPLBudget = 0;
    floatCSCNonGuaranteedCPLBudget = 0;
    floatTDMDigitalMediaBudget = 0;
    floatTPPrintMediaBudget = 0;
    cal = 0;

    if ($("#Q2PPCCost").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q2PPCCost").val().replace(/,/g, ''))) {
            floatPPCCost = parseFloat($("#Q2PPCCost").val().replace(/,/g, ''));
        }
    }
    sumAllQSummaryMediaBudgetTotal = sumAllQSummaryMediaBudgetTotal + floatPPCCost;
    if ($("#Q2GCGuaranteedCPLBudget").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q2GCGuaranteedCPLBudget").val().replace(/,/g, ''))) {
            floatGCGuaranteedCPLBudget = parseFloat($("#Q2GCGuaranteedCPLBudget").val().replace(/,/g, ''));
        }
    }
    sumAllQSummaryMediaBudgetTotal = sumAllQSummaryMediaBudgetTotal + floatGCGuaranteedCPLBudget;
    if ($("#Q2CSCNonGuaranteedCPLBudget").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q2CSCNonGuaranteedCPLBudget").val().replace(/,/g, ''))) {
            floatCSCNonGuaranteedCPLBudget = parseFloat($("#Q2CSCNonGuaranteedCPLBudget").val().replace(/,/g, ''));
        }
    }
    sumAllQSummaryMediaBudgetTotal = sumAllQSummaryMediaBudgetTotal + floatCSCNonGuaranteedCPLBudget;
    if ($("#Q2TDMDigitalMediaBudget").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q2TDMDigitalMediaBudget").val().replace(/,/g, ''))) {
            floatTDMDigitalMediaBudget = parseFloat($("#Q2TDMDigitalMediaBudget").val().replace(/,/g, ''));
        }
    }
    sumAllQSummaryMediaBudgetTotal = sumAllQSummaryMediaBudgetTotal + floatTDMDigitalMediaBudget;
    if ($("#Q2TPPrintMediaBudget").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q2TPPrintMediaBudget").val().replace(/,/g, ''))) {
            floatTPPrintMediaBudget = parseFloat($("#Q2TPPrintMediaBudget").val().replace(/,/g, ''));
        }
    }
    sumAllQSummaryMediaBudgetTotal = sumAllQSummaryMediaBudgetTotal + floatTPPrintMediaBudget;
    cal = floatPPCCost + floatGCGuaranteedCPLBudget + floatCSCNonGuaranteedCPLBudget + floatTDMDigitalMediaBudget + floatTPPrintMediaBudget;
    $("#Q2SummaryMediaBudget").val(number_format(cal, 2, '.', ','));

    floatPPCCost = 0;
    floatGCGuaranteedCPLBudget = 0;
    floatCSCNonGuaranteedCPLBudget = 0;
    floatTDMDigitalMediaBudget = 0;
    floatTPPrintMediaBudget = 0;
    cal = 0;

    if ($("#Q3PPCCost").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q3PPCCost").val().replace(/,/g, ''))) {
            floatPPCCost = parseFloat($("#Q3PPCCost").val().replace(/,/g, ''));
        }
    }
    sumAllQSummaryMediaBudgetTotal = sumAllQSummaryMediaBudgetTotal + floatPPCCost;
    if ($("#Q3GCGuaranteedCPLBudget").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q3GCGuaranteedCPLBudget").val().replace(/,/g, ''))) {
            floatGCGuaranteedCPLBudget = parseFloat($("#Q3GCGuaranteedCPLBudget").val().replace(/,/g, ''));
        }
    }
    sumAllQSummaryMediaBudgetTotal = sumAllQSummaryMediaBudgetTotal + floatGCGuaranteedCPLBudget;
    if ($("#Q3CSCNonGuaranteedCPLBudget").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q3CSCNonGuaranteedCPLBudget").val().replace(/,/g, ''))) {
            floatCSCNonGuaranteedCPLBudget = parseFloat($("#Q3CSCNonGuaranteedCPLBudget").val().replace(/,/g, ''));
        }
    }
    sumAllQSummaryMediaBudgetTotal = sumAllQSummaryMediaBudgetTotal + floatCSCNonGuaranteedCPLBudget;
    if ($("#Q3TDMDigitalMediaBudget").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q3TDMDigitalMediaBudget").val().replace(/,/g, ''))) {
            floatTDMDigitalMediaBudget = parseFloat($("#Q3TDMDigitalMediaBudget").val().replace(/,/g, ''));
        }
    }
    sumAllQSummaryMediaBudgetTotal = sumAllQSummaryMediaBudgetTotal + floatTDMDigitalMediaBudget;
    if ($("#Q3TPPrintMediaBudget").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q3TPPrintMediaBudget").val().replace(/,/g, ''))) {
            floatTPPrintMediaBudget = parseFloat($("#Q3TPPrintMediaBudget").val().replace(/,/g, ''));
        }
    }
    sumAllQSummaryMediaBudgetTotal = sumAllQSummaryMediaBudgetTotal + floatTPPrintMediaBudget;
    cal = floatPPCCost + floatGCGuaranteedCPLBudget + floatCSCNonGuaranteedCPLBudget + floatTDMDigitalMediaBudget + floatTPPrintMediaBudget;
    $("#Q3SummaryMediaBudget").val(number_format(cal, 2, '.', ','));

    floatPPCCost = 0;
    floatGCGuaranteedCPLBudget = 0;
    floatCSCNonGuaranteedCPLBudget = 0;
    floatTDMDigitalMediaBudget = 0;
    floatTPPrintMediaBudget = 0;
    cal = 0;

    if ($("#Q4PPCCost").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q4PPCCost").val().replace(/,/g, ''))) {
            floatPPCCost = parseFloat($("#Q4PPCCost").val().replace(/,/g, ''));
        }
    }
    sumAllQSummaryMediaBudgetTotal = sumAllQSummaryMediaBudgetTotal + floatPPCCost;
    if ($("#Q4GCGuaranteedCPLBudget").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q4GCGuaranteedCPLBudget").val().replace(/,/g, ''))) {
            floatGCGuaranteedCPLBudget = parseFloat($("#Q4GCGuaranteedCPLBudget").val().replace(/,/g, ''));
        }
    }
    sumAllQSummaryMediaBudgetTotal = sumAllQSummaryMediaBudgetTotal + floatGCGuaranteedCPLBudget;
    if ($("#Q4CSCNonGuaranteedCPLBudget").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q4CSCNonGuaranteedCPLBudget").val().replace(/,/g, ''))) {
            floatCSCNonGuaranteedCPLBudget = parseFloat($("#Q4CSCNonGuaranteedCPLBudget").val().replace(/,/g, ''));
        }
    }
    sumAllQSummaryMediaBudgetTotal = sumAllQSummaryMediaBudgetTotal + floatCSCNonGuaranteedCPLBudget;
    if ($("#Q4TDMDigitalMediaBudget").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q4TDMDigitalMediaBudget").val().replace(/,/g, ''))) {
            floatTDMDigitalMediaBudget = parseFloat($("#Q4TDMDigitalMediaBudget").val().replace(/,/g, ''));
        }
    }
    sumAllQSummaryMediaBudgetTotal = sumAllQSummaryMediaBudgetTotal + floatTDMDigitalMediaBudget;
    if ($("#Q4TPPrintMediaBudget").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#Q4TPPrintMediaBudget").val().replace(/,/g, ''))) {
            floatTPPrintMediaBudget = parseFloat($("#Q4TPPrintMediaBudget").val().replace(/,/g, ''));
        }
    }
    sumAllQSummaryMediaBudgetTotal = sumAllQSummaryMediaBudgetTotal + floatTPPrintMediaBudget;
    cal = floatPPCCost + floatGCGuaranteedCPLBudget + floatCSCNonGuaranteedCPLBudget + floatTDMDigitalMediaBudget + floatTPPrintMediaBudget;
    $("#Q4SummaryMediaBudget").val(number_format(cal, 2, '.', ','));
    $("#AllQSummaryMediaBudgetTotal").val(number_format(sumAllQSummaryMediaBudgetTotal, 2, '.', ','));

}

//function to calculate Audience Planning Summary Event Budget
function calAudiencePlanningSummaryEventBudget() {
    var floatEventsBudget = 0;
    var sumAllQSummaryEventsBudgetTotal = 0;

    if ($("#EventsBudgetQ1").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#EventsBudgetQ1").val().replace(/,/g, ''))) {
            floatEventsBudget = parseFloat($("#EventsBudgetQ1").val().replace(/,/g, ''));
        }
    }

    $("#Q1SummaryEventsBudget").val(number_format(floatEventsBudget, 2, '.', ','));

    sumAllQSummaryEventsBudgetTotal = sumAllQSummaryEventsBudgetTotal + floatEventsBudget;
    floatEventsBudget = 0;

    if ($("#EventsBudgetQ2").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#EventsBudgetQ2").val().replace(/,/g, ''))) {
            floatEventsBudget = parseFloat($("#EventsBudgetQ2").val().replace(/,/g, ''));
        }
    }
    $("#Q2SummaryEventsBudget").val(number_format(floatEventsBudget, 2, '.', ','));
    sumAllQSummaryEventsBudgetTotal = sumAllQSummaryEventsBudgetTotal + floatEventsBudget;
    floatEventsBudget = 0;

    if ($("#EventsBudgetQ3").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#EventsBudgetQ3").val().replace(/,/g, ''))) {
            floatEventsBudget = parseFloat($("#EventsBudgetQ3").val().replace(/,/g, ''));
        }
    }
    $("#Q3SummaryEventsBudget").val(number_format(floatEventsBudget, 2, '.', ','));
    sumAllQSummaryEventsBudgetTotal = sumAllQSummaryEventsBudgetTotal + floatEventsBudget;
    floatEventsBudget = 0;


    if ($("#EventsBudgetQ4").val().replace(/,/g, '').trim() != '') {
        if (IsNumeric($("#EventsBudgetQ4").val().replace(/,/g, ''))) {
            floatEventsBudget = parseFloat($("#EventsBudgetQ4").val().replace(/,/g, ''));
        }
    }
    $("#Q4SummaryEventsBudget").val(number_format(floatEventsBudget, 2, '.', ','));
    sumAllQSummaryEventsBudgetTotal = sumAllQSummaryEventsBudgetTotal + floatEventsBudget;

    $("#AllQSummaryEventsBudgetTotal").val(number_format(sumAllQSummaryEventsBudgetTotal, 2, '.', ','));

}



function changeValueToTwoDigit() {
    var grayInputs = $(".gray-input.twodigit");
    $.each(grayInputs, function (index, greyInput) {
        if (greyInput.value == '') {
            greyInput.value = 0.00;
        }
        if (IsNumeric(greyInput.value)) {
            greyInput.value = parseFloat(greyInput.value).toFixed(2);
        }


    })

}

$(".doubleText").keyup(function (event) {
    var $this = $(this);
    $this.val($this.val().replace(/[^\d.]/g, ''));
});

function enabledisablebutton(flg) {
    if (flg == undefined) {

        //  $('#button-save').removeClass("btn-blue").addClass("btn-blue-disable");
        $('#button-save').hide();
        MakeViewOnly(); //Bug 17:Should not be able to edit a published model
        //$("#publish").removeClass('btn-blue');
        //$("#publish").addClass('btn-blue-disable');
    }
}

function CalOnBlur() {
    $("#Q1NormalErosion").blur();
    $("#Q1UnsubscribeRate").blur();
    $("#NumberOfTouchesQ1").blur();
    $("#NumberOfTouchesQ2").blur();
    $("#NumberOfTouchesQ3").blur();
    $("#NumberOfTouchesQ4").blur();
    $("#Q1CTRDelivered").blur();
    $("#Q1RegistrationRate").blur();
    $("#ListAcquisitionsQ1").blur();
    $("#ListAcquisitionsQ2").blur();
    $("#ListAcquisitionsQ3").blur();
    $("#ListAcquisitionsQ4").blur();
    $("#Acquisition_CostperContactQ1").blur();
    $("#Q1OutBoundErosion").blur();
    $("#Q1OutBoundUnsubscribeRate").blur();
    $("#Acquisition_NumberofTouchesQ1").blur();
    $("#Acquisition_NumberofTouchesQ2").blur();
    $("#Acquisition_NumberofTouchesQ3").blur();
    $("#Acquisition_NumberofTouchesQ4").blur();
    $("#Q1OutboundCTRDelivered").blur();
    $("#Acquisition_RegistrationRate").blur();
    $("#Impressions").blur();
    $("#ClickThroughRate").blur();
    $("#InboundRegistrationRate").blur();
    $("#PPC_ClickThroughs").blur();
    $("#PPC_CostperClickThrough").blur();
    $("#PPC_RegistrationRate").blur();
    $("#GC_GuaranteedCPLBudget").blur();
    $("#GC_CostperLead").blur();
    $("#CSC_NonGuaranteedCPLBudget").blur();
    $("#CSC_CostperLead").blur();
    $("#TDM_DigitalMediaBudget").blur();
    $("#TDM_CostperLead").blur();
    $("#TP_PrintMediaBudget").blur();
    $("#TP_CostperLead").blur();
    $("#NumberofContactsQ1").blur();
    $("#NumberofContactsQ2").blur();
    $("#NumberofContactsQ3").blur();
    $("#NumberofContactsQ4").blur();
    $("#ContactToInquiryConversion").blur();
    $("#EventsBudgetQ1").blur();
    $("#EventsBudgetQ2").blur();
    $("#EventsBudgetQ3").blur();
    $("#EventsBudgetQ4").blur();

}

$("input:text").focus(function (e) {

    e.stopPropagation();
    e.preventDefault();
    $(this).select();
});

function setToolTip() {
    $('input[type=text]').each(function () {
        var $currentItem = $(this);
        $currentItem.attr("title", $currentItem.val());
    });
}

$(".doubleTextPerc").keyup(function (event) {
    var $this = $(this);
    $this.val($this.val().replace(/[^\d.]/g, ''));
    if ($this.val() > 100) {
        $(this).css('borderColor', '#C6605A');
        $(this).css('background-color', '#F1DBDE');
        $(this).val(0);
        $("#errorMessage").html('<a class="close">×</a><strong>Error!</strong> ' + $("#ValidateForValidField").val())
        $("#errorMessage").slideDown(400);
        return false;
    }
    else {
        $(this).css('borderColor', '#CCCCCC');
        $(this).css('background-color', '#FFFFFF');
        $("#errorMessage").slideUp(400);
    }
});

function getblurvalue(sender) {

    var aHrefElement = $("a")

    if ($(sender).parent().parent().parent().find(aHrefElement).attr("id") == "lnkNormalErosion") {
        $("#lnkNormalErosion").html($(sender).val());
    }
    else if ($(sender).parent().parent().parent().find(aHrefElement).attr("id") == "lnkUnsubscribeRate") {
        $("#lnkUnsubscribeRate").html($(sender).val());
    }
    else if ($(sender).parent().parent().parent().find(aHrefElement).attr("id") == "lnkCTRDelivered") {
        $("#lnkCTRDelivered").html($(sender).val());
    }
    else if ($(sender).parent().parent().parent().find(aHrefElement).attr("id") == "lnkRegistrationRate") {
        $("#lnkRegistrationRate").html($(sender).val());
    }

    $(".nl-field-go").click();
}

//// Added By Maninder Singh Wadhva to address TFS Bug#239
var ismsg = $("#hdnMsg").val();
$("#cancel-button").click(function () {
    $('#DivBackgroundModel').css("display", "none");
    $('#DivPublishModelPopup').css("display", "none");
    return false;
});
$('#t_startdate').click(function () {
    $('#dp_end').datepicker('hide');
})
$('#dp_start .add-on').click(function () {
    $('#dp_start').datepicker('show');
    $('#dp_end').datepicker('hide');

});
$('.dp').datepicker({
    format: "@RevenuePlanner.Helpers.Common.dateFormat",
    autoclose: true,
}).on('changeDate', function (ev) {
    $(this).datepicker('hide');
});;
    $("#Save-publish").click(function () {
        var date = $("#t_startdate").val();
        $("#EffectiveDate").val(date);
        $('#isPublishButton').val('publish');
        $('#button-save').click();
        $('#isPublishButton').val('');
        return true;
    });
    $('#btnpublish').click(function (e) {
        if ($('#spnstatus').attr("title").toLocaleLowerCase() == "draft") {
            if ($("#Planflag").val().toLocaleLowerCase() == 'true') {
                if (confirm($("#PublishedMsg").val())) {
                    $('#DivBackgroundModel').css("display", "block");
                    $('#DivPublishModelPopup').css("display", "block");
                    var date = $("#EffectiveDate").val();
                    $("#t_startdate").val(date);
                    return false;
                }
                else {
                    $('#DivBackgroundModel').css("display", "none");
                    $('#DivPublishModelPopup').css("display", "none");
                    $('#isPublishButton').val('');
                    return false;
                }
            }
            else {
                $('#DivBackgroundModel').css("display", "block");
                $('#DivPublishModelPopup').css("display", "block");
                var date = $("#EffectiveDate").val();
                $("#t_startdate").val(date);
                return false;
            }
        }
        else {
            return false;
        }
    });

    $("#button-save").click(function () {
        var needAlert = false;
        $('.nl-field').each(function () {

            if ($(this).next().attr('datadefault') == "NormalErosion") {

                var tValue = $(this).children('a').text();
                tValue = tValue ? parseFloat(tValue.replace(/%/g, '')) : 0;
                if (IsNumeric(tValue) == false) {
                    $(this).children('a').addClass("error-form");
                    needAlert = true;
                }
                else {

                    if (tValue > 100) {
                        $(this).children('a').addClass("error-form");
                        $("#errorMessage").html('<a class="close">×</a><strong>Error!</strong> ' + $("#ValidateForValidField").val());
                        needAlert = true;
                    }
                    else {
                        $(this).children('a').removeClass("error-form");
                    }

                }
            }

            if ($(this).next().attr('datadefault') == "UnsubscribeRate") {

                var tValue = $(this).children('a').text();
                tValue = tValue ? parseFloat(tValue.replace(/%/g, '')) : 0;
                if (IsNumeric(tValue) == false) {
                    $(this).children('a').addClass("error-form");
                    needAlert = true;
                }
                else {

                    if (tValue > 100) {
                        $(this).children('a').addClass("error-form");
                        $("#errorMessage").html('<a class="close">×</a><strong>Error!</strong> ' + $("#ValidateForValidField").val());
                        needAlert = true;
                    }
                    else {
                        $(this).children('a').removeClass("error-form");
                    }

                }
            }

            if ($(this).next().attr('datadefault') == "CTRDelivered") {

                var tValue = $(this).children('a').text();
                tValue = tValue ? parseFloat(tValue.replace(/%/g, '')) : 0;
                if (IsNumeric(tValue) == false) {
                    $(this).children('a').addClass("error-form");
                    needAlert = true;
                }
                else {

                    if (tValue > 100) {
                        $(this).children('a').addClass("error-form");
                        $("#errorMessage").html('<a class="close">×</a><strong>Error!</strong> ' + $("#ValidateForValidField").val());
                        needAlert = true;
                    }
                    else {
                        $(this).children('a').removeClass("error-form");
                    }

                }
            }

            if ($(this).next().attr('datadefault') == "RegistrationRate") {
                var tValue = $(this).children('a').text();
                tValue = tValue ? parseFloat(tValue.replace(/%/g, '')) : 0;
                if (IsNumeric(tValue) == false) {
                    $(this).children('a').addClass("error-form");
                    needAlert = true;
                }
                else {

                    if (tValue > 100) {
                        $(this).children('a').addClass("error-form");
                        $("#errorMessage").html('<a class="close">×</a><strong>Error!</strong> ' + $("#ValidateForValidField").val());
                        needAlert = true;
                    }
                    else {
                        $(this).children('a').removeClass("error-form");
                    }

                }
            }
        });
        //show alert or disappear alert
        if (needAlert == true) {
            $("#successMessage").slideUp(40);
            $("#errorMessage").slideDown(400);
            return false;
            // Show the Alert
        }
        else {
            $("#errorMessage").slideUp(400);
        }
    });
</script>



