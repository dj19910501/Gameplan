@model RevenuePlanner.Models.HomePlanModel
@using RevenuePlanner.Helpers
@{
    ViewBag.Title = ViewBag.ActiveMenu;
    string activeMenu = Convert.ToString(ViewBag.ActiveMenu);
    string isViewOnly = ViewBag.IsViewOnly;
    int showInspectForPlanTacticId = ViewBag.ShowInspectForPlanTacticId;
    int showInspectForPlanCampaignId = ViewBag.ShowInspectForPlanCampaignId; // variable added to show campagin popup from email url link click when email sent to user when comapign shared
    int showInspectForPlanProgramId = ViewBag.ShowInspectForPlanProgramId; // variable added to show program popup from email url link click when email sent to user when program shared
    //// Modified By Maninder Singh Wadhva PL Ticket#47
    bool isImprovement = Convert.ToBoolean(ViewBag.IsImprovement);
    int CurrentPlanId = Sessions.PlanId;/*changed by Nirav for plan consistency on 14 apr 2014*/
    bool IsPlanCreateAuthorized = (bool)ViewBag.IsPlanCreateAuthorized;
    bool IsTacticActualsAddEditAuthorized = (bool)ViewBag.IsTacticActualsAddEditAuthorized;
    bool IsPlanEditable = (bool)ViewBag.IsPlanEditable; //Added By Komal Rawal for new homepage UI
    bool IsPlanPublished = (bool)ViewBag.IsPublished;
    string ActivePlan = ViewBag.ActivePlan;
    var CreatedStatus = Enums.TacticStatusValues[Enums.TacticStatus.Created.ToString()];
    var SubmittedStatus = Enums.TacticStatusValues[Enums.TacticStatus.Submitted.ToString()];
    var ApprovedStatus = Enums.TacticStatusValues[Enums.TacticStatus.Approved.ToString()];
    var InProgressStatus = Enums.TacticStatusValues[Enums.TacticStatus.InProgress.ToString()];
    var CompleteStatus = Enums.TacticStatusValues[Enums.TacticStatus.Complete.ToString()];
    var DeclineStatus = Enums.TacticStatusValues[Enums.TacticStatus.Decline.ToString()];

    var Successmsgduplicate = (string)ViewBag.SuccessMessageDuplicatePlan;
    var errormsgduplicate = (string)ViewBag.ErrorMessageDuplicatePlan;
    var ListBudgetingPlan = Model.objplanhomemodelheader.plans; //Added By Komal Rawal for new homepage UI
    var IsGridView = (bool)ViewBag.GridView;

    //Added by Ravindra for  PL Ticket #1411 date 07/07/2015
    string RequestedModule = ViewBag.RedirectType != null ? ViewBag.RedirectType : "";
    var CalledFromBudget = (!string.IsNullOrEmpty(RequestedModule) ? (RequestedModule == Enums.InspectPopupRequestedModules.Budgeting.ToString() ? "Budegting" : "") : "");
}

@Html.Hidden("IsViewOnly")
@Html.Hidden("hdnshowInspectForPlanTacticId", showInspectForPlanTacticId)
@Html.Hidden("hdnshowInspectForPlanCampaignId", showInspectForPlanCampaignId)
@Html.Hidden("hdnshowInspectForPlanProgramId", showInspectForPlanProgramId)
@Html.Hidden("hdnSelectedPlanIds", 0, new { id = "hdnSelectedPlanIds" })

<!--Modified By Maninder Singh Wadhva PL Ticket#47-->
@Html.Hidden("hdnIsImprovement", isImprovement)
@Html.Hidden("CurrentPlanId", CurrentPlanId)
@Html.Hidden("IsGridView", IsGridView)
@Html.Hidden("IsTacticActualsAddEditAuthorized", IsTacticActualsAddEditAuthorized)

<link href="@Url.Content("~/Content/css/dhtmlxchart_1.css")" rel="stylesheet" type="text/css" />
<script type="text/javascript" src="@Url.Content("~/Scripts/dhtmlxchart.js")"></script>


<style type="text/css">
    .pull-right > span {
        margin-right: -15px !important;
    }

    .dhx_chart {
        color: #000000;
        font-family: 'source_sans_prolight',Arial,"sans-serif";
        font-size: 9px;
    }

    .chkbxfilter {
        float: right;
        margin: 7px -3px 0 0 !important;
    }

    .sbOptions li a {
        color: #333 !important;
    }

    .sbSelector {
        color: #6d6d6d !important;
    }
</style>
@if (activeMenu.ToLower() == "plan")
{
    @section nlFormContent{
        <link rel="stylesheet" href="@Url.Content("~/Content/css/NaturalLanguageForm/default.css")" type="text/css" />
        <link rel="stylesheet" href="@Url.Content("~/Content/css/NaturalLanguageForm/component.css")" type="text/css" />
        <script type="text/javascript" src="@Url.Content("~/Scripts/js/NaturalLanguageForm/modernizr.custom.js")"></script>
        <script type="text/javascript" src="@Url.Content("~/Scripts/js/NaturalLanguageForm/nlform.js?n=")@DateTime.Now"></script>
    }
}
@Html.Hidden("ActiveMenu", activeMenu)
@Html.HiddenFor(m => m.PlanId)
@section PlanHeader{

    <div class="light-blue-chart cf full-width-header" id="planHeader">
        @Html.Partial("~/Views/Shared/_planheader.cshtml", Model.objplanhomemodelheader)
    </div>

}

@section Sidebar{
    <script type="text/javascript">
        //Added By komal rawal for #1283
        //  var isTacticExist = false;


        function GetTacticTypelist(Planids) {

            $('#ulTacticType').html('');

            filters.TacticTypeids = [];

            $.ajax({
                beforeSend: function (x) {
                    myApp.hidePleaseWait();
                },
                type: "GET",
                async: false,
                cache: false,
                url: '@Url.Action("GetTacticTypeListForFilter", "Home")',
                data: {
                    PlanId: Planids.toString(),
                    ViewBy: type,
                    ActiveMenu: $('#ActiveMenu').val()

                },
                dataType: "json",
                success: function (data) {
                    if (data.returnURL != 'undefined' && data.returnURL == '#') {
                        window.location = '@Url.Content(Common.RedirectOnServiceUnavailibilityPage)';
                    }
                    else {
                        if (data.isSuccess == true) {

                            if (data.TacticTypelist != 'undefined' && data.TacticTypelist != null) {
                                TactictypeCount = data.TacticTypelist.length;
                                if (TactictypeCount > 0) {
                                    $("#TacticTypeAllModule").css("display", "block");
                                    $("#NoTTFound").hide();
                                    $.each(data.TacticTypelist, function (i, TactictypeItem) {
                                        var checked = "";
                                        var checkedclass = "";
                                        if (filters.TacticTypeids.indexOf(TactictypeItem.TacticTypeId.toString()) >= 0) {
                                            checked = "checked";
                                            checkedclass = "close-list";
                                        }
                                        $('#ulTacticType').append('<li class="accordion-inner ' + checkedclass + '" title="' + TactictypeItem.Title + ' (' + TactictypeItem.Number + ')" id="liTT' + TactictypeItem.TacticTypeId + '"><span class="sidebarliwidth">' + TactictypeItem.Title + " " + '(<span class="font-size14 TacticNumber" Previousvalue= ' + TactictypeItem.Number + '>' + TactictypeItem.Number + '</span>) </span><input type="checkbox" class="chkbxfilter" TacticTypeTitle="' + TactictypeItem.Title + '" onchange="toggleTacticType(this)" id="CbTT' + TactictypeItem.TacticTypeId + '"' + checked + '></input></li>');
                                    });
                                }
                                else {
                                    $("#TacticTypeAllModule").css("display", "none");
                                    $("#NoTTFound").show();
                                }
                            }
                            else {
                                $("#TacticTypeAllModule").css("display", "none");
                                $("#NoTTFound").show();
                            }
                        }
                    }
                }
            });

        }


        function BulkTTOperation(selection) {
            filters.TacticTypeids = [];
            if (selection) {
                $("#ulTacticType li").each(function (i) {
                    $(this).addClass("close-list");
                    var chkid = $(this).find("input[type=checkbox]").attr("id");
                    $("#" + chkid).attr("checked", "checked");
                    filters.TacticTypeids.push(chkid.replace("CbTT", ""));

                });
            }
            else {
                $("#ulTacticType li").each(function (i) {
                    $(this).removeClass("close-list");
                    var chkid = $(this).find("input[type=checkbox]").attr("id");
                    $("#" + chkid).removeAttr("checked");
                });
            }

        }

        function toggleTacticType(obj) {
            var id = $(obj).attr('id').toString().replace("CbTT", "");
            if ($(obj).is(':checked')) {
                $("#liTT" + id).addClass("close-list");
            }
            else {
                $("#liTT" + id).removeClass("close-list");
            }

            filters.TacticTypeids = [];
            $("#ulTacticType li input[type=checkbox]").each(function () {
                var chkid = $(this).attr("id");
                if ($(this).is(':checked')) {
                    filters.TacticTypeids.push(chkid.replace("CbTT", ""));
                }
            });
        }

        //End
        // Edited to add PlanYear option.
        var Currenttime = "thisquarter";
        $(document).ready(function () {
            var isRender;       //// Added by :- Sohel Pathan on 10/04/2014 for PL ticket #419 to display tactic count properly in left nav-menu
            //  $("#nl-form2").hide();
            //Added by Nirav for Custom Dropdown - 388

            if (($('#ActiveMenu').val().toLowerCase() == "plan")) {
                $('#DivloadPlan').load('@Url.Action("HomePlan", "Home")' + '?currentPlanId=' + pid + '&activeMenu=' + $('#ActiveMenu').val(), function (response, status, xhr) {
                    if (response == '{"serviceUnavailable":"~/Login/ServiceUnavailable"}') {
                        //// Call function to redirect on service unavailibility.
                        //// Added By: Maninder Singh Wadhva on 11/24/2014.
                        //// Ticket: 942 Exception handeling in Gameplan.
                        window.location = '@Url.Content(Common.RedirectOnServiceUnavailibilityPage)';
                    }
                });//activeMenu parameter added
            }
            else {
                $('#DivloadPlan').load('@Url.Action("HomePlan", "Home")' + '?currentPlanId=' + pid + '&activeMenu=' + $('#ActiveMenu').val(), function (response, status, xhr) {
                    if (response == '{"serviceUnavailable":"~/Login/ServiceUnavailable"}') {
                        //// Call function to redirect on service unavailibility.
                        //// Added By: Maninder Singh Wadhva on 11/24/2014.
                        //// Ticket: 942 Exception handeling in Gameplan.
                        window.location = '@Url.Content(Common.RedirectOnServiceUnavailibilityPage)';
                    }
                });//activeMenu parameter added
            }

            switch ($('#ActiveMenu').val().toLowerCase()) {
                case 'home':
                    $("#DivButtonsHome").show();
                    $("#DivButtonsPlanSummary").hide();
                    break;
                case 'plan':
                    $("#DivButtonsHome").hide();
                    $("#SideBarUserWelcomeMessage").hide();
                    $("#DivButtonsPlanSummary").show();
                    break;
            }
            $("#modalMainContainer").hide();

            //   if ($('#ActiveMenu').val().toLowerCase() == 'plan') { //// Added by Sohel Pathan on 16/07/2014 for PL ticket #556 to hide "Showstatus" feature on home screen
            //// Start - Added by Sohel on 12/05/2014 for PL #425 to Show status of tactics on Home and Plan screen
            $('.toggleStatus').click(function () {
                $(this).hide();
                $('.toggle-status div').show();
                showTacticStatus = true;
                RefreshCurrentTab();
                gantt.refreshData();
            });

            $('.toggleStatusHide').click(function () {
                $('.toggleStatus').show();
                $('.toggle-status div').hide();
                showTacticStatus = false;
                RefreshCurrentTab();
                gantt.refreshData();
            });
            //// End - Added by Sohel on 12/05/2014 for PL #425 to Show status of tactics on Home and Plan screen

            $('.gantt-padding').removeClass('padding-top0');
            $('#DivloadPlan').removeClass('no-bottom-border');
            // }
            // else {
            //      $('.gantt-padding').addClass('padding-top0');
            //     $('#DivloadPlan').addClass('no-bottom-border');
            // }
        });

        function onClickPlanTitle() {

            $('#nl-form2 > div[class="nl-field nl-dd"]').find('li').click(function (e) {

                CurrentPlanId = $(this).attr('value');
                $("#CurrentPlanId").val(CurrentPlanId);
                SelectedPlanTitle = $(this).text();
                BindUpcomingActivites(CurrentPlanId);
                Currenttime = $('#ddlUpComingActivites').val();
                isQuater = Currenttime;

                //// Modified By Maninder Singh Wadhva to Address PL#203
                if (activeMenu == '@Enums.ActiveMenu.Plan.ToString().ToLower()') {
                    if (CurrentPlanId > 0) {
                        if (document.getElementById("liGrid").className.indexOf("active") >= 0) {
                            LoadPlanGrid();
                            // LoadImprovementGrid(CurrentPlanId);
                            return true;
                        }
                        else {
                            GetCollaborators(CurrentPlanId);
                            GetTacticTypelist(CurrentPlanId);
                            GetOwnerListForFilter(CurrentPlanId);
                        }
                    }
                }
                PagePostRequest = false;
                getViewByList = true;
                RefreshCurrentTab();
                if (CurrentPlanId > 0) {
                    GetHealderData(CurrentPlanId);
                    GetNumberOfActivityPerMonByPlanId(CurrentPlanId, isQuater);
                }
                arrClosedTask = []; // addded by dharmraj for ticket #485 to clear closed task veriable on plan change.
                // $('#cSuccessDuplicatePlan').empty();
                $('#successMessage').slideUp(1);
                $('#content_wraper').removeClass('padding-top40');
            });
        }

        function GetOwnerListForFilter(Planids) {

            $('#ulSelectedOwner').html('');
            filters.OwnerIds = [];

            $.ajax({
                beforeSend: function (x) {
                    myApp.hidePleaseWait();
                },
                type: "GET",
                async: false,
                cache: false,
                url: '@Url.Action("GetOwnerListForFilter", "Home")',
                data: {
                    PlanId: Planids.toString(),
                    ViewBy: type,
                    ActiveMenu: $('#ActiveMenu').val()
                },
                dataType: "json",
                success: function (data) {
                    if (data.returnURL != 'undefined' && data.returnURL == '#') {
                        window.location = '@Url.Content(Common.RedirectOnServiceUnavailibilityPage)';
                    }
                    else {
                        if (data.isSuccess == true) {
                            if (data.AllowedOwner != 'undefined' && data.AllowedOwner != null) {
                                OwnerCount = data.AllowedOwner.length;
                                if (OwnerCount > 0) {
                                    $("#ulOwnerAllModule").css("display", "block");
                                    $("#NoOwnerFound").hide();
                                    $.each(data.AllowedOwner, function (i, OwnerItem) {
                                        $('#ulSelectedOwner').append('<li class="accordion-inner" title="' + OwnerItem.Title + '" id="liOwner' + OwnerItem.OwnerId + '"><span class="sidebarliwidth">' + OwnerItem.Title + '</span><input type="checkbox" class="chkbxfilter" OwnerTitle="' + OwnerItem.Title + '" onchange="toggleOwner(this)" id="' + OwnerItem.OwnerId + '"></input></li>');
                                        // filters.OwnerIds.push(OwnerItem.OwnerId);
                                    });
                                }
                                else {
                                    $("#ulOwnerAllModule").css("display", "none");
                                    $("#NoOwnerFound").show();
                                }
                            }
                            else {
                                $("#ulOwnerAllModule").css("display", "none");
                                $("#NoOwnerFound").show();
                            }
                        }
                    }
                }
            });
        }

        function populateNFActivity(items, id) {
            var $dropdown = $("#" + id);
            var $html = '';
            if (items.length > 0) {
                $.each(items, function (index, time) {

                    if (time.Selected) {
                        $html += '<option value="' + time.Value + '" selected>' + time.Text + '</option>';
                        Currenttime = time.Value;
                    } else {
                        $html += '<option value="' + time.Value + '">' + time.Text + '</option>';
                    }
                });
            }
            $dropdown.append($html);
        }

        function populateNF(items, id) {
            var $dropdown = $("#" + id);
            var $html = '';
            if (items.length > 0) {
                $.each(items, function (index, plan) {
                    if (plan.Selected) {
                        SelectedPlanTitle = plan.Text;
                        $html += '<option value="' + plan.Value + '" selected>' + plan.Text + '</option>';
                        CurrentPlanId = plan.Value;
                        $("#CurrentPlanId").val(CurrentPlanId);
                    } else {
                        $html += '<option value="' + plan.Value + '">' + plan.Text + '</option>';
                    }
                });
            } else {
                $html += '<option value=' + 0 + ' selected>' + "Plan Title" + '</option>';
                CurrentPlanId = 0;
                $("#CurrentPlanId").val(CurrentPlanId);
            }
            $dropdown.append($html);
        }

    </script>

    <div id="PlanModulesSection" class="plan-mod-section sidebar-main">
        <div class="padding-content padding-bottom0 sidebar-toogle-wrapper">
            <div class="sidebar-toogle">
                <a href="#"><<&nbsp;<span>hide</span></a>
            </div>
        </div>
        <div class="padding-content padding-bottom0 hide sidebar-toogle-wrapper" id="DivButtonsHome">

            <h4 class="text-shadow-black source-sans-prolight">Actions</h4>
            <div class="wraper-btns cf">
                @* @if (IsTacticActualsAddEditAuthorized)
                {*@
                <div id="divAddPlan">
                    <button class="btn btn-blue text-shadow-blue source-sans-proregular" type="button" onclick="window.location.href='@Url.Action("CreatePlan", "Plan")'" style="min-width:90%">Create New Plan</button>
                </div>
                @* }*@
                @* <div class="span6" id="divPlanEditButtonHome">
                    <!-- change by kunal for edit plan  -->
                    <!-- start -->
                    @{
                        if (Model.PlanId != null)
                        {
                            int pid = Model.PlanId;
                            if (CurrentPlanId != 0)
                            {
                                CurrentPlanId = 0;
                            }
                        <button class="btn btn-blue text-shadow-blue source-sans-proregular" type="button" onclick="EditPlan()">Edit Plan</button>/*changed by Nirav for plan consistency on 14 apr 2014*/
                        }
                        else
                        {
                            if (CurrentPlanId != 0)
                            {
                                CurrentPlanId = 0;
                            }
                        <button class="btn btn-blue-disable text-shadow-blue source-sans-proregular" type="button">Edit Plan</button>
                        }
                    }
                    <!-- end -->
                </div>*@
            </div>
        </div>

        <div class="padding-content padding-bottom0 hide sidebar-toogle-wrapper" id="DivButtonsPlanSummary">

            <h4 class="text-shadow-black source-sans-prolight">Actions</h4>
            <div class="wraper-btns cf">

                <div>
                    @if (IsPlanEditable && !IsPlanPublished)
                    {
                        <button id="BtnPublishPlan" class="btn btn-blue text-shadow-blue source-sans-proregular publish-plan-btn" type="button" style="min-width: 90%">
                            Publish Plan
                        </button>
                    }
                    <button class="btn btn-blue text-shadow-blue source-sans-proregular" type="button" onclick="window.location.href='@Url.Action("AddActual", "Plan", new { PlanId = CurrentPlanId })'" style="min-width:90%">
                        Add Actuals
                    </button>
                    @if (IsPlanEditable)
                    {
                        int pid = Model.PlanId;
                        <button class="btn btn-blue text-shadow-blue source-sans-proregular" type="button" onclick="EditPlan()" style="min-width: 90%">
                            Edit Plan Defination
                        </button>
                    }
                    <button class="btn btn-blue text-shadow-blue source-sans-proregular" type="button" onclick="window.location.href='@Url.Action("Budgeting", "Plan")'"  style="min-width:90%">
                        Edit Plan Budget & Cost
                    </button>
                </div>
                @*  @if (IsPlanCreateAuthorized) // added by dharmraj form user activity permission
                {
                    <div class="span6">
                        <div class="btn-group ">
                            <button id="BtnGroup" class="btn btn-blue text-shadow-blue source-sans-proregular buttom-width resize-drop-button without-border-buttom displayinherit   source-sans-prolight width90px">
                                New Plan
                            </button>
                            <button data-toggle="dropdown" class="btn btn-blue dropdown-toggle height25 displayinherit width19px">
                                <span class="caret"></span>
                            </button>
                            <ul class="dropdown-menu source-sans-prolight">
                                <li>
                                    <a href="#">Create New</a>
                                </li>
                                <li>
                                    <a href="#">Duplicate</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                }
                <div class="span6" id="divPlanEditButtonPlan">
                    <!-- change by kunal for edit plan - 01-17-2012 -->
                    <!-- start -->
                    @{
                        if (Model.PlanId != null)
                        {
                            int pid = Model.PlanId;
                        <button class="btn btn-blue text-shadow-blue source-sans-proregular" type="button" onclick="EditPlan()">Edit Plan</button>
                        }
                        else
                        {
                        <button class="btn btn-blue-disable text-shadow-blue source-sans-proregular" type="button">Edit Plan</button>
                        }
                    }
                    <!-- end -->
                </div>*@
            </div>
        </div>

    </div>

    <!-- Sidebar Block Starts -->
    <div id="sidebar" class="span2 sidebar">
        <div class="WelcomeMessageBorder"></div>
        <div class="sidebar-section scroll-section">
            <div style="width: 100%;">
                <div class="width50 float-left ">
                    <span class="filter-header">Filters</span>
                </div>
                <div class="width50 float-left">
                    <button class="btn btn-blue text-shadow-blue source-sans-proregular squares-icon" type="button" id="UpdateResult" onclick="UpdateResult()">
                        Update Results
                    </button>
                </div>
            </div>
            <div style="clear: both;"></div>
            @if (activeMenu.ToLower() == Enums.ActiveMenu.Home.ToString().ToLower())
            {
                <div id="accordion-2" class="dropdown-section accordion">
                    <div class="accordion-group">
                        <div class="accordion-heading">
                            <h2 class="accordion-toggle" data-toggle="collapse" data-parent="#accordion-2" href="#accordion-element-Plan">Plan<i class="indicator glyphicon glyphicon-chevron-down pull-right"></i></h2>
                        </div>
                        <div id="accordion-element-Plan" class="accordion-body collapse">
                            <ul class="scroll-list" id="ulSelectedPlans">
                            </ul>
                            <div class="list-tab">
                                <ul id="PlanAllModule">
                                    <li><a onclick="BulkPlanOperation(true)">select all</a></li>
                                    <li>|</li>
                                    <li><a onclick="BulkPlanOperation(false)">deselect all</a></li>
                                </ul>
                                <div id="NoPlanFound" class="NoDataFoundFilter">No Plan Found</div>
                            </div>
                        </div>
                    </div>
                </div>
            }
            <div id="divCustomFieldsFilter"></div>
            <div id="accordion-Owner" class="dropdown-section accordion">
                <div class="accordion-group">
                    <div class="accordion-heading">
                        <h2 class="accordion-toggle" data-toggle="collapse" data-parent="#accordion-Owner" href="#accordion-element-Owner">Owner<i class="indicator glyphicon glyphicon-chevron-down pull-right"></i></h2>
                    </div>
                    <div id="accordion-element-Owner" class="accordion-body collapse">
                        <ul class="scroll-list" id="ulSelectedOwner">
                        </ul>
                        <div class="list-tab">
                            <ul id="ulOwnerAllModule">
                                <li><a onclick="BulkOwnerOperation(true)">select all</a></li>
                                <li>|</li>
                                <li><a onclick="BulkOwnerOperation(false)">deselect all</a></li>
                            </ul>
                            <div id="NoOwnerFound" class="NoDataFoundFilter">No Owner Found</div>
                        </div>
                    </div>
                </div>
            </div>

            <div id="accordion-TacticType" class="dropdown-section accordion">
                <div class="accordion-group">
                    <div class="accordion-heading">
                        <h2 class="accordion-toggle" data-toggle="collapse" data-parent="#accordion-TacticType" href="#accordion-element-TacticType">Tactic Type<i class="indicator glyphicon glyphicon-chevron-down pull-right"></i></h2>
                    </div>
                    <div id="accordion-element-TacticType" class="accordion-body collapse">
                        <ul class="scroll-list" id="ulTacticType">
                        </ul>
                        <div class="list-tab">
                            <ul id="TacticTypeAllModule">
                                <li><a onclick="BulkTTOperation(true)">select all</a></li>
                                <li>|</li>
                                <li><a onclick="BulkTTOperation(false)">deselect all</a></li>
                            </ul>
                            <div id="NoTTFound" class="NoDataFoundFilter">No Tactic Type Found</div>

                        </div>
                    </div>
                </div>
            </div>

            <div id="accordion-Status" class="dropdown-section accordion">
                <div class="accordion-group">
                    <div class="accordion-heading">
                        <h2 class="accordion-toggle" data-toggle="collapse" data-parent="#accordion-Status" href="#accordion-element-Status">Status<i class="indicator glyphicon glyphicon-chevron-down pull-right"></i></h2>
                    </div>
                    <div id="accordion-element-Status" class="accordion-body collapse">
                        <ul class="scroll-list" id="ulStatus">
                            <li class="accordion-inner" id="liStatusCreated"><span class="sidebarliwidth">@CreatedStatus</span><input type="checkbox" class="chkbxfilter"  onchange="toggleStatus(this)" id="@CreatedStatus"/></li>
                            <li class="accordion-inner" id="liStatusSubmitted"><span class="sidebarliwidth">@SubmittedStatus</span><input type="checkbox" class="chkbxfilter"  onchange="toggleStatus(this)" id="@SubmittedStatus"/></li>
                            <li class="accordion-inner" id="liStatusApproved"><span class="sidebarliwidth">@ApprovedStatus</span><input type="checkbox" class="chkbxfilter"  onchange="toggleStatus(this)" id="@ApprovedStatus"/></li>
                            <li class="accordion-inner" id="liStatusInProgress"><span class="sidebarliwidth">@InProgressStatus</span><input type="checkbox" class="chkbxfilter"  onchange="toggleStatus(this)" id="@InProgressStatus"/></li>
                            <li class="accordion-inner" id="liStatusComplete"><span class="sidebarliwidth">@CompleteStatus</span><input type="checkbox" class="chkbxfilter"  onchange="toggleStatus(this)" id="@CompleteStatus"/></li>
                            <li class="accordion-inner" id="liStatusDecline"><span class="sidebarliwidth">@DeclineStatus</span><input type="checkbox" class="chkbxfilter"  onchange="toggleStatus(this)" id="@DeclineStatus"/></li>
                        </ul>
                        <div class="list-tab">
                            <ul id="StatusAllModule">
                                <li><a onclick="BulkStatusOperation(true)">select all</a></li>
                                <li>|</li>
                                <li><a onclick="BulkStatusOperation(false)">deselect all</a></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>


        @if (activeMenu.ToLower() == Enums.ActiveMenu.Home.ToString().ToLower())
        {
            <!--First Static Accordion-->
            <!--Modified By Maninder Singh Wadhva PL Ticket#47-->
            <div class="accordion colors left-nav margin-bottom10" id="marketing-activities" style="display: none;">

                <div class="accordion-group source-sans-proregular">
                    <div class="accordion-heading">
                        <a href="#DivAccordionMarketingActivities" data-parent="marketing-activities" data-toggle="collapse" class="accordion-toggle item-741f98 collapsed">
                            <div class="cf source-sans-prosemibold ">Marketing Activities</div>
                        </a>
                    </div>
                    <div class="scrolled_div" style="position: relative; overflow: hidden; max-height: 230px;">
                        <div class="accordion-body in collapse" id="DivAccordionMarketingActivities">
                        </div>
                    </div>
                </div>
            </div>
            <!--First Static Accordion END-->
            <!--Second Static Accordion-->
            <div class="accordion colors left-nav improvements margin-bottom10" id="improvements">
                <div class="accordion-group source-sans-proregular">
                    <div class="accordion-heading">
                        <a href="#DivAccordionImprovementActivities" data-parent="improvements" data-toggle="collapse" class="accordion-toggle item-741f98 collapsed">
                            <div class="cf source-sans-prosemibold">Improvements</div>
                        </a>
                    </div>
                    <div class="accordion-body collapse" id="DivAccordionImprovementActivities">
                    </div>
                </div>
            </div>
            <!--Second Static Accordion END-->
        }
    </div>
    <!--End sidebar-->
}

@*<!--success message-->
<div id="successMessageDuplicatePlan" class="alert hide alert-success message-position">
    <a class="close">×</a>
    <div id="cSuccessDuplicatePlan">@Html.Raw(HttpUtility.HtmlDecode((string)ViewBag.SuccessMessageDuplicatePlan))</div>
</div>
<!--success message-->
<!--error message-->
<div id="errorMessageDuplicatePlan" class="alert hide alert-error message-position">
    <a class="close">×</a>
    <div id="cErrorDuplicatePlan">@Html.Raw(HttpUtility.HtmlDecode((string)ViewBag.ErrorMessageDuplicatePlan))</div>
</div>*@
<!--error message-->
@* Start - Added by Sohel Pathan on 11/12/2014 for PL ticket #1021 *@
<!--error message Inspect Popup-->
<div id="errorMessageInspectPopup" class="alert hide alert-error message-position">
    <a class="close">×</a>
    <div id="cErrorInspectPopup"></div>
</div>
<!--error message Inspect Popup-->
@* End - Added by Sohel Pathan on 11/12/2014 for PL ticket #1021 *@


<script>
    var pid = $('#PlanId').val();
    var CurrentPlanId = pid;
    var isDataModified = false; // Added by Sohel Pathan on 13/11/2014 for PL ticket #933.
</script>

@if (activeMenu.ToLower() == "plan") //// Added by Komal Rawal for new Homepage UI
{
    <div class="calender-view-nav">
        <ul class="nav nav-tabs new-margin no-position" id="PlanTab">
            <li class="active pull-left" id="liCalender">
                <a>CALENDER VIEW</a>
            </li>
            <li class="pull-left" id="liGrid">
                <a>GRID VIEW</a>
            </li>
        </ul>
    </div>
}
<div id="DivloadPlan" class="no-bottom-border margin-top">
</div>
<div id="divgridview" class="task-tbl" style="display: none;"></div>
@*Added by Komal Rawal for #1432
<div id="ImprovementGrid" style="display: none;" class="improvement-grid-wrapper">
</div>*@
<div class="market-activity-main">
    <div class="btn-dropdwn" style="display: none; position: absolute; top: 40px; z-index: 1;" id="popupType">
    </div>
</div>
<div id="CalenderView" class="tab-content all-height cf" style="padding-right: 18px;">
    <div class="tab-pane active all-height" id="panel-656352">
        <div class=" pl20 cf">
            @if (activeMenu.ToLower() == "plan") //// Added by Sohel Pathan on 16/07/2014 for PL ticket #556 to hide "Showstatus" feature on home screen
            {
                <div class="pull-left" id="divCollaborator" style="position: relative;">
                    <!-- position:relative = added by kapil -->
                </div>
            }
@* Start - Added by Sohel on 12/05/2014 for PL #425 to Show status of tactics on Home and Plan screen *@
            <div class="pull-right toggle-status source-sans-proregular">
                <div class="pull-right">
                    <a href="#" class="toggleStatusHide">Hide Status</a>
                    <span class="status-created">Created</span>
                    <span class="status-submitted">Submitted</span>
                    <span class="status-approved">Approved</span>
                    <span class="status-rejected">Declined</span>
                </div>
                <a href="#" class="toggleStatus">Show Status</a>
            </div>
            @* End - Added by Sohel on 12/05/2014 for PL #425 to Show status of tactics on Home and Plan screen *@

            <div>
                <div class="gantt-padding market-activity-main  cf lenght-div" style="min-height: 720px;">
                    @* Modified by : Sohel Pathan on 29/10/2014 for PL ticket #899 *@

                    <div id="gantt_here"></div>

                    @*<div class="btn-dropdwn" style="display: none; position: absolute; top: 40px; z-index: 1;" id="popupType">
                    </div>*@

                </div>
                <div class="shadow-scroll-gantt"></div>
                <table id="table_activities" class="table table-striped table-hover bold">
                    <thead>
                        <tr>
                            <th class="border-r show-modal">Title</th>
                            <th class="show-modal">@Html.LabelForINQ("INQ")</th>
                            <th class="show-modal">@Html.LabelForMQL("MQL")</th>
                            <th class="show-modal">Revenue</th>
                            <th class="border-r show-modal">Cost</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!--tr elements are add dinamically with javascript-->
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<div id="Notabcontent" style="display: none;">
    @if (activeMenu.ToLower() == Enums.ActiveMenu.Home.ToString().ToLower())
    {
        <span class="pull-left bold " style="margin-left: 20px;">No Plan exists.</span> @* Modified by Sohel Pathan on 29/09/2014 for PL ticket #787 *@
    }
    else
    {
        <span class="pull-left margin_t30 bold " style="margin-left: 20px;">No Plan exists.</span> @* Modified by Sohel Pathan on 29/09/2014 for PL ticket #787 *@ 
    }
</div>
@*// Inspect Popup Div 
    // Added By Bhavesh
*@
<div class="container-fluid all-height" id="modalMainContainer">
    <div class="row-fluid calc-height content-wrapper-main">
        <div class="container-fluid">
            <div class="row-fluid ">
                <div class="span12">
                    <div id="modal-container-186470" class="modal-inspect-review hide fade modal-full-view" role="dialog" aria-labelledby="myModalLabel" aria- hidden="true" style="display: none; position: fixed; overflow: hidden;">
                        <div style="margin: 30px auto !important">@* Modified for #1318*@
                            <div id="successMessage" class="alert alert-success messagewidth">
                                <a class="close">×</a>
                                <strong>Success.</strong> <span id="spanMessageSuccess"></span>
                            </div>
                            <div id="errorMessage" class="alert alert-error hide messagewidth">
                                <a class="close">×</a>
                                <strong>Error!</strong> <span id="spanMessageError">@Common.objCached.ValidateForEmptyField</span>
                            </div>
                            <div id="divPartial">
                            </div>
                        </div>
                    </div>
                    <div id="divResubmission"></div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="divBackground" class="modal-backdrop fade in" style="display: none; z-index: 2502 !important;"></div>

<script type="text/javascript">

    var divPartial = "#divPartial";

    var InspectSuccMsg = "";
    var SelectedPlanTitle = "";
    var isCalenderView = true;
    var filters = {
        customFieldIds: [],
        PlanIDs: [],
        SelectedPlans: [],
        PlanTitles: [],
        OwnerIds: [],
        TacticTypeids: [],
        StatusIds: []
    };

    var PlanCount = 0, OwnerCount = 0;

    var isFirstCall = true;

    //Added By Komal Rawal for #1376
    function toggleStatus(obj) {

        var id = $(obj).attr('id');
        var liID = $(obj).parent().attr('id');
        if ($(obj).is(':checked')) {
            $('#' + liID).addClass("close-list");
        }
        else {
            $('#' + liID).removeClass("close-list");
        }
        filters.StatusIds = [];
        $("#ulStatus li input[type=checkbox]").each(function () {
            var chkid = $(this).attr("id");
            if ($(this).is(':checked')) {
                filters.StatusIds.push(chkid);
            }
        });
    }

    function BulkStatusOperation(selection) {
        filters.StatusIds = [];
        if (selection) {
            $("#ulStatus li").each(function (i) {
                $(this).addClass("close-list");
                var chkid = $(this).find("input[type=checkbox]").attr("id");
                $("#" + chkid).attr("checked", "checked");
                filters.StatusIds.push(chkid);
            });
        }
        else {
            $("#ulStatus li").each(function (i) {
                $(this).removeClass("close-list");
                var chkid = $(this).find("input[type=checkbox]").attr("id");
                $("#" + chkid).removeAttr("checked");
            });
        }
    }



    $("#liGrid,#liCalender").click(function () {
        var activeTab = $("#PlanTab li.active a").parent(this).attr('id');
        $('#' + activeTab).removeClass("active");
        $(this).removeClass("pull-left");
        $(this).addClass("active pull-left");
        var id = $(this).attr('id');
        if (id == "liCalender") {
            $("#CalenderView").show();
            $("#divgridview").hide();
            $("#ImprovementGrid").hide();
            $("#divupcomingact").show();
            $("#liplanrequest").show();
            RefreshCurrentTab();

        }
        else {

            $("#CalenderView").hide();
            $("#divupcomingact").hide();
            $("#liplanrequest").hide();
            $("#divgridview").show();
            $("#ImprovementGrid").show();

            //Call the function for grid view
            LoadPlanGrid();
            //  LoadImprovementGrid(CurrentPlanId);


        }
    });

    //End
    //Added by Komal Rawal for new homepage UI to publish plan
    $('#BtnPublishPlan').click(function () {
        publishPlan();
    });

    function publishPlan() {
        var uId = $(window).attr('name');
        $.ajax({
            type: 'POST',
            url: '@Url.Content("~/Plan/ApplyToCalendar/")',
            data: 'UserId=' + uId,
            success: function (data) {
                if (data.returnURL != 'undefined' && data.returnURL == '#') {
                    window.location = '@Url.Content("~/Login/Index")';
                }
                else {
                    if (data.errorMessage != undefined) {
                        isError = true;
                        ShowMessage(isError, data.errorMessage, 3000);
                        // $('#cErrorDuplicatePlan').html('<strong>Error! </strong>' + data.errorMessage);
                        //$('#errorMsg').slideDown(3000);
                    }
                    else if (data.activeMenu != undefined && data.currentPlanId != undefined) {
                        var url = '@Url.Content("~/Home/Index")';

                            var queryStringArr = [];

                            queryStringArr.push(
                             {
                                 key: 'ActiveMenu',
                                 Value: data.activeMenu
                             });

                            queryStringArr.push(
                             {
                                 key: 'currentPlanId',
                                 Value: data.currentPlanId
                             });

                            displayconfirm(url, queryStringArr);
                        }
                }
            }
        });
    }

    function displayconfirm(strURL, queryStringArr) {

        //window.location.href = strURL;
        formSubmitEvent(strURL, queryStringArr);
    }
    //End

    //Reset all the Filters
    $("#PlanAllModule").css("display", "none");

    function UpdateResult() {
        // added by devanshi for #1431
        if (activeMenu == '@Enums.ActiveMenu.Plan.ToString().ToLower()') {
            if (document.getElementById("liGrid").className.indexOf("active") >= 0) {
                $("#CalenderView").hide();
                $("#divgridview").show();
                $("#ImprovementGrid").show();
                LoadPlanGrid();
                // LoadImprovementGrid(CurrentPlanId);

            }
            else {
                UpdateCalenderView();
            }
        }
        else {
            UpdateCalenderView();
        }
    }

    //Modified By komal Rawal 
    function UpdateCalenderView() {

        requestPlanActiveTab(false);
        var SelectedPlanIds;
        if (activeMenu == '@Enums.ActiveMenu.Home.ToString().ToLower()') {
            SelectedPlanIds = filters.SelectedPlans.toString();
        }
        else {
            SelectedPlanIds = CurrentPlanId;
        }

        SetAttributeData();

        $('#hdnSelectedPlanIds').val(SelectedPlanIds);

        $.ajax({
            type: 'POST',
            url: '@Url.Content("~/Home/SetSessionPlan/")',
            dataType: "json",
            async: false,
            data: {
                planids: SelectedPlanIds
            },
            success: function (data) {
                if (data.isSuccess == true) {
                    $("#CurrentPlanId").val(data.id);
                    if (activeMenu == '@Enums.ActiveMenu.Home.ToString().ToLower()') {
                        BindUpcomingActivites(SelectedPlanIds);
                    }
                    Currenttime = $('#ddlUpComingActivites').val();
                    isQuater = Currenttime;
                    SetBudget("#pbudget");
                    SetPriceValue("#pMQLs");
                    getViewByList = true;
                    RefreshCurrentTab();
                    GetHealderData(SelectedPlanIds);
                    GetNumberOfActivityPerMonByPlanId(SelectedPlanIds, Currenttime);
                }
            }
        });

        $("#content_wraper").removeClass("span10 padding-top40").addClass("span10 all-height");
        $('#errorMessageInspectPopup').slideUp(400);


    }

    //Added By Komal Rawal for #1432
    function LoadImprovementGrid(PlanID) {
        var url = "@Url.Content("~/Plan/LoadImprovementGrid")";
        // $("#ImprovementGrid").empty();
        $("#ImprovementGrid").load(url + '?id=' + PlanID);
    }
    //End

    function removeByValue(arr, val) {
        for (var i = 0; i < arr.length; i++) {
            if (arr[i] == val) {
                arr.splice(i, 1);
                break;
            }
        }
    }
    // modify by devanshi
    function LoadPlanGrid() {
        if (activeMenu == '@Enums.ActiveMenu.Home.ToString().ToLower()') {
            SelectedPlanIds = filters.SelectedPlans.toString();
        }
        else {
            SelectedPlanIds = CurrentPlanId;
        }
        filters.customFieldIds = [];

        $('#divCustomFieldsFilter').find("input[type=checkbox]").each(function () {
            if ($(this).attr('checked') == 'checked') {
                var chkid = $(this).attr("id");
                if (chkid != undefined && chkid != 'undefined') {
                    filters.customFieldIds.push(chkid);
                }
            }
        });
        //// End - Added by Sohel Pathan on 19/01/2015 for PL ticket #1134


        var CustomFieldId = filters.customFieldIds;
        var OwnerIds = filters.OwnerIds;
        var TacticTypeids = filters.TacticTypeids; //Modified for #1283

        var StatusIds = filters.StatusIds;

        $.ajax({
            url: '@Url.Content("~/Plan/LoadHomeGrid/")',
            data: {
                planId: SelectedPlanIds.toString(),
                ownerIds: OwnerIds.toString(),
                TacticTypeid: TacticTypeids.toString(),
                StatusIds: StatusIds.toString(),
                customFieldIds: CustomFieldId.toString()
            },
            success: function (result) {
                $("#divgridview").html('');
                $("#divgridview").html(result);

                $(".grid_Search").click(function (e) {              
                    var id = $(this).attr('alt');
                    DisplayEditablePopup(id);
                });
            }
        });

    }
    //// Modified By Viral Kadiya PL Ticket#886 to Replace Select and X with check boxes for filters
    function togglePlan(obj) {
        var id = $(obj).attr('id');
        if ($(obj).is(':checked')) {
            $("#liPlan" + id).addClass("close-list");
            filters.SelectedPlans.push(id);
            filters.PlanTitles.push($("#" + id).attr("plantitle"));
            GetOwnerListForFilter(filters.SelectedPlans);
            GetTacticTypelist(filters.SelectedPlans);
        }
        else {
            $("#liPlan" + id).removeClass("close-list");
            removeByValue(filters.SelectedPlans, id);
            removeByValue(filters.PlanTitles, ($("#" + id).attr("plantitle")));
            GetOwnerListForFilter(filters.SelectedPlans);
            GetTacticTypelist(filters.SelectedPlans);
        }

        if (filters.SelectedPlans.length == 0) {
            isFirstCall = false;
        }

        if (filters.SelectedPlans.length == 1) {
            CurrentPlanId = id;
            $("#CurrentPlanId").val(id);
        }
    }

    //// Modified By Viral Kadiya PL Ticket#886 to Replace Select and X with check boxes for filters
    function toggleCustomFields(obj) {
        var id = $(obj).attr('id');
        if ($(obj).is(':checked')) {
            $("#li_" + id).addClass("close-list");
        }
        else {
            $("#li_" + id).removeClass("close-list");
        }
    }

    //// Modified By Viral Kadiya PL Ticket#886 to Replace Select and X with check boxes for filters
    function toggleOwner(obj) {
        var id = $(obj).attr('id');
        if ($(obj).is(':checked')) {
            $("#liOwner" + id).addClass("close-list");
        }
        else {
            $("#liOwner" + id).removeClass("close-list");
        }
        filters.OwnerIds = [];
        $("#ulSelectedOwner li input[type=checkbox]").each(function () {
            var chkid = $(this).attr("id");
            if ($(this).is(':checked')) {
                filters.OwnerIds.push(chkid);
            }
        });
    }

    function GetCollaborators(planId) {
        if (planId != null && planId > 0) {
            planId = parseInt(planId);
            $.ajax({
                type: "GET",
                cache: false,
                url: '@Url.Action("GetCollaboratorDetails", "Plan")',
                data: { currentPlanId: planId },
                dataType: "json",
                success: function (data) {
                    if (data.serviceUnavailable != 'undefined' && data.serviceUnavailable == '#') {
                        window.location = '@Url.Content(Common.RedirectOnServiceUnavailibilityPage)';
                    }
                    else {
                        // Set collaborator details
                        $('#divCollaborator').empty(); // Clear collaborators div content
                        ////  set collaborator's image
                        if (data.collaboratorsImage != null && data.collaboratorsImage != 'undefined') {
                            $.each(data.collaboratorsImage.Data, function () {
                                SetCollaboratorImage(this, appendtag);//#416
                            })
                            $('#divCollaborator').append('<span class="bold margin_left6 position_absolute">' + data.collaboratorsImage.Data.length + ' Collaborator(s) </span>');
                            $('#divCollaborator').append('<span class="font_size10 margin_left6 updated-text-align">Last updated ' + data.lastUpdateDate + '</span>');
                        }
                        //added by uday for #416
                        ProfileAttachToolTip();//function written in scripts.js
                    }
                }
            });
        }
    }

    function SetCollaboratorImage(collaborator, appendtag) {

        // Get collaborator image
        var imgs = collaborator.imageBytes;
        var username = collaborator.name;
        var title = collaborator.jobTitle;//uday#416

        // Set collaborator image
        var collaboratorImage = "<img class=\"avatar-user img-border align_avatar_image\""
         + "src='" + "data:image/jpg;base64,"
         + imgs + "'/>";
        // uday for ticket #416

        var referencestart = "<a href='#' class=\"profile-info\">";
        var referencenew = "<div class=\"profile-tooltip\">	<div class=\"profile-tooltip-arrow\"></div> <div class=\"profile-tooltip-inner\"> " +
                                             " " + username + ', ' + title + "<br /></div> </div>";
        var endreference = "</a>";
        appendtag += referencestart;
        appendtag += collaboratorImage;
        appendtag += referencenew;
        appendtag += endreference;
        $("#divCollaborator").html($("#divCollaborator").html() + appendtag);
    }

    function SetAttributeData() {
        var planIds = 0;
        if (activeMenu == '@Enums.ActiveMenu.Plan.ToString().ToLower()') {
            filters.SelectedPlans = [];
            filters.SelectedPlans.push(CurrentPlanId);
        }

        planIds = filters.SelectedPlans;

        if (planIds.length > 0) {
            $('#DivloadPlan').show();
            $('.tab-content').show();
            $('#ptacticcount').show();
            $('#chart2').show();
            $('#pbudget').show();
            $('#pMQLs').show();
            $('.changes').show();
            $('#Notabcontent').hide();
        }
        else {
            $('#DivloadPlan').hide();
            $('.tab-content').hide();
            $('#ptacticcount').hide();
            $('#chart2').hide();
            $('#pbudget').hide();
            $('#pMQLs').hide();
            $('.changes').hide();
            $('#Notabcontent').show();
            // Start - Added by Sohel Pathan on 16/07/2014 for Internal Functional Review Points #63
            $('#marketing-activities').hide();
            $('#improvements').hide();
            // End - Added by Sohel Pathan on 16/07/2014 for Internal Functional Review Points #63
        }
    }

    function ResetFilterBeforePlan() {
        $('#ulSelectedPlans').html('');
        filters.PlanTitles = [];
        filters.PlanIDs = [];
        filters.SelectedPlans = [];
    }

    function BindPlans() {
        ResetFilterBeforePlan();
        var ActiveMenu = $('#ActiveMenu').val().toLowerCase();
 @*      $.ajax({
           beforeSend: function (x) {
               myApp.hidePleaseWait();
           },
           type: 'POST',
           url: '@Url.Content("~/Home/GetPlans/")',
           dataType: "json",
           async: false,
           data: {
               activeMenu: ActiveMenu
           },
           success: function (data) {*@
        //if (data.isSuccess == true) {
        var activeplans = {};
        if ('@ActivePlan' != '') {
            activeplans = JSON.parse('@Html.Raw(ActivePlan)');
            if (activeplans.length > 0) {
                PlanCount = activeplans.length;
                if (PlanCount > 0) {
                    $("#PlanAllModule").css("display", "block");
                    $("#NoPlanFound").hide();
                    $.each(activeplans, function (i, item) {
                        if (item.PlanId == CurrentPlanId && isFirstCall) {
                            //// Modified By Viral Kadiya PL Ticket#886 to Replace Select and X with check boxes for filters
                            $('#ulSelectedPlans').append('<li class="accordion-inner close-list" title="' + item.Title + '" id="liPlan' + item.PlanId + '"> <span class="sidebarliwidth">' + item.Title + '</span><input type="checkbox" class="chkbxfilter" planTitle="' + item.Title + '" onchange="togglePlan(this)" id="' + item.PlanId + '" checked="checked"></input></li>');
                            filters.SelectedPlans.push(item.PlanId);
                            filters.PlanTitles.push(item.Title);
                        }
                        else {
                            $('#ulSelectedPlans').append('<li class="accordion-inner" title="' + item.Title + '" id="liPlan' + item.PlanId + '"><span class="sidebarliwidth">' + item.Title + '</span><input type="checkbox" class="chkbxfilter" planTitle="' + item.Title + '" onchange="togglePlan(this)" id="' + item.PlanId + '"></input></li>');
                        }
                    });
                }
                else {
                    $("#PlanAllModule").css("display", "none");
                    $("#NoPlanFound").show();
                }
            }
            else {
                $("#PlanAllModule").css("display", "none");
                $("#NoPlanFound").show();
                $('#ulSelectedOwner').html('');
                $("#ulOwnerAllModule").css("display", "none");
                $("#NoOwnerFound").show();
                filters.OwnerIds = [];
                filters.TacticTypeids = [];
                filters.StatusIds = [];
            }
        }
        else {
            $("#NoPlanFound").show();
            $("#PlanAllModule").css("display", "none");
            $('#ulSelectedOwner').html('');
            $("#ulOwnerAllModule").css("display", "none");
            $("#NoOwnerFound").show();
            filters.OwnerIds = [];
            filters.TacticTypeids = [];
            filters.StatusIds = [];
        }
        // }
        // });
    }

    function ResetControlsBeforeOtherAttributes() {
        filters.customFieldIds = [];
        filters.OwnerIds = [];
        filters.TacticTypeids = [];
        filters.StatusIds = [];
        $('#divCustomFieldsFilter').html('');
        $('#ulSelectedOwner').html('');
    }

    function BindOtherAttributes() {
        ResetControlsBeforeOtherAttributes();
        $.ajax({
            type: 'POST',
            url: '@Url.Content("~/Home/GetCustomAttributes/")',
            dataType: "json",
            async: false,
            success: function (data) {
                if (data.serviceUnavailable != 'undefined' && data.serviceUnavailable == '#') {
                    window.location = '@Url.Content(Common.RedirectOnServiceUnavailibilityPage)';
                }
                else {
                    if (data.isSuccess == true) {
                        RenderCustomFieldSearchFilters(data);   // Added by Sohel Pathan on 19/01/2015 for PL ticket #1134
                    }
                }
            }
        });
    }

    // Start - Added by Sohel Pathan on 19/01/2015 for PL ticket #1134
    function RenderCustomFieldSearchFilters(data) {
        if (data.lstCustomFields != 'undefined' && data.lstCustomFields != null) {
            customFieldsCount = data.lstCustomFields.length;
            var html = '';
            if (customFieldsCount > 0) {
                $("#divCustomFieldsFilter").css("display", "block");
                $.each(data.lstCustomFields, function (i, customFielditem) {
                    var customFieldId = customFielditem.CustomFieldId.toString();
                    var customFieldName = customFielditem.Title;
                    html += '<div id="accordion-' + customFieldId + '" class="dropdown-section accordion">';
                    html += '<div class="accordion-group">';
                    html += '<div class="accordion-heading">';
                    html += '<h2 class="accordion-toggle" data-toggle="collapse" data-parent="#accordion-' + customFieldId + '" href="#accordion-element-' + customFieldId + '"><span class="sidebar_label tipsyclassTitle">' + customFieldName + '</span><i class="indicator glyphicon glyphicon-chevron-down pull-right"></i></h2> ';
                    html += '</div>'
                    html += '<div id="accordion-element-' + customFieldId + '" class="accordion-body collapse">';
                    html += '<ul class="scroll-list" id="ulSelected' + customFieldId + '">';
                    var customFieldSpecificOptions = 0;
                    if (data.lstCustomFieldOptions != 'undefined' && data.lstCustomFieldOptions != null) {
                        customFieldOptionsCount = data.lstCustomFieldOptions.length;
                        if (customFieldOptionsCount > 0) {
                            $.each(data.lstCustomFieldOptions, function (i, optionitem) {
                                if (parseInt(optionitem.CustomFieldId) == customFieldId) {
                                    html += '<li class="accordion-inner " title="' + optionitem.Title + '" id="li_' + optionitem.CustomFieldId + '_' + optionitem.CustomFieldOptionId + '"><span class="sidebarliwidth">' + optionitem.Title + '</span><input type="checkbox" class="chkbxfilter"  customFieldTitle="' + optionitem.Title + '" onchange="toggleCustomFields(this)" id="' + optionitem.CustomFieldId + '_' + optionitem.CustomFieldOptionId + '"></input></li>';
                                    customFieldSpecificOptions = customFieldSpecificOptions + 1;
                                }
                            });
                        }
                    }

                    html += '</ul><div class="list-tab">';
                    if (customFieldSpecificOptions > 0) {
                        html += '<ul id="' + customFieldId + 'AllModule">';
                    }
                    else {
                        html += '<ul id="' + customFieldId + 'AllModule" style="display:none;">';
                    }
                    html += '<li><a onclick="BulkCustomFieldOperation(true, ' + customFieldId + ')">select all</a></li><li>|</li>';
                    html += '<li><a onclick="BulkCustomFieldOperation(false, ' + customFieldId + ')">deselect all</a></li></ul>';
                    if (customFieldSpecificOptions > 0) {
                        html += '<div id="No' + customFieldId + 'Found" class="NoDataFoundFilter" style="display:none;">No ' + customFieldName + ' Found</div>';
                    }
                    else {
                        html += '<div id="No' + customFieldId + 'Found" class="NoDataFoundFilter">No ' + customFieldName + ' Found</div>';
                    }
                    html += '</div></div></div></div>';
                });
            }

            $('#divCustomFieldsFilter').html(html);
        }
        else {
            $('#divCustomFieldsFilter').html('');
        }
    }
    // End - Added by Sohel Pathan on 19/01/2015 for PL ticket #1134

    function BindUpcomingActivites(SelectedPlanIds) {
        $.ajax({
            type: 'POST',
            url: '@Url.Content("~/Home/BindUpcomingActivitesValues/")',
            async: false,
            data: {
                planids: SelectedPlanIds,
                CurrentTime: Currenttime
            },
            success: function (data) {
                BindUpcomingActivies(data);
            }
        });
    }

    function BindUpcomingActivies(items) {
        var $dropdown = $("#ddlUpComingActivites");
        $dropdown.html('');
        var $html = '';
        if (items.length > 0) {
            $.each(items, function (index, pvalues) {
                if (pvalues.Selected) {
                    $html += '<option value="' + pvalues.Value + '" selected="selected">' + pvalues.Text + '</option>';
                } else {
                    $html += '<option value="' + pvalues.Value + '">' + pvalues.Text + '</option>';
                }
            });
        }
        $dropdown.append($html);
        $("#ddlUpComingActivites").selectbox('detach');
        $("#ddlUpComingActivites").selectbox("attach");
    }

    //// Modified By Viral Kadiya PL Ticket#886 to Replace Select and X with check boxes for filters
    function BulkPlanOperation(selection) {
        filters.SelectedPlans = [];
        filters.PlanTitles = [];

        if (selection) {
            $("#ulSelectedPlans li").each(function (i) {
                $(this).addClass("close-list");
                var chkid = $(this).find("input[type=checkbox]").attr("id");
                $("#" + chkid).attr("checked", "checked");
                filters.SelectedPlans.push(chkid);
                filters.PlanTitles.push($(this).find("input[type=checkbox]").attr("planTitle"));
            });
        }
        else {
            $("#ulSelectedPlans li").each(function (i) {
                $(this).removeClass("close-list");
                var chkid = $(this).find("input[type=checkbox]").attr("id");
                $("#" + chkid).removeAttr("checked");
            });
        }

        if (filters.SelectedPlans.length == 0) {
            isFirstCall = false;
        }
        GetOwnerListForFilter(filters.SelectedPlans);
        GetTacticTypelist(filters.SelectedPlans);
    }

    //// Modified By Viral Kadiya PL Ticket#886 to Replace Select and X with check boxes for filters
    function BulkCustomFieldOperation(selection, customFieldId) {
        if (selection) {
            $('#ulSelected' + customFieldId + ' li').each(function (i) {
                $(this).addClass("close-list");
                var chkid = $(this).find("input[type=checkbox]").attr("id");
                $("#" + chkid).attr("checked", "checked");
            });
        }
        else {
            $('#ulSelected' + customFieldId + ' li').each(function (i) {
                $(this).removeClass("close-list");
                var chkid = $(this).find("input[type=checkbox]").attr("id");
                $("#" + chkid).removeAttr("checked");
            });
        }
    }

    //// Modified By Viral Kadiya PL Ticket#886 to Replace Select and X with check boxes for filters
    function BulkOwnerOperation(selection) {
        filters.OwnerIds = [];
        if (selection) {
            $("#ulSelectedOwner li").each(function (i) {
                $(this).addClass("close-list");
                var chkid = $(this).find("input[type=checkbox]").attr("id");
                $("#" + chkid).attr("checked", "checked");
                filters.OwnerIds.push(chkid);
            });
        }
        else {
            $("#ulSelectedOwner li").each(function (i) {
                $(this).removeClass("close-list");
                var chkid = $(this).find("input[type=checkbox]").attr("id");
                $("#" + chkid).removeAttr("checked");
            });
        }
    }

    // Added by KAPIL - #454 - to resolve extra space
    function CalGanntHeight() {
        var contentWraper = $('#content_wraper').parent().height();
        var positionGannt = $('.gantt-padding').position();
        $('.gantt-padding').height(contentWraper - positionGannt.top);
    }

    // Added by Nirav for Custom Dropdown - 388
    /*added by Nirav for plan consistency on 14 apr 2014*/
    function EditPlan() {
        var pid = $("#CurrentPlanId").val();
        var url = '@Url.Content("~/Plan/CreatePlan?id=")' + pid;
        window.location.href = url;
    }
    $(".selectBox select").selectbox();

    /*end Nirav*/
    /// Script Start
    /// Added By: Maninder Singh Wadhva.
    //// Global variable to hold quarter or year.
    var isQuater = Currenttime;//false;

    //// Global variable to hold current tab.
    var type = '@PlanGanttTypes.Tactic.ToString()';
    var isRequest = false;
    var showTacticStatus = false;   //// Added by Sohel on 12/05/2014 for PL #425 to Show status of tactics on Home and Plan screen

    //// Function to refresh current tab.
    function RefreshCurrentTab() {
        type = $('#ddlTabViewBy').val();
        AjaxRequest();
    }
    /// Script End
    /// Added By: Maninder Singh Wadhva.

    SetBudget("#pbudget");
    SetPriceValue("#pMQLs");
</script>


<script type="text/javascript">
    /// Script Start
    /// Added By: Maninder Singh Wadhva.
    //// Default load tactics in view control.
    var activeMenu = $('#ActiveMenu').val().toLowerCase();
    var getViewByList = false;  //// Added by Sohel Pathan on 28/10/2014 for PL ticket #885.
    var Successmsgduplicate = '@Successmsgduplicate';
    var Errormsgduplicate = '@errormsgduplicate';
    var isError = false;
    function SetPlanButtons() {

        //Added : By Kalpesh Sharma Ticket #638 Cloning icon for plans, campaigns, programs and tactics
        $('#BtnGroup').click(function (e) {
            if ($(this).html().toLowerCase() == "duplicate") {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Content("~/Plan/Clone")',
                    data: {
                        CloneType: '@Enums.DuplicationModule.Plan',
                        Id: '@Model.PlanId',
                        title: ''
                    },
                    success: function (data) {
                        if (data.returnURL != 'undefined' && data.returnURL == '#') {
                            window.location = '@Url.Content("~/Login/Index")';
                        }
                        else {
                            if (data.redirect) {
                                var url = '@Url.Content("~/Home/Index?ActiveMenu=")' + $('#ActiveMenu').val() + '&currentPlanId=' + data.planId;
                                window.location.href = url;
                                return;
                            }

                            if (data.errormsg) {
                                alert(data.errormsg);
                                return;
                            }
                        }
                    }
                });
            }
            else {
                var url = '@Url.Content("~/Plan/Create")';
                window.location.href = url;
            }
        });
    }

    $(document).ready(function () {
        //// Global variable to hold filters
        DuplicatePlanMessage();
        SetPlanButtons();
        var flg = false;
        var strflg = "";
        var PlanIdsCustom;
        SetGantt();
        // Start - Added by Sohel Pathan on 11/12/2014 for PL ticket #1021
        if ('@((bool)ViewBag.ShowInspectPopup)' != '@false') {
            ShowInspectForPlanTacticId();
            //functions added to show campagin and program popup from email url link click when email sent to user when comapign or program shared
            ShowInspectForPlanCampaignId();
            ShowInspectForPlanProgramId();
        }
        else {
            var currentUrlQueryString = window.location.search.toString().toLowerCase();
            var isNotificationEmailShareLink = false;
            if (currentUrlQueryString.indexOf('plancampaignid') > 0 || currentUrlQueryString.indexOf('planprogramid') > 0 || currentUrlQueryString.indexOf('plantacticid') > 0) {
                isNotificationEmailShareLink = true;
            }
            if ($('#cErrorInspectPopup').html() == '' && isNotificationEmailShareLink == true) {
                $('#cErrorInspectPopup').html('<strong>Error! </strong> ' + '@ViewBag.ShowInspectPopupErrorMessage');
                $("#content_wraper").removeClass("span10 all-height").addClass("span10 padding-top40");
                $('#errorMessageInspectPopup').slideDown(3000);
            }
            else {
                $("#content_wraper").removeClass("span10 padding-top40").addClass("span10 all-height");
                $('#errorMessageInspectPopup').slideUp(400);
            }
        }
        // End - Added by Sohel Pathan on 11/12/2014 for PL ticket #1021

        if (activeMenu.toLowerCase() == '@Enums.ActiveMenu.Home.ToString().ToLower()') {
            BindPlans();
            PlanIdsCustom = filters.SelectedPlans.toString();
        }
        else {
            PlanIdsCustom = CurrentPlanId;
        }

        if (activeMenu.toLowerCase() == '@Enums.ActiveMenu.Plan.ToString().ToLower()') {
            LoadPlan();
        }
        getViewByList = true;
        BindOtherAttributes();
        GetOwnerListForFilter(PlanIdsCustom);
        GetTacticTypelist(PlanIdsCustom);
        $('#hdnSelectedPlanIds').val(PlanIdsCustom);
        NumberFormatterTipsyTitle(".tipsyclassTitle", 27);

        if ($('#IsGridView').val() == "True") {
            $("#CalenderView").hide();
            $("#liGrid").click();
        }
    });

    function LoadPlan() {
        var plans = @Html.Raw(Json.Encode(ListBudgetingPlan))
        populateNF(plans, "dropdown-plan-title");
        var nlform = new NLForm(document.getElementById('nl-form2'));
    }

    var appendtag = '';//uday
    function DuplicatePlanMessage() {
        /*close x event on message*/
        $("#SuccessMsg").find(".close").click(function (e) {
            e.stopPropagation();
            e.preventDefault();
            $("#content_wraper").removeClass("span10 padding-top40").addClass("span10 all-height");
            $(this).closest(".alert").slideUp(300);/*SlideUp value change 400 to 300 by Mitesh Vaishnav on 04 july 2014*/
        });

        $("#errorMsg").find(".close").click(function (e) {
            e.stopPropagation();
            e.preventDefault();
            $("#content_wraper").removeClass("span10 padding-top40").addClass("span10 all-height");
            $(this).closest(".alert").slideUp(400);
        });

        if (Successmsgduplicate != "") {
            ShowMessage(isError, Successmsgduplicate, 3000);
        }

        if (Errormsgduplicate != "") {
            isError = true;
            ShowMessage(isError, Errormsgduplicate, 400);
        }
    }

    //// Modified By Maninder Singh Wadhva PL Ticket#47
    function ShowInspectForPlanTacticId() {
        var hdnshowInspectForPlanTacticId = $("#hdnshowInspectForPlanTacticId")
        var hdnIsImprovement = $('#hdnIsImprovement');
        if (hdnshowInspectForPlanTacticId.val() != 0) {
            ShowModel(null, true);
            hdnshowInspectForPlanTacticId.val(0);
            hdnIsImprovement.val(false);
        }
    }

    function ShowInspectForPlanCampaignId() {
        var hdnshowInspectForPlanCampaignId = $("#hdnshowInspectForPlanCampaignId")
        if (hdnshowInspectForPlanCampaignId.val() != 0) {
            ShowModel(null, true);
            hdnshowInspectForPlanCampaignId.val(0);
        }
    }

    function ShowInspectForPlanProgramId() {
        var hdnshowInspectForPlanProgramId = $("#hdnshowInspectForPlanProgramId")
        if (hdnshowInspectForPlanProgramId.val() != 0) {

            ShowModel(null, true);
            hdnshowInspectForPlanProgramId.val(0);
        }
    }
    strflg = "";

    function ApplyOrRemoveFilter() {
        ($(this).toggleClass("x-icon"));
        RefreshCurrentTab();
    }

    //// Modified By Maninder Singh Wadhva PL Ticket#47
    //// Function to add html for improvement activities.
    function AddImprovementActivities(colorCode, parentTitle, parentId, filteredData) {
        var accordionDiv = $('#DivAccordionImprovementActivities');
        accordionDiv.append("<div class='accordion-heading'>\
                                    <a href='#accordion-element-improvement-" + parentId + "' data-toggle='collapse' colorcode = '" + colorCode + "' class='accordion-toggle item-color collapsed chevron-right'>\
                                        <div class='cf'>" + parentTitle + "<span class='pull-right'><span id='spnimprovement_" + parentId + "'>0</span>/" + filteredData.length + "</span></div>\
                                    </a>\
                                </div>\
                                <div class='accordion-body collapse' id='accordion-element-improvement-" + parentId + "'>\
                                </div>");

        $.each(filteredData, function (index2, objfilteredData) {
            $("#accordion-element-improvement-" + parentId).append("<a taskid='" + objfilteredData.TaskId + "' colorcode = '" + colorCode + "' class='accordion-inner item-color cursor-pointer'>" + objfilteredData.Title + "</a>")
            $("a[taskid='" + objfilteredData.TaskId + "']").click(function (event) {
                GanttOpenBranch($(this).attr('taskid'));
            });
        })

        $(accordionDiv).find('.item-color').each(function () {
            var colorcode = $(this).attr('colorcode');
            if ($(this).find('.cf').length == 0) {
                $(this).css("border-left", "7px solid #" + colorcode);
                $(this).hover(function () {
                    $(this).css("background-color", "#" + colorcode);
                },
                function () {
                    $(this).css("background", "none repeat scroll 0% 0% transparent");
                }
                );
            }
            else {
                $(this).find('.cf').css("border-left", "7px solid #" + colorcode);
                $(this).find('.cf').hover(function () {
                    $(this).css("background-color", "#" + colorcode);
                },
                function () {
                    $(this).css("background", "none repeat scroll 0% 0% transparent");
                }
                );
            }

        });
    }

    //// Modified By Maninder Singh Wadhva PL Ticket#47
    //// Function to add marketing activities.
    function AddMarketingActivities(colorCode, parentTitle, parentId, filteredData) {
        var accordionDiv = $('#DivAccordionMarketingActivities');
        accordionDiv.append("<div class='accordion-heading'>\
                                    <a href='#accordion-element-marketing-" + parentId + "' data-toggle='collapse' colorcode = '" + colorCode + "' class='accordion-toggle item-color collapsed chevron-right'>\
                                        <div class='cf'>" + parentTitle + "<span class='pull-right'><span id='spn_" + parentId + "'>0</span>/" + filteredData.length + "</span></div>\
                                    </a>\
                                </div>\
                                <div class='accordion-body collapse' id='accordion-element-marketing-" + parentId + "'>\
                                </div>");

        $.each(filteredData, function (index2, objfilteredData) {
            $("#accordion-element-marketing-" + parentId).append("<a taskid='" + objfilteredData.TaskId + "' colorcode = '" + colorCode + "' class='accordion-inner item-color cursor-pointer'>" + objfilteredData.Title + "</a>")
            $("a[taskid='" + objfilteredData.TaskId + "']").click(function (event) {
                GanttOpenBranch($(this).attr('taskid'));
            });
        })

        $(accordionDiv).find('.item-color').each(function () {
            var colorcode = $(this).attr('colorcode');
            if ($(this).find('.cf').length == 0) {
                $(this).css("border-left", "7px solid #" + colorcode);
                $(this).hover(function () {
                    $(this).css("background-color", "#" + colorcode);
                },
                function () {
                    $(this).css("background", "none repeat scroll 0% 0% transparent");
                }
                );
            }
            else {
                $(this).find('.cf').css("border-left", "7px solid #" + colorcode);
                $(this).find('.cf').hover(function () {
                    $(this).css("background-color", "#" + colorcode);
                },
                function () {
                    $(this).css("background", "none repeat scroll 0% 0% transparent");
                }
                );
            }

        });
    }

    //// Modified By Maninder Singh Wadhva PL Ticket#47
    //// Function to add improvement activities.
    function AddAccordionToggleAndInnerImprovementTactic(improvementTacticTypeForAccordion, improvementTacticForAccordion) {
        var accordionDiv = $('#DivAccordionImprovementActivities');
        accordionDiv.empty();
        $.each(improvementTacticTypeForAccordion, function (index1, tactic) {
            var colorCode = tactic.ColorCode;
            var improvementTacticTypeId = tactic.ImprovementTacticTypeId;

            //// Filter plan improvement tactic based on improvement tactic type id.
            var filteredTactic = $.grep(improvementTacticForAccordion, function (value) { return value.ImprovementTacticTypeId == improvementTacticTypeId; })
            AddImprovementActivities(colorCode, tactic.Title, improvementTacticTypeId, filteredTactic);
        })
    }

    //// Modified By Maninder Singh Wadhva PL Ticket#47
    //// Function to create tactic view control.
    function AddAccordionToggleAndInnerTactic(data) {
        if (data.tacticType != undefined && data.tacticType != 'undefined') {
            if (data.tacticType.length > 0) {
                var accordionDiv = $('#DivAccordionMarketingActivities');
                accordionDiv.empty();
                $.each(data.tacticType, function (index1, objTactic) {
                    var colorCode = objTactic.ColorCode;
                    var tacticTypeId = objTactic.TacticTypeId;

                    //// Filter plan campaign program tactic based on tactic type id.
                    var filteredTactic = $.grep(data.planCampaignProgramTactic, function (value) { return value.TacticTypeId == tacticTypeId; })
                    AddMarketingActivities(colorCode, objTactic.Title, tacticTypeId, filteredTactic);
                });
            }
            else {
                $('#marketing-activities').hide();
            }
        }
        else {
            $('#marketing-activities').hide();
        }
    }

    function GanttOpenBranch(taskId) {

        var flag = false;
        $(".gantt_grid_data").find('div[class^="gantt_row"]').each(function (index1) {
            var itaskid = $(this).attr('task_id');
            if (taskId == itaskid) {
                flag = true;
            }
        });

        if (flag == false) {

            if (type.toString() == '@PlanGanttTypes.Tactic.ToString()' || type.toString() == '@PlanGanttTypes.Request.ToString()' || taskId.substring(0, 1) == "Z") {
            GanttOpenTaskInCalender(taskId);
        }
        else {
            $('.gantt_task_line').each(function () {
                var ganttTaskid = $(this).attr('task_id');
                if (ganttTaskid.indexOf(taskId) > 0) {
                    var taskPrefix = ganttTaskid.substring(0, ganttTaskid.indexOf('_')) + '_';
                    GanttOpenTaskInCalender(taskPrefix + taskId);
                }
            });
        }
    }
}

function GanttOpenTaskInCalender(taskId) {
    var arr = taskId.split('_');
    //// Added by :- Sohel Pathan on 10/04/2014 for PL ticket #419 to display tactic count properly in left nav-menu
    var CampaignID = ''
    if (arr.length >= 3) {
        CampaignID = arr[0] + '_';
    }
    ////

    var newTaskId = '';

    $.each(arr, function (index, item) {
        var tId = '';
        for (var counter = 0; counter <= index; counter++) {
            if (tId == '') {
                tId = arr[counter]
            }
            else {
                tId += '_' + arr[counter]
            }
        }

        if (newTaskId == '') {
            newTaskId = tId;
        }
        gantt.open(tId);
    });

    isRender = true;
    iterateMarketingActivitesOnExpand(newTaskId);
    isRender = false;
}

//// Modified By Maninder Singh Wadhva PL Ticket#47
//// Function to create vertical view control.
function AddAccordionToggleAndInnerCustomFields(data) {
    if (data.customFields != undefined && data.customFields != 'undefined') {
        if (data.customFields.length > 0) {
            var accordionDiv = $('#DivAccordionMarketingActivities');
            accordionDiv.empty();

            $.each(data.customFields, function (index1, objVertical) {
                var colorCode = objVertical.ColorCode;
                var cfId = objVertical.CustomFieldId;
                var filteredVertical = $.grep(data.customFieldTactics, function (value) { return value.CustomFieldId == cfId; }).sort(SortAlphabetically);
                AddMarketingActivities(colorCode, objVertical.Title, cfId, filteredVertical);
            });
        }
        else {
            $('#marketing-activities').hide();
        }
    }
    else {
        $('#marketing-activities').hide();
    }
}

//// Function to create request view control.
var activities = { data: '' };
function AddAccordionToggleAndInnerRequest(data) {
    AddAccordionToggleAndInnerTactic(data);
}

//// Function to sort alphabetically.
function SortAlphabetically(obj1, obj2) {
    var obj1Property = obj1.Title.toLowerCase();
    var obj2Property = obj2.Title.toLowerCase();
    return ((obj1Property < obj2Property) ? -1 : ((obj1Property > obj2Property) ? 1 : 0));
}

var planYear;
//// Modified By Maninder Singh Wadhva PL Ticket#47
//// Modified By Maninder Singh Wadhva to Address PL#203
//// Function to make ajax request.
function AjaxRequest() {
    //// Start - Added by Sohel Pathan on 19/01/2015 for PL ticket #1134
    filters.customFieldIds = [];

    $('#divCustomFieldsFilter').find("input[type=checkbox]").each(function () {
        if ($(this).attr('checked') == 'checked') {
            var chkid = $(this).attr("id");
            if (chkid != undefined && chkid != 'undefined') {
                filters.customFieldIds.push(chkid);
            }
        }
    });
    //// End - Added by Sohel Pathan on 19/01/2015 for PL ticket #1134

    var Planid = filters.SelectedPlans;
    var CustomFieldId = filters.customFieldIds;
    var OwnerIds = filters.OwnerIds;
    var TacticTypeids = filters.TacticTypeids; //Modified for #1283
    var GetSelectedPlanNo = filters.SelectedPlans.length;
    var StatusIds = filters.StatusIds;


    if (activeMenu == '@Enums.ActiveMenu.Plan.ToString().ToLower()') {
        // #838 Showing Multiple Plans on Plan Page : Kalpesh Sharma
        Planid = CurrentPlanId;
        GetSelectedPlanNo = 1;
    }
    if (Planid != 0) {
        $.ajax({
            type: "GET",
            cache: false,
            url: '@Url.Action("GetViewControlDetail", "Home")',
            data: {
                viewBy: isRequest ? '@PlanGanttTypes.Request.ToString()' : type,
                PlanId: Planid.toString(),
                timeFrame: isQuater,
                customFieldIds: CustomFieldId.toString(),
                ownerIds: OwnerIds.toString(),
                TacticTypeid: TacticTypeids.toString(),
                StatusIds: filters.StatusIds.toString(),
                activeMenu: $('#ActiveMenu').val(),
                getViewByList: getViewByList
            },
            dataType: "json",
            success: function (data) {
                if (data.serviceUnavailable != 'undefined' && data.serviceUnavailable == '#') {
                    window.location = '@Url.Content(Common.RedirectOnServiceUnavailibilityPage)';
                }
                else {
                    type = data.ViewBy.toString();
                    if (getViewByList == true) {
                        BindViewSelections(data.ViewById, type);
                    }
                    getViewByList = false;
                    $('#ddlTabViewBy').val(data.ViewBy.toString());
                    $('.request-icons').find('.counter').html(data.requestCount);
                    planYear = parseInt(data.planYear);
                    var isDataExistForTacticTable = false;
                    //// Modified By Maninder Singh Wadhva PL Ticket#47
                    if (typeof data.improvementTacticTypeForAccordion != 'undefined' &&
                        typeof data.improvementTacticForAccordion != 'undefined' &&
                        data.improvementTacticForAccordion.length > 0 &&
                        data.improvementTacticTypeForAccordion.length > 0 &&
                        data.taskData.length > 0) {
                        // $('#improvements').show();
                        // AddAccordionToggleAndInnerImprovementTactic(data.improvementTacticTypeForAccordion, data.improvementTacticForAccordion);
                        isDataExistForTacticTable = true;
                        $('#improvements').hide();
                    }
                    else {
                        $('#improvements').hide();
                    }

                    // To hide/show current plan edit button based on user plan edit permission
                    if (CurrentPlanId > 0 && GetSelectedPlanNo == 1) {
                        $("#divPlanEditButtonHome").show();
                        GetCurrentPlanPermissionDetail();
                    }
                    else {
                        $("#divPlanEditButtonHome").hide();
                        //  $("#divAddActuals").hide();
                    }

                    //// Modified By Maninder Singh Wadhva PL Ticket#47
                    //// filtering non improvement task data.                 
                    var filteredNonImprovementData = $.grep(data.taskData, function (value) { return (typeof value.isImprovement == 'undefined') });
                    if (filteredNonImprovementData.length > 0 && activeMenu == '@Enums.ActiveMenu.Home.ToString().ToLower()') {
                        isDataExistForTacticTable = true;
                        $('#marketing-activities').show();
                        var IsCampaign = type.indexOf('@Common.CampaignCustomTitle') > 0 ? '@Common.CampaignCustomTitle' : type.toString();
                        var IsProgram = type.indexOf('@Common.ProgramCustomTitle') > 0 ? '@Common.ProgramCustomTitle' : type.toString();
                        var IsTactic = type.indexOf('@Common.TacticCustomTitle') > 0 ? '@Common.TacticCustomTitle' : type.toString();
                        if (isRequest) {
                            // AddAccordionToggleAndInnerRequest(data);
                        }
                        else if (type == '@PlanGanttTypes.Tactic.ToString()') {
                            //  AddAccordionToggleAndInnerTactic(data);
                        }
                        else if (IsTactic == type) {
                            //   AddAccordionToggleAndInnerCustomFields(data);
                        }
                        else {
                            $('#marketing-activities').hide();
                        }

                        AttachEventToGroupHeading();
                        $('#marketing-activities').hide();
                    }
                    else {
                        $('#marketing-activities').hide();
                    }

                    renderGantt(data.taskData);
                    var w1 = window.innerWidth;
                    var w3 = document.body.clientWidth;

                    //// Hide/Show Tabulated data shown below gantt of request tab.
                    if (isRequest) {
                        requestPlanActiveTab(isRequest);
                        $(".shadow-scroll-gantt").show();
                        $("#table_activities").show();
                        FillTacticTableForRequest(data);
                        $("#ddlTabViewBy").find("option[value= @PlanGanttTypes.Tactic.ToString()]").prop("selected", "selected");
                        $("#ddlTabViewBy").multiselect('refresh');
                        isRequest = false;
                    }
                    else {
                        requestPlanActiveTab(false);
                        $("#table_activities").hide();
                        $(".shadow-scroll-gantt").hide();
                    }
                    gantt.refreshData();

                    $(".gantt_container .gantt_tree_content").each(function (index, element) {

                        $(element).attr("title", htmlDecode(element.innerHTML));
                    });

                    //// Added By Ravindra Singh Sisodiya  PL Ticket #1411
                    //// display popup based on type and name and title.

                    $(".gantt_last_cell").dblclick(function (e) {
                        e.stopPropagation();
                    });

                    $(".gantt_add").click(function (e) {

                        var type = $(this).attr('id');
                        var name = $(this).attr('Name');
                        var title = $(this).attr('aria-label');
                        var permission = $(this).attr('Permission');
                        DisplayPopUpMenu(type, name, title, permission, e);

                    });

                    var $doc = $(document);
                    $doc.click(function () {
                        $('#popupType').css('display', 'none');
                    });

                    $(document).mouseup(function (e) {
                        $('#popupType').css("display", "none");
                    });
                    $(".gantt_ver_scroll").scroll(function () {
                        $('#popupType').css('display', 'none');
                    });
                }

            }
        });
    }
    else {
        $('#DivloadPlan').hide();
        $('.tab-content').hide();
        $('#chart2').hide();
        $('#pbudget').attr("original-title", "$0");
        $('.changes').hide();
        $('#Notabcontent').show();
        // Start - Added by Sohel Pathan on 16/07/2014 for Internal Functional Review Points #63
        $('#marketing-activities').hide();
        $('#improvements').hide();
    }
}

function BindViewSelections(data, type) {
    var $dropdown = $("#ddlTabViewBy");
    $dropdown.html('');
    var $html = '';
    if (data.length > 0) {
        $.each(data, function (index, time) {
            if (type == time.Value) {
                $html += '<option value="' + time.Value + '" selected="selected">' + time.Text + '</option>';
            }
            else {
                $html += '<option value="' + time.Value + '">' + time.Text + '</option>';
            }
        });
    }
    $dropdown.append($html);
    $("#ddlTabViewBy").multiselect('refresh');
}

//Function to get current plan edit permission, PL #538
function GetCurrentPlanPermissionDetail() {
    $.ajax({
        type: "GET",
        cache: false,
        url: '@Url.Action("GetCurrentPlanPermissionDetail", "Home")',
        data: { planId: CurrentPlanId },
        success: function (data) {
            if (data.serviceUnavailable != 'undefined' && data.serviceUnavailable == '#') {
                //// Function to redirect to login page on unavailability of web service.
                //// Added By: Maninder Singh Wadhva on 11/24/2014.
                //// Ticket: 942 Exception handeling in Gameplan.
                window.location = '@Url.Content(Common.RedirectOnServiceUnavailibilityPage)';
            }
            else {
                if (data.IsPlanEditable) {
                    $("#isViewOnly").val(true);
                }
                else {
                    $("#isViewOnly").val(false);
                }
            }
        }
    });
}


function FillTacticTableForRequest(data) {

    onlyTactic = $.grep(data.taskData, function (value) {
        return ((typeof value.isSubmitted != 'undefined') && (typeof value.isDeclined != 'undefined'))
    });

    submittedTactic = $.grep(onlyTactic, function (value) {
        return (value.isSubmitted == true);
    });

    declinedTactic = $.grep(onlyTactic, function (value) {
        return (value.isDeclined == true);
    });

    var submittedDeclinedTactic = submittedTactic.concat(declinedTactic);
    activities = { data: submittedDeclinedTactic };

    if (activities.data.length > 0) {
        FillTacticsTable();
    }
    else {
        ////// Modified By Maninder Singh Wadhva PL Ticket#47
        $('#table_activities > tbody >tr').remove();
        var varCount = $('#table_activities thead th').length;
        $('#table_activities > tbody').html('<tr class="no-tactic-found"><td colspan="' + varCount + '">No submitted tactic found.</td></tr>');
    }

    if ($('#IsViewOnly').val() != '') {
        $("#table_activities th:nth-child(6), #table_activities td:nth-child(6)").remove();
    }
}
function AttachEventToGroupHeading() {
    var divAccordionGroups = $("div[id^='DivAccordionGroup']").find("div.accordion-heading a");
    $.each(divAccordionGroups, function (index, accGroup) {
        var accordionGroup = $(this);
        if (typeof accordionGroup != 'undefined') {
            accordionGroup.click(function () {
                var anchor = $(this).parent().next().find("a");
                if (typeof anchor != 'undefined') {
                    anchor.click();
                }
            });
        }
    })
}

//// Function to start date of current quarter.
function getQarterStartDate() {
    var currentDate = new Date();
    var quater = Math.floor((currentDate.getMonth()) / 3) + 1;
    var startDate;
    var fullYear = currentDate.getFullYear();
    switch (quater) {
        case 1:
            startDate = new Date(fullYear, 00, 01);
            break;
        case 2:
            startDate = new Date(fullYear, 03, 01);
            break;
        case 3:
            startDate = new Date(fullYear, 06, 01);
            break;
        case 4:
            startDate = new Date(fullYear, 09, 01);
            break;
        default:
            startDate = currentDate;
    }

    return startDate;
}

//// Function to set common properties of gantt.
////Modified By Maninder Singh Wadhva PL Ticket#47, 337
function SetGantt() {
    gantt.config.grid_width = 236;
    gantt.config.readonly = true;
    gantt.config.autofit = true;
    gantt.config.drag_links = false;
    gantt.config.drag_resize = true;
    gantt.config.drag_progress = false;
}

// Variable to maintein closed task in calendar.
var arrClosedTask = [];

//// Modified By Maninder Singh Wadhva PL Ticket#47
//// Function to render gantt i.e. for this year or this quarter.
function renderGantt(taskData) {

    var tasks = {
        data: taskData
    };

    $.each(tasks.data, function (index, objData) {
        objData.start_date = new Date(objData.start_date);
    });

    //// Start -- Modified by Sohel Pathan on 22/05/2014 for Internal Review Points
    //// Instead of iterating each task and delete then it, there is a better way to use .clearAll() method that removes all the task from gantt.
    if ($('.gantt_task_row').length > 0) {
        gantt.clearAll();
    }
    //// End -- Modified by Sohel Pathan on 22/05/2014 for Internal Review Points
    gantt.config.select_task = false;
    if (isQuater == "thisquarter") {
        //// Setting scale.
        gantt.config.scale_unit = "month";
        gantt.config.step = 12;
        gantt.config.date_scale = " %Y";

        gantt.config.scale_height = 60;
        gantt.config.columns = [{ name: "text", label: "Task name", tree: true, width: '*' }, { name: "add", label: "", width: 44 }];
        gantt.config.subscales = [{ unit: "month", step: 1, date: "%M" }];

        //// Getting quarter
        var startDate = getQarterStartDate();
        var endDate = new Date(startDate.getFullYear(), startDate.getMonth() + 3, 1);
        gantt.config.start_date = startDate;
        gantt.config.end_date = endDate;
        //// filtering quater data
        var filteredData = $.grep(tasks.data,
                                   function (value) {
                                       return (value.start_date >= startDate && value.start_date <= endDate)
                                   }
                                 );
        var filteredTasks = { data: filteredData };

        gantt.init("gantt_here");

        var json_length = filteredTasks.data.length;
        var gantt_div = document.getElementById("gantt_here");

        // Added by KAPIL - #454 - to resolve extra space
        CalGanntHeight();

        //// Function to add class to each task bar.
        ////Modified By Maninder Singh Wadhva PL Ticket#47, 337
        gantt.templates.task_class = function (start, end, task) {
            return getCSSForTask(task);
        };
        gantt.parse(filteredTasks);

        //// Added By Ravindra Singh Sisodiya  PL Ticket #1411
        //// display popup based on type and name and title.
        $(".gantt_last_cell").dblclick(function (e) {
            e.stopPropagation();
        });

        $(".gantt_add").click(function (e) {

            var type = $(this).attr('id');
            var name = $(this).attr('Name');
            var title = $(this).attr('aria-label');
            var permission = $(this).attr('Permission');
            DisplayPopUpMenu(type, name, title, permission, e);

        });

        var $doc = $(document);
        $doc.click(function () {
            $('#popupType').css('display', 'none');
        });

        $(document).mouseup(function (e) {
            $('#popupType').css("display", "none");
        });
        $(".gantt_ver_scroll").scroll(function () {
            $('#popupType').css('display', 'none');
        });
    }
    else if (isQuater == "thismonth") {
        gantt.config.scale_unit = "month";
        gantt.config.step = 12;
        gantt.config.date_scale = " %Y";
        gantt.config.scale_height = 60;
        gantt.config.columns = [{ name: "text", label: "Task name", tree: true, width: '*' }, { name: "add", label: "", width: 44 }];
        gantt.config.subscales = [{ unit: "month", step: 1, date: "%M" }];

        var date = new Date(), m = date.getMonth();
        gantt.config.start_date = new Date(date.getFullYear(), m, 01);
        gantt.config.end_date = new Date(date.getFullYear(), m + 1, 01);
        /*Added by Mitesh Vaishnav for PL ticket #671 Plan: Freezing of Application with Please Wait Dialog Box (This Month Option)*/
        var startDate = new Date(date.getFullYear(), m, 01);
        var endDate = new Date(date.getFullYear(), m + 1, 01);
        /*End :Added by Mitesh Vaishnav for PL ticket #671 Plan: Freezing of Application with Please Wait Dialog Box (This Month Option)*/
        var filteredData = $.grep(tasks.data,
                                  function (value) {
                                      return (value.start_date >= startDate && value.start_date <= endDate)
                                  }
                                );
        var filteredTasks = { data: filteredData };

        gantt.init("gantt_here");
        var json_length = tasks.data.length;
        var gantt_div = document.getElementById("gantt_here");

        // Added by KAPIL - #454 - to resolve extra space
        CalGanntHeight();

        //// Function to add class to each task bar.
        ////Modified By Maninder Singh Wadhva PL Ticket#47, 337
        gantt.templates.task_class = function (start, end, task) {
            return getCSSForTask(task);
        };

        gantt.parse(filteredTasks);//Modified by Mitesh Vaishnav on 04/08/2014 for PL ticket #671 Plan: Freezing of Application with Please Wait Dialog Box (This Month Option)

        //// Added By Ravindra Singh Sisodiya  PL Ticket #1411
        //// display popup based on type and name and title.
        $(".gantt_last_cell").dblclick(function (e) {
            e.stopPropagation();
        });

        $(".gantt_add").click(function (e) {

            var type = $(this).attr('id');
            var name = $(this).attr('Name');
            var title = $(this).attr('aria-label');
            var permission = $(this).attr('Permission');
            DisplayPopUpMenu(type, name, title, permission, e);

        });

        var $doc = $(document);
        $doc.click(function () {
            $('#popupType').css('display', 'none');
        });

        $(document).mouseup(function (e) {
            $('#popupType').css("display", "none");
        });
        $(".gantt_ver_scroll").scroll(function () {
            $('#popupType').css('display', 'none');
        });
    }
    else if ($.isNumeric(isQuater)) {
        gantt.config.scale_unit = "year";
        gantt.config.step = 1;
        gantt.config.date_scale = "%Y";
        gantt.config.scale_height = 60;
        gantt.config.columns = [{ name: "text", label: "Task name", tree: true, width: "*" }, { name: "add", label: "", width: 44 }];
        gantt.config.subscales = [{ unit: "month", step: 1, date: "%M" }];

        var date = new Date();
        gantt.config.start_date = new Date(planYear, 00, 01);
        gantt.config.end_date = new Date(planYear + 1, 00, 01);
        gantt.init("gantt_here");

        var json_length = tasks.data.length;
        var gantt_div = document.getElementById("gantt_here");

        // Added by KAPIL - #454 - to resolve extra space
        CalGanntHeight();

        //// Function to add class to each task bar.
        ////Modified By Maninder Singh Wadhva PL Ticket#47, 337
        gantt.templates.task_class = function (start, end, task) {
            return getCSSForTask(task);
        };

        gantt.parse(tasks);
    }


    //// Hide/Show Tabulated data shown below gantt of request tab.
    if ('@PlanGanttTypes.Request.ToString()' == type) {

        var gantt_div1 = document.getElementById("gantt_here");

        // Added by KAPIL - #454 - to resolve extra space
        CalGanntHeight();

        ////
        gantt.config.min_column_width = function (data) {
            return 10;
        };
    }

    //// Modified by :- Sohel Pathan on 10/04/2014 for PL ticket #419 to display tactic count properly in left nav-menu
    isRender = true;
    gantt.eachTask(function (task) {
        // Modified by dharmraj for #485 Planning Window doesnt remember previous view
        if (arrClosedTask.indexOf(task.id) > -1) {
            gantt.getTask(task.id).$open = false;
        }
        else {
            gantt.getTask(task.id).$open = true;
        }
        CountTacticForRenderChart(task.id, '');
    });

    //// Modified by :- Maninder Singh for PL ticket #203 	Performance issue - Home screen taking too long to load.
    gantt.refreshData();

    isRender = false;
    ////
    hoverRows();
    AttachEventToTactic();


}

//// Added by :- Sohel Pathan on 10/04/2014 for PL ticket #419 to display tactic count properly in left nav-menu
function CountTacticForRenderChart(leftNavTaskID, CampaignID) {

    /////Modified By Maninder Singh Wadhva PL Ticket#47, 337
    if (leftNavTaskID.substring(0, 1) == "L" && leftNavTaskID.indexOf("M") > 0) {
        $("#DivAccordionImprovementActivities").find('span[id^="spnimprovement_"]').each(function (index1) {
            var tid = this.id.substring(this.id.indexOf('_') + 1);
            var cnt = 0;
            $("#accordion-element-improvement-" + tid).find('a[class^="accordion-inner"]').each(function (index2) {
                var taskid = $(this).attr('taskid');
                //#840 : Undefined error on home when all BU and all Plans are selected : Kalpesh Sharma
                //Check that task is exists or not before we render it.
                if (gantt.isTaskExists(taskid)) {
                    if (typeof gantt.getTask(taskid) != 'undefined') {
                        var taskVisible = gantt.getTask(taskid).$open;     // Modified By :- Sohel Pathan on 30/07/2014 for PL ticket #649
                        if (CampaignID == '') {
                            if (taskid == leftNavTaskID && (typeof taskVisible != 'undefined') && taskVisible == true) {   // Modified By :- Sohel Pathan on 30/07/2014 for PL ticket #649
                                cnt = cnt + 1;
                            }
                        }
                        else {
                            if (taskid.indexOf(CampaignID) >= 0 && leftNavTaskID.indexOf("_I") > 0 && !(leftNavTaskID.indexOf("_Y") > 0) &&
                                (typeof taskVisible != 'undefined') && taskVisible == true) { // Modified By :- Sohel Pathan on 30/07/2014 for PL ticket #649
                                cnt = cnt + 1;
                            }
                        }
                    }
                }
            });

            if ($("#" + this.id).text() != '' && leftNavTaskID.indexOf("_I") > 0) {
                updateCountOnExpand($("#" + this.id), cnt);
            }
        });
    }
    else if ((leftNavTaskID.substring(0, 1) == "Z") && leftNavTaskID.indexOf("M") > 0) {
        $("#DivAccordionImprovementActivities").find('span[id^="spnimprovement_"]').each(function (index1) {
            var tid = this.id.substring(this.id.indexOf('_') + 1);
            var cnt = 0;
            $("#accordion-element-improvement-" + tid).find('a[class^="accordion-inner"]').each(function () {
                var taskPrefix = leftNavTaskID.substring(0, leftNavTaskID.indexOf('_')) + '_';
                var taskid = taskPrefix + $(this).attr('taskid');

                //#840 : Undefined error on home when all BU and all Plans are selected : Kalpesh Sharma
                //Check that task is exists or not before we render it.
                if (gantt.isTaskExists(taskid)) {
                    var task = gantt.getTask(taskid);
                    if (typeof task != 'undefined') {
                        var taskVisible = gantt.getTask(taskid).$open;     // Modified By :- Sohel Pathan on 30/07/2014 for PL ticket #649
                        if (CampaignID == '') {
                            if (taskid == leftNavTaskID && (typeof taskVisible != 'undefined') && taskVisible == true) {   // Modified By :- Sohel Pathan on 30/07/2014 for PL ticket #649
                                cnt = cnt + 1;
                            }
                        }
                        else {
                            if (taskid.indexOf(CampaignID) >= 0 && leftNavTaskID.indexOf("_I") > 0 && !(leftNavTaskID.indexOf("_Y") > 0) &&
                                (typeof taskVisible != 'undefined') && taskVisible == true) { // Modified By :- Sohel Pathan on 30/07/2014 for PL ticket #649
                                cnt = cnt + 1;
                            }
                        }
                    }
                }
            });
            if ($("#" + this.id).text() != '' && leftNavTaskID.indexOf("_I") > 0) {
                updateCountOnExpand($("#" + this.id), cnt);
            }
        });
    }
    else {
        $("#DivAccordionMarketingActivities").find('span[id^="spn_"]').each(function (index0) {
            var tid = this.id.substring(this.id.indexOf('_') + 1);
            cnt = 0;
            $("#accordion-element-marketing-" + tid).find('a[class^="accordion-inner"]').each(function (index1) {
                var taskid = $(this).attr('taskid');
                //#840 : Undefined error on home when all BU and all Plans are selected : Kalpesh Sharma
                //Check that task is exists or not before we render it.
                if (gantt.isTaskExists(taskid)) {
                    var taskVisible = gantt.getTask(taskid).$open; // Modified By :- Sohel Pathan on 30/07/2014 for PL ticket #649
                    if (CampaignID == '') {
                        if (taskid == leftNavTaskID && (typeof taskVisible != 'undefined') && taskVisible == true) { // Modified By :- Sohel Pathan on 30/07/2014 for PL ticket #649
                            cnt = cnt + 1;
                        }
                    }
                    else {
                        if (taskid.indexOf(CampaignID) >= 0 && leftNavTaskID.indexOf("_T") > 0 && !(leftNavTaskID.indexOf("_Y") > 0) &&
                            (typeof taskVisible != 'undefined') && taskVisible == true) { // Modified By :- Sohel Pathan on 30/07/2014 for PL ticket #649
                            cnt = cnt + 1;
                        }
                    }
                }
            });

            if ($("#" + this.id).text() != '' && leftNavTaskID.indexOf("_T") > 0) {
                updateCountOnExpand($("#" + this.id), cnt);
            }
        });
    }
}

////Modified By Maninder Singh Wadhva PL Ticket#47, 337
function getCSSForTask(task) {
    var isImprovement = false;
    if (typeof task.plantacticid != 'undefined' || (typeof task.isImprovement != 'undefined' && task.isImprovement == true)) {
        var cssClass = task.color + ' cursorPointer' + (task.isSubmitted && ('@PlanGanttTypes.Request.ToString()' == type) ? ' to-approve' : '');
        if (typeof task.isImprovement != 'undefined' && task.isImprovement == true &&
            typeof task.ImprovementPlanTacticId != 'undefined') {
            cssClass += ' improvement border-top';
            isImprovement = true;
        }
        else {
            if (!task.$open) {
                ///Modified by Dharmraj PL Ticket#394 - Apply required styling on the Improvement activity in calendar
                cssClass = ' improvement improvementcolor27A4E5 colorC6EBF3-with-border ';
            }
            else {
                cssClass += ' no_drag ';
            }
        }
    } else {
        cssClass = task.color + ' no_drag ';
    }

    //// Added by Sohel on 12/05/2014 for PL #425 to Show status of tactics on Home and Plan screen
    if (showTacticStatus == true) {
        if (task.Status == "Created")
            cssClass += " tactic-created";
        else if (task.Status == "Submitted")
            cssClass += " tactic-submitted ";
        else if (task.Status == "Approved" || task.Status == "Complete" || task.Status == "In-Progress")
            cssClass += " tactic-approved";
        else if (task.Status == "Rejected" || task.Status == "Declined")
            cssClass += " tactic-rejected";

        if (isImprovement == true)
            cssClass += " improvement-border-top-status";
    }
    return cssClass;
}

function Quarter() {

    gantt.config.scale_unit = "month";
    gantt.config.step = 12;
    gantt.config.date_scale = " %Y";

    gantt.config.scale_height = 60;
    gantt.config.columns = [{ name: "text", label: "Task name", tree: true, width: '*' }, ];
    gantt.config.subscales = [{ unit: "month", step: 1, date: "%M" }];

    //// Getting quarter
    var startDate = getQarterStartDate();
    var endDate = new Date(startDate.getFullYear(), startDate.getMonth() + 3, 1);
    gantt.config.start_date = startDate;
    gantt.config.end_date = endDate;

    //// filtering quater data
    var filteredData = $.grep(tasks.data,
                               function (value) {
                                   return (value.start_date >= startDate && value.start_date <= endDate)
                               }
                             );
    var filteredTasks = { data: filteredData };

    gantt.init("gantt_here");

    var json_length = filteredTasks.data.length;
    var gantt_div = document.getElementById("gantt_here");
    gantt_div.style.height = ((json_length * 35) + 94) + "px";

    //// Function to add class to each task bar.
    gantt.templates.task_class = function (start, end, task) {
        if (typeof task.plantacticid != 'undefined') {
            return task.color + ' cursorPointer' + (task.isSubmitted && ('@PlanGanttTypes.Request.ToString()' == type) ? ' to-approve' : '');
                               } else {
                                   return task.color;
                               }
    };
                           gantt.parse(filteredTasks);
                       }

                       function year() {
                           gantt.config.scale_unit = "year";
                           gantt.config.step = 1;
                           gantt.config.date_scale = "%Y";
                           gantt.config.scale_height = 60;
                           gantt.config.columns = [{ name: "text", label: "Task name", tree: true, width: '*' }, ];
                           gantt.config.subscales = [{ unit: "month", step: 1, date: "%M" }];

                           gantt.config.start_date = new Date(planYear, 00, 01);
                           gantt.config.end_date = new Date(planYear + 1, 00, 01);
                           gantt.init("gantt_here");

                           var json_length = tasks.data.length;
                           var gantt_div = document.getElementById("gantt_here");
                           gantt_div.style.height = ((json_length * 35) + 94) + "px";

                           //// Function to add class to each task bar.
                           gantt.templates.task_class = function (start, end, task) {
                               if (typeof task.plantacticid != 'undefined') {
                                   return task.color + ' cursorPointer' + (task.isSubmitted && ('@PlanGanttTypes.Request.ToString()' == type) ? ' to-approve' : '');
                       } else {
                           return task.color;
                       }
                           };

                   gantt.parse(tasks);
               }

               function thismonth() {
                   gantt.config.scale_unit = "month";
                   gantt.config.step = 12;
                   gantt.config.date_scale = " %Y";

                   gantt.config.scale_height = 60;
                   gantt.config.columns = [{ name: "text", label: "Task name", tree: true, width: '*' }, ];
                   gantt.config.subscales = [{ unit: "month", step: 1, date: "%M" }];

                   //// Getting quarter
                   var date = new Date();
                   var startDate = new Date(date.getFullYear(), date.getMonth(), 1);
                   var endDate = new Date(date.getFullYear(), date.getMonth() + 1, 0);

                   gantt.config.start_date = startDate;
                   gantt.config.end_date = endDate;

                   //// filtering quater data
                   var filteredData = $.grep(tasks.data,
                                              function (value) {
                                                  return (value.start_date >= startDate && value.start_date <= endDate)
                                              }
                                            );
                   var filteredTasks = { data: filteredData };

                   gantt.init("gantt_here");

                   var json_length = filteredTasks.data.length;
                   var gantt_div = document.getElementById("gantt_here");
                   gantt_div.style.height = ((json_length * 35) + 94) + "px";

                   //// Function to add class to each task bar.
                   gantt.templates.task_class = function (start, end, task) {
                       if (typeof task.plantacticid != 'undefined') {
                           return task.color + ' cursorPointer' + (task.isSubmitted && ('@PlanGanttTypes.Request.ToString()' == type) ? ' to-approve' : '');
                                              } else {
                                                  return task.color;
                                              }
                   };
                                          gantt.parse(filteredTasks);
                                      }

                                      function nextyear() {
                                          gantt.config.scale_unit = "year";
                                          gantt.config.step = 1;
                                          gantt.config.date_scale = "%Y";
                                          gantt.config.scale_height = 60;
                                          gantt.config.columns = [{ name: "text", label: "Task name", tree: true, width: '*' }, ];
                                          gantt.config.subscales = [{ unit: "month", step: 1, date: "%M" }];

                                          gantt.config.start_date = new Date(planYear + 1, 00, 01);
                                          gantt.config.end_date = new Date(planYear + 2, 00, 01);
                                          gantt.init("gantt_here");

                                          var json_length = tasks.data.length;
                                          var gantt_div = document.getElementById("gantt_here");
                                          gantt_div.style.height = ((json_length * 35) + 94) + "px";

                                          //// Function to add class to each task bar.
                                          gantt.templates.task_class = function (start, end, task) {
                                              if (typeof task.plantacticid != 'undefined') {
                                                  return task.color + ' cursorPointer' + (task.isSubmitted && ('@PlanGanttTypes.Request.ToString()' == type) ? ' to-approve' : '');
                                      } else {
                                          return task.color;
                                      }
                                          };

                                  gantt.parse(tasks);
                              }

                              function modSampleHeight() {
                                  var headHeight = 94;
                                  var sch = document.getElementById("gantt_here");
                                  sch.style.height = (parseInt(document.body.offsetHeight) - headHeight) + "px";
                                  gantt.setSizes();
                              }

                              //// Variable to hold double click event.
                              var eventTaskDoubleClick;
                              //// Function to attach event to show inspect model.
                              function AttachEventToTactic() {
                                  //// Detaching double click event.
                                  if (eventTaskDoubleClick != undefined) {
                                      gantt.detachEvent(eventTaskDoubleClick);
                                  }

                                  //// Attaching double click event
                                  eventTaskDoubleClick = gantt.attachEvent("onTaskDblClick", function (taskId, e) { ShowModel(taskId, null) });

                              }

                              //// Modified By Maninder Singh Wadhva PL Ticket#47
                              function ShowModel(taskId, isShowInspect) {
                                  removeDefaultModalPopupBackgroungColor();
                                  var task, planTacticId, planProgramId, planCampaignId, planId;
                                  var isImprovement = false;
                                  if (taskId != null) {
                                      task = gantt.getTask(taskId);
                                      planCampaignId = task.plancampaignid;
                                      planProgramId = task.planprogramid;
                                      planId = task.planid;

                                      isImprovement = (typeof task.isImprovement != 'undefined' && task.isImprovement == true)

                                      if (isImprovement) {
                                          planTacticId = task.ImprovementPlanTacticId;
                                      }
                                      else {
                                          planTacticId = task.plantacticid;
                                      }
                                  } else if (isShowInspect) {
                                      planTacticId = $("#hdnshowInspectForPlanTacticId").val();
                                      planCampaignId = $("#hdnshowInspectForPlanCampaignId").val();
                                      planProgramId = $("#hdnshowInspectForPlanProgramId").val();
                                      isImprovement = $('#hdnIsImprovement').val().toLowerCase();
                                  }
                                  isImprovement = isImprovement.toString();
                                  //// Checking whether current task is improvement tactic or not.
                                  if (typeof planTacticId != 'undefined' && planTacticId != 0 && isImprovement == 'true') {

                                      modalFullPosition(); // Added by Kapil Antala on 17 Sep 2014 for #732 - new popup design

                                      $('.modal-backdrop').addClass('modalFull-backdrop');
                                      $('.modal-backdrop').attr("style", "display:none !important;");
                                      $("#successMessage").css("display", "none");
                                      $("#errorMessage").css("display", "none");
                                      $("#modal-container-186470").modal('show');
                                      loadInspectPopup(planTacticId, "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.ImprovementTactic).ToLower()", "Setup", "", 0, "@Enums.InspectPopupRequestedModules.Index.ToString()");
                                  }
                                      //// Checking whether current task is tactic or not.
                                  else if (typeof planTacticId != 'undefined' && planTacticId != 0) {
                                      modalFullPosition(); // Added by Kapil Antala on 17 Sep 2014 for #732 - new popup design
                                      $('.modal-backdrop').addClass('modalFull-backdrop');
                                      $('.modal-backdrop').attr("style", "display:none !important;");
                                      $("#successMessage").css("display", "none");
                                      $("#errorMessage").css("display", "none");
                                      $("#modal-container-186470").modal('show');
                                      loadInspectPopup(planTacticId, "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Tactic).ToLower()", "Setup", "@Enums.InspectPopupMode.ReadOnly.ToString()", 0, "@Enums.InspectPopupRequestedModules.Index.ToString()");
                                  }

                                      //// Checking whether current task is tactic or not.
                                  else if (typeof planProgramId != 'undefined' && planProgramId != 0) {
                                      modalFullPosition(); // Added by Kapil Antala on 17 Sep 2014 for #732 - new popup design
                                      $('.modal-backdrop').addClass('modalFull-backdrop');
                                      $('.modal-backdrop').attr("style", "display:none !important;");
                                      $("#successMessage").css("display", "none");
                                      $("#errorMessage").css("display", "none");
                                      $("#modal-container-186470").modal('show');
                                      loadInspectPopup(planProgramId, "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Program).ToLower()", "Setup", "@Enums.InspectPopupMode.ReadOnly.ToString()", 0, "@Enums.InspectPopupRequestedModules.Index.ToString()");//Modified by Komal rawal For #1325 - To get the default mode as read only
                                  }
                                      //// Checking whether current task is tactic or not.
                                  else if (typeof planCampaignId != 'undefined' && planCampaignId != 0) {
                                      modalFullPosition(); // Added by Kapil Antala on 17 Sep 2014 for #732 - new popup design
                                      $('.modal-backdrop').addClass('modalFull-backdrop');
                                      $('.modal-backdrop').attr("style", "display:none !important;");
                                      $("#successMessage").css("display", "none");
                                      $("#errorMessage").css("display", "none");
                                      $("#modal-container-186470").modal('show');
                                      loadInspectPopup(planCampaignId, "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Campaign).ToLower()", "Setup", "@Enums.InspectPopupMode.ReadOnly.ToString()", 0, "@Enums.InspectPopupRequestedModules.Index.ToString()"); //Modified by Komal rawal For #1324 - To get the default mode as read only
                                  }
                                  else if (typeof planId != 'undefined' && planId != 0) {
                                      modalFullPosition();
                                      $('.modal-backdrop').addClass('modalFull-backdrop');
                                      $('.modal-backdrop').attr("style", "display:none !important;");
                                      $("#successMessage").css("display", "none");
                                      $("#errorMessage").css("display", "none");
                                      $("#modal-container-186470").modal('show');
                                      loadInspectPopup(planId, "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Plan).ToLower()", "Setup", "@Enums.InspectPopupMode.ReadOnly.ToString()");
                                  }
              }


              $("#modal-container-186470").on("show", function (e) {
                  $("#modalMainContainer").show();
              });
              function CloseIconClick() {
                  $('.close-x-big-icon').click(function () {
                      $("#modal-container-186470").addClass("transition-close");
                      $("#modal-container-186470").removeClass("transition_y");
                      addDefaultModalPopupBackgroungColor();
                      RefreshCurrentTab();
                      if (!isDataModified) {
                          $('body').removeClass('bodyOverflow');
                          gantt.refreshData();	//Added by Viral Kadiya on 11/07/2014 for PL #941 to refresh gantt data
                      }
                      $(".datepicker.dropdown-menu").each(function () {
                          $(this).remove();
                      });

                      //// Added By Ravindra Singh Sisodiya  PL Ticket #1411
                      //// display popup based on type and name and title.                       

                      $(".gantt_last_cell").dblclick(function (e) {
                          e.stopPropagation();
                      });

                      $(".gantt_add").click(function (e) {
                          var type = $(this).attr('id');
                          var name = $(this).attr('Name');
                          var title = $(this).attr('aria-label');
                          var permission = $(this).attr('Permission');
                          DisplayPopUpMenu(type, name, title, permission, e);
                      });

                      var $doc = $(document);
                      $doc.click(function () {
                          $('#popupType').css('display', 'none');
                      });

                      $(document).mouseup(function (e) {
                          $('#popupType').css("display", "none");
                      });
                      $(".gantt_ver_scroll").scroll(function () {
                          $('#popupType').css('display', 'none');
                      });
                  });

              }

              //Scrip Addded By Bhavesh for Inspect Popup

              // Added By Bhavesh
              // Inspect Popup
              /// Start Script Of Inspect Popup
              /// Modified by Kunal to add  section parameter to open popup campaign, program or tactic wise
              function loadInspectPopup(id, section, tabValue, mode, parentId) {
                  parentId = typeof parentId !== 'undefined' ? parentId : '0';
                  var url = '@Url.Content("~/Inspect/LoadInspectPopup")';
                  $("#divPartial").empty();
                  $("#divPartial").load(url + '?id=' + id + '&Section=' + section + '&TabValue=' + tabValue + '&InspectPopupMode=' + mode + '&parentId=' + parentId + '&RequestedModule=' + '@Enums.InspectPopupRequestedModules.Index.ToString()', function (response, status, xhr) {
                      if (response == '{"serviceUnavailable":"~/Login/ServiceUnavailable"}') {
                          //// Call function to redirect on service unavailibility.
                          //// Added By: Maninder Singh Wadhva on 11/24/2014.
                          //// Ticket: 942 Exception handeling in Gameplan.
                          window.location = '@Url.Content(Common.RedirectOnServiceUnavailibilityPage)';
                      }

                      modalBackdropDisplayNone();
                  });
              }

              //End Script Of Bhaveh

              //// Modified By Maninder Singh Wadhva PL Ticket#47
              //Start Creating and Populating tabulated data
              function FillTacticsTable() {
                  $('#table_activities > tbody >tr').remove();
                  if (typeof activities != 'undefined') {
                      if (activities.data.length) {
                          for (i in activities.data) {
                              addRowTactic(i, activities.data[i].id, activities.data[i].text, activities.data[i].projectedStageValue,
                                  activities.data[i].mqls, activities.data[i].cws, activities.data[i].cost, activities.data[i].isDeclined, activities.data[i].isSubmitted, activities.data[i].isImprovement);
                          }
                      }

                      //Fetch all the row values from the tables
                      $('.ActivitiesFormater').each(function () {
                          //Added By : Kalpesh Sharma
                          //PL #508 Set format for label in tool tip
                          SetBudget($(this));
                      });

                  }
              }

              //// Modified By Maninder Singh Wadhva PL Ticket#47
              //add row in tactics table
              function addRowTactic(index, id, text, projectedStageValue, mqls, cws, cost, isDeclined, isSubmitted, isImprovement) {

                  var $activitiesTable = $('#table_activities > tbody');
                  var $html = "";
                  if (isImprovement) {
                      var valueForImprovement = '---';
                      projectedStageValue = valueForImprovement;
                      mqls = valueForImprovement;
                      cws = valueForImprovement;
                  }
                  if (isDeclined) {
                      $html += '<tr class="rejected" id="' + id + '" data-index="' + index + '">' +
                                  '<td class="border-r sm">'

                      if (isImprovement) {
                          $html += '<span class="bullhorn-icon"></span>'
                      }
                      //Modified by Arpita Soni on 01/16/2015 for ticket #1084
                      $html += '<span class="title-baseline-model ConcatTextlength" style="width: 400px" title=' + text + ' >' + text + '</span><span class="search-icon"></span></td>' +
                                  '<td class="sm">' + displayTacticMQL(projectedStageValue) + '</td>' +
                                  '<td class="sm">' + displayTacticMQL(mqls) + '</td>' +
                                  '<td class="sm ActivitiesFormater">' + FormatCurrency(cws, false) + '</td>' +
                                  '<td class="border-r sm ActivitiesFormater">' + FormatCurrency(cost, false) + '</td>';
                      $html += '<td><span class="reject-icon active"></span><span class="accept-icon"></span></td>';

                      $html += '</tr>';
                  } else if (isSubmitted) {
                      $html += '<tr class="pending"  id="' + id + '" data-index="' + index + '">' +
                                  '<td class="border-r sm">'

                      if (isImprovement) {
                          $html += '<span class="bullhorn-icon"></span>'
                      }
                      //Modified by Arpita Soni on 01/16/2015 for ticket #1084
                      $html += '<span class="title-baseline-model ConcatTextlength" style="width: 400px" title=' + text + ' >' + text + '</span><span class="search-icon"></span></td>' +
                                  '<td class="sm">' + displayTacticMQL(projectedStageValue) + '</td>' +
                                  '<td class="sm">' + displayTacticMQL(mqls) + '</td>' +
                                  '<td class="sm ActivitiesFormater">' + FormatCurrency(cws, false) + '</td>' +
                                  '<td class="border-r sm ActivitiesFormater">' + FormatCurrency(cost, false) + '</td>';
                      $html += '<td><span class="reject-icon"></span><span class="accept-icon"></span></td>';
                      $html += '</tr>';
                  }

                  $activitiesTable.append($html);

              }

              function displayTacticMQL(MQL) {
                  if (MQL != 'N/A' && MQL != '---') {
                      //Modified by Arpita Soni on 01/16/2015 for Ticket #1084
                      return number_format(MQL, 0, '.', ',');

                  }
                  else {
                      return MQL;
                  }
              }

              $(document).on("click", ".accept-icon", function () {
                  var task = gantt.getTask($(this.parentNode.parentNode).attr("id"));
                  ApproveTactic(this, task);
              })

              //// Modified By Maninder Singh Wadhva PL Ticket#47
              function ApproveTactic(e, task) {
                  var approveDeclineTacticId;
                  var isImprovement = false;
                  if (typeof task.isImprovement != 'undefined' && task.isImprovement == true) {
                      approveDeclineTacticId = task.ImprovementPlanTacticId;
                      isImprovement = true;
                  }
                  else {
                      approveDeclineTacticId = task.plantacticid;
                  }

                  $.ajax({
                      type: 'POST',
                      url: '@Url.Content("~/Inspect/ApproveDeclineTactic/")',
                      data: {
                          planTacticId: approveDeclineTacticId,
                          isApprove: true,
                          isImprovement: isImprovement
                      },
                      dataType: "json",
                      success: function (data) {
                          if (data.serviceUnavailable != 'undefined' && data.serviceUnavailable == '#') {
                              window.location = '@Url.Content(Common.RedirectOnServiceUnavailibilityPage)';
                          }
                          else {
                              if (data.result == true) {
                                  if (task.isSubmitted) {
                                      $('#RequestCount').html($('#RequestCount').html() - 1);
                                  }

                                  var index = $(e.parentNode.parentNode).attr("data-index");
                                  task.isDeclined = false;
                                  task.isSubmitted = false;
                                  activities.data.splice(index, 1);

                                  $('#table_activities tbody tr').remove();
                                  FillTacticsTable();
                                  gantt.refreshData();
                                  isRequest = true;
                                  // Added by Dharmraj to refresh current tab for PL #364
                                  RefreshCurrentTab();
                              }
                              else {
                                  alert('Not Approved');
                              }
                          }
                      }
                  });
              }

              $(document).on("click", ".reject-icon", function () {
                  var task = gantt.getTask($(this.parentNode.parentNode).attr("id"));
                  DeclineTactic(this, task);
              })

              //// Modified By Maninder Singh Wadhva PL Ticket#47
              function DeclineTactic(e, task) {
                  var approveDeclineTacticId;
                  var isImprovement = false;
                  if (typeof task.isImprovement != 'undefined' && task.isImprovement == true) {
                      approveDeclineTacticId = task.ImprovementPlanTacticId;
                      isImprovement = true;
                  }
                  else {
                      approveDeclineTacticId = task.plantacticid;
                  }

                  $.ajax({
                      type: 'POST',
                      url: '@Url.Content("~/Inspect/ApproveDeclineTactic/")',
                          data: {
                              planTacticId: approveDeclineTacticId,
                              isApprove: false,
                              isImprovement: isImprovement
                          },
                          dataType: "json",
                          success: function (data) {
                              if (data.serviceUnavailable != 'undefined' && data.serviceUnavailable == '#') {
                                  window.location = '@Url.Content(Common.RedirectOnServiceUnavailibilityPage)';
                          }
                          else {
                              if (data.result == true) {
                                  if (task.isSubmitted) {
                                      $('#RequestCount').html($('#RequestCount').html() - 1);
                                  }
                                  var index = $(e.parentNode.parentNode).attr("data-index");
                                  var activityTemp = activities.data[index];
                                  activities.data.splice(index, 1);
                                  $('#table_activities tbody tr').remove();
                                  activityTemp.isDeclined = true;
                                  activityTemp.isSubmitted = false;
                                  activities.data.push(activityTemp);
                                  FillTacticsTable();
                                  gantt.refreshData();
                                  isRequest = true;
                                  // Added by Dharmraj to refresh current tab for PL #364
                                  RefreshCurrentTab();
                              }
                              else {
                                  alert('Not Declined');
                              }
                          }
                      }
                      });
              }

              //tbody tr
              $("#table_activities").on("click", ".sm", function () {
                  ShowModel($(this.parentNode).attr("id"), null)
              })
              //End Creating and Populating tabulated data

              /// Script End
              /// Added By: Maninder Singh Wadhva.

              /// Ended Script Of Inspect Popup
              //Commented by komal Rawal for new homepage UI
    @*function GetHealderData(selectedPlanIds) {
    alert(1);
                  var newUrl = '';
                  if (activeMenu == '@Enums.ActiveMenu.Home.ToString().ToLower()') {
                      newUrl = '@Url.Action("GetPlanByMultiplePlanIDs", "Plan")';
                  }
                  else if (activeMenu == '@Enums.ActiveMenu.Plan.ToString().ToLower()') {
                      newUrl = '@Url.Action("GetPlanByPlanID", "Plan")';
                      selectedPlanIds = parseInt(CurrentPlanId);
                  }
              $.ajax(
              {
                  type: "GET",
                  cache: false,
                  url: newUrl,
                  data: {
                      planid: selectedPlanIds,
                      activeMenu: activeMenu,
                      year: isQuater
                  },
                  dataType: "json",
                  success: function (data) {
                      if (data != null) {

                          $.each(data.lstHomePlanModelHeader, function (index, obj) {
                              if (index == "MQLs") {
                                  $("#pMQLs").html(obj);
                                  SetPriceValue("#pMQLs");
                              }
                              else if (index == "Budget") {
                                  $("#pbudget").html(obj);
                                  SetBudget("#pbudget");
                              }
                              else if (index == "TacticCount") {
                                  $("#ptacticcount").html(obj);
                              }
                              else if (index == "mqlLabel") {
                                  $("#pmqlLabel").html(obj);
                              }
                              else if (index == "costLabel") {
                                  $("#pcostLabel").html(obj);
                              }
                              else if (index == "PercentageMQLImproved") {
                                  /// Added By: Maninder Singh Wadhva
                                  /// Addressed PL Ticket: 37,38,47,49

                                  var pMQLImproved = $("#pMQLImproved");
                                  pMQLImproved.removeClass("greenfont");
                                  pMQLImproved.removeClass("redfont");

                                  var divBullhornbg = $('#DivBullhornbg');
                                  divBullhornbg.removeClass("bullhorn-bg-disabled");
                                  divBullhornbg.removeClass("bullhorn-bg");
                                  if (obj != null) {
                                      divBullhornbg.addClass("bullhorn-bg");
                                      if (obj < 0) {
                                          pMQLImproved.html(FormatNumber(obj, true))
                                          pMQLImproved.addClass("redfont");
                                      }
                                      else {
                                          pMQLImproved.html("+" + FormatNumber(obj, true))
                                          pMQLImproved.addClass("greenfont");
                                      }
                                  }
                                  else {
                                      divBullhornbg.addClass("bullhorn-bg-disabled");
                                      pMQLImproved.html('---');
                                  }
                              }

                          });

                      }
                  }
              });
          }
          function GetNumberOfActivityPerMonByPlanId(selectedPlanIds, strParam) {
              var newUrl = '';
              var isMultiple = false;
              newUrl = '@Url.Action("GetNumberOfActivityPerMonth", "Home")';
              if (activeMenu == '@Enums.ActiveMenu.Home.ToString().ToLower()') {
                  isMultiple = true;
              }
              else if (activeMenu == '@Enums.ActiveMenu.Plan.ToString().ToLower()') {
                  if (CurrentPlanId > 0) {
                      selectedPlanIds = CurrentPlanId.toString();
                  }
              }
              $.ajax(
              {
                  type: "GET",
                  cache: false,
                  url: newUrl,
                  data: {
                      planid: selectedPlanIds,
                      strparam: strParam,
                      isMultiplePlan: isMultiple
                  },
                  dataType: "json",
                  success: function (data) {
                      if (data != null) {
                          $(".dhx_canvas_text").remove();
                          $("canvas").remove();
                          setgraphdata(data);

                      }
                  }
              });
          }
          function setgraphdata(data) {

              var barChart2 = new dhtmlXChart({
                  view: "bar",
                  container: "chart2",
                  value: "#NoOfActivity#",
                  label: "#NoOfActivity#",
                  color: "#Color#",
                  radius: 3,
                  padding: {
                      top: 25,
                      bottom: 16,
                      right: 00,
                      left: 00

                  },
                  xAxis: {

                      template: "#Month#"
                  },
              });
              barChart2.parse(data.lstchart, "json");
    }*@
    //End

    //// Modified By Maninder Singh Wadhva PL Ticket#47
    gantt.attachEvent("onTaskOpened", function (id) {
        var planid = CurrentPlanId;
        //// Modified by :- Sohel Pathan on 10/04/2014 for PL ticket #419 to display tactic count properly in left nav-menu
        if (typeof isRender == 'undefined' || isRender == false) {
            OnTaskExapnd(id);
        }
        hoverRows();
        arrClosedTask = jQuery.grep(arrClosedTask, function (value) {
            return value != id;
        });

        // added by dharmraj to display tooltip on camp., prog., tactic name in calendar.
        $(".gantt_container .gantt_tree_content").each(function (index, element) {
            $(element).attr("title", htmlDecode(element.innerHTML));
        });


        $(".gantt_last_cell").dblclick(function (e) {
            e.stopPropagation();
        });

        $(".gantt_add").click(function (e) {
            var type = $(this).attr('id');
            var name = $(this).attr('Name');
            var title = $(this).attr('aria-label');
            var permission = $(this).attr('Permission');
            DisplayPopUpMenu(type, name, title, permission, e);

        });

        var $doc = $(document);
        $doc.click(function () {
            $('#popupType').css('display', 'none');
        });

        $(document).mouseup(function (e) {
            $('#popupType').css("display", "none");
        });
        $(".gantt_ver_scroll").scroll(function () {
            $('#popupType').css('display', 'none');
        });

    });

    //// Added by :- Sohel Pathan on 11/04/2014 for PL ticket #419 to display tactic count properly in left nav-menu
    function OnTaskExapnd(id) {
        iterateMarketingActivitesOnExpand(id);
    }

    function iterateMarketingActivitesOnExpand(id) {
        if (id.substring(0, 1) == "C" || id.substring(0, 1) == "Z" || (id.substring(0, 1) == "L" && id.indexOf("M") <= 0)) {
            var intid = 0;
            if (id.indexOf("P") >= 0) {
                intid = id.substring(id.indexOf('P') + 1);
            }
            if (intid != 0) {
                //// Two levels Exapnding tabs for Program in all tabs
                $("#DivAccordionMarketingActivities").find('span[id^="spn_"]').each(function (index0) {
                    var tid = this.id.substring(this.id.indexOf('_') + 1);
                    var cnt = 0;
                    var a = gantt.getChildren(id);
                    $("#accordion-element-marketing-" + tid).find('a[class^="accordion-inner"]').each(function (index1) {
                        var taskid = $(this).attr('taskid');
                        var taskVisible = $("#gantt_here").find('div[task_id="' + taskid + '"]');
                        // Start - Modified By :- Sohel Pathan on 30/07/2014 for PL ticket #649
                        if (typeof taskVisible != 'undefined') {
                            if (taskVisible.length > 0) {
                                $.each(a, function (index2, value2) {
                                    if (taskid == value2) {
                                        cnt = cnt + 1;
                                    }
                                });
                            }
                        }
                        // End - Modified By :- Sohel Pathan on 30/07/2014 for PL ticket #649
                    });

                    if ($("#" + this.id).text() != '' && cnt != 0) {    // Modified By :- Sohel Pathan on 30/07/2014 for PL ticket #649
                        updateCountOnExpand($("#" + this.id), cnt);
                    }
                });
            }
            else {
                //// Three levels Exapnding tabs for Campaign in all tabs
                if (id.substring(0, 1) == "C") {
                    $("#DivAccordionMarketingActivities").find('span[id^="spn_"]').each(function (index0) {
                        var tid = this.id.substring(this.id.indexOf('_') + 1);
                        var cnt = 0;
                        var a = gantt.getChildren(id);
                        $.each(a, function (index1, value1) {
                            // Start - Modified By :- Sohel Pathan on 30/07/2014 for PL ticket #649
                            var childVisible = gantt.getTask(value1).$open;
                            if (typeof childVisible != undefined) {
                                if (childVisible == true) {
                                    var child = gantt.getChildren(value1);
                                    $("#accordion-element-marketing-" + tid).find('a[class^="accordion-inner"]').each(function (index2) {
                                        var taskid = $(this).attr('taskid');
                                        var taskVisible = $("#gantt_here").find('div[task_id="' + taskid + '"]');
                                        if (typeof taskVisible != 'undefined') {
                                            if (taskVisible.length > 0) {
                                                $.each(child, function (index3, value3) {
                                                    if (taskid == value3) {
                                                        cnt = cnt + 1;
                                                    }
                                                });
                                            }
                                        }
                                    });
                                }
                            }
                            // End - Modified By :- Sohel Pathan on 30/07/2014 for PL ticket #649
                        });

                        if ($("#" + this.id).text() != '' && cnt != 0) {    // Modified By :- Sohel Pathan on 30/07/2014 for PL ticket #649
                            updateCountOnExpand($("#" + this.id), cnt);
                        }
                    });
                }
                //// Three levels Exapnding tabs for Improvement Activities in Stage or custom field
                if ((id.substring(0, 1) == "Z") && (id.indexOf("L") > 0 && id.indexOf("M") > 0)) {
                    $("#DivAccordionImprovementActivities").find('span[id^="spnimprovement_"]').each(function (index1) {
                        var tid = this.id.substring(this.id.indexOf('_') + 1);
                        var cnt = 0;
                        var a = gantt.getChildren(id);
                        $("#accordion-element-improvement-" + tid).find('a[class^="accordion-inner"]').each(function (index2) {
                            var taskid = $(this).attr('taskid');
                            $.each(a, function (index, value) {
                                if (value.indexOf(taskid) > 0) {
                                    cnt = cnt + 1;
                                }
                            });
                        });

                        if ($("#" + this.id).text() != '' && cnt != 0) {
                            updateCountOnExpand($("#" + this.id), cnt);
                        }
                    });
                }
                    //// Five levels Expanding tabs forStage or customfield
                else if ((id.substring(0, 1) == "Z") && (id.indexOf("L") <= 0 && id.indexOf("M") <= 0)) {
                    $("#DivAccordionMarketingActivities").find('span[id^="spn_"]').each(function (index0) {
                        var tid = this.id.substring(this.id.indexOf('_') + 1);
                        var cnt = 0;
                        var childLevel5 = gantt.getChildren(id);
                        $.each(childLevel5, function (index1, value5) {
                            var childVisible5 = gantt.getTask(value5).$open;
                            if (typeof childVisible5 != undefined) {
                                if (childVisible5 == true && value5.indexOf("M") <= 0) {
                                    var a = gantt.getChildren(value5);
                                    $.each(a, function (index1, value1) {
                                        var childVisibleMain = gantt.getTask(value1).$open;
                                        if (typeof childVisibleMain != undefined) {
                                            if (childVisibleMain == true && value1.indexOf("M") <= 0) {
                                                var child1 = gantt.getChildren(value1);
                                                $.each(child1, function (index4, value4) {
                                                    var childVisible = gantt.getTask(value4).$open;
                                                    if (typeof childVisible != undefined) {
                                                        if (childVisible == true && value4.indexOf("M") <= 0) {
                                                            var child = gantt.getChildren(value4);
                                                            $("#accordion-element-marketing-" + tid).find('a[class^="accordion-inner"]').each(function (index2) {
                                                                var taskid = $(this).attr('taskid');
                                                                var taskVisible = $("#gantt_here").find('div[task_id="' + taskid + '"]');
                                                                if (child.length > 0) {
                                                                    $.each(child, function (index3, value3) {
                                                                        if (taskid == value3 && (typeof taskVisible != 'undefined') && taskVisible.length > 0) {
                                                                            cnt = cnt + 1;
                                                                        }
                                                                    });
                                                                }
                                                                else {
                                                                    if (taskid == value4 && (typeof taskVisible != 'undefined') && taskVisible.length > 0) {
                                                                        cnt = cnt + 1;
                                                                    }
                                                                }
                                                            });
                                                        }
                                                    }
                                                });
                                            }
                                        }
                                    });
                                }
                            }
                        });

                        if ($("#" + this.id).text() != '' && cnt != 0) {
                            updateCountOnExpand($("#" + this.id), cnt);
                        }
                    });
                    iterateImprovementActivitiesOnExpand(id);
                }
                    //// Four levels Exapnding tabs for Plan
                else if ((id.substring(0, 1) == "Z" || id.substring(0, 1) == "L") && id.indexOf("M") <= 0) {
                    $("#DivAccordionMarketingActivities").find('span[id^="spn_"]').each(function (index0) {
                        var tid = this.id.substring(this.id.indexOf('_') + 1);
                        var cnt = 0;
                        var a = gantt.getChildren(id);
                        $.each(a, function (index1, value1) {
                            // Start - Modified By :- Sohel Pathan on 30/07/2014 for PL ticket #649
                            var childVisibleMain = gantt.getTask(value1).$open;
                            if (typeof childVisibleMain != undefined) {
                                if (childVisibleMain == true && value1.indexOf("M") <= 0) {
                                    var child1 = gantt.getChildren(value1);
                                    $.each(child1, function (index4, value4) {
                                        var childVisible = gantt.getTask(value4).$open;
                                        if (typeof childVisible != undefined) {
                                            if (childVisible == true && value4.indexOf("M") <= 0) {
                                                var child = gantt.getChildren(value4);
                                                $("#accordion-element-marketing-" + tid).find('a[class^="accordion-inner"]').each(function (index2) {
                                                    var taskid = $(this).attr('taskid');
                                                    var taskVisible = $("#gantt_here").find('div[task_id="' + taskid + '"]');
                                                    if (child.length > 0) {
                                                        $.each(child, function (index3, value3) {
                                                            if (taskid == value3 && (typeof taskVisible != 'undefined') && taskVisible.length > 0) {
                                                                cnt = cnt + 1;
                                                            }
                                                        });
                                                    }
                                                    else {
                                                        if (taskid == value4 && (typeof taskVisible != 'undefined') && taskVisible.length > 0) {
                                                            cnt = cnt + 1;
                                                        }
                                                    }
                                                });
                                            }
                                        }
                                    });
                                }
                            }
                            // End - Modified By :- Sohel Pathan on 30/07/2014 for PL ticket #649
                        });

                        if ($("#" + this.id).text() != '' && cnt != 0) {    // Modified By :- Sohel Pathan on 30/07/2014 for PL ticket #649
                            updateCountOnExpand($("#" + this.id), cnt);
                        }
                    });
                    iterateImprovementActivitiesOnExpand(id);
                }
            }
        }
            //// Two levels Expanding tabs for Improvent Activities in Tactic and Request Tab
            ////Modified By Maninder Singh Wadhva PL Ticket#47, 337
        else if (id.substring(0, 1) == "L" && id.indexOf("M") > 0) {
            $("#DivAccordionImprovementActivities").find('span[id^="spnimprovement_"]').each(function (index1) {
                var tid = this.id.substring(this.id.indexOf('_') + 1);
                var cnt = 0;
                var a = gantt.getChildren(id);
                $("#accordion-element-improvement-" + tid).find('a[class^="accordion-inner"]').each(function (index2) {
                    var taskid = $(this).attr('taskid');
                    $.each(a, function (index, value) {

                        if (taskid == value) {
                            cnt = cnt + 1;
                        }
                    });
                });

                if ($("#" + this.id).text() != '' && cnt != 0) {    // Modified By :- Sohel Pathan on 30/07/2014 for PL ticket #649
                    updateCountOnExpand($("#" + this.id), cnt);
                }
            });
        }
    }

    function iterateImprovementActivitiesOnExpand(id) {
        $("#DivAccordionImprovementActivities").find('span[id^="spnimprovement_"]').each(function (index1) {
            var tid = this.id.substring(this.id.indexOf('_') + 1);
            var cnt = 0;
            var child1 = gantt.getChildren(id);
            $.each(child1, function (index, value1) {
                if (value1.indexOf("M") > 0) {
                    var child1Visible = gantt.getTask(value1).$open;
                    if (typeof child1Visible != undefined) {
                        if (child1Visible == true) {
                            var a = gantt.getChildren(value1);
                            $("#accordion-element-improvement-" + tid).find('a[class^="accordion-inner"]').each(function (index2) {
                                var taskid = $(this).attr('taskid');
                                $.each(a, function (index, value) {
                                    if (id.substring(0, 1) == "Z") {
                                        if (value.indexOf(taskid) > 0) {
                                            cnt = cnt + 1;
                                        }
                                    }
                                    else {
                                        if (taskid == value) {
                                            cnt = cnt + 1;
                                        }
                                    }
                                });
                            });
                        }
                    }
                }
                if (id.substring(0, 1) == "Z") {
                    var child1Visible = gantt.getTask(value1).$open;
                    if (typeof child1Visible != undefined) {
                        if (child1Visible == true) {
                            var childInner = gantt.getChildren(value1);
                            $.each(childInner, function (indexInner, valueInner) {
                                var childVisibleInner = gantt.getTask(valueInner).$open;
                                if (typeof childVisibleInner != undefined) {
                                    if (childVisibleInner == true && valueInner.indexOf("M") > 0) {
                                        var a = gantt.getChildren(valueInner);
                                        $("#accordion-element-improvement-" + tid).find('a[class^="accordion-inner"]').each(function (index2) {
                                            var taskid = $(this).attr('taskid');
                                            $.each(a, function (index, value) {
                                                if (value.indexOf(taskid) > 0) {
                                                    cnt = cnt + 1;
                                                }
                                            });
                                        });
                                    }
                                }
                            });
                        }
                    }
                }
            });
            if ($("#" + this.id).text() != '' && cnt != 0) {    // Modified By :- Sohel Pathan on 30/07/2014 for PL ticket #649
                updateCountOnExpand($("#" + this.id), cnt);
            }
        });
    }

    //// Added by :- Sohel Pathan on 10/04/2014 for PL ticket #419 to display tactic count properly in left nav-menu
    function updateCountOnExpand(spanId, cnt) {
        var TotalCountText = ($(spanId).parent()).text();
        var TotalCount = parseInt((TotalCountText.substring(TotalCountText.indexOf('/') + 1)));
        var currentCount = parseInt(spanId.text());
        var sum = (currentCount + cnt);
        if (sum <= TotalCount) {
            spanId.text(sum);
        }
    };

    //// Modified By Maninder Singh Wadhva PL Ticket#47
    gantt.attachEvent("onTaskClosed", function (id) {

        //// Modified by :- Sohel Pathan on 10/04/2014 for PL ticket #419 to display tactic count properly in left nav-menu
        OnTaskCollapse(id)
        hoverRows();
        if (arrClosedTask.indexOf(id) == -1) {
            arrClosedTask.push(id);
        }

        // added by dharmraj to display tooltip on camp., prog., tactic name in calendar.
        $(".gantt_container .gantt_tree_content").each(function (index, element) {
            $(element).attr("title", htmlDecode(element.innerHTML));
        });


        $(".gantt_last_cell").dblclick(function (e) {
            e.stopPropagation();
        });

        $(".gantt_add").click(function (e) {
            var type = $(this).attr('id');
            var name = $(this).attr('Name');
            var title = $(this).attr('aria-label');
            var permission = $(this).attr('Permission');
            DisplayPopUpMenu(type, name, title, permission, e);

        });

        var $doc = $(document);
        $doc.click(function () {
            $('#popupType').css('display', 'none');
        });

        $(document).mouseup(function (e) {
            $('#popupType').css("display", "none");
        });
        $(".gantt_ver_scroll").scroll(function () {
            $('#popupType').css('display', 'none');
        });

    });

    //// Added by :- Sohel Pathan on 11/04/2014 for PL ticket #419 to display tactic count properly in left nav-menu
    function OnTaskCollapse(id) {
        //iterateMarketingActivitesOnCollapse(id);
    }

    function iterateMarketingActivitesOnCollapse(id) {
        if (id.substring(0, 1) == "C" || id.substring(0, 1) == "Z" || (id.substring(0, 1) == "L" && id.indexOf("M") <= 0)) {
            var intid = 0;
            if (id.indexOf("P") >= 0) {
                intid = id.substring(id.indexOf('P') + 1);
            }
            if (intid != 0) {
                //// Two levels Collapsing tabs for Program in all tabs
                $("#DivAccordionMarketingActivities").find('span[id^="spn_"]').each(function (index1) {
                    var tid = this.id.substring(this.id.indexOf('_') + 1);
                    var cnt = 0;
                    var a = gantt.getChildren(id);
                    $("#accordion-element-marketing-" + tid).find('a[class^="accordion-inner"]').each(function (index2) {
                        var taskid = $(this).attr('taskid');
                        $.each(a, function (index, value) {
                            if (taskid == value) {
                                cnt = cnt + 1;
                            }
                        });
                    });

                    updateTacticCountOnCollapse($("#" + this.id), cnt);
                });
            }
            else {
                //// Three levels Collapsing tabs  for Campaign in all tabs
                if (id.substring(0, 1) == "C") {
                    $("#DivAccordionMarketingActivities").find('span[id^="spn_"]').each(function (index0) {
                        var tid = this.id.substring(this.id.indexOf('_') + 1);
                        var cnt = 0;
                        var a = gantt.getChildren(id);
                        $.each(a, function (index1, value1) {
                            // Start - Modified By :- Sohel Pathan on 30/07/2014 for PL ticket #649
                            var childVisible = gantt.getTask(value1).$open;
                            if (typeof childVisible != undefined) {
                                if (childVisible == true) {
                                    var child = gantt.getChildren(value1);
                                    $("#accordion-element-marketing-" + tid).find('a[class^="accordion-inner"]').each(function (index2) {
                                        var taskid = $(this).attr('taskid');
                                        $.each(child, function (index3, value3) {
                                            if (taskid == value3) {
                                                cnt = cnt + 1;
                                            }
                                        });
                                    });
                                }
                            }
                            // End - Modified By :- Sohel Pathan on 30/07/2014 for PL ticket #649
                        });

                        updateTacticCountOnCollapse($("#" + this.id), cnt);
                    });
                }
                //// Three levels Collapsing tabs for Improvement Activities in Stage or customfield
                if ((id.substring(0, 1) == "Z") && (id.indexOf("L") > 0 && id.indexOf("M") > 0)) {
                    $("#DivAccordionImprovementActivities").find('span[id^="spnimprovement_"]').each(function (index1) {
                        var tid = this.id.substring(this.id.indexOf('_') + 1);
                        var cnt = 0;
                        var a = gantt.getChildren(id);
                        $("#accordion-element-improvement-" + tid).find('a[class^="accordion-inner"]').each(function (index2) {
                            var taskid1 = $(this).attr('taskid');
                            $.each(a, function (index, value) {
                                if (value.indexOf(taskid1) > 0) {
                                    cnt = cnt + 1;
                                }
                            });
                        });

                        if ($("#" + this.id).text() != '') {
                            var newCount = parseInt($("#" + this.id).text()) - cnt;
                            if (newCount >= 0) {
                                $("#" + this.id).text(newCount);
                            }
                        }
                    });
                }
                    //// Five levels Expanding tabs for Stage or customfield
                else if ((id.substring(0, 1) == "Z") && (id.indexOf("L") <= 0 && id.indexOf("M") <= 0)) {
                    $("#DivAccordionMarketingActivities").find('span[id^="spn_"]').each(function (index0) {
                        var tid = this.id.substring(this.id.indexOf('_') + 1);
                        var cnt = 0;
                        var childLevel5 = gantt.getChildren(id);
                        $.each(childLevel5, function (index1, value5) {
                            var childVisible5 = gantt.getTask(value5).$open;
                            if (typeof childVisible5 != undefined) {
                                if (childVisible5 == true && value5.indexOf("M") <= 0) {
                                    var a = gantt.getChildren(value5);
                                    $.each(a, function (index1, value1) {
                                        // Start - Modified By :- Sohel Pathan on 30/07/2014 for PL ticket #649
                                        var childVisibleMain = gantt.getTask(value1).$open;
                                        if (typeof childVisibleMain != undefined) {
                                            if (childVisibleMain == true && value1.indexOf("M") <= 0) {
                                                var b = gantt.getChildren(value1);
                                                $.each(b, function (index4, value4) {
                                                    var childVisible = gantt.getTask(value4).$open;
                                                    if (typeof childVisible != undefined) {
                                                        if (childVisible == true && value4.indexOf("M") <= 0) {
                                                            var child = gantt.getChildren(value4);
                                                            $("#accordion-element-marketing-" + tid).find('a[class^="accordion-inner"]').each(function (index2) {
                                                                var taskid = $(this).attr('taskid');
                                                                if (child.length > 0) {
                                                                    $.each(child, function (index3, value3) {
                                                                        if (taskid == value3) {
                                                                            cnt = cnt + 1;
                                                                        }
                                                                    });
                                                                }
                                                                else {
                                                                    if (taskid == value4) {
                                                                        cnt = cnt + 1;
                                                                    }
                                                                }
                                                            });
                                                        }
                                                    }
                                                });
                                            }
                                        }
                                        // End - Modified By :- Sohel Pathan on 30/07/2014 for PL ticket #649
                                    });
                                }
                            }
                        });
                        updateTacticCountOnCollapse($("#" + this.id), cnt);
                    });
                    iterateImprovementActivitiesOnCollapse(id);
                }
                    //// Four levels Collapsing tabs tabs for Plan
                else if ((id.substring(0, 1) == "Z" || id.substring(0, 1) == "L") && id.indexOf("M") <= 0) {
                    $("#DivAccordionMarketingActivities").find('span[id^="spn_"]').each(function (index0) {
                        var tid = this.id.substring(this.id.indexOf('_') + 1);
                        var cnt = 0;
                        var a = gantt.getChildren(id);
                        $.each(a, function (index1, value1) {
                            // Start - Modified By :- Sohel Pathan on 30/07/2014 for PL ticket #649
                            var childVisibleMain = gantt.getTask(value1).$open;
                            if (typeof childVisibleMain != undefined) {
                                if (childVisibleMain == true && value1.indexOf("M") <= 0) {
                                    var b = gantt.getChildren(value1);
                                    $.each(b, function (index4, value4) {
                                        var childVisible = gantt.getTask(value4).$open;
                                        if (typeof childVisible != undefined) {
                                            if (childVisible == true && value4.indexOf("M") <= 0) {
                                                var child = gantt.getChildren(value4);
                                                $("#accordion-element-marketing-" + tid).find('a[class^="accordion-inner"]').each(function (index2) {
                                                    var taskid = $(this).attr('taskid');
                                                    if (child.length > 0) {
                                                        $.each(child, function (index3, value3) {
                                                            if (taskid == value3) {
                                                                cnt = cnt + 1;
                                                            }
                                                        });
                                                    }
                                                    else {
                                                        if (taskid == value4) {
                                                            cnt = cnt + 1;
                                                        }
                                                    }
                                                });
                                            }
                                        }
                                    });
                                }
                            }
                            // End - Modified By :- Sohel Pathan on 30/07/2014 for PL ticket #649
                        });

                        updateTacticCountOnCollapse($("#" + this.id), cnt);
                    });
                    iterateImprovementActivitiesOnCollapse(id);
                }
            }
        }
            //// Two levels Expanding tabs for Improvent Activities in Tactic and Request Tab
            ////Modified By Maninder Singh Wadhva PL Ticket#47, 337
        else if (id.substring(0, 1) == "L" && id.indexOf("M") > 0) {
            $("#DivAccordionImprovementActivities").find('span[id^="spnimprovement_"]').each(function (index1) {
                var tid = this.id.substring(this.id.indexOf('_') + 1);
                var cnt = 0;
                var a = gantt.getChildren(id);
                $("#accordion-element-improvement-" + tid).find('a[class^="accordion-inner"]').each(function (index2) {
                    var taskid = $(this).attr('taskid');
                    $.each(a, function (index, value) {

                        if (taskid == value) {
                            cnt = cnt + 1;
                        }
                    });
                });

                if ($("#" + this.id).text() != '') {
                    var newCount = parseInt($("#" + this.id).text()) - cnt;
                    if (newCount >= 0) {
                        $("#" + this.id).text(newCount);
                    }
                }
            });
        }
    }

    function iterateImprovementActivitiesOnCollapse(id) {
        $("#DivAccordionImprovementActivities").find('span[id^="spnimprovement_"]').each(function (index1) {
            var tid = this.id.substring(this.id.indexOf('_') + 1);
            var cnt = 0;
            var child1 = gantt.getChildren(id);
            $.each(child1, function (index, value1) {
                if (value1.indexOf("M") > 0) {
                    var child1Visible = gantt.getTask(value1).$open;
                    if (typeof child1Visible != undefined) {
                        if (child1Visible == true) {
                            var a = gantt.getChildren(value1);
                            $("#accordion-element-improvement-" + tid).find('a[class^="accordion-inner"]').each(function (index2) {
                                var taskid = $(this).attr('taskid');
                                $.each(a, function (index, value) {
                                    if (id.substring(0, 1) == "Z") {
                                        if (value.indexOf(taskid) > 0) {
                                            cnt = cnt + 1;
                                        }
                                    }
                                    else {
                                        if (taskid == value) {
                                            cnt = cnt + 1;
                                        }
                                    }
                                });
                            });
                        }
                    }
                }
                if (id.substring(0, 1) == "Z") {
                    var child1Visible = gantt.getTask(value1).$open;
                    if (typeof child1Visible != undefined) {
                        if (child1Visible == true) {
                            var childInner = gantt.getChildren(value1);
                            $.each(childInner, function (indexInner, valueInner) {
                                var childVisibleInner = gantt.getTask(valueInner).$open;
                                if (typeof childVisibleInner != undefined) {
                                    if (childVisibleInner == true && valueInner.indexOf("M") > 0) {
                                        var a = gantt.getChildren(valueInner);
                                        $("#accordion-element-improvement-" + tid).find('a[class^="accordion-inner"]').each(function (index2) {
                                            var taskid = $(this).attr('taskid');
                                            $.each(a, function (index, value) {
                                                if (value.indexOf(taskid) > 0) {
                                                    cnt = cnt + 1;
                                                }
                                            });
                                        });
                                    }
                                }
                            });
                        }
                    }
                }
            });
            if ($("#" + this.id).text() != '') {
                var newCount = parseInt($("#" + this.id).text()) - cnt;
                if (newCount >= 0) {
                    $("#" + this.id).text(newCount);
                }
            }
        });
    }

    //// Added by :- Sohel Pathan on 10/04/2014 for PL ticket #419 to display tactic count properly in left nav-menu
    function updateTacticCountOnCollapse(spanId, cnt) {
        if (spanId.text() != '') {
            var TotalCountText = ($(spanId).parent()).text();
            var TotalCount = parseInt((TotalCountText.substring(TotalCountText.indexOf('/') + 1)));
            var currentCount = parseInt(spanId.text());
            var diff = (currentCount - cnt);
            if (diff >= 0) {
                spanId.text(diff);
            }
            else {
                spanId.text(TotalCount - cnt);
            }
        }
    };

    function modalBackdropDisplayNone() {
        setTimeout(function () {
            $('.modal-backdrop').each(function () {
                if (typeof ($(this).attr('id')) == 'undefined') {
                    $(this).attr("style", "display:none !important;");
                }
            });
        }, 500);
    };

    gantt.attachEvent("onTaskClick", function (id, e) {
        flg = false;
    });

    gantt.attachEvent("onTaskSelected", function (id, item) {
    });

</script>

<script>

    function hoverRows() {
        /*change hover envent on gantt rows to yellow banckgorund*/
        $('.gantt_row').hover(function () {
            $(this).css("background-color", "#fff3a1");
            var task_id = $(this).attr('task_id');
            $('.gantt_task_row').each(function () {
                if ($(this).attr('task_id') == task_id) {
                    $(this).css("background-color", "#fff3a1");
                }
            });
        }, function () {
            $(this).css("background-color", "#ffffff");
            var task_id = $(this).attr('task_id');
            $('.gantt_task_row').each(function () {
                if ($(this).attr('task_id') == task_id) {
                    $(this).css("background-color", "#ffffff");
                }
            });
        });
        /*change hover envent on gantt rows to yellow banckgorund*/
        $('.gantt_task_row').hover(function () {
            $(this).css("background-color", "#fff3a1");
            var task_id = $(this).attr('task_id');
            $('.gantt_row').each(function () {
                if ($(this).attr('task_id') == task_id) {
                    $(this).css("background-color", "#fff3a1");
                }
            });
        }, function () {
            $(this).css("background-color", "#ffffff");
            var task_id = $(this).attr('task_id');
            $('.gantt_row').each(function () {
                if ($(this).attr('task_id') == task_id) {
                    $(this).css("background-color", "#ffffff");
                }
            });
        });
    }

</script>

<script>
    var ImpTacticId;
    $(document).ready(function () {
        function toggleChevron(e) {
            $(e.target)
				.prev('.accordion-heading')
				.find("i.indicator")
				.toggleClass('glyphicon-chevron-down glyphicon-chevron-up');
        }
        $('.accordion').on('hidden.bs.collapse', toggleChevron);
        $('.accordion').on('shown.bs.collapse', toggleChevron);

        if ($('#ddlUpComingActivites').val() != 'undefined') {
            Currenttime = $('#ddlUpComingActivites').val();
            isQuater = Currenttime;
        }
    });


    function RefershPlanHeaderCalc() {
        var Currenttime = $('#ddlUpComingActivites').val();
        var SelectedPlanIds = $('#hdnSelectedPlanIds').val();
        GetHealderData(SelectedPlanIds);
        GetNumberOfActivityPerMonByPlanId(SelectedPlanIds, Currenttime);
    }

    $('#errorMessageInspectPopup .close').click(function () {
        $('#content_wraper').removeClass('padding-top40');
    });


    //Added By Ravindra Singh Sisodiya
    // Ticket #1411 
    function displayconfirm(strURL) {
        if (isDataChanged()) {
            $('#spanMessageError').html(" You have unsaved changes. Do you wish to leave this page and lose your work?&nbsp;&nbsp;&nbsp;&nbsp;<a style='color:gray;' href='" + strURL + "' class='btn-gray'>Continue</a>&nbsp;&nbsp;<a style='color:gray;' id='confirmClose' href='#' class='underline'>Cancel</a>");
            $("#errorMessage").slideDown(400);
        }
        else {
            window.location.href = strURL;
        }
    }

    //function to check myValue attribute values and input values that any changes made?
    function isDataChanged() {
        var changed = false;
        $('.accordion-actuals').find("input,input[type=text],textarea,select").each(function () {
            var iv = $(this).attr("myValue");
            if ($(this).val().toString().trim() != iv.toString().trim()) {
                changed = true;
                return false;
            }
        });
        return changed;
    }

    function HideAllMessages() {
        $("#successMessagePlan").css("display", "none");
        $("#spanSuccMessagePlan").empty();
        $("#errorMessagePlan").css("display", "none");
        $("#spanErrMessagePlan").empty();
        $("#successMessage").css("display", "none");
        $("#spanMessageSuccess").empty();
        $("#errorMessage").css("display", "none");
        $("#spanMessageError").empty();
    }



    function DisplayPopUpMenu(typeVal, nameVal, titleVal, permission, e) {

        var type = typeVal;
        var name = nameVal;
        // var chk_permission = titleVal.split("/");
        var title = titleVal;
        var permission = permission;
        var name_Id = name.split("_");

        var PlanId;
        var CampaignId;
        var ProgramId;
        var TacticId;
        var ImpTacticId;

        if (name_Id.length == 1) {
            PlanId = name_Id[0].replace("L", "");
        }
        else if (name_Id.length == 2) {
            PlanId = name_Id[0].replace("L", "");
            CampaignId = name_Id[1].replace("C", "");
        }
        else if (name_Id.length == 3) {
            PlanId = name_Id[0].replace("L", "");
            CampaignId = name_Id[1].replace("C", "");
            ProgramId = name_Id[2].replace("P", "");
        }
        else {
            PlanId = name_Id[0].replace("L", "");
            CampaignId = name_Id[1].replace("C", "");
            ProgramId = name_Id[2].replace("P", "");
            TacticId = name_Id[3].replace("T", "");
        }

        var ul;
        if (type == "Plan") {
            if (permission == "true") {
                ul = "<ul style='margin: 0;'>  <li class='new-prog' id='NewPlan'>New Plan </li> <li class='new-prog' id='ClonePlan1'>Copy Plan</li>  <li class='new-prog' id='ChildCampaign'>Child Campaign</li> </ul>";
            }
            else {
                $('#popupType').css('display', 'none');
            }
        }

        else if (type == "Program") {
            if (permission == "true") {
                ul = "<ul style='margin: 0;'>  <li class='new-prog' id='NewProgram'>New Program </li> <li class='new-prog' id='CloneProgram1'>Copy Program </li>  <li class='new-prog' id='ChildTactic'>Child Tactic</li> </ul>";
            }
            else {
                $('#popupType').css('display', 'none');
            }
        }

        else if (type == "Tactic") {
            if (permission == "true") {
                ul = "<ul style='margin: 0;'>  <li class='new-prog' id='NewTactic1'>New Tactic </li> <li class='new-prog' id='CloneTactic1'>Copy Tactic </li>  <li class='new-prog' id='ChildLineItem'>Child Line Item </li> </ul>";
            }
            else {
                $('#popupType').css('display', 'none');
            }
        }

        else if (type == "Campaign") {
            if (permission == "true") {
                ul = "<ul style='margin: 0;'>  <li class='new-prog' id='NewCampaign'>New Campaign</li> <li class='new-prog' id='CloneCampaign1'>Copy Campaign</li>  <li class='new-prog' id='ChildProgram'>Child Program</li> </ul>";
            }
            else {
                $('#popupType').css('display', 'none');
            }
        }

        else {
            if (permission == "true") {
                ul = "<ul style='margin: 0;'>  <li class='new-prog' id='ImpsTactic'>New " + type + "</li> </ul>";
            }
            else {
                $('#popupType').css('display', 'none');
            }
            if (name_Id.length != 1 && name_Id.length != 0) {
                ImpTacticId = name_Id[1].replace("M", "");
            }
        }

        $('#popupType').css('display', 'none');
        $('#popupType').html(ul);
        var left = e.pageX;
        var target = $(e.target);
        var targetOffset = target.offset().top;
        var scrollPosition = $(window).scrollTop();

        if ($('#popupType').css('display') == 'none') {
            if (scrollPosition <= targetOffset) {
                $('#popupType').css({
                    'display': 'block',
                    'top': targetOffset,
                    'left': left,
                });
            }
            else {
                var targetHeight = target.height();
                var contentHeight = $('#popupType').outerHeight();
                var targetBottomOffset = targetOffset + targetHeight - contentHeight;
                $('#popupType').css({
                    'display': 'block',
                    'top': targetBottomOffset,
                    'left': left,
                });
            }
        }
        else {
            $('#popupType').css('display', 'none');
        }
        e.stopPropagation();

        ////new Plan.
        $("#NewPlan").click(function (e) {
            var url = '@Url.Action("CreatePlan", "Plan")';
            displayconfirm(url);
        });

        ////Copy Plan.
        $('#ClonePlan1').click(function () {
            var planId = PlanId; //$("#hdnPlanId").val();
            if (parseInt(planId) > 0) {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Content("~/Plan/Clone")',
                    data: {
                        CloneType: '@Enums.DuplicationModule.Plan',
                        Id: PlanId,
                        title: ''
                    },
                    success: function (data) {
                        if (data.returnURL != 'undefined' && data.returnURL == '#') {
                            window.location = '@Url.Content("~/Login/Index")';
                        }
                        else {
                            if (data.redirect) {
                                $("#successMessage").css("display", "block");
                                $("#spanMessageSuccess").empty();
                                $("#spanMessageSuccess").text(data.msg);

                                window.location = data.redirect;
                                //  RefreshCurrentTab();
                                return;
                            }
                            if (data.errormsg != '') {
                                $('#cErrorDuplicatePlan').html('<strong>Error! </strong> ' + $('#cErrorDuplicatePlan').html());
                                return;
                            }
                        }
                    }
                });
            }
        });

        //Child Campaign
        $('#ChildCampaign').click(function () {
            var planId = PlanId; // $("#hdnPlanId").val(); 
            ShowModels("@Enums.InspectPopupMode.Add.ToString()", "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Campaign).ToLower()", 0, planId, '@RequestedModule');
            $('.taskpopup').css('display', 'none');
        });

        //new Campaign
        $('#NewCampaign').click(function () {
            var planId = PlanId; // $("#hdnPlanId").val();
            ShowModels("@Enums.InspectPopupMode.Add.ToString()", "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Campaign).ToLower()", 0, planId, '@RequestedModule');
            $('.taskpopup').css('display', 'none');
        });

        ////Copy Campaign.
        $('#CloneCampaign1').click(function () {
            var idPlanCamaign = CampaignId;//$("#hdnPlanCampaignId").val();
            var Title = title;//$("#lblCampaignTitle").html();
            $.ajax({
                type: 'POST',
                url: '@Url.Content("~/Inspect/Clone")',
                data: {
                    CloneType: '@Enums.DuplicationModule.Campaign',
                Id: idPlanCamaign,
                title: Title,
                CalledFromBudget: '@CalledFromBudget',
                RequsetedModule: '@RequestedModule',
                planId: PlanId
            },
                success: function (data) {
                    if (data.IsSuccess != 'undefined' && data.IsSuccess == '#') {
                        window.location = '@Url.Content("~/Login/Index")';
                }
                else if (data.IsSuccess) {
                    RefreshCurrentTab();
                    ShowMessage(isError, data.msg);
                    return;
                }
                else {
                    isError = true;
                    ShowMessage(isError, data.msg);
                    return false;
                }
            }
            });
        });

        //Child Program
    $('#ChildProgram').click(function () {
        ShowModels("@Enums.InspectPopupMode.Add.ToString()", "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Program).ToLower()", 0, CampaignId, '@RequestedModule');
        $('.taskpopup').css('display', 'none');
    });

        //New Program
    $('#NewProgram').click(function () {
        ShowModels("@Enums.InspectPopupMode.Add.ToString()", "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Program).ToLower()", 0, CampaignId, '@RequestedModule');
        $('.taskpopup').css('display', 'none');
    });

        //Copy Program
    $('#CloneProgram1').click(function () {
        var idPlanProgram = ProgramId;// $("#hdnPlanProgramId").val();
        var Title = title;// $("#lblProgramTitle").html();
        $.ajax({
            type: 'POST',
            url: '@Url.Content("~/Inspect/Clone")',
            data: {
                CloneType: '@Enums.DuplicationModule.Program',
                Id: idPlanProgram,
                title: Title,
                CalledFromBudget: '@CalledFromBudget',
                RequsetedModule: '@RequestedModule'
            },
            success: function (data) {
                if (data.IsSuccess != 'undefined' && data.IsSuccess == '#') {
                    window.location = '@Url.Content("~/Login/Index")';
                }
                else if (data.IsSuccess) {
                    RefreshCurrentTab();
                    ShowMessage(isError, data.msg);
                    return;
                }
                else {
                    isError = true;
                    ShowMessage(isError, data.msg);
                    return false;
                }
            }
        });
    });

        //Child Tactic
    $("#ChildTactic").on("click", function () {
        ShowModels("@Enums.InspectPopupMode.Add.ToString()", "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Tactic).ToLower()", 0, ProgramId, '@RequestedModule');
        $("#errorMessage").css("display", "none");
        $("#successMessage").css("display", "none");
        $('.taskpopup').css('display', 'none');
        return false;
    });

        //New Tactic
    $("#NewTactic1").on("click", function () {
        ShowModels("@Enums.InspectPopupMode.Add.ToString()", "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Tactic).ToLower()", 0, ProgramId, '@RequestedModule');
        $("#errorMessage").css("display", "none");
        $("#successMessage").css("display", "none");
        $('.taskpopup').css('display', 'none');
        return false;
    });

        //Copy Tactic
    $('#CloneTactic1').click(function () {
        var idPlanTactic = TacticId;// $("#hdnPlanTacticId").val();
        var Title = title;// $("#lblTacticTitle").html();
        $.ajax({
            type: 'POST',
            url: '@Url.Content("~/Inspect/Clone")',
            data: {
                CloneType: '@Enums.DuplicationModule.Tactic',
                Id: idPlanTactic,
                title: Title,
                CalledFromBudget: '@CalledFromBudget',
                RequsetedModule: '@RequestedModule'
            },
            success: function (data) {
                if (data.IsSuccess != 'undefined' && data.IsSuccess == '#') {
                    window.location = '@Url.Content("~/Login/Index")';
                }
                else if (data.IsSuccess) {
                    RefreshCurrentTab();
                    ShowMessage(isError, data.msg);
                    return;
                }
                else {
                    isError = true;
                    ShowMessage(isError, data.msg);
                    return false;
                }
            }
        });
    });

        //Child Line Item
    $('#ChildLineItem').click(function () {
        ShowModels("@Enums.InspectPopupMode.Add.ToString()", "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.LineItem).ToLower()", 0, TacticId, '@RequestedModule');
        $('.taskpopup').css('display', 'none');
    });

        //Improvments Tactic
    $('#ImpsTactic').click(function (e) {
        var improvementTacticId = ImpTacticId;
        e.stopPropagation();
        $.ajaxSetup({ cache: false });
        var idTactic = "0";//$(this).parent().attr("index");

        if (idTactic == 0) {
            $("a#divimpTactic").removeClass('1');
            $(this).parent().addClass('1');
        }
        displayConfirmCommon('impTacticCommonClick(' + idTactic + ',' + improvementTacticId + ');');
        $('.taskpopup').css('display', 'none');
    });

    function displayConfirmCommon(functionName) {
        eval(functionName);

    }

}
//Dharmraj Start 8July2014 Common function to handle tactic click event
function impTacticCommonClick(id, improvementTacticId) {
    if (id == 0) {
        var idProgram = improvementTacticId;// $("a#divimpTactic.1").attr('data-id-program');
        ShowModels("@Enums.InspectPopupMode.Add.ToString()", "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.ImprovementTactic).ToLower()", 0, idProgram, '@Enums.InspectPopupRequestedModules.Index.ToString()');
        return false;
    }
    else {
        ShowModels("@Enums.InspectPopupMode.ReadOnly.ToString()", "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.ImprovementTactic).ToLower()", id, idProgram, '@Enums.InspectPopupRequestedModules.Index.ToString()');
        return false;
    }
}

function ShowModels(mode, section, id, ParentId, RequestedModule) {
    removeDefaultModalPopupBackgroungColor();
    modalFullPosition(); // Added by Kapil Antala on 17 Sep 2014 for #732 - new popup design

    $('.modal-backdrop').addClass('modalFull-backdrop');
    $('.modal-backdrop').attr("style", "display:none !important;");
    $("#successMessage").css("display", "none");
    $("#errorMessage").css("display", "none");
    $("#successMessageDuplicatePlan").css("display", "none");
    $("#modal-container-186470").modal('show');
    ParentId = typeof ParentId != 'undefined' ? ParentId : '0';
    RequestedModule = typeof RequestedModule != 'undefined' ? RequestedModule : '';

    $("#hdnRequestedModule").val(RequestedModule);
    var currentTab = "Setup";
    if ((RequestedModule == "Budgeting") && (mode == "ReadOnly")) {
        currentTab = "Budget";
    }

    if (section == "campaign") {
        if (mode == "Add") {
            loadInspectPopup("0", "campaign", currentTab, "Add", ParentId, RequestedModule);
        }
        else {
            loadInspectPopup(id, "campaign", currentTab, "ReadOnly", ParentId, RequestedModule);
        }
    }
    else if (section == "program") {
        if (mode == "Add") {
            loadInspectPopup("0", "program", currentTab, "Add", ParentId, RequestedModule);
        }
        else {
            loadInspectPopup(id, "program", currentTab, "ReadOnly", ParentId, RequestedModule);
        }
    }
    else if (section == "tactic") {
        if (mode == "Add") {
            loadInspectPopup("0", "tactic", currentTab, "Add", ParentId, RequestedModule);
        }
        else {
            loadInspectPopup(id, "tactic", currentTab, "ReadOnly", ParentId, RequestedModule);
        }
    }
    else if (section == "improvementtactic") {
        if (mode == "Add") {
            loadInspectPopup(0, "improvementtactic", currentTab, "Add", ParentId, RequestedModule);
        }
        else {
            loadInspectPopup(id, "improvementtactic", currentTab, "ReadOnly", ParentId, RequestedModule);
        }
    }
    else if (section == "lineitem") {
        if (mode == "Add") {
            loadInspectPopup("0", "lineitem", currentTab, "Add", ParentId, RequestedModule);
        }
        else {
            loadInspectPopup(id, "lineitem", currentTab, "ReadOnly", ParentId, RequestedModule);
        }
    }
    else if (section == "plan") {
        if (mode == "Add") {
            loadInspectPopup("0", "plan", currentTab, "Add", ParentId, RequestedModule);
        }
        else {
            loadInspectPopup(id, "plan", currentTab, "ReadOnly", ParentId, RequestedModule);
        }
    }
    modalBackdropDisplayNone();
};

</script>
<script>
    $('.sidebar-toogle a').toggle(


function () {
    $('#sidebar').css({
        'position': 'relative',
        'left': 'auto',
        'width': '50px',
        'background': 'transparent',

    });
    $(".sidebar-toogle-wrapper h4.text-shadow-black").css("display", "none");
    $(".sidebar-section").css("display", "none");
    $('.sidebar-toogle a').html(">>").css('letter-spacing', '-1px');

    $(".wraper-btns").css("display", "none");
    $("#content_wraper").css('width', 'calc(100% - 50px)');
    $('#sidebar.sidebar').css({ 'width': '50px', 'background': 'transparent', });
    $('.sidebar-toogle').css('border-bottom-width', '0');

    ///new code  
    var ganttwidth = $("#gantt_here").width();
    var totalWidth = ganttwidth - 230;
    gantt._render_tasks_scales(totalWidth);
    $('#gantt_hor_scroll').attr('style', 'Width: 1453px;');

    $(".gantt_last_cell").dblclick(function (e) {
        e.stopPropagation();
    });

    $(".gantt_last_cell").click(function (e) {
        e.stopPropagation();
    });

    $(".gantt_add").click(function (e) {

        var type = $(this).attr('id');
        var name = $(this).attr('Name');
        var title = $(this).attr('aria-label');
        var permission = $(this).attr('Permission');
        DisplayPopUpMenu(type, name, title, permission, e);

    });

    var $doc = $(document);
    $doc.click(function () {
        $('#popupType').css('display', 'none');
    });

    $(document).mouseup(function (e) {
        $('#popupType').css("display", "none");
    });
    $(".gantt_ver_scroll").scroll(function () {
        $('#popupType').css('display', 'none');
    });
    if (activeMenu == '@Enums.ActiveMenu.Plan.ToString().ToLower()') {
        if (document.getElementById("liGrid").className.indexOf("active") >= 0) {
            var ganttwidth = $("#gridbox").width();
            var totalWidth = ganttwidth + 230;
            ResizeGrid(totalWidth);
        }
    }

}, function () {
    $('#sidebar').css({
        'position': 'static',
        'left': 'auto',
        'background': '#e9e9e9 none repeat scroll 0 0',
        'width': '280px',

    });
    $('.sidebar-toogle a').html("<< hide").css('letter-spacing', '0px');
    $(".sidebar-toogle-wrapper h4.text-shadow-black").css("display", "block");
    $(".sidebar-section").css("display", "block");
    $(".wraper-btns").css("display", "block");
    $("#content_wraper").css('width', 'calc(100% - 280px)');
    $('#sidebar.sidebar').css({ 'width': '280px', 'background': '#e9e9e9 none repeat scroll 0 0', });
    $('.sidebar-toogle').css('border-bottom-width', '1px');

    ///new code  
    var ganttwidth = $("#gantt_here").width();
    var totalWidth = ganttwidth - 230;
    gantt._render_tasks_scales(totalWidth);

    $('#gantt_hor_scroll').attr('style', 'Width: 1483px;');

    $(".gantt_last_cell").dblclick(function (e) {
        e.stopPropagation();
    });

    $(".gantt_last_cell").click(function (e) {
        e.stopPropagation();
    });

    $(".gantt_add").click(function (e) {

        var type = $(this).attr('id');
        var name = $(this).attr('Name');
        var title = $(this).attr('aria-label');
        var permission = $(this).attr('Permission');
        DisplayPopUpMenu(type, name, title, permission, e);

    });

    var $doc = $(document);
    $doc.click(function () {
        $('#popupType').css('display', 'none');
    });

    $(document).mouseup(function (e) {
        $('#popupType').css("display", "none");
    });
    $(".gantt_ver_scroll").scroll(function () {
        $('#popupType').css('display', 'none');
    });
    if (activeMenu == '@Enums.ActiveMenu.Plan.ToString().ToLower()') {
        if (document.getElementById("liGrid").className.indexOf("active") >= 0) {
            var ganttwidth = $("#gridbox").width();
            var totalWidth = ganttwidth - 230;
            ResizeGrid(totalWidth);
        }
    }
})

function DisplayEditablePopup(id) {
    ShowModel(id, null);
}

</script>
