@model RevenuePlanner.Models.HomePlanModel
@using RevenuePlanner.Helpers
@{
    ViewBag.Title = ViewBag.ActiveMenu;
    string activeMenu = Convert.ToString(ViewBag.ActiveMenu);
    string isViewOnly = ViewBag.IsViewOnly;
    int showInspectForPlanTacticId = ViewBag.ShowInspectForPlanTacticId;
    int showInspectForPlanCampaignId = ViewBag.ShowInspectForPlanCampaignId; // variable added to show campagin popup from email url link click when email sent to user when comapign shared
    int showInspectForPlanProgramId = ViewBag.ShowInspectForPlanProgramId; // variable added to show program popup from email url link click when email sent to user when program shared
    bool showBid = ViewBag.showBid;
    //// Modified By Maninder Singh Wadhva PL Ticket#47
    bool isImprovement = Convert.ToBoolean(ViewBag.IsImprovement);
    int CurrentPlanId = Sessions.PlanId;/*changed by Nirav for plan consistency on 14 apr 2014*/

}

@Html.Hidden("IsViewOnly", isViewOnly)
@Html.Hidden("hdnshowInspectForPlanTacticId", showInspectForPlanTacticId)
@Html.Hidden("hdnshowInspectForPlanCampaignId", showInspectForPlanCampaignId)
@Html.Hidden("hdnshowInspectForPlanProgramId", showInspectForPlanProgramId)
@Html.Hidden("showBid", showBid)
<!--Modified By Maninder Singh Wadhva PL Ticket#47-->
@Html.Hidden("hdnIsImprovement", isImprovement)
@Html.Hidden("CurrentPlanId", CurrentPlanId)


<script type="text/javascript" src="@Url.Content("~/Scripts/dhtmlxchart.js")"></script>
<link href="@Url.Content("~/Content/css/dhtmlxchart_1.css")" rel="stylesheet" type="text/css" />

<style type="text/css">
    .pull-right > span {
        margin-right: -15px !important;
    }

    .dhx_chart {
        color: #000000;
        font-family: 'source_sans_prolight',Arial,"sans-serif";
        font-size: 9px;
    }
</style>
@section nlFormContent{
    <link rel="stylesheet" href="@Url.Content("~/Content/css/NaturalLanguageForm/default.css")" type="text/css" />
    <link rel="stylesheet" href="@Url.Content("~/Content/css/NaturalLanguageForm/component.css")" type="text/css" />
    <script type="text/javascript" src="@Url.Content("~/Scripts/js/NaturalLanguageForm/modernizr.custom.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/js/NaturalLanguageForm/nlform.js")"></script>
}
@Html.Hidden("ActiveMenu", activeMenu)
@Html.HiddenFor(m => m.PlanId)
@section Sidebar{
    <script type="text/javascript">
        var CurrentBid = 0;
        // Edited to add PlanYear option.
        var Currenttime = "planYear";
        $(document).ready(function () {
            var isRender;       //// Added by :- Sohel Pathan on 10/04/2014 for PL ticket #419 to display tactic count properly in left nav-menu
            var individualClick = false;    //// Added By :- Sohel Pathan on 17/04/2014 for PL ticket #428 to fill filteredIndividuals list according to plan selected.
            //Added by Nirav for Custom Dropdown - 388
            var showBid = $('#showBid').val();
            if (showBid == 'True') {
                var id = $('#ddlBusinessUnit').val();
                $('#DivloadPlan').load('@Url.Action("HomePlan", "Home")' + '?Bid=' + id + '&currentPlanId=' + pid + '&activeMenu=' + $('#ActiveMenu').val());//activeMenu parameter added
            }
            else {
                $('#DivloadPlan').load('@Url.Action("HomePlan", "Home")' + '?Bid=false&currentPlanId=' + pid + '&activeMenu=' + $('#ActiveMenu').val());//activeMenu parameter added
            }
            //  $('#DivloadPlan').load('@Url.Action("HomePlan", "Home")' + '?Bid=false&currentPlanId=' + pid + '&activeMenu=' + $('#ActiveMenu').val());//activeMenu parameter added
            switch ($('#ActiveMenu').val().toLowerCase()) {
                case 'home':
                    $("#DivButtonsHome").show();
                    $("#DivButtonsPlanSummary").hide();
                    break;
                case 'plan':
                    $("#DivButtonsHome").hide();
                    $("#DivButtonsPlanSummary").show();
                    break;
            }
            $("#modalMainContainer").hide();
            //onClickPlanTitle();
            onClickActivity();
            //  onClickBusinessUnit();//Added by Nirav for Custom Dropdown - 388

            //// Start - Added by Sohel on 12/05/2014 for PL #425 to Show status of tactics on Home and Plan screen
            $('.toggleStatus').click(function () {
                $(this).hide();
                $('.toggle-status div').show();
                showTacticStatus = true;
                RefreshCurrentTab();
                gantt.refreshData();
            });

            $('.toggleStatusHide').click(function () {
                $('.toggleStatus').show();
                $('.toggle-status div').hide();
                showTacticStatus = false;
                RefreshCurrentTab();
                gantt.refreshData();
            });
            //// End - Added by Sohel on 12/05/2014 for PL #425 to Show status of tactics on Home and Plan screen
        });
        function populateNF(items, id) {
            var $dropdown = $("#" + id);
            var $html = '';
            if (items.length > 0) {
                $.each(items, function (index, plan) {
                    if (plan.Selected) {
                        $html += '<option value="' + plan.Value + '" selected>' + plan.Text + '</option>';
                        CurrentPlanId = plan.Value;
                        $("#CurrentPlanId").val(CurrentPlanId);
                    } else {
                        $html += '<option value="' + plan.Value + '">' + plan.Text + '</option>';
                    }
                });
            } else {
                $html += '<option value=' + 0 + ' selected>' + "Plan Title" + '</option>';
                CurrentPlanId = 0;
                $("#CurrentPlanId").val(CurrentPlanId);
            }
            $dropdown.append($html);
        }
        function onClickPlanTitle() {
            $('#nl-form2 > div[class="nl-field nl-dd"]').find('li').click(function (e) {
                // Comment by bhavesh , Now we can use direct value for nl form dropdown
                // PL Ticket 399
                // Date : 28-3-2014
                //var planTitle = $(this).text();
                //var option = $.grep($('#dropdown-plan-title option'), function (value) { return $(value).text() == planTitle; })
                CurrentPlanId = $(this).attr('value');
                $("#CurrentPlanId").val(CurrentPlanId);
                //// Modified By Maninder Singh Wadhva to Address PL#203
                ShowChangeLog();
                GetCollaborators(CurrentPlanId);
                filters.IndividualsIds = [];    //// Added By :- Sohel Pathan on 16/04/2014 for PL ticket #428 to fill filteredIndividuals list according to plan selected.
                RefreshCurrentTab();
                GetHealderData(CurrentPlanId);
                GetNumberOfActivityPerMonByPlanId(CurrentPlanId, isQuater);
                //GetIndividualsForFilter(parseInt(CurrentPlanId));   //// Added By :- Sohel Pathan on 14/04/2014 for PL ticket #428 to fill filteredIndividuals list according to plan selected.
                arrClosedTask = []; // addded by dharmraj for ticket #485 to clear closed task veriable on plan change.
            });
        }

        //// Added By :- Sohel Pathan on 14/04/2014 for PL ticket #428 to fill filteredIndividuals list according to plan selected.
        function GetIndividualsForFilter(CurrentPlanId) {
            $.ajax({
                type: "GET",
                cache: false,
                url: '@Url.Action("GetIndividualsForFilter", "Home")',
                data: {
                    PlanId: CurrentPlanId,
                    Type: type,                             //// Added by :- Sohel Pathan on 17/04/2014 for PL ticket #428 to disply users in individual filter according to selected plan and status of tactis 
                    activeMenu: $('#ActiveMenu').val()      //// Added by :- Sohel Pathan on 17/04/2014 for PL ticket #428 to disply users in individual filter according to selected plan and status of tactis 
                },
                dataType: "json",
                success: function (data) {
                    if (data != null || typeof data != 'undefined') {
                        //// Added by :- Sohel Pathan on 17/04/2014 for PL ticket #428 to disply users in individual filter according to selected plan and status of tactis 
                        var a = $('#accordion-filterIndividuals');
                        if (a.length == 0) {
                            $('#individualFilter').append('<div id="accordion-filterIndividuals" class="accordion-body collapse"></div>');
                        }
                        ////

                        $('#accordion-filterIndividuals').empty();

                        $('#individualFilterdiv').find("a").removeClass('chevron-down');
                        $('#individualFilterdiv').find("a").removeClass('chevron-right');
                        $('#individualFilterdiv').find("a").removeClass('collapsed');
                        $('#individualFilterdiv').find("a").removeAttr("href");

                        if (data.individualsList.length > 0) {
                            $("#accordion-filterIndividuals").removeClass("in");
                            $("#accordion-filterIndividuals").css("height", "0px")
                            $('#individualFilterdiv').find("a").addClass('collapsed');
                            $('#individualFilterdiv').find("a").addClass('chevron-right');

                            $('#individualFilterdiv').find("a").attr("href", "#accordion-filterIndividuals");
                            $.each(data.individualsList, function (index, obj) {
                                $('#accordion-filterIndividuals').append('<a href="#" class="accordion-inner" filterId=' + obj.UserId + '>' + obj.FirstName + ', ' + obj.LastName + '<span class="pull-right"></span></a>');
                            });
                            $("#accordion-filterIndividuals").find("a").click(ApplyOrRemoveFilter);
                        }
                        else {
                            $('#individualFilterdiv').find("a").attr("href", "#");
                        }
                    }
                }
            });
        };
        ////

        function populateNFActivity(items, id) {
            var $dropdown = $("#" + id);
            var $html = '';
            if (items.length > 0) {
                $.each(items, function (index, time) {

                    if (time.Selected) {
                        $html += '<option value="' + time.Value + '" selected>' + time.Text + '</option>';
                        Currenttime = time.Value;
                    } else {
                        $html += '<option value="' + time.Value + '">' + time.Text + '</option>';
                    }
                });
            }
            $dropdown.append($html);
        }
        function onClickActivity() {
            $('#nl-formAct > div[class="nl-field nl-dd"]').find('li').click(function (e) {
                if (CurrentPlanId > 0) {
                    var Title = $(this).text();
                    var option = $.grep($('#drpthisyear option'), function (value) { return $(value).text() == Title; })
                    Currenttime = $(option[0]).val();
                    isQuater = Currenttime;
                    RefreshCurrentTab();
                    GetHealderData(CurrentPlanId);
                    GetNumberOfActivityPerMonByPlanId(CurrentPlanId, Currenttime);

                }
            });
        }
        //Added by Nirav for Custom Dropdown - 388
        @*function addBusinessUnitItems(items, id) {
            var $dropDown = $('#dropdown-business-unit ul');
            var $html = "";
            $('#dropdown-business-unit > ul > li').remove();//first clear menu
            if (typeof items != 'undefined') {
                if (typeof items.length) {
                    for (i in items) {
                        $html += '<li id=' + items[i].Value + '><a id="option" name=' + items[i].Value + ' href="#">' + items[i].Text + '</a></li>';
                    }
                    $dropDown.append($html);
                }
                else {
                    $html += '<li id=0><a href="#">Nothing to load</a></li>';
                    $dropDown.append($html);
                }
            }
        }
        function onClickBusinessUnit() {
            $('#dropdown-business-unit').find('a#option').click(function (e) {
                e.stopPropagation();
                e.preventDefault();
                var Title = $(this).text();
                var id = $(this).attr("name");
                $("#selected-option").html('');
                $("#selected-option").html(Title);
                $("#DivloadPlan").html('');
                var pid = $('#PlanId').val();
                $('#DivloadPlan').load('@Url.Action("HomePlan", "Home")' + '?Bid=' + id + '&currentPlanId=' + pid + '&activeMenu=' + $('#ActiveMenu').val()); //activeMenu parameter added
            });
        }*@

    </script>

    <div class="padding-content padding-bottom0" id="DivButtonsHome">
        <h4 class="text-shadow-black source-sans-prolight">Planning Review</h4>
        @if (isViewOnly != "true")
        {
            <div class="wraper-btns cf">
                <div class="span6">
                    <button class="btn btn-blue text-shadow-blue source-sans-proregular" type="button" onclick="window.location.href='@Url.Action("AddActual", "Home")'">Add Actuals</button>
                </div>
                <div class="span6">
                    <!-- change by kunal for edit plan  -->
                    <!-- start -->
                    @{
                        
            if (Model.PlanId != null)
            {
                int pid = Model.PlanId;
                if (CurrentPlanId != 0)
                {
                    CurrentPlanId = 0;
                }
                //int.TryParse(Convert.ToString(RevenuePlanner.Helpers.Sessions.PlanId), out pid);
                //    <button class="btn btn-blue text-shadow-blue source-sans-proregular" type="button" onclick="window.location.href='@Url.Action("Create", "Plan", new { id = pid })'">Edit Plan</button>
                        <button class="btn btn-blue text-shadow-blue source-sans-proregular" type="button" onclick="EditPlan()">Edit Plan</button>/*changed by Nirav for plan consistency on 14 apr 2014*/
            }
            else
            {
                if (CurrentPlanId != 0)
                {
                    CurrentPlanId = 0;
                }
                        <button class="btn btn-blue-disable text-shadow-blue source-sans-proregular" type="button">Edit Plan</button>
            }
                    }
                    <!-- end -->
                </div>
            </div>
        }
    </div>

    <div class="padding-content padding-bottom0" id="DivButtonsPlanSummary">
        <h4 class="text-shadow-black source-sans-prolight">Plan Summary</h4>
        @if (isViewOnly != "true")
        {
            <div class="wraper-btns cf">
                <div class="span6">
                    <div class="btn-group ">
                        <button id="BtnGroup" class="btn btn-blue text-shadow-blue source-sans-proregular buttom-width resize-drop-button without-border-buttom displayinherit   source-sans-prolight width90px">
                            New Plan
                        </button>
                        <button data-toggle="dropdown" class="btn btn-blue dropdown-toggle height25 displayinherit width19px">
                            <span class="caret"></span>
                        </button>
                        <ul class="dropdown-menu source-sans-prolight">
                            <li>
                                <a href="#">Create New</a>
                            </li>
                            <li>
                                <a href="#">Duplicate</a>
                            </li>
                        </ul>
                    </div>
                </div>
                <div class="span6">
                    <!-- change by kunal for edit plan - 01-17-2012 -->
                    <!-- start -->
                    @{
            if (Model.PlanId != null)
            {
                int pid = Model.PlanId;
                //int.TryParse(Convert.ToString(RevenuePlanner.Helpers.Sessions.PlanId), out pid);
                        <button class="btn btn-blue text-shadow-blue source-sans-proregular" type="button" onclick="window.location.href='@Url.Action("Create", "Plan", new { id = pid })'">Edit Plan</button>
            }
            else
            {
                        <button class="btn btn-blue-disable text-shadow-blue source-sans-proregular" type="button">Edit Plan</button>
            }
                    }
                    <!-- end -->
                    @*<button class="btn btn-blue text-shadow-blue source-sans-proregular" type="button" onclick="window.location.href='@Url.Action("Assortment", "Plan")'">Add Activity</button>*@
                </div>
            </div>
        }
    </div>

    <!--First Static Accordion-->
    <!--Modified By Maninder Singh Wadhva PL Ticket#47-->
    <div class="accordion colors left-nav" id="marketing-activities" style="margin-bottom: 0px !important;">

        <div class="accordion-group source-sans-proregular">
            <div class="accordion-heading">
                <a href="#DivAccordionMarketingActivities" data-parent="marketing-activities" data-toggle="collapse" class="accordion-toggle item-741f98 collapsed">
                    <div class="cf source-sans-prosemibold ">Marketing Activities</div>
                </a>
            </div>
            <div class="scrolled_div" style="position: relative; overflow: hidden;  max-height: 230px;">
                <div class="accordion-body in collapse" id="DivAccordionMarketingActivities">
                </div>
            </div>
        </div>
    </div>
    @* Added by Sohel Pathan on 28/04/2014 for Internal Review Point #7 to remove border around of show only my tactic tab *@
    <div id="divBorderBottom" style="border-top: 1px solid #dddddd; margin-left:20px; margin-right:20px;"></div> 
    <div class="show-my-tactic-padding"> @* Modified by Sohel Pathan on 28/04/2014 for Internal Review Point #7 to remove border around of show only my tactic tab *@
        <a class="link-alone-margin-left" id="AShowOnlyMyTactic" href="#">
            <label>Show only My Tactics</label></a>
    </div>
    <!--First Static Accordion END-->
    <!--Second Static Accordion-->
    <div class="accordion colors left-nav improvements" id="improvements">
        <div class="accordion-group source-sans-proregular">
            <div class="accordion-heading">
                <a href="#DivAccordionImprovementActivities" data-parent="improvements" data-toggle="collapse" class="accordion-toggle item-741f98 collapsed">
                    <div class="cf source-sans-prosemibold">Improvements</div>
                </a>
            </div>
            <div class="accordion-body collapse" id="DivAccordionImprovementActivities">
            </div>
        </div>
    </div>
    <!--Second Static Accordion END-->

    <!--First Accordion-->
    @* <div class="scrolled_div">
        <div class="accordion colors" id="DivAccordion"></div>
    </div>

    <div class="shadow-scroll"></div>*@

    <div class="padding-content padding-top0">
        <h4 class="text-shadow-black source-sans-prolight">Filters</h4>

        <!--Second Accordion-->
        <div class="accordion simple" id="accordion-Filter">
            <div class="accordion-group">
                @if (Model.objGeography.Count > 0)
                {
                    <div class="accordion-heading">
                        <a class="accordion-toggle collapsed chevron-right" data-toggle="collapse" data-parent="#accordion-Filter" href="#accordion-filterGeography">Geography</a>
                    </div>
                    <div id="accordion-filterGeography" class="accordion-body collapse">
                        @foreach (var geography in Model.objGeography)
                        {
                            <a href="#" class="accordion-inner" filterId="@geography.GeographyId">@geography.Title<span class="pull-right"></span></a>                        
                        }
                    </div>
                }
                else
                {
                    <div class="accordion-heading">
                        <a class="accordion-toggle collapsed" data-toggle="collapse" data-parent="#accordion-Filter" href="#">Geography</a>
                    </div>
                }
            </div>
            @*Modified by :- Sohel Pathan on 17/04/2014 for PL ticket #428 to disply users in individual filter according to selected plan and status of tactis *@
            <div class="accordion-group" id="individualFilter">

                    <div class="accordion-heading" id="individualFilterdiv">
                        <a class="accordion-toggle collapsed chevron-right" data-toggle="collapse" data-parent="#accordion-Filter" href="#accordion-filterIndividuals">Individuals</a>
                    </div>
                    <div id="accordion-filterIndividuals" class="accordion-body collapse">
                    </div>
            </div>
        </div>
    </div>
    <!--End Second Accordion-->
    <ul class="nav nav-list nav-gray-plan">
        <li id="change-log" class="nav-header">
            <span>Change Log</span>
            <div class="changes"></div>
        </li>
    </ul>

}

<!--success message-->
<div id="successMessageDuplicatePlan" class="alert hide alert-success message-position">
    <a class="close">×</a>
    <div id="cSuccessDuplicatePlan">@Html.Raw(HttpUtility.HtmlDecode((string)ViewBag.SuccessMessageDuplicatePlan))</div>
</div>
<!--success message-->
<!--error message-->
<div id="errorMessageDuplicatePlan" class="alert hide alert-error message-position">
    <a class="close">×</a>
    <div id="cErrorDuplicatePlan">@Html.Raw(HttpUtility.HtmlDecode((string)ViewBag.ErrorMessageDuplicatePlan))</div>
</div>
<!--error message-->
<div class="light-blue-chart cf">
    @Html.Partial("~/Views/Shared/_planheader.cshtml", Model.objplanhomemodelheader)
</div>
@* changed by Nirav for Custom Dropdown - 388*@
@*@{
    if (showBid == true)
    {
    <div id="dropdown-business-unit" class="btn-group">
        <a id="selected-option" class="dropdown-toggle" href="#" data-toggle="dropdown">Business Unit</a>
        <ul class="dropdown-menu">
            <li>
                <script>
                    var BusinessUnitIds = @Html.Raw(Json.Encode(Model.BusinessUnitIds))
                    addBusinessUnitItems(BusinessUnitIds, "dropdown-business-unit");
                </script>
            </li>
        </ul>
    </div>
    }
}*@

@{
    if (showBid == true)
    {
    <span class="selectBox dropdown-businessUnit" id="dropdown-business-unit">
        @if (RevenuePlanner.Helpers.Sessions.BusinessUnitId != Guid.Empty)
        {
            @Html.DropDownList("ddlBusinessUnit", new SelectList((System.Collections.IEnumerable)ViewBag.BusinessUnitIds, "Value", "Text", Sessions.BusinessUnitId))
        }
        else
        {
            @Html.DropDownList("ddlBusinessUnit", new SelectList((System.Collections.IEnumerable)ViewBag.BusinessUnitIds, "Value", "Text"))
        }
    </span>
    }
}
<script>
    var pid = $('#PlanId').val();
    var CurrentPlanId = pid;
</script>
<div id="DivloadPlan">
</div>
@*@Html.Partial("~/Views/Home/_PlanDropdown.cshtml", Model.objHomePlan)*@
@*<ul class="nav nav-tabs">
    <li class="title-header source-sans-proregular bold font-size25px">

        <form id="nl-form2" class="nl-form-plan-title without-margin">

            <select id="dropdown-plan-title" data-default="0%" class="">
                <script>
                    var plan = @Html.Raw(Json.Encode(Model.plans));
                    populateNF(plan, "dropdown-plan-title");
                </script>
            </select>

            <!--<div class="nl-overlay"></div>-->
            <script>
                var nlform = new NLForm(document.getElementById('nl-form2'));
            </script>
            <div class="nl-overlay2"></div>
        </form>
    </li>
    <li>
        <span class="drop-down-logo-icon2"></span>
    </li>
    <li class="active pull-right">
        <a id="ATactics" href="#">Tactics</a>
    </li>
    <li class=" pull-right">
        <a id="AVertical" href="#">Vertical</a>
    </li>
    <li class=" pull-right">
        <a id="AStage" href="#">Stage</a>
    </li>
    <li class=" pull-right">
        <a id="AAudience" href="#">Audience</a>
    </li>
    @if (Model.IsDirector)
    {
        <li class=" pull-right">
            <a id="ABusinessUnit" href="#">Business Unit</a>
        </li>
        <li class=" pull-right">
            <a id="ARequest" href="#">Requests
			<span id="RequestCount" class="label label-important"></span>
            </a>
        </li>
    }
</ul>*@

<div class="tab-content all-height cf" style="padding-right: 18px;">
    <div class="tab-pane active all-height" id="panel-656352">
        <div class=" pl20 cf">
            <div class="margin-left9 pull-left" id="divCollaborator" style="position: relative;">
                <!-- position:relative = added by kapil -->
            </div>
            @* Start - Added by Sohel on 12/05/2014 for PL #425 to Show status of tactics on Home and Plan screen *@
            <div class="pull-right toggle-status source-sans-proregular">
                <div class="pull-right">
                    <a href="#" class="toggleStatusHide">Hide Status</a>
                    <span class="status-created">Created</span>
                    <span class="status-submitted">Submitted</span>
                    <span class="status-approved">Approved</span>
                    <span class="status-rejected">Rejected</span>
                </div>
                <a href="#" class="toggleStatus">Show Status</a>
            </div>
            @* End - Added by Sohel on 12/05/2014 for PL #425 to Show status of tactics on Home and Plan screen *@
            <div>
                <div class="gantt-padding cf lenght-div" style="min-height:300px;">
                    <div id="gantt_here"></div>
                </div>
                <div class="shadow-scroll-gantt"></div>
                <table id="table_activities" class="table table-striped table-hover bold">
                    <thead>
                        <tr>
                            <th class="border-r show-modal">Title</th>
                            <th class="show-modal">@Html.LabelForINQ("INQ")</th>
                            <th class="show-modal">@Html.LabelForMQL("MQL")</th>
                            <th class="show-modal">@Html.LabelForCW("CW")</th>
                            <th class="border-r show-modal">Cost</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!--tr elements are add dinamically with javascript-->

                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<div id="Notabcontent" style="display: none;">
    <span class="pull-left margin_t30 bold " style="margin-left: 20px;">No Plans exists.</span>
</div>
@*// Inspect Popup Div 
    // Added By Bhavesh
*@
<div class="container-fluid all-height" id="modalMainContainer">
    <div class="row-fluid calc-height">
        <div class="container-fluid">
            <div class="row-fluid ">
                <div class="span12">

                    <div id="modal-container-186470" class="modal-inspect-review hide fade" role="dialog" aria-labelledby="myModalLabel" aria- hidden="true" style="display: none">
                        <div id="successMessage" class="alert alert-success message-position-popup" style="display: none;">
                            <a class="close">×</a>
                            <strong>Success.</strong> <span id="spanMessageSuccess"></span>
                        </div>
                        <div id="errorMessage" class="alert alert-error hide message-position-popup" style="display: none;">
                            <a class="close">×</a>
                            <strong>Error!</strong> <span id="spanMessageError">Make sure all fields are filled and try again.</span>
                        </div>
                        <div id="divPartial">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="divBackground" class="modal-backdrop fade in" style="display: none"></div>

<script type="text/javascript">

    // Added by KAPIL - #454 - to resolve extra space
    function CalGanntHeight() {
        var contentWraper = $('#content_wraper').parent().height();
        var positionGannt = $('.gantt-padding').position();
        //alert('gantt-padding Position: ' + positionGannt.top);
        //alert('Content Wrapper height: ' + contentWraper);
        $('.gantt-padding').height(contentWraper - positionGannt.top);
        //alert('gantt-padding Height: ' + $('.gantt-padding').height());
    }

    // Added by Nirav for Custom Dropdown - 388
    /*added by Nirav for plan consistency on 14 apr 2014*/
    function EditPlan() {
        var pid = $("#CurrentPlanId").val();
        var url = '@Url.Content("~/Plan/Create?id=")' + pid;
        window.location.href = url;
    }
    $(".selectBox select").selectbox();
    $('#ddlBusinessUnit').change(function () {
        var Bid = $('#ddlBusinessUnit').val();
        CurrentPlanId = $('#PlanId').val();
        $("#CurrentPlanId").val(CurrentPlanId);
        /*changed by Nirav for plan consistency on 14 apr 2014*/
        $('#DivloadPlan').load('@Url.Action("HomePlan", "Home")' + '?Bid=' + Bid + '&currentPlanId=' + CurrentPlanId + '&activeMenu=' + $('#ActiveMenu').val())
    });
    /*end Nirav*/
    /// Script Start
    /// Added By: Maninder Singh Wadhva.
    var GanttTabs = {
        Tactic: 0,
        Vertical: 1,
        Stage: 2,
        Audience: 3,
        BusinessUnit: 4,
        Request: 5
    }
    //// Global variable to hold quarter or year.
    var isQuater = Currenttime;//false;

    //// Global variable to hold current tab.
    var type = GanttTabs.Tactic;
    var showTacticStatus = false;   //// Added by Sohel on 12/05/2014 for PL #425 to Show status of tactics on Home and Plan screen

    //// Global variable to hold filters
    var filters = {
        geographyIds: [],
        IndividualsIds: []
    };
    var IsShowOnlyMyTactic = false
    $("#AShowOnlyMyTactic").click(function () {
        IsShowOnlyMyTactic = !IsShowOnlyMyTactic;
        if (IsShowOnlyMyTactic) {
            $("#AShowOnlyMyTactic > label").html('Show All Tactics');
            //$("#AShowOnlyMyTactic > label").css("background-color", "#FFFFFF");
        }
        else {
            $("#AShowOnlyMyTactic > label").html('Show only My Tactics');
            //$("#AShowOnlyMyTactic > label").css("background-color", "");
        }
        RefreshCurrentTab();
    });

    //// Function to toggle quarter and year.
    //$('#ahrefthisyear').click(function () {
    //    if (!isQuater) {
    //        $('#spanthisyear').text("this quarter")
    //        isQuater = true;
    //    }
    //    else {
    //        $('#spanthisyear').text("this year")
    //        isQuater = false;
    //    }

    //    RefreshCurrentTab();
    //});

    //// Function to refresh current tab.
    function RefreshCurrentTab() {
        //debugger;
        switch (type) {
            case GanttTabs.Tactic:
                GetTactics();
                break;
            case GanttTabs.Vertical:
                GetVertical();
                break;
            case GanttTabs.Stage:
                GetStage();
                break;
            case GanttTabs.Audience:
                GetAudience();
                break;
            case GanttTabs.BusinessUnit:
                GetBusinessUnit();
                break;
            case GanttTabs.Request:
                GetRequest();
                break;
            default:
                alert('No match');
                break;
        }
    }
    /// Script End
    /// Added By: Maninder Singh Wadhva.

    SetBudget("#pbudget");
    SetPriceValue("#pMQLs");
</script>


<script type="text/javascript">
    /// Script Start
    /// Added By: Maninder Singh Wadhva.
    //// Default load tactics in view control.
    function DuplicatePlan() {
        $.ajax({
            type: 'POST',
            url: '@Url.Content("~/Plan/DuplicatePlan/")',
            dataType: "json",
            success: function (data) {
                if (data.isSuccess == true) {
                    var url = '@Url.Content("~/Home/Index?ActiveMenu=")' + $('#ActiveMenu').val() + '&currentPlanId=' + data.planId;
                    window.location.href = url;
                }
                else {
                    alert('Error');
                }
            }
        });
    }

    function SetPlanButtons() {
        $('#BtnGroup').click(function (e) {
            if ($(this).html().toLowerCase() == "duplicate") {
                CheckUserSession("#BtnGroup", true);
                if (reason == 'user') {
                    return false;
                }
                DuplicatePlan();
            }
            else {
                var url = '@Url.Content("~/Plan/Create/0")';
                window.location.href = url;
            }
        });
    }

    function ShowChangeLog() {
        $('.changes').html('');
        var url = '@Url.Content("~/Home/LoadChangeLog/")';
        $('.changes').load(url + '?objectId=' + CurrentPlanId);
    }

    $(document).ready(
        function () {
            DuplicatePlanMessage();
            SetPlanButtons();
            var flg = false;
            var strflg = "";
            SetGantt();
            AttachEventToFilter();
            ShowInspectForPlanTacticId();
            //functions added to show campagin and program popup from email url link click when email sent to user when comapign or program shared
            ShowInspectForPlanCampaignId();
            ShowInspectForPlanProgramId();
        });

    function DuplicatePlanMessage() {
        /*close x event on message*/
        $("#successMessageDuplicatePlan").find(".close").click(function (e) {
            e.stopPropagation();
            e.preventDefault();
            $("#content_wraper").removeClass("span10 padding-top40").addClass("span10 all-height");
            $(this).closest(".alert").slideUp(400);
        });

        $("#errorMessageDuplicatePlan").find(".close").click(function (e) {
            e.stopPropagation();
            e.preventDefault();
            $("#content_wraper").removeClass("span10 padding-top40").addClass("span10 all-height");
            $(this).closest(".alert").slideUp(400);
        });

        if ($('#cSuccessDuplicatePlan').html() == '') {
            $("#successMessageDuplicatePlan").slideUp(400);
        }
        else {
            $("#content_wraper").removeClass("span10 all-height").addClass("span10 padding-top40");
            $('#cSuccessDuplicatePlan').html('<strong>Success. </strong> ' + $('#cSuccessDuplicatePlan').html())
            $("#successMessageDuplicatePlan").slideDown(3000);
            $("#successMessageDuplicatePlan").slideUp(1200, function () { $("#content_wraper").removeClass("span10 padding-top40").addClass("span10 all-height"); });
        }

        if ($('#cErrorDuplicatePlan').html() == '') {
            $("#errorMessageDuplicatePlan").slideUp(400);
        }
        else {
            $("#content_wraper").removeClass("span10 all-height").addClass("span10 padding-top40");
            $('#cErrorDuplicatePlan').html('<strong>Error! </strong> ' + $('#cErrorDuplicatePlan').html())
            $("#errorMessageDuplicatePlan").slideDown(400);
        }

        //if ($('#cSuccessDuplicatePlan').html() == '' && $('#cErrorDuplicatePlan').html() == '') {
        //    $("#content_wraper").removeClass("span10 padding-top40").addClass("span10 all-height");
        //} else {
        //    $("#content_wraper").removeClass("span10 all-height").addClass("span10 padding-top40");
        //}
    }

    //// Modified By Maninder Singh Wadhva PL Ticket#47
    function ShowInspectForPlanTacticId() {
        var hdnshowInspectForPlanTacticId = $("#hdnshowInspectForPlanTacticId")
        var hdnIsImprovement = $('#hdnIsImprovement');
        if (hdnshowInspectForPlanTacticId.val() != 0) {
            ShowModel(null, true);
            hdnshowInspectForPlanTacticId.val(0);
            hdnIsImprovement.val(false);
        }
    }

    // Function to get collaborators list
    //// Modified By Maninder Singh Wadhva to Address PL#203
    function GetCollaborators(planId) {
        if (planId != null) {
            $.ajax(
           {
               type: "GET",
               cache: false,
               url: '@Url.Action("GetCollaboratorDetails", "Plan")',
               data: { currentPlanId: planId },
               dataType: "json",
               success: function (data) {
                   // Set collaborator details
                   $('#divCollaborator').empty(); // Clear collaborators div content
                   ////  set collaborator's image
                   $.each(data.collaboratorsImage.Data, function () {
                       SetCollaboratorImage(this);
                   })

                   $('#divCollaborator').append('<span class="bold margin_left6 position_absolute">' + data.collaboratorsImage.Data.length + ' Collaborator(s) </span>');
                   $('#divCollaborator').append('<span class="font_size10 margin_left6 updated-text-align">Last updated ' + data.lastUpdateDate + '</span>');

               }
           });
       }
   }

   // Function to set collaborator's image
   //// Modified By Maninder Singh Wadhva to Address PL#203
   function SetCollaboratorImage(collaborator) {
       console.log(collaborator);
       // Get collaborator image
       var imgs = collaborator.imageBytes;
       var username = collaborator.name;

       // Set collaborator image
       var collaboratorImage = "<img title='" + username + "' class=\"avatar-user img-border align_avatar_image\""
        + "src='" + "data:image/jpg;base64,"
        + imgs + "'/>";
       $("#divCollaborator").prepend(collaboratorImage);
   }

   function ShowInspectForPlanCampaignId() {
       var hdnshowInspectForPlanCampaignId = $("#hdnshowInspectForPlanCampaignId")
       if (hdnshowInspectForPlanCampaignId.val() != 0) {

           ShowModel(null, true);
           hdnshowInspectForPlanCampaignId.val(0);
       }
   }
   function ShowInspectForPlanProgramId() {
       var hdnshowInspectForPlanProgramId = $("#hdnshowInspectForPlanProgramId")
       if (hdnshowInspectForPlanProgramId.val() != 0) {

           ShowModel(null, true);
           hdnshowInspectForPlanProgramId.val(0);
       }
   }
   strflg = "";
   //// Get tactic on click of tactic tab.
   //$('#ATactics').click(GetTactics)

   ////// Get tactic on click of vertical tab.
   //$('#AVertical').click(GetVertical)

   ////// Get tactic on click of audience tab.
   //$('#AAudience').click(GetAudience)

   ////// Get tactic on click of business unit tab.
   //$('#ABusinessUnit').click(GetBusinessUnit)

   ////// Get tactic on click of stage tab.
   //$('#AStage').click(GetStage)

   ////// Get tactic on click of request tab.
   //$('#ARequest').click(GetRequest)

   function AttachEventToFilter() {
       $("#accordion-filterGeography").find("a").click(ApplyOrRemoveFilter);
       $("#accordion-filterIndividuals").find("a").click(ApplyOrRemoveFilter);
   }

   function ApplyOrRemoveFilter() {
       individualClick = true;      //// Added By :- Sohel Pathan on 17/04/2014 for PL ticket #428 to fill filteredIndividuals list according to plan selected.
       ($(this).toggleClass("x-icon"));
       filters.geographyIds = $.map($("#accordion-filterGeography").find("a.x-icon"), function (a) { return $(a).attr("filterId") });
       filters.IndividualsIds = $.map($("#accordion-filterIndividuals").find("a.x-icon"), function (a) { return $(a).attr("filterId") });
       RefreshCurrentTab();
   }

   //// Function to get tactic.
   function GetTactics() {
       $('.pull-right').removeClass('active');
       $('#ATactics').closest('li').addClass('active');
       type = GanttTabs.Tactic;
       AjaxRequest();
   }

   //// Function to get audience.
   function GetAudience() {
       $('.pull-right').removeClass('active');
       $('#AAudience').closest('li').addClass('active');
       type = GanttTabs.Audience;
       AjaxRequest();
   }

   //// Function to get vertical.
   function GetVertical() {
       $('.pull-right').removeClass('active');
       $('#AVertical').closest('li').addClass('active');
       type = GanttTabs.Vertical;
       AjaxRequest();
   }

   //// Function to get business unit.
   function GetBusinessUnit() {
       $('.pull-right').removeClass('active');
       $('#ABusinessUnit').closest('li').addClass('active');
       type = GanttTabs.BusinessUnit;
       AjaxRequest();
   }

   //// Function to get stage.
   function GetStage() {
       $('.pull-right').removeClass('active');
       $('#AStage').closest('li').addClass('active');
       type = GanttTabs.Stage;
       AjaxRequest();
   }

   //// Function to get request.
   function GetRequest() {
       $('.pull-right').removeClass('active');
       $('#ARequest').closest('li').addClass('active');
       type = GanttTabs.Request;
       AjaxRequest();
   }

   //// Modified By Maninder Singh Wadhva PL Ticket#47
   //// Function to add html for improvement activities.
   function AddImprovementActivities(colorCode, parentTitle, parentId, filteredData) {
       var accordionDiv = $('#DivAccordionImprovementActivities');
       accordionDiv.append("<div class='accordion-heading'>\
                                    <a href='#accordion-element-improvement-" + parentId + "' data-toggle='collapse' class='accordion-toggle item-" + colorCode + " collapsed chevron-right'>\
                                        <div class='cf'>" + parentTitle + "<span class='pull-right'><span id='spnimprovement_" + parentId + "'>0</span>/" + filteredData.length + "</span></div>\
                                    </a>\
                                </div>\
                                <div class='accordion-body collapse' id='accordion-element-improvement-" + parentId + "'>\
                                </div>");

       $.each(filteredData, function (index2, objfilteredData) {
           $("#accordion-element-improvement-" + parentId).append("<a taskid='" + objfilteredData.TaskId + "' href='#' class='accordion-inner item-" + colorCode + "'>" + objfilteredData.Title + "</a>")
           $("a[taskid='" + objfilteredData.TaskId + "']").click(function (event) {
               GanttOpenBranch($(this).attr('taskid'));
           });
       })
   }

   //// Modified By Maninder Singh Wadhva PL Ticket#47
   //// Function to add marketing activities.
   function AddMarketingActivities(colorCode, parentTitle, parentId, filteredData) {
       var accordionDiv = $('#DivAccordionMarketingActivities');
       accordionDiv.append("<div class='accordion-heading'>\
                                    <a href='#accordion-element-" + parentId + "' data-toggle='collapse' class='accordion-toggle item-" + colorCode + " collapsed chevron-right'>\
                                        <div class='cf'>" + parentTitle + "<span class='pull-right'><span id='spn_" + parentId + "'>0</span>/" + filteredData.length + "</span></div>\
                                    </a>\
                                </div>\
                                <div class='accordion-body collapse' id='accordion-element-" + parentId + "'>\
                                </div>");

       $.each(filteredData, function (index2, objfilteredData) {
           $("#accordion-element-" + parentId).append("<a taskid='" + objfilteredData.TaskId + "' href='#' class='accordion-inner item-" + colorCode + "'>" + objfilteredData.Title + "</a>")
           $("a[taskid='" + objfilteredData.TaskId + "']").click(function (event) {
               GanttOpenBranch($(this).attr('taskid'));
               //alert($(this).attr('taskid'));
           });
       })
   }

   //// Modified By Maninder Singh Wadhva PL Ticket#47
   //// Function to add improvement activities.
   function AddAccordionToggleAndInnerImprovementTactic(improvementTacticTypeForAccordion, improvementTacticForAccordion) {
       var accordionDiv = $('#DivAccordionImprovementActivities');
       accordionDiv.empty();
       $.each(improvementTacticTypeForAccordion, function (index1, tactic) {
           var colorCode = tactic.ColorCode;
           var improvementTacticTypeId = tactic.ImprovementTacticTypeId;

           //// Filter plan improvement tactic based on improvement tactic type id.
           var filteredTactic = $.grep(improvementTacticForAccordion, function (value) { return value.ImprovementTacticTypeId == improvementTacticTypeId; })
           AddImprovementActivities(colorCode, tactic.Title, improvementTacticTypeId, filteredTactic);
       })
   }

   //// Modified By Maninder Singh Wadhva PL Ticket#47
   //// Function to create tactic view control.
   function AddAccordionToggleAndInnerTactic(data) {
       var accordionDiv = $('#DivAccordionMarketingActivities');
       accordionDiv.empty();
       $.each(data.tacticType, function (index1, objTactic) {
           var colorCode = objTactic.ColorCode;
           var tacticTypeId = objTactic.TacticTypeId;

           //// Filter plan campaign program tactic based on tactic type id.
           var filteredTactic = $.grep(data.planCampaignProgramTactic, function (value) { return value.TacticTypeId == tacticTypeId; })
           AddMarketingActivities(colorCode, objTactic.Title, tacticTypeId, filteredTactic);
       })
   }

   function GanttOpenBranch(taskId) {

       var flag = false;
       $(".gantt_grid_data").find('div[class^="gantt_row"]').each(function (index1) {

           var itaskid = $(this).attr('task_id');
           if (taskId == itaskid) {
               flag = true;
           }

       });

       if (flag == false) {

           var arr = taskId.split('_');
           //// Added by :- Sohel Pathan on 10/04/2014 for PL ticket #419 to display tactic count properly in left nav-menu
           var CampaignID = ''
           if (arr.length >= 3) {
               CampaignID = arr[0] + '_';
           }
           ////

           $.each(arr, function (index, item) {
               var tId = '';
               for (var counter = 0; counter <= index; counter++) {
                   if (tId == '') {
                       tId = arr[counter]
                   }
                   else {
                       tId += '_' + arr[counter]
                   }
               }

               //// Modified by :- Sohel Pathan on 10/04/2014 for PL ticket #419 to display tactic count properly in left nav-menu
               isRender = true;
               gantt.open(tId);
               CountTacticForRenderChart(tId, CampaignID);
               isRender = false;
               ////
           });
       }


   }

   //// Modified By Maninder Singh Wadhva PL Ticket#47
   //// Function to create audience view control.
   function AddAccordionToggleAndInnerAudience(data) {
       var accordionDiv = $('#DivAccordionMarketingActivities');
       accordionDiv.empty();
       $.each(data.audience, function (index1, objAudience) {
           var colorCode = objAudience.ColorCode;
           var audienceId = objAudience.AudienceId;

           var filteredAudience = $.grep(data.audienceTactic, function (value) { return value.AudienceId == audienceId; }).sort(SortAlphabetically);
           AddMarketingActivities(colorCode, objAudience.Title, audienceId, filteredAudience);
       })
   }

   //// Modified By Maninder Singh Wadhva PL Ticket#47
   //// Function to create vertical view control.
   function AddAccordionToggleAndInnerVertical(data) {
       var accordionDiv = $('#DivAccordionMarketingActivities');
       accordionDiv.empty();

       $.each(data.vertical, function (index1, objVertical) {
           var colorCode = objVertical.ColorCode;
           var verticalId = objVertical.VerticalId;
           var filteredVertical = $.grep(data.verticalTactic, function (value) { return value.VerticalId == verticalId; }).sort(SortAlphabetically);
           AddMarketingActivities(colorCode, objVertical.Title, verticalId, filteredVertical);
       });
   }

   //// Modified By Maninder Singh Wadhva PL Ticket#47
   //// Function to create stage view control.
   function AddAccordionToggleAndInnerStage(data) {
       var accordionDiv = $('#DivAccordionMarketingActivities');
       accordionDiv.empty();
       $.each(data.stage, function (index1, objStage) {
           var colorCode = objStage.ColorCode;
           var stageId = objStage.StageId;

           var filteredStage = $.grep(data.stageTactic, function (value) { return value.StageId == stageId; }).sort(SortAlphabetically);
           AddMarketingActivities(colorCode, objStage.Title, stageId, filteredStage);
       });
   }

   //// Modified By Maninder Singh Wadhva PL Ticket#47
   //// Function to create business unit view control.
   function AddAccordionToggleAndInnerBusinessUnit(data) {
       var accordionDiv = $('#DivAccordionMarketingActivities');
       accordionDiv.empty();
       $.each(data.businessUnit, function (index1, objBusinessUnit) {
           var colorCode = objBusinessUnit.ColorCode;
           var businessUnitId = objBusinessUnit.BusinessUnitId;

           var filteredBusinessUnit = $.grep(data.businessUnitTactic, function (value) { return value.BusinessUnitId == businessUnitId; }).sort(SortAlphabetically);
           AddMarketingActivities(colorCode, objBusinessUnit.Title, businessUnitId, filteredBusinessUnit);
       });
   }

   //// Function to create request view control.
   var activities = { data: '' };
   function AddAccordionToggleAndInnerRequest(data) {
       AddAccordionToggleAndInnerTactic(data);

       //onlyTactic = $.grep(data.taskData, function (value) {
       //    return ((typeof value.isSubmitted != 'undefined') && (typeof value.isDeclined != 'undefined'))
       //});

       //submittedTactic = $.grep(onlyTactic, function (value) {
       //    return (value.isSubmitted == true);
       //});

       //declinedTactic = $.grep(onlyTactic, function (value) {
       //    return (value.isDeclined == true);
       //});

       //var submittedDeclinedTactic = submittedTactic.concat(declinedTactic);
       //activities = { data: submittedDeclinedTactic };

       //FillTacticsTable();

       //if ($('#IsViewOnly').val() != '') {
       //    $("#table_activities th:nth-child(6), #table_activities td:nth-child(6)").remove();
       //}
   }

   //// Function to sort alphabetically.
   function SortAlphabetically(obj1, obj2) {
       var obj1Property = obj1.Title.toLowerCase();
       var obj2Property = obj2.Title.toLowerCase();
       return ((obj1Property < obj2Property) ? -1 : ((obj1Property > obj2Property) ? 1 : 0));
   }

   var planYear;
   //// Modified By Maninder Singh Wadhva PL Ticket#47
   //// Modified By Maninder Singh Wadhva to Address PL#203
   //// Function to make ajax request.
   function AjaxRequest() {
       $.ajax(
     {
         type: "GET",
         cache: false,
         url: '@Url.Action("GetViewControlDetail", "Home")',
         data: {
             Type: type,
             PlanId: CurrentPlanId,
             IsQuarter: isQuater,
             geographyIds: filters.geographyIds.join(),
             individualsIds: filters.IndividualsIds.join(),
             activeMenu: $('#ActiveMenu').val(),
             isShowOnlyMyTactic: IsShowOnlyMyTactic
         },
         dataType: "json",
         success: function (data) {
             if (typeof individualClick == 'undefined') {
                 individualClick = false;
             }
             $('#RequestCount').html(data.requestCount);
             planYear = parseInt(data.planYear);

             var isDataExistForTacticTable = false;
             //// Modified By Maninder Singh Wadhva PL Ticket#47
             if (typeof data.improvementTacticTypeForAccordion != 'undefined' &&
                 typeof data.improvementTacticForAccordion != 'undefined' &&
                 data.improvementTacticForAccordion.length > 0 &&
                 data.improvementTacticTypeForAccordion.length > 0) {
                 $('#improvements').show()
                 AddAccordionToggleAndInnerImprovementTactic(data.improvementTacticTypeForAccordion, data.improvementTacticForAccordion);
                 isDataExistForTacticTable = true;
             }
             else {
                 $('#improvements').hide();
             }

             //// Modified By Maninder Singh Wadhva PL Ticket#47
             //// filtering non improvement task data.
             var filteredNonImprovementData = $.grep(data.taskData, function (value) { return (typeof value.isImprovement == 'undefined') });
             if (filteredNonImprovementData.length > 0) {
                 isDataExistForTacticTable = true;
                 $('#marketing-activities').show();
                 $('#divBorderBottom').show();  // Added by Sohel Pathan on 28/04/2014 for Internal Review Point #7 to remove border around of show only my tactic tab.
                 switch (type) {
                     case GanttTabs.Tactic:
                         AddAccordionToggleAndInnerTactic(data);
                         break;
                     case GanttTabs.Vertical:
                         AddAccordionToggleAndInnerVertical(data);
                         break;
                     case GanttTabs.Stage:
                         AddAccordionToggleAndInnerStage(data);
                         break;
                     case GanttTabs.Audience:
                         AddAccordionToggleAndInnerAudience(data);
                         break;
                     case GanttTabs.BusinessUnit:
                         AddAccordionToggleAndInnerBusinessUnit(data);
                         break;
                     case GanttTabs.Request:
                         AddAccordionToggleAndInnerRequest(data);
                         break;
                     default:
                         alert('No match');
                         break;
                 }

                 AttachEventToGroupHeading();
             }
             else {
                 $('#marketing-activities').hide();
                 $('#divBorderBottom').hide();  // Added by Sohel Pathan on 28/04/2014 for Internal Review Point #7 to remove border around of show only my tactic tab.
             }

             renderGantt(data.taskData);
             //// Hide/Show Tabulated data shown below gantt of request tab.
             if (GanttTabs.Request == type) {
                 $(".shadow-scroll-gantt").show();
                 $("#table_activities").show();
                 FillTacticTableForRequest(data);
                 
                 if ($('.gantt_ver_scroll').is(":visible")) {
                     //$(".shadow-scroll-gantt").removeClass("full-width");
                 }
                 else {
                     //$(".shadow-scroll-gantt").addClass("full-width");
                     var ganntWidth = $(".gantt-padding").width();
                     $(".shadow-scroll-gantt").width(ganntWidth);
                 }

             } else {
                 $("#table_activities").hide();
                 $(".shadow-scroll-gantt").hide();
             }

             //gantt.render();     ////Added by Sohel on 31st March 2014 for PL ticket #362, To set the scroll for Gantt chart
             //// Added By :- Sohel Pathan on 16/04/2014 for PL ticket #428 to fill filteredIndividuals list according to plan selected.
             if (individualClick != true) {
                 GetIndividualsForFilter(parseInt(CurrentPlanId));
             }
             else {
                 individualClick = false;
             }
             ////
         }
     });
 }

 function FillTacticTableForRequest(data) {
     onlyTactic = $.grep(data.taskData, function (value) {
         return ((typeof value.isSubmitted != 'undefined') && (typeof value.isDeclined != 'undefined'))
     });

     submittedTactic = $.grep(onlyTactic, function (value) {
         return (value.isSubmitted == true);
     });

     declinedTactic = $.grep(onlyTactic, function (value) {
         return (value.isDeclined == true);
     });

     var submittedDeclinedTactic = submittedTactic.concat(declinedTactic);
     activities = { data: submittedDeclinedTactic };

     if (activities.data.length > 0) {
         FillTacticsTable();
     }
     else {
         ////// Modified By Maninder Singh Wadhva PL Ticket#47
         $('#table_activities > tbody >tr').remove();
         var varCount = $('#table_activities thead th').length;
         $('#table_activities > tbody').html('<tr class="no-tactic-found"><td colspan="' + varCount + '">No submitted tactic found.</td></tr>');
     }

     if ($('#IsViewOnly').val() != '') {
         $("#table_activities th:nth-child(6), #table_activities td:nth-child(6)").remove();
     }
 }
 function AttachEventToGroupHeading() {
     var divAccordionGroups = $("div[id^='DivAccordionGroup']").find("div.accordion-heading a");
     $.each(divAccordionGroups, function (index, accGroup) {
         var accordionGroup = $(this);
         if (typeof accordionGroup != 'undefined') {
             accordionGroup.click(function () {
                 var anchor = $(this).parent().next().find("a");
                 if (typeof anchor != 'undefined') {
                     anchor.click();
                 }
             });
         }
     })
 }

 //// Function to start date of current quarter.
 function getQarterStartDate() {
     var currentDate = new Date();
     var quater = Math.floor((currentDate.getMonth()) / 3) + 1;
     var startDate;
     var fullYear = currentDate.getFullYear();
     switch (quater) {
         case 1:
             startDate = new Date(fullYear, 00, 01);
             break;
         case 2:
             startDate = new Date(fullYear, 03, 01);
             break;
         case 3:
             startDate = new Date(fullYear, 06, 01);
             break;
         case 4:
             startDate = new Date(fullYear, 09, 01);
             break;
         default:
             startDate = currentDate;
     }

     return startDate;
 }

 //// Function to set common properties of gantt.
 ////Modified By Maninder Singh Wadhva PL Ticket#47, 337
 function SetGantt() {
     gantt.config.grid_width = 236;
     gantt.config.readonly = true;
     gantt.config.autofit = true;
     gantt.config.drag_links = false;
     gantt.config.drag_resize = true;
     gantt.config.drag_progress = false;
 }

 // Variable to maintein closed task in calendar.
 var arrClosedTask = [];

 //// Modified By Maninder Singh Wadhva PL Ticket#47
 //// Function to render gantt i.e. for this year or this quarter.
 function renderGantt(taskData) {
     var tasks = {
         data: taskData
     };
     //var tasks = {
     //    data: [
     //        { id: 1, text: "ERP V10 Product Launch", start_date: new Date(2013, 00, 05), duration: 10, progress: 1, open: true },
     //        { id: 2, text: "Q2 Lead Gen", start_date: new Date(2013, 02, 05), duration: 10, progress: 1, open: false }]
     //};

     $.each(tasks.data, function (index, objData) {
         objData.start_date = new Date(objData.start_date);
     });
     
     //// Start -- Modified by Sohel Pathan on 22/05/2014 for Internal Review Points
     //// Instead of iterating each task and delete then it, there is a better way to use .clearAll() method that removes all the task from gantt.

     //gantt.eachTask(function (task) {
     //   gantt.deleteTask(task.id)
     //})

     if ($('.gantt_task_row').length > 0)
     {
         gantt.clearAll();
     }
     //// End -- Modified by Sohel Pathan on 22/05/2014 for Internal Review Points

     if (isQuater == "thisquarter") {
         //// Setting scale.
         gantt.config.scale_unit = "month";
         gantt.config.step = 12;
         gantt.config.date_scale = " %Y";

         gantt.config.scale_height = 60;
         gantt.config.columns = [{ name: "text", label: "Task name", tree: true, width: '*' }, ];
         gantt.config.subscales = [{ unit: "month", step: 1, date: "%M" }];

         //// Getting quarter
         var startDate = getQarterStartDate();
         var endDate = new Date(startDate.getFullYear(), startDate.getMonth() + 3, 1);
         gantt.config.start_date = startDate;
         gantt.config.end_date = endDate;
         //// filtering quater data
         var filteredData = $.grep(tasks.data,
                                    function (value) {
                                        return (value.start_date >= startDate && value.start_date <= endDate)
                                    }
                                  );
         var filteredTasks = { data: filteredData };

         gantt.init("gantt_here");

         var json_length = filteredTasks.data.length;
         var gantt_div = document.getElementById("gantt_here");
         ////Modified by Sohel on 31st March 2014 for PL ticket #362, To set the scroll for Gantt chart
         //if (json_length.toString() == "0" || parseInt(json_length.toString()) <= 9) {
             //gantt_div.style.height = ((json_length * 35) + 94) + "px";
         //}
         //else {
             //gantt_div.style.height = "409px"; //No scroll required for max of 9 Records, so default height = (9*35) + 94 = 409
         //}
         ////

         // Added by KAPIL - #454 - to resolve extra space
         CalGanntHeight();

         //// Function to add class to each task bar.
         ////Modified By Maninder Singh Wadhva PL Ticket#47, 337
         gantt.templates.task_class = function (start, end, task) {
             return getCSSForTask(task);
         };
         gantt.parse(filteredTasks);
     } else if (isQuater == "thisyear") {
         gantt.config.scale_unit = "year";
         gantt.config.step = 1;
         gantt.config.date_scale = "%Y";
         gantt.config.scale_height = 60;
         gantt.config.columns = [{ name: "text", label: "Task name", tree: true, width: '*' }, ];
         gantt.config.subscales = [{ unit: "month", step: 1, date: "%M" }];

         //gantt.config.start_date = new Date(planYear, 00, 01);
         //gantt.config.end_date = new Date(planYear + 1, 00, 01);

         var date = new Date();
         gantt.config.start_date = new Date(date.getFullYear(), 00, 01);
         gantt.config.end_date = new Date(date.getFullYear() + 1, 00, 01);
         gantt.init("gantt_here");

         var json_length = tasks.data.length;
         var gantt_div = document.getElementById("gantt_here");
         ////Modified by Sohel on 31st March 2014 for PL ticket #362, To set the scroll for Gantt chart
         //if (json_length.toString() == "0" || parseInt(json_length.toString()) <= 9) {
             //gantt_div.style.height = ((json_length * 35) + 94) + "px";
         //}
         //else {
             //gantt_div.style.height = "409px"; //No scroll required for max of 9 Records, so default height = (9*35) + 94 = 409
         //}
         ////

         // Added by KAPIL - #454 - to resolve extra space
         CalGanntHeight();

         //// Function to add class to each task bar.
         ////Modified By Maninder Singh Wadhva PL Ticket#47, 337
         gantt.templates.task_class = function (start, end, task) {
             return getCSSForTask(task);
         };

         gantt.parse(tasks);
     }
     else if (isQuater == "thismonth") {
         gantt.config.scale_unit = "month";
         gantt.config.step = 12;
         gantt.config.date_scale = " %Y";
         gantt.config.scale_height = 60;
         gantt.config.columns = [{ name: "text", label: "Task name", tree: true, width: '*' }, ];
         gantt.config.subscales = [{ unit: "month", step: 1, date: "%M" }];

         var date = new Date(), m = date.getMonth();
         gantt.config.start_date = new Date(date.getFullYear(), m, 01);
         gantt.config.end_date = new Date(date.getFullYear(), m + 1, 01);


         var filteredData = $.grep(tasks.data,
                                   function (value) {
                                       return (value.start_date >= startDate && value.start_date <= endDate)
                                   }
                                 );
         var filteredTasks = { data: filteredData };

         gantt.init("gantt_here");

         var json_length = tasks.data.length;
         var gantt_div = document.getElementById("gantt_here");
         ////Modified by Sohel on 31st March 2014 for PL ticket #362, To set the scroll for Gantt chart
         //if (json_length.toString() == "0" || parseInt(json_length.toString()) <= 9) {
             //gantt_div.style.height = ((json_length * 35) + 94) + "px";
         //}
         //else {
             //gantt_div.style.height = "409px"; //No scroll required for max of 9 Records, so default height = (9*35) + 94 = 409
         //}
         ////

         // Added by KAPIL - #454 - to resolve extra space
         CalGanntHeight();

         //// Function to add class to each task bar.
         ////Modified By Maninder Singh Wadhva PL Ticket#47, 337
         gantt.templates.task_class = function (start, end, task) {
             return getCSSForTask(task);
         };

         gantt.parse(tasks);
     }
     else if (isQuater == "nextyear") {

         gantt.config.scale_unit = "year";
         gantt.config.step = 1;
         gantt.config.date_scale = "%Y";
         gantt.config.scale_height = 60;
         gantt.config.columns = [{ name: "text", label: "Task name", tree: true, width: '*' }, ];
         gantt.config.subscales = [{ unit: "month", step: 1, date: "%M" }];

         var date = new Date();
         gantt.config.start_date = new Date(date.getFullYear() + 1, 00, 01);
         gantt.config.end_date = new Date(date.getFullYear() + 2, 00, 01);
         gantt.init("gantt_here");

         var json_length = tasks.data.length;
         var gantt_div = document.getElementById("gantt_here");
         ////Modified by Sohel on 31st March 2014 for PL ticket #362, To set the scroll for Gantt chart
         //if (json_length.toString() == "0" || parseInt(json_length.toString()) <= 9) {
             //gantt_div.style.height = ((json_length * 35) + 94) + "px";
         //}
         //else {
             //gantt_div.style.height = "409px"; //No scroll required for max of 9 Records, so default height = (9*35) + 94 = 409
         //}
         ////

         // Added by KAPIL - #454 - to resolve extra space
         CalGanntHeight();

         //// Function to add class to each task bar.
         ////Modified By Maninder Singh Wadhva PL Ticket#47, 337
         gantt.templates.task_class = function (start, end, task) {
             return getCSSForTask(task);
         };

         gantt.parse(tasks);
     } else if (isQuater == "planYear") {
         // Edited to add PlanYear option.
         gantt.config.scale_unit = "year";
         gantt.config.step = 1;
         gantt.config.date_scale = "%Y";
         gantt.config.scale_height = 60;
         gantt.config.columns = [{ name: "text", label: "Task name", tree: true, width: '*' }, ];
         gantt.config.subscales = [{ unit: "month", step: 1, date: "%M" }];

         gantt.config.start_date = new Date(planYear, 00, 01);
         gantt.config.end_date = new Date(planYear + 1, 00, 01);
         gantt.init("gantt_here");

         var json_length = tasks.data.length;
         var gantt_div = document.getElementById("gantt_here");
         ////Modified by Sohel on 31st March 2014 for PL ticket #362, To set the scroll for Gantt chart
         //if (json_length.toString() == "0" || parseInt(json_length.toString()) <= 9) {
             //gantt_div.style.height = ((json_length * 35) + 94) + "px";
         //}
         //else {
             //gantt_div.style.height = "409px"; //No scroll required for max of 9 Records, so default height = (9*35) + 94 = 409
         //}
         ////

         // Added by KAPIL - #454 - to resolve extra space
         CalGanntHeight();

         //// Function to add class to each task bar.
         ////Modified By Maninder Singh Wadhva PL Ticket#47, 337
         gantt.templates.task_class = function (start, end, task) {
             return getCSSForTask(task);
         };

         gantt.parse(tasks);
     }

     //// Hide/Show Tabulated data shown below gantt of request tab.
     if (GanttTabs.Request == type) {

         // Below function commented by dharmraj coz with below function gantt_chart shows lines.
         //// Calculating height for grid
         //modSampleHeight();

         var gantt_div1 = document.getElementById("gantt_here");
         ////Modified by Sohel on 31st March 2014 for PL ticket #362, To set the scroll for Gantt chart
         //var totalRecords = tasks.data.length;
         //if (totalRecords.toString() == "0" || parseInt(totalRecords.toString()) <= 9) {
             //gantt_div1.style.height = ((totalRecords * 35) + 94) + "px";
             //$(".shadow-scroll-gantt").addClass("full-width");
         //}
         //else {
             //gantt_div1.style.height = "409px";
             //$(".shadow-scroll-gantt").removeClass("full-width");
         //}

         // Added by KAPIL - #454 - to resolve extra space
         CalGanntHeight();

         ////
         gantt.config.min_column_width = function (data) {
             return 10;
         };
     }

     //// Modified by :- Sohel Pathan on 10/04/2014 for PL ticket #419 to display tactic count properly in left nav-menu
     isRender = true;
     gantt.eachTask(function (task) {
         //// Modified by :- Maninder Singh for PL ticket #203 	Performance issue - Home screen taking too long to load.
         //gantt.open(task.id);

         // Modified by dharmraj for #485 Planning Window doesnt remember previous view
         if (arrClosedTask.indexOf(task.id) > -1) {
             gantt.getTask(task.id).$open = false;
         }
         else {
             gantt.getTask(task.id).$open = true;
         }

         CountTacticForRenderChart(task.id, '');
     })

     //// Modified by :- Maninder Singh for PL ticket #203 	Performance issue - Home screen taking too long to load.
     gantt.refreshData();

     isRender = false;
     ////

     AttachEventToTactic();

     // added by dharmraj to display tooltip on camp., prog., tactic name in calendar.
     $(".gantt_container .gantt_tree_content").each(function (index, element) {
         $(element).attr("title", element.innerHTML);
     });
 }

 //// Added by :- Sohel Pathan on 10/04/2014 for PL ticket #419 to display tactic count properly in left nav-menu
 function CountTacticForRenderChart(leftNavTaskID, CampaignID) {
     /////Modified By Maninder Singh Wadhva PL Ticket#47, 337
     if (leftNavTaskID.substring(0, 1) == "M") {
         $("#DivAccordionImprovementActivities").find('span[id^="spnimprovement_"]').each(function (index1) {
             var tid = this.id.substring(this.id.indexOf('_') + 1);
             var cnt = 0;
             var a = gantt.getChildren(leftNavTaskID);
             $("#accordion-element-improvement-" + tid).find('a[class^="accordion-inner"]').each(function (index2) {
                 var taskid = $(this).attr('taskid');
                 var taskVisible = $("#gantt_here").find('div[task_id="' + taskid + '"]');
                 if (CampaignID == '') {
                     if (taskid == leftNavTaskID && (typeof taskVisible != 'undefined') && taskVisible.length > 0) {
                         cnt = cnt + 1;
                     }
                 }
                 else {
                     if (taskid.indexOf(CampaignID) >= 0 && leftNavTaskID.indexOf("_I") > 0 && !(leftNavTaskID.indexOf("_Y") > 0) &&
                         (typeof taskVisible != 'undefined') && taskVisible.length > 0) {
                         cnt = cnt + 1;
                     }
                 }
             });

             if ($("#" + this.id).text() != '' && leftNavTaskID.indexOf("_I") > 0) {
                 updateCountOnExpand($("#" + this.id), cnt);
             }
         });
     }
     else {
         $("#DivAccordionMarketingActivities").find('span[id^="spn_"]').each(function (index0) {
             var tid = this.id.substring(this.id.indexOf('_') + 1);
             cnt = 0;
             $("#accordion-element-" + tid).find('a[class^="accordion-inner"]').each(function (index1) {
                 var taskid = $(this).attr('taskid');
                 var taskVisible = $("#gantt_here").find('div[task_id="' + taskid + '"]');
                 if (CampaignID == '') {
                     if (taskid == leftNavTaskID && (typeof taskVisible != 'undefined') && taskVisible.length > 0) {
                         cnt = cnt + 1;
                     }
                 }
                 else {
                     if (taskid.indexOf(CampaignID) >= 0 && leftNavTaskID.indexOf("_T") > 0 && !(leftNavTaskID.indexOf("_Y") > 0) &&
                         (typeof taskVisible != 'undefined') && taskVisible.length > 0) {
                         cnt = cnt + 1;
                     }
                 }
             });

             if ($("#" + this.id).text() != '' && leftNavTaskID.indexOf("_T") > 0) {
                 updateCountOnExpand($("#" + this.id), cnt);
             }
         });
     }
 }

 ////Modified By Maninder Singh Wadhva PL Ticket#47, 337
 function getCSSForTask(task) {
     var isImprovement = false;
     if (typeof task.plantacticid != 'undefined' || (typeof task.isImprovement != 'undefined' && task.isImprovement == true)) {
         var cssClass = task.color + ' cursorPointer' + (task.isSubmitted && (GanttTabs.Request == type) ? ' to-approve' : '');
         if (typeof task.isImprovement != 'undefined' && task.isImprovement == true &&
             typeof task.ImprovementPlanTacticId != 'undefined') {
             cssClass += ' improvement border-top';
             isImprovement = true;
         }
         else {
             if (!task.$open) {
                 ///Modified by Dharmraj PL Ticket#394 - Apply required styling on the Improvement activity in calendar
                 cssClass = ' improvement improvementcolor27A4E5 colorC6EBF3-with-border ';
             }
             else {
                 cssClass += ' no_drag ';
             }
         }
     } else {
         cssClass = task.color + ' no_drag ';
     }

     //// Added by Sohel on 12/05/2014 for PL #425 to Show status of tactics on Home and Plan screen
     if (showTacticStatus == true) {
         if (task.Status == "Created")
             cssClass += " tactic-created";
         else if (task.Status == "Submitted")
             cssClass += " tactic-submitted ";
         else if (task.Status == "Approved" || task.Status == "Complete" || task.Status == "In-Progress")
             cssClass += " tactic-approved";
         else if (task.Status == "Rejected" || task.Status == "Declined")
             cssClass += " tactic-rejected";

         if(isImprovement == true)
             cssClass += " improvement-border-top-status";
     }
     return cssClass;
 }

 function Quarter() {
     gantt.config.scale_unit = "month";
     gantt.config.step = 12;
     gantt.config.date_scale = " %Y";

     gantt.config.scale_height = 60;
     gantt.config.columns = [{ name: "text", label: "Task name", tree: true, width: '*' }, ];
     gantt.config.subscales = [{ unit: "month", step: 1, date: "%M" }];

     //// Getting quarter
     var startDate = getQarterStartDate();
     var endDate = new Date(startDate.getFullYear(), startDate.getMonth() + 3, 1);
     gantt.config.start_date = startDate;
     gantt.config.end_date = endDate;

     //// filtering quater data
     var filteredData = $.grep(tasks.data,
                                function (value) {
                                    return (value.start_date >= startDate && value.start_date <= endDate)
                                }
                              );
     var filteredTasks = { data: filteredData };

     gantt.init("gantt_here");

     var json_length = filteredTasks.data.length;
     var gantt_div = document.getElementById("gantt_here");
     gantt_div.style.height = ((json_length * 35) + 94) + "px";

     //// Function to add class to each task bar.
     gantt.templates.task_class = function (start, end, task) {
         if (typeof task.plantacticid != 'undefined') {
             return task.color + ' cursorPointer' + (task.isSubmitted && (GanttTabs.Request == type) ? ' to-approve' : '');
         } else {
             return task.color;
         }
     };
     gantt.parse(filteredTasks);
 }

 function year() {
     gantt.config.scale_unit = "year";
     gantt.config.step = 1;
     gantt.config.date_scale = "%Y";
     gantt.config.scale_height = 60;
     gantt.config.columns = [{ name: "text", label: "Task name", tree: true, width: '*' }, ];
     gantt.config.subscales = [{ unit: "month", step: 1, date: "%M" }];

     gantt.config.start_date = new Date(planYear, 00, 01);
     gantt.config.end_date = new Date(planYear + 1, 00, 01);
     gantt.init("gantt_here");

     var json_length = tasks.data.length;
     var gantt_div = document.getElementById("gantt_here");
     gantt_div.style.height = ((json_length * 35) + 94) + "px";

     //// Function to add class to each task bar.
     gantt.templates.task_class = function (start, end, task) {
         if (typeof task.plantacticid != 'undefined') {
             return task.color + ' cursorPointer' + (task.isSubmitted && (GanttTabs.Request == type) ? ' to-approve' : '');
         } else {
             return task.color;
         }
     };

     gantt.parse(tasks);
 }

 function thismonth() {
     gantt.config.scale_unit = "month";
     gantt.config.step = 12;
     gantt.config.date_scale = " %Y";

     gantt.config.scale_height = 60;
     gantt.config.columns = [{ name: "text", label: "Task name", tree: true, width: '*' }, ];
     gantt.config.subscales = [{ unit: "month", step: 1, date: "%M" }];

     //// Getting quarter
     var date = new Date();
     var startDate = new Date(date.getFullYear(), date.getMonth(), 1);
     var endDate = new Date(date.getFullYear(), date.getMonth() + 1, 0);

     //var startDate = getQarterStartDate();
     //var endDate = new Date(startDate.getFullYear(), startDate.getMonth() + 3, 1);
     gantt.config.start_date = startDate;
     gantt.config.end_date = endDate;

     //// filtering quater data
     var filteredData = $.grep(tasks.data,
                                function (value) {
                                    return (value.start_date >= startDate && value.start_date <= endDate)
                                }
                              );
     var filteredTasks = { data: filteredData };

     gantt.init("gantt_here");

     var json_length = filteredTasks.data.length;
     var gantt_div = document.getElementById("gantt_here");
     gantt_div.style.height = ((json_length * 35) + 94) + "px";

     //// Function to add class to each task bar.
     gantt.templates.task_class = function (start, end, task) {
         if (typeof task.plantacticid != 'undefined') {
             return task.color + ' cursorPointer' + (task.isSubmitted && (GanttTabs.Request == type) ? ' to-approve' : '');
         } else {
             return task.color;
         }
     };
     gantt.parse(filteredTasks);
 }

 function nextyear() {
     gantt.config.scale_unit = "year";
     gantt.config.step = 1;
     gantt.config.date_scale = "%Y";
     gantt.config.scale_height = 60;
     gantt.config.columns = [{ name: "text", label: "Task name", tree: true, width: '*' }, ];
     gantt.config.subscales = [{ unit: "month", step: 1, date: "%M" }];

     gantt.config.start_date = new Date(planYear + 1, 00, 01);
     gantt.config.end_date = new Date(planYear + 2, 00, 01);
     gantt.init("gantt_here");

     var json_length = tasks.data.length;
     var gantt_div = document.getElementById("gantt_here");
     gantt_div.style.height = ((json_length * 35) + 94) + "px";

     //// Function to add class to each task bar.
     gantt.templates.task_class = function (start, end, task) {
         if (typeof task.plantacticid != 'undefined') {
             return task.color + ' cursorPointer' + (task.isSubmitted && (GanttTabs.Request == type) ? ' to-approve' : '');
         } else {
             return task.color;
         }
     };

     gantt.parse(tasks);
 }

 function modSampleHeight() {
     var headHeight = 94;
     var sch = document.getElementById("gantt_here");
     sch.style.height = (parseInt(document.body.offsetHeight) - headHeight) + "px";
     //var contbox = document.getElementById("contbox");
     //contbox.style.width = (parseInt(document.body.offsetWidth)-300)+"px";

     gantt.setSizes();
 }

 //// Variable to hold double click event.
 var eventTaskDoubleClick;
 //// Function to attach event to show inspect model.
 function AttachEventToTactic() {
     //// Detaching double click event.
     if (eventTaskDoubleClick != undefined) {
         gantt.detachEvent(eventTaskDoubleClick);
     }

     //// Attaching double click event
     eventTaskDoubleClick = gantt.attachEvent("onTaskDblClick", function (taskId, e) { ShowModel(taskId, null) });
 }

 //// Modified By Maninder Singh Wadhva PL Ticket#47
 function ShowModel(taskId, isShowInspect) {
     var task, planTacticId, planProgramId, planCampaignId;
     var isImprovement = false;
     if (taskId != null) {
         task = gantt.getTask(taskId);
         planCampaignId = task.plancampaignid;
         planProgramId = task.planprogramid;

         isImprovement = (typeof task.isImprovement != 'undefined' && task.isImprovement == true)

         if (isImprovement) {
             planTacticId = task.ImprovementPlanTacticId;
         }
         else {
             planTacticId = task.plantacticid;
         }
     } else if (isShowInspect) {
         planTacticId = $("#hdnshowInspectForPlanTacticId").val();
         planCampaignId = $("#hdnshowInspectForPlanCampaignId").val();
         planProgramId = $("#hdnshowInspectForPlanProgramId").val();
         isImprovement = $('#hdnIsImprovement').val().toLowerCase();
     }

     //// Checking whether current task is improvement tactic or not.
     if (typeof planTacticId != 'undefined' && planTacticId != 0 && isImprovement == true) {

         modalPosition(); /* added by Nirav shah for  Inspect screen : css changes as per new HTML*/
         $("#modal-container-186470").modal('show');
         $("#successMessage").css("display", "none");
         $("#errorMessage").css("display", "none");
         loadInspectPopup(planTacticId, "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.ImprovementTactic).ToLower()", "Setup");
    }
        //// Checking whether current task is tactic or not.
    else if (typeof planTacticId != 'undefined' && planTacticId != 0) {
        modalPosition(); /* added by Nirav shah for  Inspect screen : css changes as per new HTML*/
        $("#modal-container-186470").modal('show');
        $("#successMessage").css("display", "none");
        $("#errorMessage").css("display", "none");
        loadInspectPopup(planTacticId, "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Tactic).ToLower()", "Setup");
    }

        //// Checking whether current task is tactic or not.
    else if (typeof planProgramId != 'undefined' && planProgramId != 0) {
        modalPosition(); /* added by Nirav shah for  Inspect screen : css changes as per new HTML*/
        $("#modal-container-186470").modal('show');
        $("#successMessage").css("display", "none");
        $("#errorMessage").css("display", "none");
        loadInspectPopup(planProgramId, "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Program).ToLower()", "Setup");
    }

        //// Checking whether current task is tactic or not.
    else if (typeof planCampaignId != 'undefined' && planCampaignId != 0) {
        modalPosition(); /* added by Nirav shah for  Inspect screen : css changes as per new HTML*/
        $("#modal-container-186470").modal('show');
        $("#successMessage").css("display", "none");
        $("#errorMessage").css("display", "none");
        loadInspectPopup(planCampaignId, "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Campaign).ToLower()", "Setup");
    }
}

$("#modal-container-186470").on("show", function (e) { $("#modalMainContainer").show(); });
$("#modal-container-186470").on("hide", function (e) { $("#modalMainContainer").hide(); $("#divCollaborator").unbind('click'); });

//Scrip Addded By Bhavesh for Inspect Popup

// Added By Bhavesh
// Inspect Popup
/// Start Script Of Inspect Popup
/// Modified by Kunal to add  section parameter to open popup campaign, program or tactic wise
function loadInspectPopup(id, section, tabValue) {
    var url = '@Url.Content("~/Home/LoadInspectPopup")';
    $("#divPartial").empty();
    //$("#divPartial").load(url + '?id=' + id + '&TabValue=' + tabValue);
    $("#divPartial").load(url + '?id=' + id + '&Section=' + section + '&TabValue=' + tabValue);
}

//End Script Of Bhaveh

//// Modified By Maninder Singh Wadhva PL Ticket#47
//Start Creating and Populating tabulated data
function FillTacticsTable() {
    $('#table_activities > tbody >tr').remove();
    if (typeof activities != 'undefined') {
        if (activities.data.length) {
            for (i in activities.data) {
                addRowTactic(i, activities.data[i].id, activities.data[i].text, activities.data[i].inqs,
                    activities.data[i].mqls, activities.data[i].cws, activities.data[i].cost, activities.data[i].isDeclined, activities.data[i].isSubmitted, activities.data[i].isImprovement);
            }
        }
    }
}

//// Modified By Maninder Singh Wadhva PL Ticket#47
//add row in tactics table
function addRowTactic(index, id, text, inqs, mqls, cws, cost, isDeclined, isSubmitted, isImprovement) {
    var $activitiesTable = $('#table_activities > tbody');
    var $html = "";
    if (isImprovement) {
        var valueForImprovement = '---';
        inqs = valueForImprovement;
        mqls = valueForImprovement;
        cws = valueForImprovement;
    }
    if (isDeclined) {
        $html += '<tr class="rejected" id="' + id + '" data-index="' + index + '">' +
                    '<td class="border-r sm">'

        if (isImprovement) {
            $html += '<span class="bullhorn-icon"></span>'
        }

        $html += '<span class="title-baseline-model">' + text + '</span><span class="search-icon"></span></td>' +
                    '<td class="sm">' + inqs + '</td>' +
                    '<td class="sm">' + mqls + '</td>' +
                    '<td class="sm">' + FormatCurrency(cws, false) + '</td>' +
                    '<td class="border-r sm">' + FormatCurrency(cost, false) + '</td>' +
                    '<td><span class="reject-icon active"></span><span class="accept-icon"></span></td>' +
                '</tr>';
    } else if (isSubmitted) {
        $html += '<tr class="pending"  id="' + id + '" data-index="' + index + '">' +
                    '<td class="border-r sm">'

        if (isImprovement) {
            $html += '<span class="bullhorn-icon"></span>'
        }

        $html += '<span class="title-baseline-model">' + text + '</span><span class="search-icon"></span></td>' +
                    '<td class="sm">' + inqs + '</td>' +
                    '<td class="sm">' + mqls + '</td>' +
                    '<td class="sm">' + FormatCurrency(cws, false) + '</td>' +
                    '<td class="border-r sm">' + FormatCurrency(cost, false) + '</td>' +
                    '<td><span class="reject-icon"></span><span class="accept-icon"></span></td>' +
                '</tr>';
    }

    $activitiesTable.append($html);

}

$(document).on("click", ".accept-icon", function () {
    var task = gantt.getTask($(this.parentNode.parentNode).attr("id"));
    ApproveTactic(this, task);
})

//// Modified By Maninder Singh Wadhva PL Ticket#47
function ApproveTactic(e, task) {
    var approveDeclineTacticId;
    var isImprovement = false;
    if (typeof task.isImprovement != 'undefined' && task.isImprovement == true) {
        approveDeclineTacticId = task.ImprovementPlanTacticId;
        isImprovement = true;
    }
    else {
        approveDeclineTacticId = task.plantacticid;
    }

    $.ajax({
        type: 'POST',
        url: '@Url.Content("~/Home/ApproveDeclineTactic/")',
        data: {
            planTacticId: approveDeclineTacticId,
            isApprove: true,
            isImprovement: isImprovement
        },
        dataType: "json",
        success: function (data) {
            if (data.result == true) {
                if (task.isSubmitted) {
                    $('#RequestCount').html($('#RequestCount').html() - 1);
                }

                var index = $(e.parentNode.parentNode).attr("data-index");
                task.isDeclined = false;
                task.isSubmitted = false;
                activities.data.splice(index, 1);
                console.log($('#index_activity'));
                $('#table_activities tbody tr').remove();
                FillTacticsTable();
                gantt.refreshData();

                // Added by Dharmraj to refresh current tab for PL #364
                RefreshCurrentTab();
            }
            else {
                alert('Not Approved');
            }
        }
    });
}

$(document).on("click", ".reject-icon", function () {
    var task = gantt.getTask($(this.parentNode.parentNode).attr("id"));
    DeclineTactic(this, task);
})

//// Modified By Maninder Singh Wadhva PL Ticket#47
function DeclineTactic(e, task) {
    var approveDeclineTacticId;
    var isImprovement = false;
    if (typeof task.isImprovement != 'undefined' && task.isImprovement == true) {
        approveDeclineTacticId = task.ImprovementPlanTacticId;
        isImprovement = true;
    }
    else {
        approveDeclineTacticId = task.plantacticid;
    }

    $.ajax({
        type: 'POST',
        url: '@Url.Content("~/Home/ApproveDeclineTactic/")',
        data: {
            planTacticId: approveDeclineTacticId,
            isApprove: false,
            isImprovement: isImprovement
        },
        dataType: "json",
        success: function (data) {
            if (data.result == true) {
                if (task.isSubmitted) {
                    $('#RequestCount').html($('#RequestCount').html() - 1);
                }
                var index = $(e.parentNode.parentNode).attr("data-index");
                var activityTemp = activities.data[index];
                activities.data.splice(index, 1);
                $('#table_activities tbody tr').remove();
                activityTemp.isDeclined = true;
                activityTemp.isSubmitted = false;
                activities.data.push(activityTemp);
                FillTacticsTable();
                gantt.refreshData();

                // Added by Dharmraj to refresh current tab for PL #364
                RefreshCurrentTab();
            }
            else {
                alert('Not Declined');
            }
        }
    });
}

//tbody tr
$("#table_activities").on("click", ".sm", function () {
    ShowModel($(this.parentNode).attr("id"), null)
})
//End Creating and Populating tabulated data

/// Script End
/// Added By: Maninder Singh Wadhva.

/// Ended Script Of Inspect Popup
function GetHealderData(intplanid) {
    $.ajax(
    {
        type: "GET",
        cache: false,
        url: '@Url.Action("GetPlanByPlanID", "Plan")',
        data: {
            planid: intplanid

        },
        dataType: "json",
        success: function (data) {
            if (data != null) {

                $.each(data.lstHomePlanModelHeader, function (index, obj) {
                    if (index == "MQLs") {
                        $("#pMQLs").html(obj);
                        SetPriceValue("#pMQLs");
                    }
                    else if (index == "Budget") {
                        $("#pbudget").html(obj);
                        SetBudget("#pbudget");
                    }
                    else if (index == "TacticCount") {
                        $("#ptacticcount").html(obj);
                    }
                    else if (index == "mqlLabel") {
                        $("#pmqlLabel").html(obj);
                    }
                    else if (index == "costLabel") {
                        $("#pcostLabel").html(obj);
                    }
                    else if (index == "PercentageMQLImproved") {
                        /// Added By: Maninder Singh Wadhva
                        /// Addressed PL Ticket: 37,38,47,49

                        var pMQLImproved = $("#pMQLImproved");
                        pMQLImproved.removeClass("greenfont");
                        pMQLImproved.removeClass("redfont");

                        var divBullhornbg = $('#DivBullhornbg');
                        divBullhornbg.removeClass("bullhorn-bg-disabled");
                        divBullhornbg.removeClass("bullhorn-bg");
                        if (obj != null) {
                            divBullhornbg.addClass("bullhorn-bg");
                            if (obj < 0) {
                                pMQLImproved.html(FormatNumber(obj, true))
                                pMQLImproved.addClass("redfont");
                            }
                            else {
                                pMQLImproved.html("+" + FormatNumber(obj, true))
                                pMQLImproved.addClass("greenfont");
                            }
                        }
                        else {
                            divBullhornbg.addClass("bullhorn-bg-disabled");
                            pMQLImproved.html('---');
                        }
                    }

                });

            }
        }
    });
}
function GetNumberOfActivityPerMonByPlanId(intplanid, strParam) {
    $.ajax(
    {
        type: "GET",
        cache: false,
        url: '@Url.Action("GetNumberOfActivityPerMonthByPlanId", "Home")',
        data: {
            planid: intplanid,
            strparam: strParam
        },
        dataType: "json",
        success: function (data) {
            if (data != null) {
                $(".dhx_canvas_text").remove();
                $("canvas").remove();
                setgraphdata(data);

            }
        }
    });
}
function setgraphdata(data) {

    var barChart2 = new dhtmlXChart({
        view: "bar",
        container: "chart2",
        value: "#NoOfActivity#",
        label: "#NoOfActivity#",
        color: "#Color#",
        radius: 3,
        padding: {
            top: 25,
            bottom: 16,
            right: 00,
            left: 00

        },
        xAxis: {

            template: "#Month#"
        },
    });
    barChart2.parse(data.lstchart, "json");
}

//// Modified By Maninder Singh Wadhva PL Ticket#47
gantt.attachEvent("onTaskOpened", function (id) {
    var planid = CurrentPlanId;
    //// Modified by :- Sohel Pathan on 10/04/2014 for PL ticket #419 to display tactic count properly in left nav-menu
    if (typeof isRender == 'undefined' || isRender == false) {
        OnTaskExapnd(id);
    }

    arrClosedTask = jQuery.grep(arrClosedTask, function (value) {
        return value != id;
    });

    // added by dharmraj to display tooltip on camp., prog., tactic name in calendar.
    $(".gantt_container .gantt_tree_content").each(function (index, element) {
        $(element).attr("title", element.innerHTML);
    });

    ////
});

//// Added by :- Sohel Pathan on 11/04/2014 for PL ticket #419 to display tactic count properly in left nav-menu
function OnTaskExapnd(id) {

    if (id.substring(0, 1) == "C" || id.substring(0, 1) == "B" || id.substring(0, 1) == "A" || id.substring(0, 1) == "S" || id.substring(0, 1) == "V") {
        var intid = 0;
        if (id.indexOf("P") >= 0) {
            intid = id.substring(id.indexOf('P') + 1);
        }
        if (intid != 0) {
            //// Two levels Exapnding tabs
            $("#DivAccordionMarketingActivities").find('span[id^="spn_"]').each(function (index0) {
                //alert("Wrong Call For = " + id);
                var tid = this.id.substring(this.id.indexOf('_') + 1);
                var cnt = 0;
                var a = gantt.getChildren(id);
                $("#accordion-element-" + tid).find('a[class^="accordion-inner"]').each(function (index1) {
                    var taskid = $(this).attr('taskid');
                    var taskVisible = $("#gantt_here").find('div[task_id="' + taskid + '"]');
                    $.each(a, function (index2, value2) {
                        if (taskid == value2 && (typeof taskVisible != 'undefined') && taskVisible.length > 0) {
                            cnt = cnt + 1;
                        }
                    });
                });

                if ($("#" + this.id).text() != '') {
                    updateCountOnExpand($("#" + this.id), cnt);
                }
            });
        }
        else {
            //// Three levels Exapnding tabs
            if (id.substring(0, 1) == "C") {
                $("#DivAccordionMarketingActivities").find('span[id^="spn_"]').each(function (index0) {
                    var tid = this.id.substring(this.id.indexOf('_') + 1);
                    var cnt = 0;
                    var a = gantt.getChildren(id);
                    $.each(a, function (index1, value1) {
                        var child = gantt.getChildren(value1);
                        $("#accordion-element-" + tid).find('a[class^="accordion-inner"]').each(function (index2) {
                            var taskid = $(this).attr('taskid');
                            var taskVisible = $("#gantt_here").find('div[task_id="' + taskid + '"]');
                            $.each(child, function (index3, value3) {
                                if (taskid == value3 && (typeof taskVisible != 'undefined') && taskVisible.length > 0) {
                                    cnt = cnt + 1;
                                }
                            });
                        });
                    });

                    if ($("#" + this.id).text() != '') {
                        updateCountOnExpand($("#" + this.id), cnt);
                    }
                });
            }
                //// Four levels Exapnding tabs
            else if (id.substring(0, 1) == "B" || id.substring(0, 1) == "A" || id.substring(0, 1) == "S" || id.substring(0, 1) == "V") {
                $("#DivAccordionMarketingActivities").find('span[id^="spn_"]').each(function (index0) {
                    var tid = this.id.substring(this.id.indexOf('_') + 1);
                    var cnt = 0;
                    var a = gantt.getChildren(id);
                    $.each(a, function (index1, value1) {
                        var child1 = gantt.getChildren(value1);
                        $.each(child1, function (index4, value4) {
                            var child = gantt.getChildren(value4);
                            $("#accordion-element-" + tid).find('a[class^="accordion-inner"]').each(function (index2) {
                                var taskid = $(this).attr('taskid');
                                var taskVisible = $("#gantt_here").find('div[task_id="' + taskid + '"]');
                                if (child.length > 0) {
                                    $.each(child, function (index3, value3) {
                                        if (taskid == value3 && (typeof taskVisible != 'undefined') && taskVisible.length > 0) {
                                            cnt = cnt + 1;
                                        }
                                    });
                                }
                                else {
                                    if (taskid == value4 && (typeof taskVisible != 'undefined') && taskVisible.length > 0) {
                                        cnt = cnt + 1;
                                    }
                                }
                            });
                        });
                    });

                    if ($("#" + this.id).text() != '') {
                        updateCountOnExpand($("#" + this.id), cnt);
                    }
                });
            }
        }
    }
        //// Two levels Expanding tabs
        ////Modified By Maninder Singh Wadhva PL Ticket#47, 337
    else if (id.substring(0, 1) == "M") {
        $("#DivAccordionImprovementActivities").find('span[id^="spnimprovement_"]').each(function (index1) {
            var tid = this.id.substring(this.id.indexOf('_') + 1);
            var cnt = 0;
            var a = gantt.getChildren(id);
            $("#accordion-element-improvement-" + tid).find('a[class^="accordion-inner"]').each(function (index2) {
                var taskid = $(this).attr('taskid');
                $.each(a, function (index, value) {

                    if (taskid == value) {
                        cnt = cnt + 1;
                    }
                });
            });

            if ($("#" + this.id).text() != '') {
                updateCountOnExpand($("#" + this.id), cnt);
            }
        });
    }
}

//// Added by :- Sohel Pathan on 10/04/2014 for PL ticket #419 to display tactic count properly in left nav-menu
function updateCountOnExpand(spanId, cnt) {
    var TotalCountText = ($(spanId).parent()).text();
    var TotalCount = parseInt((TotalCountText.substring(TotalCountText.indexOf('/') + 1)));
    var currentCount = parseInt(spanId.text());
    var sum = (currentCount + cnt);
    if (sum <= TotalCount) {
        spanId.text(sum);
    }
};

//// Modified By Maninder Singh Wadhva PL Ticket#47
gantt.attachEvent("onTaskClosed", function (id) {
    //// Modified by :- Sohel Pathan on 10/04/2014 for PL ticket #419 to display tactic count properly in left nav-menu
    OnTaskCollapse(id)

    if (arrClosedTask.indexOf(id) == -1) {
        arrClosedTask.push(id);
    }

    // added by dharmraj to display tooltip on camp., prog., tactic name in calendar.
    $(".gantt_container .gantt_tree_content").each(function (index, element) {
        $(element).attr("title", element.innerHTML);
    });

});

//// Added by :- Sohel Pathan on 11/04/2014 for PL ticket #419 to display tactic count properly in left nav-menu
function OnTaskCollapse(id) {

    if (id.substring(0, 1) == "C" || id.substring(0, 1) == "B" || id.substring(0, 1) == "A" || id.substring(0, 1) == "S" || id.substring(0, 1) == "V") {
        var intid = 0;
        if (id.indexOf("P") >= 0) {
            intid = id.substring(id.indexOf('P') + 1);
        }
        if (intid != 0) {
            //// Two levels Collapsing tabs
            $("#DivAccordionMarketingActivities").find('span[id^="spn_"]').each(function (index1) {
                var tid = this.id.substring(this.id.indexOf('_') + 1);
                var cnt = 0;
                var a = gantt.getChildren(id);
                $("#accordion-element-" + tid).find('a[class^="accordion-inner"]').each(function (index2) {
                    var taskid = $(this).attr('taskid');
                    $.each(a, function (index, value) {
                        if (taskid == value) {
                            cnt = cnt + 1;
                        }
                    });
                });

                updateTacticCountOnCollapse($("#" + this.id), cnt);
            });
        }
        else {
            //// Three levels Collapsing tabs
            if (id.substring(0, 1) == "C") {
                $("#DivAccordionMarketingActivities").find('span[id^="spn_"]').each(function (index0) {
                    var tid = this.id.substring(this.id.indexOf('_') + 1);
                    var cnt = 0;
                    var a = gantt.getChildren(id);
                    $.each(a, function (index1, value1) {
                        var child = gantt.getChildren(value1);
                        $("#accordion-element-" + tid).find('a[class^="accordion-inner"]').each(function (index2) {
                            var taskid = $(this).attr('taskid');
                            $.each(child, function (index3, value3) {
                                if (taskid == value3) {
                                    cnt = cnt + 1;
                                }
                            });
                        });
                    });

                    updateTacticCountOnCollapse($("#" + this.id), cnt);
                });
            }
                //// Four levels Collapsing tabs
            else if (id.substring(0, 1) == "B" || id.substring(0, 1) == "A" || id.substring(0, 1) == "S" || id.substring(0, 1) == "V") {
                $("#DivAccordionMarketingActivities").find('span[id^="spn_"]').each(function (index0) {
                    var tid = this.id.substring(this.id.indexOf('_') + 1);
                    var cnt = 0;
                    var a = gantt.getChildren(id);
                    $.each(a, function (index1, value1) {
                        var b = gantt.getChildren(value1);
                        $.each(b, function (index4, value4) {
                            var child = gantt.getChildren(value4);
                            $("#accordion-element-" + tid).find('a[class^="accordion-inner"]').each(function (index2) {
                                var taskid = $(this).attr('taskid');
                                if (child.length > 0) {
                                    $.each(child, function (index3, value3) {
                                        if (taskid == value3) {
                                            cnt = cnt + 1;
                                        }
                                    });
                                }
                                else {
                                    if (taskid == value4) {
                                        cnt = cnt + 1;
                                    }
                                }
                            });
                        });
                    });

                    updateTacticCountOnCollapse($("#" + this.id), cnt);
                });
            }
        }
    }
        //// Two levels Expanding tabs
        ////Modified By Maninder Singh Wadhva PL Ticket#47, 337
    else if (id.substring(0, 1) == "M") {
        $("#DivAccordionImprovementActivities").find('span[id^="spnimprovement_"]').each(function (index1) {
            var tid = this.id.substring(this.id.indexOf('_') + 1);
            var cnt = 0;
            var a = gantt.getChildren(id);
            $("#accordion-element-improvement-" + tid).find('a[class^="accordion-inner"]').each(function (index2) {
                var taskid = $(this).attr('taskid');
                $.each(a, function (index, value) {

                    if (taskid == value) {
                        cnt = cnt + 1;
                    }
                });
            });

            if ($("#" + this.id).text() != '') {
                $("#" + this.id).text(parseInt($("#" + this.id).text()) - cnt);
            }
        });
    }
}

//// Added by :- Sohel Pathan on 10/04/2014 for PL ticket #419 to display tactic count properly in left nav-menu
function updateTacticCountOnCollapse(spanId, cnt) {
    if (spanId.text() != '') {
        var TotalCountText = ($(spanId).parent()).text();
        var TotalCount = parseInt((TotalCountText.substring(TotalCountText.indexOf('/') + 1)));
        var currentCount = parseInt(spanId.text());
        var diff = (currentCount - cnt);
        if (diff >= 0) {
            spanId.text(diff);
        }
        else {
            spanId.text(TotalCount - cnt);
        }
    }
};

gantt.attachEvent("onTaskClick", function (id, e) {

    flg = false;

});
</script>
