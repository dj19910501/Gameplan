@model RevenuePlanner.Models.Plan_CampaignModel
@using RevenuePlanner.Helpers
@{
    // var campaign = (RevenuePlanner.Models.InspectModel)ViewBag.CampaignDetail;
    bool ExtIntService = (bool)ViewBag.ExtIntService;
    var deployStatus = Model.IsDeployedToIntegration == true ? "Yes" : "No";
    string planRemainingBudget = Convert.ToString(ViewBag.planRemainingBudget);
    //deployStatus = campaign.IsIntegrationInstanceExist == "N/A" ? "Plan not Integrated" : deployStatus; ////Modified by Mitesh Vaishnav for PL ticket #690 Model Interface - Integration
    string OwnerName = ViewBag.OwnerName;
    string PlanTitle = ViewBag.PlanTitle;
}

<script src="~/Scripts/js/bootstrap-datepicker.js"></script>   
<style type="text/css">
    #dp_start,#dp_end    {
        padding-left:0px;
    }
    
    #btnCancel {
    color: gray;
    margin-top: 6px;
}

</style>
@using (Html.BeginForm())
{
    
    @Html.HiddenFor(model => model.PlanCampaignId, new { id = "PlanCampaignId" })
    @Html.HiddenFor(model => model.IsDeployedToIntegration, new { id = "hdnIsDeployedToIntegration" })
    @Html.HiddenFor(model => model.PStartDate, new { id = "hdnPStartDate" })
    @Html.HiddenFor(model => model.PEndDate, new { id = "hdnPEndDate" })
    @Html.HiddenFor(model => model.TStartDate, new { id = "hdnTStartDate" })
    @Html.HiddenFor(model => model.TEndDate, new { id = "hdnTEndDate" })
    @Html.HiddenFor(model => model.CampaignBudget, new { id = "hdnOldCampaignBudget" })
    <div class="inspect-column-parent source-sans-proregular remove-bottom-border inspect-column-parent-reformatting">

        <div class="span6" id="inspect-modal-left-column1">
            <p>@Html.Raw("Parent Plan")</p>
            @Html.TextBox("txtPlan", HttpUtility.HtmlDecode(PlanTitle), new { @class = "input-small truncate", style = "background:#F2F2F2;", @readonly = "true", title = PlanTitle })
            <p>@Html.Raw("Description")</p>
            @Html.TextAreaFor(model=>model.Description, new {id="txtDescription", @class = "span12 text-area-size", style = "height:92px;" })
            
            <div style="clear: both; width: 250%;">
                <label style="color: #808080" id="last-synced" class="pull-left">@ViewBag.LastSync</label>
            </div>
        </div>
        <div class="span3" id="inspect-modal-left-column2" style="margin-left: 10px;">
           <p>@Html.Raw("Owner")</p>
                    @Html.TextBox("txtOwner", OwnerName, new { @class = "span12 input-small truncate", style = "background:#F2F2F2;", @readonly = "true"})
            <p>Start Date</p>
            <div class="dp datepicker input-append date without-margin calendar-width sidebar-datepicker" id="dp_start" data-date="@Model.StartDate.ToShortDateString()" data-date-format="@RevenuePlanner.Helpers.Common.DateFormatDatePicker">
                @Html.TextBoxFor(model => model.StartDate, new { @class = "span12 input-small truncate", @Value = Model.StartDate.ToString(@RevenuePlanner.Helpers.Common.DateFormat), id = "t_startdate" })
                <span class="add-on">
                    <img src="~/Content/images/gray-calendar-icon.png"></span>
            </div>
            <p class="clear-section" style="margin-top:2px;">End Date</p>
            <div class="dp datepicker input-append date without-margin calendar-width sidebar-datepicker" id="dp_end" data-date="@Model.EndDate.ToShortDateString()" data-date-format="@RevenuePlanner.Helpers.Common.DateFormatDatePicker">
                @Html.TextBoxFor(model => model.EndDate, new { @class = "span12 input-small truncate", @Value = Model.EndDate.ToString(@RevenuePlanner.Helpers.Common.DateFormat), id = "t_enddate" })
                <span class="add-on">
                    <img src="~/Content/images/gray-calendar-icon.png"></span>
            </div>
            <p class="clear-section" style=" padding-top: 6px;">@Html.Raw("Deployed to Integration")</p>
            @* @Html.TextBox("txtDeployStatus", deployStatus, new { @class = "span12 input-small truncate", id = "txtDeployStatus"})*@
            @if (ExtIntService)
            {
                if (Model.IsDeployedToIntegration)
                {
                <input id="t_integration_status" name="t_status" type="text" class="icon-check-blue" placeholder="Sync to integration" maxlength="18" readonly />
                }
                else
                {    
                <input id="t_integration_status" name="t_status" type="text" class="icon-check-gray" placeholder="Not Sync to integration" maxlength="18" readonly />
                }
            }
        </div>
        <div class="span3" id="inspect-modal-left-column3">
             <p>@Html.Raw("Campaign Budget")</p>
            @Html.TextBoxFor(model => model.CampaignBudget, new { @class = "currency_dollar span12 input-small truncate", id = "txtCampaignBudget", placeholder = "Required", require = "true" , maxlength = @RevenuePlanner.Helpers.Common.maxLengthDollar})
            <p>Remaining Campaign Budget</p>
                @Html.TextBox("txtRemainingBudget", planRemainingBudget, new { @class = "margin-top3px", id = "txtRemainingBudget", @readonly = "true" })
             <div class="content dark inline-ellipsis">
                        @if (!(bool)ViewBag.IsCreated)
                        {
                            <div class="cf width100">
                                <div class="width65px margin-right20 pull-left" style="width:40%;">
            <p>@Html.LabelForMQL("MQL")</p>
            @Html.TextBoxFor(model => model.MQLs, new { @class = "span12 input-small priceValue", @Value = Model.MQLs, @readonly = "true", maxlength = @RevenuePlanner.Helpers.Common.maxLengthPriceValue, placeholder = "0" })
                   </div>

                                <div class="width65px margin-right20 pull-left" style="width:40%;">
            <p>Cost</p>
            @Html.TextBoxFor(model => model.Cost, new { @class = "span12 input-small currency_dollar", @Value = Model.Cost, @readonly = "true", maxlength = @RevenuePlanner.Helpers.Common.maxLengthDollar, placeholder = "$0" })
            </div>

                                <div class="width65px pull-left" style="width:40%;">
                                    <p>Revenue</p>
            @Html.TextBoxFor(model => model.Revenue, new { @class = "span12 input-small currency_dollar", @readonly = "true", maxlength = @RevenuePlanner.Helpers.Common.maxLengthDollar, placeholder = "$0" })
                                     </div>
                            </div>
                        }
                    </div>
        </div>
    </div>
    <ul class="nav nav-tabs new-margin padding-bottom10 clear border-bottom-div" id="InspectTab">
        <li class="pull-right">
            <h3 class="modal-popup-innertitle source-sans-proregular">Attributes</h3>
        </li>
    </ul>
    <div class="inspect-column-parent source-sans-proregular remove-bottom-border margin-bottom0" id="attributesControlsArea">
        <div class="span3 margin-top10" style="clear: both;">
            <p>Business Unit</p>
            @Html.TextBox("txtBusinessUnit", (string)ViewBag.BudinessUnitTitle, new { @class = "span12 input-small truncate", style = "background:#F2F2F2;", @readonly = "true", title = (string)ViewBag.BudinessUnitTitle })
        </div>
        @HtmlHelpers.GenerateCustomFieldsForInspectPopup(Model.PlanCampaignId, Enums.EntityType.Campaign.ToString(), 1, "addEdit")

    </div>
    
                if ((bool)ViewBag.IsOwner)
                {           
    <div style="width: 100%; clear: both" class="wraper-btns cf border-top-div ">
        <div class="span2 btn-save" style="width: 122px">
            <button id="save_campaign" class="btn btn-blue text-shadow-blue source-sans-proregular margin-top23" type="button">Save & Continue</button>
        </div>
        <div class="span2">
            <button id="btnCancel" class="close-form btn-link source-sans-proregular" style="float: left; margin-left: 20px; margin-top: 30px !important" type="button">Cancel</button>
        </div>
    </div>
                }
}
<script type="text/javascript">


    function FormatRemainingBudget() {
        if (parseInt(ReplaceCC($("#txtRemainingBudget").val())) < 0) {
            $("#txtRemainingBudget").addClass('error-text');
        }
        else {
            $("#txtRemainingBudget").removeClass('error-text');
        }
    }

    $(document).ready(
      function () {

          $("#txtRemainingBudget").val(FormatCommasBudget($("#txtRemainingBudget").val(), false, true));
          FormatRemainingBudget();

          $("#successMessageViewCampaign").slideUp(50);
          $("#errorMessageEditCampaign").slideUp(50);

          $('.currency_dollar').priceFormat({ prefix: '$', centsSeparator: '', thousandsSeparator: ',', centsLimit: 0 });
          $('.priceValue').priceFormat({ prefix: '', centsSeparator: '', thousandsSeparator: ',', centsLimit: 0 });
          $('.priceValueAllowNull').priceFormat({ prefix: '', centsSeparator: '', thousandsSeparator: ',', centsLimit: 0, isAllowNull: true });
          $(".selectBox select").selectbox();

          $("#t_startdate").val($("#t_startdate").val().split(' ')[0]);
          $("#t_enddate").val($("#t_enddate").val().split(' ')[0]);

          if ($("#t_integration_status").val() == '') {
              if ($("#t_integration_status").hasClass("icon-check-blue")) {
                  $("#hdnIsDeployedToIntegration").val(true);
              }
              else {
                  $("#hdnIsDeployedToIntegration").val(false);
              }
          }
      });
    //<---  End Document.ready Event --->

    $("#btnCancel").click(function () {
        if ($('#PlanCampaignId').val() != '0') {
        CancelEvent();
        $("#successMessageViewCampaign").slideUp(50);
        $("#errorMessageEditCampaign").slideUp(50);
        }
        else {
            
            $("#modalMainContainer").hide();
           
        }
    });


    function CancelEvent() {
        $("#hdnCampaignOpt").val("View");
        loadReview('@Model.PlanCampaignId', "Setup");
        $("#btnEditCampaign").css("display", "block");
        $('#txtTitle').css('display', 'none');
        $('#lblCampaignTitle').css('display', 'block');
        $("#lblCampaignTitle").removeAttr("style");
    }

    $('#t_startdate').click(function () {
        $('#dp_end').datepicker('hide');
    });

    $('#t_enddate').click(function () {
        $('#dp_start').datepicker('hide');
    });

    $('#dp_start .add-on').click(function () {
        $('#dp_start').datepicker('show');
        $('#dp_end').datepicker('hide');
        $(".dropdown-menu").css("z-index", "25001");
    })

    $('#dp_end .add-on').click(function () {
        $('#dp_start').datepicker('hide');
        $('#dp_end').datepicker('show');
        $(".dropdown-menu").css("z-index", "25001");
    })



    $('.dp').datepicker({
        format: "@RevenuePlanner.Helpers.Common.DateFormatDatePicker",
        autoclose: true,
    }).on('changeDate', function (ev) {
        $(this).datepicker('hide');
    });

    $(".alert").find(".close").on("click", function (e) {
        e.stopPropagation();
        e.preventDefault();
        $(this).closest(".alert").slideUp(300);/*SlideUp value change 400 to 300 by Mitesh Vaishnav on 04 july 2014*/
    });

    $("#t_integration_status").click(function () {

        if ($(this).hasClass("icon-check-blue")) {
            $(this).val("Not Sync to integration");
            $(this).addClass("icon-check-gray");
            $(this).removeClass("icon-check-blue");
            $("#hdnIsDeployedToIntegration").val(false);
        }
        else {
            $(this).val("Sync to integration");
            $(this).addClass("icon-check-blue");
            $(this).removeClass("icon-check-gray");
            $("#hdnIsDeployedToIntegration").val(true);
        }

    });
    function ShowError(value) {
        $("#modal-container-186470").scrollTop(0);
        $("#successMessageViewCamapaign").slideUp(400);
        $("#spanSuccessMessageViewCamapaign").empty();
        $("#errorMessageEditCampaign").slideDown(400);
        $("#spanMessageEditCampaign").empty();
        $("#spanMessageEditCampaign").html(value);
    }


    $("#txtCampaignBudget").keyup(function () {
        var ProgramBudgetValue = ReplaceCC($("#txtCampaignBudget").val());
        var OldProgramBudgetValue = ReplaceCC($("#hdnOldCampaignBudget").val());
        var differenceVal = parseInt(OldProgramBudgetValue) - parseInt(ProgramBudgetValue);
        var newRemainingBudget = parseInt(ReplaceCC($("#txtRemainingBudget").val())) + differenceVal;

        $("#txtRemainingBudget").val(FormatCommasBudget(newRemainingBudget.toString(), false, true));
        $("#txtRemainingBudget").attr('title', $("#txtRemainingBudget").val());

        $("#hdnOldCampaignBudget").val(ProgramBudgetValue);
        if (parseInt(ReplaceCC($("#txtRemainingBudget").val())) < 0) {
            $("#txtRemainingBudget").addClass('error-text');
        }
        else {
            $("#txtRemainingBudget").removeClass('error-text');
        }
    });

    $("#save_campaign").click(function () {
        var iserror = false;
        var campaignTitle = htmlEncode($('#txtTitle').val());
        var hdnYear = @ViewBag.Year

        $('form').find('input[type=text], select, textarea').each(function () {
            if ($(this).attr('require') == 'true') {
                if ($(this).val().toString().trim() == '') {
                    $(this).addClass("error");
                    iserror = true;
                }
                else {
                    $(this).removeClass("error");
                }
            }
        });

        $('form').find('.sbSelector').each(function () {
            if ($(this).parent().prev().attr('require') == 'true') {
                if ($(this).text() == 'Please Select') {
                    $(this).addClass("error");
                    iserror = true;
                }
                else {
                    $(this).removeClass("error");
                }
            }
        });
        if (campaignTitle == "") {
            $('#txtTitle').addClass("error");
            iserror = true;
        }
        if (iserror) {
            ShowError("@RevenuePlanner.Helpers.Common.objCached.ValidateForEmptyField");
            return false;
        }

        if ($("#txtRemainingBudget").hasClass('error-text')) {
            ShowError("@RevenuePlanner.Helpers.Common.objCached.CannotAllocateMorethanRemainingBudgeted");
               return false;
           }

        sdate = $('#t_startdate').val();
        edate = $('#t_enddate').val();
        var psdate = $('#hdnPStartDate').val();
        var pedate = $('#hdnPEndDate').val();
        var tsdate = $('#hdnTStartDate').val();
        var tedate = $('#hdnTEndDate').val();
        $('#t_enddate').removeClass("error");
        $('#t_startdate').removeClass("error");
        if (!isDate(sdate)) {
            alert('@Common.objCached.ValidateStartDate');
            return false;
        }
        if (!isDate(edate)) {
            alert('@Common.objCached.ValidateEndDate');
            return false;
        }
        if (!CheckDateYear(sdate, hdnYear, "@RevenuePlanner.Helpers.Common.objCached.StartDateCurrentYear")) return false;
        if (!CheckDateYear(edate, hdnYear, "@RevenuePlanner.Helpers.Common.objCached.EndDateCurrentYear")) return false;
        if (!validateDateCompare(sdate, edate, "@RevenuePlanner.Helpers.Common.objCached.DateComapreValidation")) {
            return false;
        }
        if (!validateDateCompare(sdate, psdate, "@RevenuePlanner.Helpers.Common.objCached.ProgramStartDateCompareWithParentStartDate")) {
            return false;
        }
        if (!validateDateCompare(pedate, edate, "@RevenuePlanner.Helpers.Common.objCached.ProgramEndDateCompareWithParentEndDate")) {
            return false;
        }
        if (!validateDateCompare(sdate, tsdate, "@RevenuePlanner.Helpers.Common.objCached.TacticStartDateCompareWithParentStartDate")) {
            return false;
        }
        if (!validateDateCompare(tedate, edate, "@RevenuePlanner.Helpers.Common.objCached.TacticEndDateCompareWithParentEndDate")) {
            return false;
        }

        var _customFieldValues = [];
        $('form').find('input[type=text], select').each(function () {
            if ($(this).attr('cf_id') != '' && typeof $(this).attr('cf_id') != 'undefined' && $(this).val() != '') {
                _customFieldValues.push({
                    Key: $(this).attr('cf_id').toString(),
                    Value: htmlEncode($(this).val().toString())
                });
            }
        });
        _customFieldValues = JSON.stringify(_customFieldValues);
        
        document.getElementById("txtDescription").value = htmlEncode($('#txtDescription').val());////Added by Mitesh Vaishnav on 07/07/2014 for PL ticket #584
        $("#txtCampaignBudget").val(ReplaceCC($("#txtCampaignBudget").val()));
        $("#txtCampaignBudget").attr('title', $("#txtCampaignBudget").val());

       

        var formData = $("form").serialize();////Modified by Mitesh Vaishnav on 07/07/2014 for PL ticket #584
        var uId = $(window).attr('name');
        $.ajax({
            type: 'POST',
            url: '@Url.Content("~/home/SaveCampaign")',
            data: formData + '&UserId=' + uId + '&title=' + escape(campaignTitle) + '&customFieldInputs=' + escape(_customFieldValues)+ '&planId=@Model.PlanId',
            success: function (data) {
                if (data.returnURL != 'undefined' && data.returnURL == '#') {
                    window.location = '@Url.Content("~/Login/Index")';
                }
                else {
                    if (data.isSaved) {
                        /// CancelEvent();
                        var activeTab = $("#InspectTab li.active a").text()
                        var planCampaignId = $("#PlanCampaignId").val();
                        $("#successMessage").css("display", "block");
                        $("#spanMessageSuccess").empty();
                        $("#spanMessageSuccess").text(data.msg);
                        $("#errorMessage").css("display", "none");
                        $("#liReview,#liBudget,#liSetup").bind('click');
                        if (planCampaignId == '0') {
                            planCampaignId = data.CampaignID;
                        }
                        loadInspectPopup(planCampaignId, "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Campaign).ToLower()", activeTab);
                        RefreshCurrentTab();    //// Added by Sohel Pathan on 29/10/2014 for Internal Review Points
                        //$("#errorMessageEditCampaign").slideUp(50);
                        //$("#spanSuccessMessageViewCampaign").empty();
                        //$("#successMessageViewCampaign").slideDown(400);
                        //$("#spanSuccessMessageViewCampaign").empty();
                        //$("#spanSuccessMessageViewCampaign").html(data.msg);
                    }
                    else {
                        CancelEvent();
                        ShowError(data.msg);
                    }
                }
            }
        });
    });
</script>
