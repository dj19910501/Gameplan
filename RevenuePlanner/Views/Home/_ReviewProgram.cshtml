@using RevenuePlanner.Helpers
@{
    var programReview = (RevenuePlanner.Models.InspectModel)ViewBag.ProgramDetail;
    var db = new RevenuePlanner.Models.MRPEntities();
    bool IsProgramEditable = (bool)ViewBag.IsProgramEditable;
    ////Added by Mitesh Vaishnav for PL ticket #690 Model Interface - Integration
    string IntegrationStatus = programReview.IsIntegrationInstanceExist;    
    if (programReview.IsIntegrationInstanceExist == "Yes" && !programReview.IsDeployedToIntegration)
    {
        IntegrationStatus = "No";
    }
}
<div class="span5 width360" id="inspect-modal-right-div" style="width:420px !important;">
    @*<div class="font-size18">Overview</div>
    <div id="campaign-title" class="bold padding-top16 font-size18 tipsyclassTitle">@Html.Raw(programReview.CampaignTitle)</div>*@
    <div style="padding-bottom: 16px; margin-bottom: 24px;" class="span5 width96 border-bottom-div">
        <div style="float: left; width: 48%;">
            <div class="source-sans-prosemibold">Parent Campaign</div>
            <div>
                <div id="campaign-title" class="tipsyclassTitle sub-head">@Html.Raw(programReview.CampaignTitle)</div>
            </div>
        </div>
        @*<div style="float: right; width: 47%;">
            <div class="source-sans-prosemibold">Parent Program</div>
            <div>
                <div id="program-title1" class="tipsyclassTitle sub-head">@Html.Raw(tacticReview.ProgramTitle)</div>
            </div>
        </div>*@
    </div>
    <div class="cf source-sans-proregular padding-top32" style="padding-top: 26px !important;">
        <div class="chart-gray pull-left size80x78 without-padding remove-box-shadow review-box">
            <div class="padding-top16"><span id="startDay-id" class="font_size30" style="line-height:24px;">@programReview.StartDate.ToString("dd")</span></div>    @* Modified By :- Sohel Pathan on 21/05/2014 for PL ticket #483. *@
            <span id="startMonth-id" class="font_size16">@programReview.StartDate.ToString("MMM")</span>
            <div class="margin-top16" style="margin-top:20px !important;">Start</div>   @* Modified By :- Sohel Pathan on 21/05/2014 for PL ticket #483. *@
        </div>
        <div class="chart-gray pull-left size80x78 without-padding remove-box-shadow review-box">
            <div class="padding-top16"><span id="endDay-id" class="font_size30" style="line-height:24px;">@programReview.EndDate.ToString("dd")</span></div>    @* Modified By :- Sohel Pathan on 21/05/2014 for PL ticket #483. *@
            <span id="endMonth-id" class="font_size16">@programReview.EndDate.ToString("MMM")</span>
            <div class="margin-top16" style="margin-top:20px !important;">End</div> @* Modified By :- Sohel Pathan on 21/05/2014 for PL ticket #483. *@
        </div>
        @* Commented by Dharmraj for ticlet #440 *@
        @*<div class="chart-gray pull-left size65x38 without-padding">
            <div class="padding-top16"><span id="inq-id" class="font_size30" style="line-height:24px;">@programReview.INQs</span></div>*@     @* Modified By :- Sohel Pathan on 21/05/2014 for PL ticket #483. *@
            @*<span class="font_size16">@Html.LabelForINQ("INQ")</span>
            <div class="margin-top16">Goal</div>        *@ @* Modified By :- Sohel Pathan on 21/05/2014 for PL ticket #483. *@
        @*</div>*@
        <div class="chart-gray pull-left size80x78 without-padding remove-box-shadow review-box">
            <div class="padding-top16"><span id="mqls-id" class="font_size30 addFormatterActualNumber" style="line-height:24px;">@programReview.MQLs</span></div>    @* Modified By :- Sohel Pathan on 21/05/2014 for PL ticket #483. *@
            <span class="font_size16" title="@Html.LabelForMQL("MQL")">@Html.LabelForMQL("MQL")</span>
            <div class="margin-top16" style="margin-top:20px !important;">Goal</div>    @* Modified By :- Sohel Pathan on 21/05/2014 for PL ticket #483. *@
        </div>
    </div>
    <div class="cf margin-top40 textalign-mozcenter">
        <div class="pull-left size65x38 ">
            <div class="busunit"></div>
            <div>Bus. Unit</div>
            <span id="busunit-id" class="blue-text bold" title="@ViewBag.BudinessUnitTitle">@ViewBag.BudinessUnitTitle</span>
        </div>
        <div class="pull-left size65x38  margin-left20">
            <div class="owner"></div>
            <div>Owner</div>
            <span id="owner-id" class="blue-text bold" title="@programReview.Owner">@programReview.Owner</span>
        </div>
        <div class="pull-left size65x38 margin-left20">
            <div class="integration-review"></div>
            <div>
                <label id="integration">Integration</label></div>
            <span id="integration-id" class="blue-text bold" title="@IntegrationStatus">@IntegrationStatus</span>
        </div>
    </div>
</div>

<div class="span2 right-col-tab" id="inspect-modal-left-column2">
    @if ((bool)ViewBag.IsCommentsViewEditAuthorized)    // Added by Sohel Pathan on 19/06/2014 for PL ticket #519 to implement user permission Logic
    {
    <div>Notes</div>

    <div id="divComment" class="chat-div" style="overflow: auto;height: 290px !important;">
        <div id="divInnerComment"  class="comment-scroll-section all-height">
            @foreach (var item in ViewBag.ReviewModel)
            {
                <div class="post-div" style="clear: both; width: 100%; border-bottom: solid 1px #A8A8A8;">
                    <div style="float: left; width: 10%;">
                        <img class="avatar-user" src="@Url.Action("LoadUserImage", "User", new { id = item.CreatedBy })" alt="User avatar" /></div>
                    <div style="float: left; width: 90%;">
                        <span class="commentedby-color">@item.CommentedBy</span>
                        <span class="comment-color">@Html.Raw(item.Comment)</span><br />
                        <span class="font_size10" style="clear: both;">@item.CommentDate.ToString("MMM dd") at @item.CommentDate.ToString("hh:mmtt")</span>
                    </div>
                    <div style="clear: both;"></div>
                </div>
                                        
            }
        </div>
        <div></div>
    </div>
    <div class="padding-top10">

        @*<img class="avatar-user vertical-aligntop" src="@Url.Action("LoadUserImage", "User", new { id = RevenuePlanner.Helpers.Sessions.User.UserId })" alt="User avatar" />*@
        @Html.TextArea("txtAreaComment", new { id = "txtAreaComment", @class = "new-comment" })
        @if (IsProgramEditable && (bool)ViewBag.IsBusinessUnitEditable)
        {
        <img id="btnComment" src="~/Content/images/chat-button.png" alt="" style="float:right" />
        }
    </div>
    @* Start - Added by Sohel Pathan on 19/06/2014 for PL ticket #519 to implement user permission Logic*@
    }
    else
    {
        <div class="unauthorized-comment-section">
            <span>@Html.Raw(HttpUtility.HtmlDecode((string)ViewBag.UnauthorizedCommentSection))</span>
        </div>
    }
    @* End - Added by Sohel Pathan on 19/06/2014 for PL ticket #519 to implement user permission Logic*@
    
</div>

<div class="border-top-div cf pull-left margin-top10 margin-bottom20" style="width: 100%;">
          
            @{
       
            string Submit = "Submit for Approval";
            string Approve = "Approve";
            string Reject = "Reject";
            List<string> aryStatus = new List<string>();
            bool isVisibleStatus = true;
            string statuscreate = "";
            string statussubmit = "";
            string statusapproved = "";
            string statusinprogress = "";
            string statuscomplete = "";
            string statusdecline = "";

            var countNotCreatedTactic = 0;
            var countNotApprovedTactic = 0;
            var countNotSubmittedTactic = 0;
            var countNotDeclineTactic = 0;

            statuscreate = RevenuePlanner.Helpers.Enums.TacticStatusValues[RevenuePlanner.Helpers.Enums.TacticStatus.Created.ToString()].ToString();
            statussubmit = RevenuePlanner.Helpers.Enums.TacticStatusValues[RevenuePlanner.Helpers.Enums.TacticStatus.Submitted.ToString()].ToString();
            statusapproved = RevenuePlanner.Helpers.Enums.TacticStatusValues[RevenuePlanner.Helpers.Enums.TacticStatus.Approved.ToString()].ToString();
            statusinprogress = RevenuePlanner.Helpers.Enums.TacticStatusValues[RevenuePlanner.Helpers.Enums.TacticStatus.InProgress.ToString()].ToString();
            statuscomplete = RevenuePlanner.Helpers.Enums.TacticStatusValues[RevenuePlanner.Helpers.Enums.TacticStatus.Complete.ToString()].ToString();
            statusdecline = RevenuePlanner.Helpers.Enums.TacticStatusValues[RevenuePlanner.Helpers.Enums.TacticStatus.Decline.ToString()].ToString();

            var tacticList = db.Plan_Campaign_Program_Tactic.Where(p => p.PlanProgramId == programReview.PlanProgramId && p.IsDeleted == false).ToList();
            countNotCreatedTactic = tacticList.Where(p => !p.Status.Equals(statuscreate)).Count();
            countNotApprovedTactic = tacticList.Where(p => !p.Status.Equals(statusapproved) && !p.Status.Equals(statusinprogress) && !p.Status.Equals(statuscomplete)).Count();
            countNotSubmittedTactic = tacticList.Where(p => !p.Status.Equals(statussubmit)).Count();
            countNotDeclineTactic = tacticList.Where(p => !p.Status.Equals(statusdecline)).Count();

            if (programReview.Status.Equals(RevenuePlanner.Helpers.Enums.TacticStatusValues[RevenuePlanner.Helpers.Enums.TacticStatus.Created.ToString()].ToString()))
            {
                if ((bool)ViewBag.IsValidOwner)
                {
                    if (countNotSubmittedTactic == 0)
                    {
                        aryStatus.Add(Submit);
                    }
                    else if (countNotCreatedTactic == 0)
                    {
                        aryStatus.Add(Submit);
                    }
                }
                else
                {
                    isVisibleStatus = false;
                }
            }
            else if (programReview.Status.Equals(RevenuePlanner.Helpers.Enums.TacticStatusValues[RevenuePlanner.Helpers.Enums.TacticStatus.Submitted.ToString()].ToString()))
            {
                if ((bool)ViewBag.IsValidManagerUser)//if ((bool)ViewBag.isValidDirectorUser)
                {
                    if (countNotApprovedTactic != 0)
                    {
                        aryStatus.Add(Approve);
                        aryStatus.Add(Reject);
                    }
                    else
                    {
                        isVisibleStatus = false;
                    }
                }
                else
                {
                    isVisibleStatus = false;
                }
            }
            else if (programReview.Status.Equals(RevenuePlanner.Helpers.Enums.TacticStatusValues[RevenuePlanner.Helpers.Enums.TacticStatus.Approved.ToString()].ToString()))
            {
                if ((bool)ViewBag.IsValidManagerUser)//if ((bool)ViewBag.isValidDirectorUser)
                {
                    aryStatus.Add(Reject);
                }
                else
                {
                    isVisibleStatus = false;
                }
            }
            else if (programReview.Status.Equals(RevenuePlanner.Helpers.Enums.TacticStatusValues[RevenuePlanner.Helpers.Enums.TacticStatus.Decline.ToString()].ToString()))
            {
                if ((bool)ViewBag.IsValidManagerUser)//if ((bool)ViewBag.isValidDirectorUser)
                {
                    if ((bool)ViewBag.IsValidOwner)
                    {
                        if (countNotDeclineTactic == 0)
                        {
                            aryStatus.Add(Submit);
                        }
                    }
                    else
                    {
                        if (countNotDeclineTactic == 0)
                        {
                            aryStatus.Add(Approve);
                        }
                    }
                }
                else
                {
                    if ((bool)ViewBag.IsValidOwner)
                    {
                        if (countNotDeclineTactic == 0)
                        {
                            aryStatus.Add(Submit);
                        }
                    }
                    else
                    {
                        isVisibleStatus = false;
                    }
                }
            }
            else
            {
                if ((bool)ViewBag.IsValidManagerUser)//if ((bool)ViewBag.isValidDirectorUser)
                {
                    aryStatus.Add(Reject);
                }
                else
                {
                    isVisibleStatus = false;
                }
            }


                if (IsProgramEditable)
                {
                    if ((bool)ViewBag.IsModelDeploy)
                    {
                <div class="margin-top23 margin-right10" style="float: left;">
                <div id="btn_sync_status" class="btn-group dropup">
                    <button id="btnSync" class="btn buttom-width resize-drop-button without-border-buttom displayinherit  btn-blue text-shadow-blue source-sans-proregular" style="width:65px;">
                        <span class="flag-icon sync-icon-dropdown"></span>
                        <span id="spanSyncStatus">
                            @if (programReview.IsDeployedToIntegration)
                            {
                                @Html.Raw("Sync")
                            }
                            else
                            {
                                @Html.Raw("Don't Sync") 
                            }

                        </span>
                    </button>
                     @if (programReview.IsDeployedToIntegration)
                     {
                        @Html.Hidden("hdnSyncStatusValue", "Sync", new { id = "hdnSyncStatusValue" });
                     }
                     else
                     {
                        @Html.Hidden("hdnSyncStatusValue", "Don't Sync", new { id = "hdnSyncStatusValue" });
                     }
                        <button data-toggle="dropdown" class="btn dropdown-toggle height25 btn-blue displayinherit">
                            <span class="caret "></span>
                        </button>                
                        <ul class="dropdown-menu " id="uldivSync">
                            <li>
                                <a id="aSync">Sync</a>
                            </li>
                            <li>
                                <a id="aNotSync">Don't Sync</a>
                            </li>
                        </ul>
                </div>
            </div> 
                    }
                }

                if (isVisibleStatus)
                {
                    int len = aryStatus.Count;
                    if (len > 0)
                    {
                        string firstStatus = aryStatus[0];
               
                    <div class="margin-top23" style="float: left;">
                    <div id="btn_change_status" class="btn-group dropup">
                    <button id="btnApproved" class="btn buttom-width resize-drop-button without-border-buttom displayinherit  btn-blue text-shadow-blue source-sans-proregular" style="width:125px;">
                        <span class="flag-icon approve-icon-dropdown"></span>
                        <span id="spanTactic">@firstStatus</span>
                    </button>
                     @Html.Hidden("hdnStatusValue", firstStatus, new { id = "hdnStatusValue" });
                    @if (len >= 2)
                    {
                        <button data-toggle="dropdown" class="btn dropdown-toggle height25 btn-blue displayinherit">
                            <span class="caret "></span>
                        </button>
                                              
                        <ul class="dropdown-menu " id="uldiv">
                            @foreach (string s in aryStatus)
                            {
                                <li>
                                    <a>@s</a>
                                </li>
                            }
                        </ul>
                        
                        <script type="text/javascript">
                            $("#btnApproved").css("width", "90px");
                        </script>
                    }
                    else
                    {
                        <script type="text/javascript">
                            $("#btnApproved").css("border-radius", "4px");
                        </script>
                    }

                </div>

            </div> 
                    }
                }
        }
    
     <div style="float: left; margin-left: 10px;" class="margin-top23">
            <button class="btn btn-blue text-shadow-blue source-sans-proregular  button-inspect-result-modal pull-right  resize-button btn-blue share-tactic-icon" id="BtnShareTactic" type="button" style="width:80px;"><span class="flag-icon"></span>Share </button>
        </div>
    
    </div>

<div id="DivPartialShareTactic">
</div>
<script type="text/javascript">
    $(document).ready(
      function () {

          //SetFormatForLabel("#inq-id", 5);
          //SetFormatForLabel("#mqls-id", 5);

          //Added By : Kalpesh Sharma
          //PL #508 Set format for label in tool tip
          $('.addFormatterActualNumber').each(function () {
              SetLabelFormaterWithTipsyNumbers($(this));
          });

          NumberFormatterTipsyTitle(".tipsyclassTitle", 33);

          $("#BtnShareTactic").click(function () {
              $("#DivPartialShareTactic").empty();
              var url = '@Url.Content("~/Home/ShowShareTactic/")';
              $("#DivPartialShareTactic").load(url + '?planTacticId=' + $('#hdnPlanProgramId').val() + '&section=program');
          });

          $("#uldiv li a").click(function () {
              $("#spanTactic").html($(this).text());
              $("#hdnStatusValue").val($(this).text());
          });

          $("#btnSync").click(function () {

              var IsDeployedToIntegration = false;
              var spanSyncStatus = $("#hdnSyncStatusValue").val();
              if (spanSyncStatus == 'Sync') {
                  IsDeployedToIntegration = true;
              }
              var PlanProgramId = $('#hdnPlanProgramId').val();

              $.ajax({
                  type: 'POST',
                  url: '@Url.Content("~/Home/SaveSyncToIntegration/")',
                  data: {
                      id: PlanProgramId,
                      section: "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Program).ToLower()", //section parameter added to save tactic comment
                      IsDeployedToIntegration: IsDeployedToIntegration
                  },
                  success: function (data) {
                      if (data.result) {
                          /*Added by Mitesh Vaishnav for PL ticket #690 
                      Change of sync to don’t sync or vice versa integration section update to 'Yes' and 'No'  */
                          if ('@programReview.IsIntegrationInstanceExist' == 'Yes') {
                              if (IsDeployedToIntegration) {
                                  $('#integration-id').html('Yes')
                              }
                              else {
                                  $('#integration-id').html('No')
                              }
                          }
                          /*End : Added by Mitesh Vaishnav for PL ticket #690 */
                          $("#successMessage").css("display", "block");
                          $("#spanMessageSuccess").empty();
                          $("#spanMessageSuccess").text(data.msg);
                      }
                  },
                  error: function () {
                      $("#errorMessage").css("display", "block");
                      $("#spanMessageError").empty();
                      GoToLogin();
                      return false;
                  }
              });
          });

          $("#uldivSync li a").click(function () {
              $("#spanSyncStatus").html($(this).text());
              $("#hdnSyncStatusValue").val($(this).text());
          });

          var divheight = $("#divInnerComment").height();
          $("#divComment").scrollTop(divheight);

          // On Comment Button Save Commnet
          $("#btnComment").click(function () {
              $("#successMessage").css("display", "none");
              $("#errorMessage").css("display", "none");
              /*Changed by Nirav Shah for Inspect pop-up screen : CSS changes as per new HTML on 13 feb 2014*/
              var commentText = $('#txtAreaComment').val();
              if (commentText == '') {
                  var msgspan = "@Common.objCached.ValidateForEmptyFieldAndValid";
                  $("#errorMessage").css("display", "block");

                  $("#txtAreaComment").addClass("error");
                  $("#spanMessageError").text(msgspan);
                  return false;
              }
              else {
                  //if (/[!@@#$%\^&*(){}[\]<>?/|\-]/.test(commentText)) {
                  //    var msgspan = "Special character are not allowed, try again.";
                  //    $("#errorMessage").css("display", "block");
                  //    /*Changed by Nirav Shah for Inspect pop-up screen : CSS changes as per new HTML on 13 feb 2014*/
                  //    var topsize = $(document).scrollTop() + 41;
                  //    $("#modal-container-186470").css("top", topsize + "px");

                  //    $("#txtAreaComment").addClass("error");
                  //    $("#spanMessageError").text(msgspan);
                  //    return false;
                  //}
                  $("#txtAreaComment").removeClass("error");
              }

              var PlanTacticId = $('#hdnPlanProgramId').val();
              $.ajax({
                  type: 'POST',
                  url: '@Url.Content("~/Home/SaveComment/")',
                  data: {
                      comment: commentText,
                      planTacticId: PlanTacticId,
                      section: "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Program).ToLower()"
                  },
                  success: function (data) {
                      if (data != 'undefined') {
                          if (data.id != 0) {
                              $("#successMessage").css("display", "block");

                              $("#spanMessageSuccess").empty();
                              $("#spanMessageSuccess").text(data.msg);
                              loadInspectPopup(data.id, "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Program).ToLower()", data.TabValue);
                          }
                          else {
                              $("#errorMessage").css("display", "block");

                              $("#spanMessageError").empty();
                              $("#spanMessageError").text("@RevenuePlanner.Helpers.Common.objCached.InvalidError");
                          }
                      }
                  },
                  error: function () {
                      $("#errorMessage").css("display", "block");

                      $("#spanMessageError").empty();
                      GoToLogin();
                      return false;
                  }
              });
          });

          // Click on Approved Button Save Comment & Change Status
          $("#btnApproved").click(function () {
              $("#successMessage").css("display", "none");
              $("#errorMessage").css("display", "none");
              statusValue = $("#hdnStatusValue").val();
              var PlanTacticId = $('#hdnPlanProgramId').val();
              var stat = "@RevenuePlanner.Helpers.Enums.TacticStatusValues[RevenuePlanner.Helpers.Enums.TacticStatus.Approved.ToString()].ToString()";
              if (statusValue == "Submit for Approval") {
                  stat = "@RevenuePlanner.Helpers.Enums.TacticStatusValues[RevenuePlanner.Helpers.Enums.TacticStatus.Submitted.ToString()].ToString()";
              }
              else if (statusValue == "Approve") {
                  stat = "@RevenuePlanner.Helpers.Enums.TacticStatusValues[RevenuePlanner.Helpers.Enums.TacticStatus.Approved.ToString()].ToString()";
              }
              else if (statusValue == "Reject") {
                  stat = "@RevenuePlanner.Helpers.Enums.TacticStatusValues[RevenuePlanner.Helpers.Enums.TacticStatus.Decline.ToString()].ToString()";
              }
              $.ajax({
                  type: 'POST',
                  url: '@Url.Content("~/Home/ApprovedTactic/")',
                  data: {
                      status: stat,
                      planTacticId: PlanTacticId,
                      section: "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Program).ToLower()"
                  },
                  success: function (data) {
                      if (data != 'undefined') {
                          if (data.id != 0) {
                              $("#successMessage").css("display", "block");

                              $("#spanMessageSuccess").empty();
                              $("#spanMessageSuccess").text(data.msg);
                              loadInspectPopup(data.id, "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Program).ToLower()", data.TabValue);
                          }
                          else {
                              $("#errorMessage").css("display", "block");
                              $("#spanMessageError").empty();
                              $("#spanMessageError").text("@RevenuePlanner.Helpers.Common.objCached.InvalidError");
                          }

                          // Added by Dharmraj to refresh current tab for PL #364,#365,#366
                          RefreshCurrentTab();
                      }
                  },
                  error: function () {
                      $("#errorMessage").css("display", "block");
                      $("#spanMessageError").empty();
                      GoToLogin();
                      return false;
                  }
              });
          });

          //// Slim Scroll bar for comment div.
          var r = $('#content_wraper').height() - 170;
          $('.comment-scroll-section').css('height', r);
          $(function () {
              $('.comment-scroll-section').slimScroll();
          });
          function toggleChevron(e) {
              $(e.target)
              .prev('.accordion-heading')
              .find("i.indicator")
              .toggleClass('glyphicon-chevron-down glyphicon-chevron-up');
          }
          $('.accordion').on('hidden.bs.collapse', toggleChevron);
          $('.accordion').on('shown.bs.collapse', toggleChevron);

      });
</script>
