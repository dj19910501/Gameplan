@model RevenuePlanner.Models.HomePlanModel
@using RevenuePlanner.Helpers
@{
    ViewBag.Title = "Add Actuals";
}
@section Sidebar
{
    <style type="text/css">
        .chkbxfilter {
            float: right;
            margin: 7px -3px 0 0 !important;
        }
    </style>
    <div class="padding-content padding-bottom0" id="DivButtonsHome">
        <h4 class="text-shadow-black source-sans-prolight">Planning Review</h4>
        <div class="wraper-btns cf">
            @if ((bool)ViewBag.IsNewPlanEnable)
            {
            <div class="span6">
                <button id="btnNPlan" class="btn btn-blue text-shadow-blue source-sans-proregular" type="button">New Plan</button>
            </div>
            }
            
            @if ((bool)ViewBag.IsPlanEditable)
            {
            <div class="span6">
                <button id="btnAddActivity" class="btn btn-blue text-shadow-blue source-sans-proregular" type="button">Add Activity</button>
            </div>
            }
        </div>
    </div>

    @*  <!--First Accordion-->
    <div class="scrolled_div">
        <div class="accordion colors" id="DivAccordion"></div>
    </div>

    <div class="shadow-scroll"></div>*@
    
    <div id="sidebar" class="span2 sidebar">

        <div class="sidebar-section scroll-section">
            <div style="width: 100%;">
                <div class="width50 float-left ">
                    <span class="filter-header">Filters</span>
                    </div>
                <div class="width50 float-left">
                    <button class="btn btn-blue text-shadow-blue source-sans-proregular squares-icon" type="button" id="btnUpdateResultFilters" onclick="UpdateResult()">
                        Update Results
                    </button>
                    </div>
            </div>
            <div style="clear: both;"></div>
            <div id="accordion-1" class="dropdown-section accordion">
                <div class="accordion-group">
                    <div class="accordion-heading">
                        <h2 class="accordion-toggle" data-toggle="collapse" data-parent="#accordion-1" href="#accordion-element-TacticType">Tactic Type<i class="indicator glyphicon glyphicon-chevron-down pull-right"></i></h2>
                    </div>
                    <div id="accordion-element-TacticType" class="accordion-body collapse">
                        <ul class="scroll-list" id="ulTacticType">
                            @if (((List<RevenuePlanner.Models.TacticType>)ViewBag.TacticTypeList).Count > 0)
                            {
                                foreach (var item in ((List<RevenuePlanner.Models.TacticType>)ViewBag.TacticTypeList))
                                {
                                    string id = "li" + item.TacticTypeId;
                                <li class="accordion-inner" id="@id" title="@item.Title"><span class="sidebarliwidth">@item.Title</span><input type="checkbox" class="chkbxfilter" id="@item.TacticTypeId" onchange="toggleTacticType(this)"/></li>
                                    
                                }
                            }
                        </ul>
                        <div class="list-tab">
                             @if (((List<RevenuePlanner.Models.TacticType>)ViewBag.TacticTypeList).Count > 0)
                            {
                            <ul id="TacticTypeAllModule">
                                <li><a onclick="BulkTTOperation(true)">select all</a></li>
                                <li>|</li>
                                <li><a onclick="BulkTTOperation(false)">deselect all</a></li>
                            </ul>
                             }
                            else{
                            <div id="NoTTFound" class="NoDataFoundFilter">No TacticType Found</div>
                }
            </div>
                    </div>
                    </div>
            </div>

            <div id="accordion-3" class="dropdown-section accordion">
                <div class="accordion-group">
                    <div class="accordion-heading">
                        <h2 class="accordion-toggle" data-toggle="collapse" data-parent="#accordion-3" href="#accordion-element-Geography">Geography<i class="indicator glyphicon glyphicon-chevron-down pull-right"></i></h2>
                    </div>
                    <div id="accordion-element-Geography" class="accordion-body collapse">
                        <ul class="scroll-list" id="ulSelectedGeography">
                            @if (Model.objGeography.Count > 0)
                            {
                                foreach (var item in Model.objGeography)
                                {
                                    string id = "liGeography" + item.GeographyId;
                                <li class="accordion-inner" id="@id" title="@item.Title"><span class="sidebarliwidth">@item.Title</span><input type="checkbox" class="chkbxfilter" id="@item.GeographyId" onchange="toggleGeography(this)"/></li>
                                }
                            }
                        </ul>
                        <div class="list-tab">
                             @if (Model.objGeography.Count > 0)
                            {
                            <ul id="GeographyAllModule">
                                <li><a onclick="BulkGeoOperation(true)">select all</a></li>
                                <li>|</li>
                                <li><a onclick="BulkGeoOperation(false)">deselect all</a></li>
                            </ul>
                             }
                            else{
                            <div id="NoGeographyFound" class="NoDataFoundFilter">No Geography Found</div>
                }
            </div>
                    </div>
                </div>
            </div>

            <div id="accordion-6" class="dropdown-section accordion">
            <div class="accordion-group">
                    <div class="accordion-heading">
                        <h2 class="accordion-toggle" data-toggle="collapse" data-parent="#accordion-6" href="#accordion-element-Owner">Owner<i class="indicator glyphicon glyphicon-chevron-down pull-right"></i></h2>
                    </div>
                    <div id="accordion-element-Owner" class="accordion-body collapse">
                        <ul class="scroll-list" id="ulSelectedOwner">
                            @if (Model.objIndividuals.Count > 0)
                            {
                                foreach (var item in Model.objIndividuals)
                                {
                                    string id = "liOwner" + item.UserId;
                                    string name = item.LastName + ", " + item.FirstName;
                                <li class="accordion-inner" id="@id" title="@name"><span class="sidebarliwidth">@name</span><input type="checkbox" class="chkbxfilter" id="@item.UserId" onchange="toggleOwner(this)"/></li>
                                }
                            }
                        </ul>
                        <div class="list-tab">
                             @if (Model.objIndividuals.Count > 0)
                            {
                            <ul id="ulOwnerAllModule">
                                <li><a onclick="BulkOwnerOperation(true)">select all</a></li>
                                <li>|</li>
                                <li><a onclick="BulkOwnerOperation(false)">deselect all</a></li>
                            </ul>
                             }
                            else{
                            <div id="NoOwnerFound" class="NoDataFoundFilter">No Owner Found</div>
                        }
                    </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--End Second Accordion-->
    <div style="clear:both;">
    @*<ul class="nav nav-list nav-gray-plan">
        <li id="change-log" class="nav-header">
            <span>Change Log</span>
            <div class="changes"></div>
        </li>
    </ul>*@
        </div>
                }
<!--Error message-->
<div id="errorMessage" class="alert alert-error hide message-position-small">
    <a class="close" id="aclose">×</a>
    <strong>Error! </strong><span id="spanMessageError">@Common.objCached.ValidateForEmptyField</span>
</div>
<!--Error message-->
<!--success message-->
<div id="successMessage" class="alert alert-success hide message-position-small">
    <a class="close">×</a>
    <strong>Success. </strong><span id="spanMessageSuccess"></span>
</div>
<!--success message-->

<a class="link-alone" id="calendar-link-home-actuals" href="#">
    <label class="CursorHand" onclick="displayconfirm('@Url.Action("Index", "Home", new { currentPlanId = @RevenuePlanner.Helpers.Sessions.PlanId })');"><span></span>« BACK TO CALENDAR</label>
</a>
<ul class="nav nav-tabs">
    <li class="title-header source-sans-proregular">
        <h2>Add Actuals</h2>
    </li>
    <li id="liOpen" class="active pull-right">
        <a href="#">Open</a>
    </li>
    <li id="liAll" class="pull-right">
        <a href="#">All Tactics</a>
    </li>
</ul>
<div class="div-user-Note" id="div-user-Note" style="display:none;">
    <span>Note that imported values override user-generated values.</span>
</div>
<div class="padding-content cf source-sans-proregular">
    <!--Second Accordion-->
    <div class="accordion accordion-actuals" id="accordion2">
    </div>
</div>
<div id="DivPartialShareTactic">
</div>
<script type="text/javascript">
    var actuals;
    var MQlTitle = '';
    //Added By : Kalpesh Sharma #735 Actual cost - Changes to add actuals screen 
    var IsLineItemActual = false;
    var showMyTacticId = 0;
    var geoArr = [];
    var indArr = [];
    var tacArr = [];
    var Status = 0;
    $(document).ready(function () {

        //Added By : Kalpesh Sharma Functional Review Point #76
        $("#div-user-Note").show();

        $(".alert").find(".close").on("click", function (e) {
            $(this).closest(".alert").slideUp(400);
        });

        //Added By : Kalpesh Sharma Internal Review Points 07-18-2014
        $(document).on("click", "#calendar-link-home-actuals", function (e) {
            displayconfirm('@Url.Action("Index", "Home", new { currentPlanId = @RevenuePlanner.Helpers.Sessions.PlanId })');
        });
        BulkGeoOperation(true);
        BulkOwnerOperation(true);
        BulkTTOperation(true);

       @* $('.changes').html('');
        var url = '@Url.Content("~/Home/LoadChangeLog")';
        $('.changes').load(url + '?objectId=' + "@RevenuePlanner.Helpers.Sessions.PlanId");*@


        CallAjax();
        $("#liOpen a").click(function () {
            //Status = 0;
            //$("#liOpen").addClass('active');
            //$("#liAll").removeClass('active');
            //$("#errorMessage").css("display", "none");
            //$("#successMessage").css("display", "none");
            //$("#div-user-Note").hide();
            //CallAjax();
            displayConfirmCommon('liOpenTabClick();');
        });

        $("#liAll a").click(function () {
            //Status = 1;
            //$("#liOpen").removeClass('active');
            //$("#liAll").addClass('active');//#585
            //$("#errorMessage").css("display", "none");
            //$("#successMessage").css("display", "none");
            //$("#div-user-Note").show();
            //CallAjax();
            displayConfirmCommon('liAllTabClick();');
        });

        function liOpenTabClick() {
            Status = 0;
            $("#liOpen").addClass('active');
            $("#liAll").removeClass('active');
            $("#errorMessage").css("display", "none");
            $("#successMessage").css("display", "none");
            //Added By : Kalpesh Sharma Functional Review Point #76
            //$("#div-user-Note").hide();
            $("#div-user-Note").show();
            CallAjax();
        }

        function liAllTabClick() {
            Status = 1;
            $("#liOpen").removeClass('active');
            $("#liAll").addClass('active');//#585
            $("#errorMessage").css("display", "none");
            $("#successMessage").css("display", "none");
            $("#div-user-Note").show();
            CallAjax();
        }



        var IsShowOnlyMyTactic = false
        $("#AShowOnlyMyTactic").click(function () {
            @*IsShowOnlyMyTactic = !IsShowOnlyMyTactic;
            if (IsShowOnlyMyTactic) {
                $("#AShowOnlyMyTactic > label").html('Show All Tactics');
                //$("#AShowOnlyMyTactic > label").css("background-color", "#FFFFFF");
                showMyTacticId = "@RevenuePlanner.Helpers.Sessions.User.UserId"

            }
            else {
                $("#AShowOnlyMyTactic > label").html('Show only My Tactics');
                //$("#AShowOnlyMyTactic > label").css("background-color", "");
                showMyTacticId = 0;
            }
            callFilter();
            CallAjax();*@
            displayConfirmCommon('AShowOnlyMyTacticClick();');

        });

        function AShowOnlyMyTacticClick() {
            IsShowOnlyMyTactic = !IsShowOnlyMyTactic;
            if (IsShowOnlyMyTactic) {
                $("#AShowOnlyMyTactic > label").html('Show All Tactics');
                //$("#AShowOnlyMyTactic > label").css("background-color", "#FFFFFF");
                showMyTacticId = "@RevenuePlanner.Helpers.Sessions.User.UserId"
            }
            else {
                $("#AShowOnlyMyTactic > label").html('Show only My Tactics');
                //$("#AShowOnlyMyTactic > label").css("background-color", "");
                showMyTacticId = 0;
            }
            callFilter();
            CallAjax();
        }
        
        // Start Modofied by Dharmraj to implement #547 : No warning of data loss during Add actuals
        $("#accordion-filterGeography").find("a").click(function () {
            displayConfirmCommon("ApplyFilter('" + $(this).attr('filterId') + "','filterId');");
        });
        $("#accordion-filterIndividuals").find("a").click(function () {
            displayConfirmCommon("ApplyFilter('" + $(this).attr('filterId') + "','filterId');");
        });
        $("#accordion-filterTacticType").find("a").click(function () {
            displayConfirmCommon("ApplyFilter('" + $(this).attr('tacticid') + "','tacticid');");
        });

        function ApplyFilter(id, attrName) {
            var element = $("a[" + attrName + "=" + id + "]");
            ($(element).toggleClass("x-icon"));
            callFilter();
            CallAjax();
        }
        // End Modofied by Dharmraj to implement #547 : No warning of data loss during Add actuals
        function callFilter() {
            geoArr = [];
            indArr = [];
            tacArr = [];
            $("#accordion-filterIndividuals").find("a").each(function () {
                if ($(this).hasClass('x-icon')) {
                    indArr.push($(this).attr("filterId"));
                }
            });
            $("#accordion-filterGeography").find("a").each(function () {
                if ($(this).hasClass('x-icon')) {
                    geoArr.push($(this).attr("filterId"));
                }
            });
            $("#accordion-filterTacticType").find("a").each(function () {
                if ($(this).hasClass('x-icon')) {
                    tacArr.push($(this).attr("tacticId"));
                }
            });
            if (showMyTacticId != 0) {
                indArr.push(showMyTacticId);
            }
        }







        //Dharmraj Start 14July2014 : ticket #547, No warning of data loss during Add actuals
        $("#header a").not("#ContactSupport").click(function () {
            //alert($(this).attr('href'));
            if (isDataChanged()) {
                displayconfirm($(this).attr('href'));
                return false;
            }
            else {
                return true;
            }
            });
        $(document).on("click", "#confirmClose, .confirmClose", function (e) {
            $("#errorMessage").slideUp(400);
            //$('#spanMessageError').html("");
        });
        $(document).on("click", "#btnNPlan", function (e) {
            displayconfirm('@Url.Action("Create", "Plan")');
        });
        $(document).on("click", "#btnAddActivity", function (e) {
            displayconfirm('@Url.Action("Assortment", "Plan")');
        });

        //Dharmraj End 14July2014 : ticket #547, No warning of data loss during Add actuals

        //Dharmraj Start 14July2014 : ticket #547, No warning of data loss during Add actuals
        function displayconfirm(strURL) {
            if (isDataChanged()) {
                $('#spanMessageError').html(" You have unsaved changes. Do you wish to leave this page and lose your work?&nbsp;&nbsp;&nbsp;&nbsp;<a style='color:gray;' href='" + strURL + "' class='btn-gray'>Continue</a>&nbsp;&nbsp;<a style='color:gray;' id='confirmClose' href='#' class='underline'>Cancel</a>");
                $("#errorMessage").slideDown(400);
            }
            else {
                window.location.href = strURL;
            }
        }

        function displayConfirmCommon(functionName) {
            if (isDataChanged()) {
                $('#spanMessageError').html(" You have unsaved changes. Do you wish to leave this page and lose your work?&nbsp;&nbsp;&nbsp;&nbsp;<a id='btnConfirmOK' class='btn-gray CursorHand' style='color:gray;'>Continue</a>&nbsp;&nbsp;<a style='color:gray;' id='confirmClose' href='#' class='underline'>Cancel</a>");
                $("#errorMessage").slideDown(400);
                $("#btnConfirmOK").click(function () {
                    //alert(id);
                    $('#spanMessageError').html("");
                    $("#errorMessage").hide();
                    eval(functionName);
                });
            }
            else {
                eval(functionName);
            }
        }



        //function to check myValue attribute values and input values that any changes made?
        function isDataChanged() {
            var changed = false;
            $('.accordion-actuals').find("input,input[type=text],textarea,select").each(function () {
                var iv = $(this).attr("myValue");
                if ($(this).val().toString().trim() != iv.toString().trim()) {      // Modified by Sohel Pathan on 02/09/2014 for PL ticket #742
                    changed = true;
                    return false; // Added by Sohel Pathan on 02/09/2014 for PL ticket #742
                }
            });
            return changed;
        }
        //Dharmraj End 14July2014 : ticket #547, No warning of data loss during Add actuals

    });//document ready

        function CallAjax() {
            $.ajax({
                type: 'POST',
                url: '@Url.Content("~/Home/GetActualTactic/")',
                data: {
                    status: Status
                },
                success: function (r) {
                    actuals = r;
                    $('.accordion-actuals').empty();

                    LoadPage();
                    AssignDefaultValue(); // added by dharmraj, #547
                }
            });
        }
        function LoadPage() {
            fillActualsTable();
            NumberFormatterTipsyTitle(".tipsyclassTitle", 24);
            maskWidht();

            /*if a toogle is open the first time page loads, change css of mask*/
            $(".accordion-actuals .accordion-group .in").prev()
                                                        .find(".table-actual-mask")
                                                            .css({ "height": "254px" });

            ///*change left titles from header if toogle  is open*/
            $(".accordion-actuals .accordion-group .in").prev().
                                                         find(".table-titles-actual-left")
                                                                 .css({ "color": "#908D88" });




            /*change mask if toogle is open*/
            $(".accordion-actuals .accordion-heading a").click(function () {
                /*set mask shadows width*/
                $('.shadow-scroll-table-mask-left').css({ "visibility": "hidden" });
                $('.shadow-scroll-table-mask-right').css({ "visibility": "hidden" });
                /*set mask height*/
                $('.table-actual-mask').css({ "height": "0px" });
                /*set left titles from header if toogle  is open*/
                $(".accordion-actuals .accordion-group .in").prev().
                                                        find(".table-titles-actual-left")
                                                                .css({ "color": "#ffffff" });
                /*set glass icon from header if toogle  is open*/
                $(".accordion-actuals .accordion-group .in").prev().
                                                                find(".glass-icon")
                                                                        .css({ "visibility": "hidden" });
                /*set visibility on scroll over mask*/
                $(".table-actual-mask").css({ "overflow-x": "hidden" });

                $('.shadow-scroll-table-mask-right').each(function () {
                    //Added By : Kalpesh Sharma Internal Review Points 07-18-2014
                    $(this).removeClass("resetVisibility");
                });

                $('.shadow-scroll-table-mask-left').each(function () {
                    //Added By : Kalpesh Sharma Internal Review Points 07-18-2014
                    $(this).removeClass("resetVisibility");
                });

                //Added By : Kalpesh Sharma Internal Review Points 07-18-2014
                $(".accordion-actuals .accordion-group .in").prev().
                                                 find(".shadow-scroll-table-mask-right").addClass("resetVisibility");

                //Added By : Kalpesh Sharma Internal Review Points 07-18-2014
                $(".accordion-actuals .accordion-group .in").prev().
                                 find(".shadow-scroll-table-mask-left").addClass("resetVisibility");


                var that = this,
                    mask = $(that).next().find(".table-actual-mask"),
                    titles = $(that).find(".table-titles-actual-left"),
                    glassIcon = $(that).find(".glass-icon"),
                    shadowRight = $(that).next().find(".shadow-scroll-table-mask-right"),
                    shadowLeft = $(that).next().find(".shadow-scroll-table-mask-left");
                var styles = { visibility: "hidden", width: "0px", height: "0px" };

                if ($(that).parent().parent().parent().next().hasClass("in")) {
                    /*set mask shadows width*/
                    $('.shadow-scroll-table-mask-left').css({ "visibility": "hidden" });
                    $('.shadow-scroll-table-mask-right').css({ "visibility": "hidden" });
                    glassIcon.css({ "visibility": "hidden" });
                    titles.css({ "color": "#ffffff" });
                    mask.css({ "overflow-x": "hidden" });
                    shadowRight.css(styles);
                    shadowLeft.css(styles);
                    animateMask($(mask), 0);
                } else {
                    /*set mask shadows width*/
                    glassIcon.css({ "visibility": "visible" });
                    titles.css({ "color": "#908D88" });
                    mask.css({ "height": "0px" });
                    mask.css({ "overflow-x": "scroll" });
                    //Added By : Kalpesh Sharma #735 Actual cost - Changes to add actuals screen 
                    var CurrentID = $(this).attr('href');
                    var heights = ($(CurrentID).find(".accordion-inner").height()) + 10;
                    animateMask($(mask), heights);
                }


            });

            /*click event on mask*/
            /*change mask if toogle is open*/
            $(".table-actual-mask").click(function (event) {
                event.preventDefault();
                event.stopPropagation();
            });

            /*shadow on table*/
            $(".accordion-actuals .accordion-heading").find('.table-actual-mask').scroll(function () {
                //Added By : Kalpesh Sharma #735 Actual cost - Changes to add actuals screen 
                var TacticSideBorderHeight = ($($(this).parent().prev().attr("href")).find(".accordion-inner").height()) + 10 + "px";
                var styles = { visibility: "visible", widht: "15px", height: TacticSideBorderHeight };
                var styles1 = { visibility: "hidden", widht: "15px", height: TacticSideBorderHeight };
                if ($(this).scrollLeft() > 0) {
                    /*set shadows*/
                    $(this).prev().css(styles);
                    $(this).next().css(styles);
                    $(this).next().css({ "margin-left": $(".table-actual-mask").width() });
                }
                if ($(this).scrollLeft() == 0) {
                    $(this).prev().css(styles1);
                }
                if ($(this).scrollLeft() == 1800 - $(".table-actual-mask").width()) {
                    $(this).next().css(styles1);
                }

            });

            window.onresize = function () {
                function maskWidht() {
                    var widthHeader = $("#accordion2").width(),
                        //widthRigth = widthHeader - 652;

                   //#598 Added by Kalpesh Sharma : Add Actuals: Inappropriate Display of Add Actuals Tactics
                   widthRigth = widthHeader - 662;

                    $(".header-toogle-actual-right").width(widthRigth);
                    $(".table-actual-mask").width(widthRigth);
                    $('.table-actual-mask').scrollLeft(0);
                    $(".accordion-actuals .accordion-heading").find('.table-actual-mask').next().css({ "margin-left": widthRigth });

                    return this;
                };
                maskWidht();

            }

            // For Format Price & Total Input
            $('.currency_dollar').priceFormat({ prefix: '$', centsSeparator: '', thousandsSeparator: ',', centsLimit: 0, isAllowNull: true });
            $('.priceValue').priceFormat({ prefix: '', centsSeparator: '', thousandsSeparator: ',', centsLimit: 0, isAllowNull: true });

            function SetTipsyNumeric(obj) {
                if (obj != null || obj != 'undefined') {
                    var objVal = obj.text().replace('.', '').replace(/,/g, '');
                    if (objVal.length >= 10) {
                        obj.tipsy({ gravity: 's' });
                    }
                }
            }

            function SetTipsyPrice(obj, objVal) {
                if (obj != null || obj != 'undefined') {
                    var objTxt = objVal.replace('.', '').replace(/,/g, '').replace('$', '');
                    if (objTxt.length >= 9) {
                        obj.tipsy({ gravity: 's' });
                    }
                }
            }

            //Format Commas For Projected Value
            //$("div[id^='ProjectedlblP']").each(function () {
            //    $(this).text(FormatCommas($(this).text(), false));
            //    var txtvalue = $(this).text();
            //    $(this).attr('title', txtvalue);
            //    //$('.truncate').tipsy({ gravity: 's' });
            //});

            ////Format Commas For Projected Value
            //$("div[id^='ProjectedlblValueCW']").each(function () {
            //    $(this).text(FormatCommas($(this).text(), true));
            //    var txtvalue = $(this).text();
            //    $(this).attr('title', txtvalue);
            //    SetTipsyNumeric($(this)); //$('.truncate').tipsy({ gravity: 's' });
            //});

            ////Format Commas For Projected Value Revenue
            //$("div[id^='ProjectedlblValueRevenue']").each(function () {
            //    $(this).text(FormatCurrency($(this).text(), true));
            //    var txtvalue = $(this).text();
            //    $(this).attr('title', txtvalue);
            //    SetTipsyPrice($(this), txtvalue); //$('.truncate').tipsy({ gravity: 's' });
            //});

            ////Format Currency For Projected Value
            //$("div[id^='ProjectedlblC']").each(function () {
            //    $(this).text(FormatCurrency($(this).text(), false));
            //    var txtvalue = $(this).text();
            //    $(this).attr('title', txtvalue);
            //    SetTipsyPrice($(this), txtvalue);
            //});

            ////Format Commas For Actual Value
            //$("div[id^='ActuallblP']").each(function () {
            //    $(this).text(FormatCommas($(this).text(), false));
            //    var txtvalue = $(this).text();
            //    $(this).attr('title', txtvalue);
            //    SetTipsyNumeric($(this));
            //});

            ////Format Currency For Actual Value
            //$("div[id^='ActuallblC']").each(function () {
            //    $(this).text(FormatCurrency($(this).text(), false));
            //    var txtvalue = $(this).text();
            //    $(this).attr('title', txtvalue);
            //    SetTipsyPrice($(this), txtvalue); //$('.truncate').tipsy({ gravity: 's' });
            //});

            //Format Currency For Actual Cost Input
            //$("input[id^='ActuallblC']").each(function () {
            //    $(this).val(FormatCurrency($(this).val(), false));
            //    var txtvalue = $(this).val();
            //    $(this).attr('title', txtvalue);
            //    SetTipsyPrice($(this), txtvalue);
            //});

            $('.currency_dollarCost').each(function () {
                var txtvalue = $(this).val();
                $(this).attr('title', txtvalue);
            });

            $('.priceValue').each(function () {
                var txtvalue = $(this).val();
                $(this).attr('title', txtvalue);//uday 2-7-2014 internal poinmt to add tooltip title...
            });

            $('.currency_dollar').each(function () {
                var txtvalue = $(this).val();
                $(this).attr('title', txtvalue);//uday 3-7-2014 internal poinmt to add tooltip title...
            });

            $('.currency_dollarCost').priceFormat({ prefix: '$', centsSeparator: '', thousandsSeparator: ',', centsLimit: 0 });
            $('.accordion').find('input').each(function () {

                $(this).keyup(function () {
                        var currentValue = $(this).val().trim().replace(/,/g, '').replace('$', '');
                        currentValue = currentValue == '' ? "0" : currentValue; // Added by Sohel Pathan on 03/09/2014 for Internal Review Points
                        if (currentValue.match('^(0|[1-9][0-9]*)$')) {
                            //  $(this).removeClass("error");
                            var costlbl = (this).id.replace('ActuallblCCost', '');
                            if ((this).id.replace(costlbl, '') != "ActuallblCCost") {
                                var arr = (this).id.split('-');
                                costlbl = arr[0];
                                var formatValue = "P";
                                if (arr[1] == 'Revenue') {
                                    formatValue = "C";
                                }
                                var ida = "Actuallbl" + formatValue + arr[1] + arr[0];
                                var totalvalue = 0;
                                $('#tr' + arr[0] + arr[1]).find('input').each(function () {
                                    var cvalue = parseFloat($(this).val().trim().replace(/,/g, '').replace('$', ''));
                                    if (!isNaN(cvalue)) {
                                        totalvalue = cvalue + parseFloat(totalvalue);
                                    }
                                });

                                if (arr[1] == 'Revenue') {
                                    document.getElementById(ida).innerHTML = totalvalue;
                                    document.getElementById(ida).innerHTML = FormatCurrency(document.getElementById(ida).innerHTML, false);
                                    SetBudget('#' + ida); // Added by Sohel Pathan on 26/08/2014 for Internal Review Points
                                    $('#' + ida).attr('orignal-value', totalvalue);
                                }

                                //If Tactic has not any line item at that time application will update the Actual cost and Projected Cost.
                            else if (arr[1] == 'Cost') {
                                    costlbl = $('#tr' + arr[0] + arr[1]).attr('tacticid');
                                    var updateActalCost = "ActuallblCCost" + costlbl;
                                    document.getElementById(updateActalCost).innerHTML = totalvalue;
                                    document.getElementById(updateActalCost).innerHTML = FormatCurrency(document.getElementById(updateActalCost).innerHTML, false);
                                    SetBudget('#' + updateActalCost);
                                    $('#' + updateActalCost).attr('orignal-value', totalvalue);
                                }
                                else if (arr[1] != 'Revenue' && arr[1] != 'Cost' && arr[1] != 'ProjectedStageValue' && arr[1] != 'MQL' &&
                                    arr[1] != 'CW' && arr[1] != 'INQ') {
                                    //Update the Actual Cost and apply currency format.
                                    document.getElementById(ida).innerHTML = totalvalue;
                                    document.getElementById(ida).innerHTML = FormatCurrency(document.getElementById(ida).innerHTML, false);
                                    SetBudget('#' + ida); // Added by Sohel Pathan on 26/08/2014 for Internal Review Points

                                    costlbl = $('#tr' + arr[0] + arr[1]).attr('tacticid');

                                    //Update the line item for the appropriate Period (Y1,Y2....Y12)
                                    var ActualsName = 'ActuallblP' + arr[1] + arr[0];
                                    $('#' + ActualsName).attr('linevalue', totalvalue);
                                    var lineItemTotal = 0;
                                    var LineClassName = costlbl+'Line-' + arr[2];
                                    $('.' + LineClassName).each(function () {
                                        var lineItemvalue = parseFloat($(this).val().trim().replace(/,/g, '').replace('$', ''));
                                        if (!isNaN(lineItemvalue)) {
                                            lineItemTotal = lineItemvalue + parseFloat(lineItemTotal);
                                        }
                                    });

                                    var lineId = costlbl+"Cost-" + arr[2];
                                    document.getElementById(lineId).innerHTML = lineItemTotal;
                                    document.getElementById(lineId).innerHTML = FormatCurrency(document.getElementById(lineId).innerHTML, false);
                                    SetBudget('#' + lineId);

                                    //Update the Actual cost value based upon Line item actual sum.
                                    
                                    var updateActalCost = "ActuallblCCost" + costlbl;
                                    var updateActalCostValueTotal = 0;
                                    $('.lineItemActualsValues').each(function () {
                                        var updateActalCostValue = parseFloat($(this).attr('linevalue').trim().replace(/,/g, '').replace('$', ''));
                                        if (!isNaN(updateActalCostValue)) {
                                            updateActalCostValueTotal = updateActalCostValue + parseFloat(updateActalCostValueTotal);
                                        }
                                    });

                                    //Update the value and apply currency formatter on it .
                                    document.getElementById(updateActalCost).innerHTML = updateActalCostValueTotal;
                                    document.getElementById(updateActalCost).innerHTML = FormatCurrency(document.getElementById(updateActalCost).innerHTML, false);
                                    SetBudget('#' + updateActalCost);
                                    $('#' + updateActalCost).attr('orignal-value', updateActalCostValueTotal);
                                }
                                else {
                                    $('#hdn' + ida.toString()).val(totalvalue); // Added by Sohel Pathan on 27/08/2014 for Internal Review Points
                                    document.getElementById(ida).innerHTML = totalvalue;
                                    document.getElementById(ida).innerHTML = FormatCommas(document.getElementById(ida).innerHTML, false);
                                    SetLabelFormaterWithTipsyNumbers(document.getElementById(ida)); // Added by Sohel Pathan on 26/08/2014 for Internal Review Points
                                }
                            }
                            calculateRIO(costlbl);
                        }
                });
            });

            // Modified by dharmraj for implement new formula to calculate ROI, #533
            function calculateRIO(id) {
                var pcost = $("#hdnProjectedlblCCost" + id).val();  // Modified by Sohel Pathan on 10/09/2014 for Internal Review Points
                if (pcost != 0 && !isNaN(pcost)) {
                    var prevenue = $("#hdnProjectedlblValueRevenue" + id).val();    // Modified by Sohel Pathan on 10/09/2014 for Internal Review Points
                    var roip = (prevenue - pcost) / pcost;
                    $("#ProjectedROI" + id).text(FormatCommas(roip.toFixed(2).toString()));
                }

                //Added By : Kalpesh Sharma #735 Actual cost - Changes to add actuals screen 
                pcost = parseFloat(ReplaceCC($("#ActuallblCCost" + id).attr("orignal-value")));
                if (pcost != 0 && !isNaN(pcost)) {
                    var prevenue = parseFloat(ReplaceCC($("#ActuallblCRevenue" + id).attr("orignal-value")));
                    var roiT = (prevenue - pcost) / pcost;
                    $("#ActualROI" + id).text(FormatCommas(roiT.toFixed(2).toString()));
                }
            }

            $("[id^='BtnShareTactic']").click(function () {
                $("#errorMessage").css("display", "none");
                $("#successMessage").css("display", "none");
                $("#DivPartialShareTactic").empty();
                var url = '@Url.Content("~/Home/ShowShareTactic/")';
                $("#DivPartialShareTactic").load(url + '?planTacticId=' + $(this).attr('tacticId') + '&section=@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Tactic).ToLower()');
            });


            $("[id^='UpdateResult']").click(function () {
                $("#errorMessage").css("display", "none");
                $("#successMessage").css("display", "none");


                var _tactic = []
                var tacticId = $(this).attr('tacticId');
                var stageId = $(this).attr('stageId');
                var isError = false;
                var isData = false;
                //// Modified by Sohel Pathan on 26/08/2014 for Internal Review Points
                var totalProjectedStageValueActual = $("#hdnActuallblPProjectedStageValue" + tacticId).val();
                var ProjectedStageValueTitle = $("#hdnProjectedStageValueTitle" + tacticId).val();
                //// Modified by Sohel Pathan on 26/08/2014 for Internal Review Points
                var totalMQLActual = $("#hdnActuallblPMQL" + tacticId).val();
                var totalCWActual = ReplaceCC($("#ActuallblPCW" + tacticId).text());
                var totalRevenueActual = ReplaceCC($("#ActuallblCRevenue" + tacticId).text());
                //Added By : Kalpesh Sharma #735 Actual cost - Changes to add actuals screen 
                var totalCostActual = 0;
                if (IsLineItemActual) {
                    totalCostActual = ReplaceCC($("#ActuallblCCost" + tacticId).val());
                }
                else {
                    totalCostActual = ReplaceCC($("#ActuallblCCost" + tacticId).text());
                }
                
                var totalROI = ReplaceCC($("#ProjectedROI" + tacticId).text());
                var totalROIActual = ReplaceCC($("#ActualROI" + tacticId).text());
                var tableId = "#divTable" + tacticId;
                $(tableId).find('input').each(function () {
                    if ($(this).val().trim() != '') {
                        //alert(ReplaceCC($(this).val()));
                        var thisValue = ReplaceCC($(this).val());
                        if (thisValue.match('^(0|[1-9][0-9]*)$')) {
                            $(this).removeClass("error");
                        }
                        else {
                            $(this).addClass("error");
                            isError = true;
                        }
                        var arr = (this).id.split('-');
                        if (thisValue != '') {
                            _tactic.push({
                                PlanTacticId: tacticId,
                                StageTitle: arr[1],
                                Period: arr[2],
                                ActualValue: thisValue,
                                TotalProjectedStageValueActual: totalProjectedStageValueActual,
                                TotalMQLActual: totalMQLActual,
                                TotalCWActual: totalCWActual,
                                TotalRevenueActual: totalRevenueActual,
                                TotalCostActual: totalCostActual,
                                ROI: totalROI,
                                ROIActual: totalROIActual,
                                IsActual: true,
                                StageId: stageId,
                                PlanLineItemId: arr[0]
                            });
                            isData = true;
                        }
                    }
                    else {
                        $(this).removeClass("error");
                    }
                });
                if (isError) {
                    $("#errorMessage").css("display", "block");
                    $("#spanMessageError").text("@RevenuePlanner.Helpers.Common.objCached.ValidateForValidField");
                    return false;
                }
                if (parseFloat(totalMQLActual) > parseFloat(totalProjectedStageValueActual)) {
                    var msg = "@RevenuePlanner.Helpers.Common.objCached.ValidationForMqlGreaterThanINQ" 
                    var msgdisplay = msg.replace('{0}', FormatCommas(totalMQLActual.toString())).replace('{1}', ProjectedStageValueTitle).replace('{3}', ProjectedStageValueTitle).replace('{2}', FormatCommas(totalProjectedStageValueActual.toString())).replace(/{4\}/g, MQlTitle);
                    $("#spanMessageError").text(msgdisplay);
                    $("#errorMessage").css("display", "block");
                    return false;
                }
                if (!isData) {
                    _tactic.push({
                        PlanTacticId: tacticId,
                        StageTitle: 0,
                        Period: 0,
                        ActualValue: 0,
                        TotalProjectedStageValueActual: totalProjectedStageValueActual,
                        TotalMQLActual: totalMQLActual,
                        TotalCWActual: totalCWActual,
                        TotalRevenueActual: totalRevenueActual,
                        TotalCostActual: totalCostActual,
                        ROI: totalROI,
                        ROIActual: totalROIActual,
                        IsActual: false,
                        StageId: stageId,
                        PlanLineItemId:0 
                    });
                }
                $("#errorMessage").css("display", "none");
                _tactic = JSON.stringify({ 'tacticactual': _tactic });
                $.ajax({
                    contentType: 'application/json; charset=utf-8',
                    dataType: 'json',
                    type: 'POST',
                    url: '@Url.Content("~/Home/UploadResult/")?UserId=' + $(window).attr('name'),
                    data: _tactic,
                    success: function (data) {
                        if (data.returnURL != 'undefined' && data.returnURL == '#') {
                            window.location = '@Url.Content("~/Login/Index")';
                        }
                        else {
                            if (data != 'undefined') {
                                if (data.id != 0) {
                                    CallAjax();
                                    $("#successMessage").css("display", "block");
                                    $("#spanMessageSuccess").empty();
                                    $("#spanMessageSuccess").text(data.msg);
                                }
                            }
                        }
                    }
                });


            });
        }
        function AssignDefaultValue() {
            $('.accordion-actuals').find("input,input[type=text],textarea,select").each(function () {
                $(this).attr("myValue", $(this).val());
                $(this).attr("title", $(this).val());//uday 2-7-2014
            });
        }
        function fillActualsTable() {
            if (typeof actuals != 'undefined') {
                $('.accordion-actuals').empty();
                var $html = '';
                var isFilterFound = false;
                if (actuals.length) {
                    var indexValue = 0;
                    for (i in actuals) {
                        var isShow = true;
                        if (geoArr.length != 0 || indArr.length != 0 || tacArr.length != 0) {
                            isShow = false;
                        }
                        //, actuals[i].geographyId, actuals[i].individualId, actuals[i].tacticTypeId
                        var foundTac = -1;
                        for (var k = 0; k <= tacArr.length; k++) {
                            if (tacArr[k] == actuals[i].tacticTypeId) {
                                foundTac = k;
                            }
                        }
                        var foundGeo = jQuery.inArray(actuals[i].geographyId, geoArr);
                        var foundInd = jQuery.inArray(actuals[i].individualId, indArr);
                        if ((foundGeo >= 0 && indArr.length == 0 && tacArr.length == 0) ||
                            (foundInd >= 0 && geoArr.length == 0 && tacArr.length == 0) ||
                            (foundTac >= 0 && geoArr.length == 0 && indArr.length == 0) ||
                            (foundGeo >= 0 && foundInd >= 0 && tacArr.length == 0) ||
                            (foundGeo >= 0 && foundTac >= 0 && indArr.length == 0) ||
                            (foundTac >= 0 && foundInd >= 0 && geoArr.length == 0) ||
                            (foundGeo >= 0 && foundInd >= 0 && foundTac >= 0)) {
                            isShow = true;
                        }
                        if (isShow) {
                            indexValue = indexValue + 1;
                            isFilterFound = true;
                            addRowActual(indexValue, actuals[i].id, actuals[i].title, actuals[i].projectedStageValue, actuals[i].projectedStageValueActual, actuals[i].mqlProjected, actuals[i].mqlActual, actuals[i].cwProjected, actuals[i].cwActual, actuals[i].revenueProjected, actuals[i].revenueActual, actuals[i].costProjected, actuals[i].costActual, actuals[i].roiProjected, actuals[i].roiActual, actuals[i].actualData, actuals[i].modifiedBy, actuals[i].LastSync, actuals[i].stageTitle, actuals[i].tacticStageId, actuals[i].tacticStageTitle, actuals[i].IsTacticEditable, actuals[i].LineItemsData, actuals[i].costActualData);

                        }
                    }
                    if (!isFilterFound) {
                        $html += '@RevenuePlanner.Helpers.Common.objCached.NoTacticFound';
                        var $tableActuals = $('.accordion-actuals');
                        $tableActuals.append($html);
                    }
                } else {
                    if (Status == 0) {
                        $html += '@RevenuePlanner.Helpers.Common.objCached.NoOpenTacticExists';
                    }
                    else {
                        $html += '@RevenuePlanner.Helpers.Common.objCached.NoTacticExistPlan';
                    }
                    var $tableActuals = $('.accordion-actuals');

                    $tableActuals.append($html);
                }

                $('.addFormatterActualCurrency').each(function () {
                    //Added By : Kalpesh Sharma Internal Review Points 07-18-2014
                    SetLabelFormaterWithTipsy($(this)); // Modfified by Sohel Pathan on 10/09/2014 for Internal Review Points
                });

                $('.addFormatterActualNumber').each(function () {
                    //Added By : Kalpesh Sharma Internal Review Points 07-18-2014
                    SetLabelFormaterWithTipsyNumbers($(this));
                });

                // Start - Added by Sohel Pathan on 12/09/2014 for PL ticket #760
                $('.setBudget').each(function () {
                    SetBudget("#" + $(this).attr('id'));    // Modified By : Viral Kadiya Internal Review Points 10/29/2014
                });
                // End - Added by Sohel Pathan on 12/09/2014 for PL ticket #760
            }
        }
        //add row in actuals table
        //Added By : Kalpesh Sharma #735 Actual cost - Changes to add actuals screen 
        function addRowActual(_index, _id, _title, _projectedStageValue, _projectedStageValueActual, _mqlProjected, _mqlActual, _cwProjected, _cwActual, _revenueProjected, _revenueActual, _costProjected, _costActual, _roiProjected, _roiActual, _actualData, _modifiedBy, _LastSync, stageTitle, tacticStageId, tacticStageTitle, IsTacticEditable, _LineItemsData, _costActualData) {
            var $tableActuals = $('.accordion-actuals');
            var num = parseInt(_index);
            //var updateBy = '', stat;
            var $html = '<div class="accordion-group">' +
                            '<div class="accordion-heading">' +
                            '<div class="accordion-toggle">' +
                                        '<div class="header-toogle-actual">' +
                                         '<a data-toggle="collapse" class="chevron-right" data-parent="#accordion2" href="#collapse' + _id + '">' +
                                            '<div class="header-toogle-actual-left">' +
                                            '<span class="font-black">' + num + '.</span><span class="tipsyclassTitle">' + _title +
                                            '</span><span class="glass-icon"></span>' +
                                                '<div class="table-titles-actual-left">' +
                                                    '<label>Projected</label>' +
                                                    '<label>Actual</label>' +
                                                '</div>' +
                                            '</div>' +
                                        '</a>';

            $html += '<div class="header-toogle-actual-right">' +
            '<div class="shadow-scroll-table-mask-left"></div>' +
            '<div class="table-actual-mask">' +
            '<div id="divTable' + _id + '">' +
               '<table id="table_actuals" class="table" tableTacticId="tableActual' + _id + '">' +
                '<thead>' +
                    '<tr>' +
                        '<th>Jan</th>' +
                        '<th>Feb</th>' +
                        '<th>Mar</th>' +
                        '<th>Apr</th>' +
                        '<th>May</th>' +
                        '<th>Jun</th>' +
                        '<th>Jul</th>' +
                        '<th>Aug</th>' +
                        '<th>Sep</th>' +
                        '<th>Oct</th>' +
                        '<th>Nov</th>' +
                        '<th>Dec</th>' +
                    '</tr>' +
                '</thead>' +
                '<tbody>';
            var arrStage = stageTitle; //var arrStage = ['INQ', 'MQL', 'CW', 'Revenue'];
            for (var p = 0; p < arrStage.length; p = p + 1) {
                var idtr = "tr" + _id + arrStage[p];
                $html += '<tr id=' + idtr + '>';
                for (var j = 1; j <= 12; j = j + 1) {
                    var tdId = _id + "-" + arrStage[p] + "-Y" + j;
                    $html += '<td><input id="' + tdId + '" placeholder="---" ';     // Modified by Sohel Pathan on 02/09/2014 for Internal Review Point
                    //  value=' + _actualData[i].jan + '></input></td>';
                    if (arrStage[p] == 'Revenue') {
                        $html += ' class="currency_dollar"  maxlength="@RevenuePlanner.Helpers.Common.maxLengthDollar"';
                    }
                    else {
                        $html += ' class="priceValue"  maxlength="@RevenuePlanner.Helpers.Common.maxLengthPriceValue"';
                    }

                    for (k in _actualData) {
                        var comStr1 = _actualData[k].title + _actualData[k].period;
                        var comStr2 = arrStage[p] + "Y" + j;
                        if (comStr1 == comStr2) {
                            $html += 'value="' + _actualData[k].actualValue + '"';
                        }
                        //updateBy = _actualData[k].UpdateBy;
                        stat = _actualData[k].IsUpdate;
                    }
                    $html += ' ></input></td>';
                    // $html += '<td><input placeholder="0" ></input></td>';
                }
                $html += '</tr>';
            }

            //Added By : Kalpesh Sharma #735 Actual cost - Changes to add actuals screen 
            $html += '<tr id=' + "tr" + _id + "Cost" + ' TacticId=' + _id + '>';
            for (var j = 1; j <= 12; j = j + 1) {
                var newCounterTactic = j - 1;
                var tdId = _id + "-" + "Cost" + "-Y" + j;
                var divId = _id+"Cost-Y" + j;
                $html += '<td>';
                if (_LineItemsData.length <= 0) {
                    $html += '<input id="' + tdId + '" placeholder="---" '; // Modified by Sohel Pathan on 02/09/2014 for Internal Review Point
                    $html += ' class="currency_dollar"  maxlength="@RevenuePlanner.Helpers.Common.maxLengthDollar"';
                    $html += 'value="' + _costActualData[newCounterTactic].Cost + '"';
                    $html += ' ></input>';
                }
                else {
                    $html += '<div id="' + divId + '" class="table-info-actual-left addFormatterActualCurrency" style="float: right;">' + _costActualData[newCounterTactic].Cost + '</div>';
                }
                $html += '</td>';
            }
                $html += '</tr>';

            //Added By : Kalpesh Sharma #735 Actual cost - Changes to add actuals screen 
                for (var p = 0; p < _LineItemsData.length; p = p + 1) {
                    var Title = _LineItemsData[p].Title.replace(/ /g, "_");
                    var idtr = "tr" + _LineItemsData[p].id + Title;
                $html += '<tr id=' + idtr + ' TacticId='+_id +'>';
                for (var j = 1; j <= 12; j = j + 1) {
                    var tdId = _LineItemsData[p].id + "-" + Title + "-Y" + j;
                    var ClassName = "currency_dollar" + " "+_id+"Line-Y" + j;
                    $html += '<td><input id="' + tdId + '" placeholder="---" '; // Modified by Sohel Pathan on 02/09/2014 for Internal Review Point
                    $html += ' class="' + ClassName + '"  maxlength="@RevenuePlanner.Helpers.Common.maxLengthPriceValue"';
                    
                    var newCounter = j - 1;
                    var Data = _LineItemsData[p].LineItemActual[newCounter];

                    if (typeof Data != 'undefined') {
                        $html += 'value="' + _LineItemsData[p].LineItemActual[newCounter].Cost + '"';
                    }
                    else {
                        $html += 'value="' + 0 + '"';
                    }

                    $html += ' ></input></td>';
                }
                $html += '</tr>';
            }


            //if (updateBy == "") {
            //    if (_costActual != 0) {
            //        updateBy = _modifiedBy;
            //    }
            //}
            $html += '</tbody>' +
                '</table>' +
                '</div>' +
                '</div>' +
                '<div class="shadow-scroll-table-mask-right"></div>' +
                '</div>' +
                '</div>' +
            '</div>' +
        '</div>' +
        '<div id="collapse' + _id + '" class="accordion-body collapse">' +
          '<div class="accordion-inner">';

            for (var i = 0; i < arrStage.length; i++) {
                if (arrStage[i] == '@Enums.InspectStageValues[Enums.InspectStage.ProjectedStageValue.ToString()].ToString()') {
                    $html += '<div class="body-toogle-actual">' + tacticStageTitle + '<input type="hidden" id="hdnProjectedStageValueTitle' + _id + '" value="' + tacticStageTitle + '" /><div class="table-info-actual-left-wraper">' +
                                                                      '<div class="table-info-actual-left truncate addFormatterActualNumber" id="lblProjectedStageValue' + _id + '">' +
                                                    _projectedStageValue +
                                            '</div>' +
                                                '<div class="table-info-actual-left table-info-actual-width truncate addFormatterActualNumber" id="ActuallblPProjectedStageValue' + _id + '">' +
                                                    _projectedStageValueActual +
                                            '</div>' +
                                            '<input type="hidden" id="hdnActuallblPProjectedStageValue' + _id + '" value=" ' + _projectedStageValueActual + ' " />' +   //// Added by Sohel Pathan on 27/08/2014 for Internal Review Points
                                        '</div>' +
                                    '</div>';
                }
                else if (arrStage[i].toLowerCase() == '@Common.StageCodeMQL') {
                    MQlTitle = '@Html.LabelForMQL("MQL")';
                    $html += '<div class="body-toogle-actual">'+MQlTitle+'<div class="table-info-actual-left-wraper">' +
                                                    '<div class="table-info-actual-left truncate addFormatterActualNumber" id="ProjectedlblPMQL' + _id + '">' +
                                                        _mqlProjected +
                                                    '</div>' +
                                                    '<div class="table-info-actual-left table-info-actual-width truncate addFormatterActualNumber" id="ActuallblPMQL' + _id + '">' +
                                                        _mqlActual +
                                                    '</div>' +
                                                    '<input type="hidden" id="hdnActuallblPMQL' + _id + '" value=" ' + _mqlActual + ' " />' +       //// Added by Sohel Pathan on 27/08/2014 for Internal Review Points
                                                '</div>' +
                                            '</div>';
                }
            }

            $html += '<div class="body-toogle-actual">@Html.LabelForCW("CW")<div class="table-info-actual-left-wraper">' +
                                            '<div class="table-info-actual-left truncate addFormatterActualNumber" id="ProjectedlblValueCW' + _id + '">' +
                                                number_format(_cwProjected, 0, 0, ',') +    // Modified by Sohel Pathan on 12/09/2014 for PL ticket #760
                                            '</div>' +
                                            '<div class="table-info-actual-left table-info-actual-width truncate addFormatterActualNumber" id="ActuallblPCW' + _id + '">' +
                                                _cwActual +
                                            '</div>' +
                                        '</div>' +
                                    '</div>';

            $html += '<div class="body-toogle-actual">Revenue<div class="table-info-actual-left-wraper">' +
                                            '<div class="table-info-actual-left truncate setBudget" id="ProjectedlblValueRevenue' + _id + '">' +    // Modified by Sohel Pathan on 12/09/2014 for PL ticket #760
                                                FormatCurrency(_revenueProjected, true) +   // Modified by Sohel Pathan on 12/09/2014 for PL ticket #760
                                            '</div>' +
                                            '<div orignal-value="' + _revenueActual + '" class="table-info-actual-left table-info-actual-width truncate setBudget" id="ActuallblCRevenue' + _id + '">' +    // Modified by Sohel Pathan on 12/09/2014 for PL ticket #760
                                                FormatCurrency(_revenueActual, true) +  // Modified by Sohel Pathan on 12/09/2014 for PL ticket #760
                                            '</div>' +
                                            '<input type="hidden" id="hdnProjectedlblValueRevenue' + _id + '" value=" ' + _revenueProjected + ' " />' +       //// Added by Sohel Pathan on 10/09/2014 for Internal Review Points
                                        '</div>' +
                                    '</div>';

            $html += '<div class="body-toogle-actual">Cost' +
                                '<div id="border-right" class="table-info-actual-left-wraper">' +
                                    '<div class="table-info-actual-left truncate setBudget" id="ProjectedlblCCost' + _id + '">' +   // Modified by Sohel Pathan on 15/09/2014 for PL ticket #760
                                        FormatCurrency(_costProjected, true) +  // Modified by Sohel Pathan on 15/09/2014 for PL ticket #760
                                    '</div>' ;

            //Added By : Kalpesh Sharma #735 Actual cost - Changes to add actuals screen 
                @*$html += '<input placeholder="---" class="currency_dollar truncate addFormatterActualCurrency" maxlength="@RevenuePlanner.Helpers.Common.maxLengthDollar" id="ActuallblCCost' + _id + '" value="' + _costActual + '">' + '</input>';    // Modified by Sohel Pathan on 02/09/2014 for Internal Review Point*@
            $html += '<div orignal-value="' + _costActual + '" id="ActuallblCCost' + _id + '" class="table-info-actual-left table-info-actual-width truncate setBudget">' + FormatCurrency(_costActual, true) + '</div>';   // Modified by Sohel Pathan on 12/09/2014 for PL ticket #760
            $html += '<input type="hidden" id="hdnProjectedlblCCost' + _id + '" value=" ' + _costProjected + ' " />';       //// Added by Sohel Pathan on 10/09/2014 for Internal Review Points
            $html+=     '</div>' +
                            '</div>';

            //Added By : Kalpesh Sharma #735 Actual cost - Changes to add actuals screen 
            for (line in _LineItemsData) {
                var Title = _LineItemsData[line].Title.replace(/ /g, "_");
                $html += '<div class="body-toogle-actual"><span class="inner-lineItem truncate" style="width:28% !important;display:block;" title="' + _LineItemsData[line].Title + '">' + _LineItemsData[line].Title +
                                             '</span><div id="border-right" class="table-info-actual-left-wraper">' +
                                                 '<div class="table-info-actual-left truncate setBudget" id="lineItemProjectedCost' + _LineItemsData[line].id + '">' +  // Modified by Sohel Pathan on 12/09/2014 for PL ticket #760
                                                     FormatCurrency(_LineItemsData[line].LineItemCost, true) +  // Modified by Sohel Pathan on 12/09/2014 for PL ticket #760
                                                 '</div>' +
                                                 '<div lineValue="' + _LineItemsData[line].LineItemActualCost + '" class="table-info-actual-left setBudget lineItemActualsValues" style="float: right;" id="ActuallblP' + Title + _LineItemsData[line].id + '">' +  // Modified by Sohel Pathan on 12/09/2014 for PL ticket #760
                                                  FormatCurrency(_LineItemsData[line].LineItemActualCost, true) +   // Modified by Sohel Pathan on 12/09/2014 for PL ticket #760
                                                     @*'<input placeholder="0" class="currency_dollarCost truncate" maxlength="@RevenuePlanner.Helpers.Common.maxLengthDollar" id="lineItemlblCCost' + _LineItemsData[line].id + '" value="' + _LineItemsData[line].LineItemCost + '">' + '</input>' +*@
                                    '</div>' +
                                '</div>' +
                            '</div>';
            }

            //var roiProjectedValue = 0;
            //if (_costProjected != 0 && !isNaN(_costProjected)) {
            //    var prevenue = parseFloat(_revenueProjected);
            //    roiProjectedValue = (Math.round(prevenue / parseFloat(_costProjected) * 100) / 100);
            //}

            $html += '<div class="body-toogle-actual">ROI' +
                                    '<div id="border-right" class="table-info-actual-left-wraper">' +
                                        '<div class="table-info-actual-left truncate" id="ProjectedROI' + _id + '">' +
                                            _roiProjected.toFixed(2) +
                                        '</div>' +
                                        '<div class="table-info-actual-left table-info-actual-width truncate " id="ActualROI' + _id + '">' +
                                            _roiActual.toFixed(2) +
                                        '</div>' +
                                    '</div>' +
                                '</div>';

            $html += '<div class="body-toogle-actual">' +
                            '<div class="wrapper-toogle-actual-buttons">' +
                            '<div class="pull-left" style="width:300px;">' +
                            '<label id="last-synced" class="pull-left margin-top6 margin-bottom0" style="line-height:10px;">' + _LastSync + '</label>' +
                            '<label id="last-updated" class="pull-left margin-bottom0">' + _modifiedBy + '</label></div>';

            if (IsTacticEditable) {
                $html += '<button id="BtnShareTactic' + _id + '" tacticId="' + _id + '" class="btn btn-blue text-shadow-blue source-sans-proregular share-tactic-icon button-inspect-result-modal pull-right" type="button"><span class="flag-icon"></span>Share Tactic</button>' +
                         '<button id="UpdateResult" stageId="' + tacticStageId + '" tacticId="' + _id + '" class="btn btn-blue text-shadow-blue source-sans-proregular button-inspect-result-modal pull-right margin-right20" type="button"><span class="flag-icon"></span>Update Actuals</button>';
            }

            $html += '</div>' +
                       '</div>' +
                       '</div>' +
                   '</div>' +
                 '</div>';
            $tableActuals.append($html);

        }//addRowActual
        function maskWidht() {
            var widthHeader = $("#accordion2").width(),
                //widthRigth = widthHeader - 652;

                //#598 Added by Kalpesh Sharma : Add Actuals: Inappropriate Display of Add Actuals Tactics
                widthRigth = widthHeader - 662;

            $(".header-toogle-actual-right").width(widthRigth);
            $(".table-actual-mask").width(widthRigth);
            $('.table-actual-mask').scrollLeft(0);
            $(".accordion-actuals .accordion-heading").find('.table-actual-mask').next().css({ "margin-left": widthRigth });
            return this;
        };
        function animateMask(mask, value) {
            $(mask).animate({
                height: value
            }, 300, function () {
                // Animation complete
        });
        };
        //Added by Mitesh Vaishnav for PL ticket #972 - Add Actuals - Filter section formatting
        function toggleTacticType(obj) {
            var id = $(obj).attr('id');
            if ($(obj).is(':checked')) {
                $("#li" + id).addClass("close-list");
                tacArr.push(id);
            }
            else {
                $("#li" + id).removeClass("close-list");
                removeByValue(tacArr, id);
            }
            //if (tacArr.length == 0) {
            //    $("#TacticTypeAllModule").css("display", "none");
            //    $("#NoTTFound").show();
            //}
            //else {
            //    $("#TacticTypeAllModule").css("display", "block");
            //    $("#NoTTFound").hide();
            //}
        }
        function removeByValue(arr, val) {
            for (var i = 0; i < arr.length; i++) {
                if (arr[i] == val) {
                    arr.splice(i, 1);
                    break;
                }
            }
        }
        function UpdateResult() {
            CallAjax();
        }
        function toggleGeography(obj) {
            var id = $(obj).attr('id');
            if ($(obj).is(':checked')) {
                $("#liGeography" + id).addClass("close-list");
                geoArr.push(id);
            }
            else {
                $("#liGeography" + id).removeClass("close-list");
                removeByValue(geoArr, id);
            }
            //if (geoArr.length == 0) {
            //    $("#GeographyAllModule").css("display", "none");
            //    $("#NoGeographyFound").show();
            //}
            //else {
            //    $("#GeographyAllModule").css("display", "block");
            //    $("#NoGeographyFound").hide();
            //}
        }
        function toggleOwner(obj) {
            debugger;
            var id = $(obj).attr('id');
            if ($(obj).is(':checked')) {
                $("#liOwner" + id).addClass("close-list");
                indArr.push(id);
            }
            else {
                $("#liOwner" + id).removeClass("close-list");
                removeByValue(indArr, id);
            }
            //if (indArr.length == 0) {
            //    $("#ulOwnerAllModule").css("display", "none");
            //    $("#NoOwnerFound").show();
            //}
            //else {
            //    $("#ulOwnerAllModule").css("display", "block");
            //    $("#NoOwnerFound").hide();
            //}
        }
        function BulkOwnerOperation(selection) {
            indArr = [];
            if (selection) {
                $("#ulSelectedOwner li").each(function (i) {
                    $(this).addClass("close-list");
                    var chkid = $(this).find("input[type=checkbox]").attr("id");
                    $("#" + chkid).attr("checked", "checked");
                    indArr.push(chkid);
            });
        }
            else {
                $("#ulSelectedOwner li").each(function (i) {
                    $(this).removeClass("close-list");
                    var chkid = $(this).find("input[type=checkbox]").attr("id");
                    $("#" + chkid).removeAttr("checked");
            });
            }
        }
        function BulkGeoOperation(selection) {
            geoArr = [];
            if (selection) {
                $("#ulSelectedGeography li").each(function (i) {
                    $(this).addClass("close-list");
                    var chkid = $(this).find("input[type=checkbox]").attr("id");
                    $("#" + chkid).attr("checked", "checked");
                    geoArr.push(chkid);
                });
            }
            else {
                $("#ulSelectedGeography li").each(function (i) {
                    $(this).removeClass("close-list");
                    var chkid = $(this).find("input[type=checkbox]").attr("id");
                    $("#" + chkid).removeAttr("checked");
                });
            }
        }
        function BulkTTOperation(selection) {
            tacArr = [];
            if (selection) {
                $("#ulTacticType li").each(function (i) {
                    $(this).addClass("close-list");
                    var chkid = $(this).find("input[type=checkbox]").attr("id");
                    $("#" + chkid).attr("checked", "checked");
                    tacArr.push(chkid);
                });
            }
            else {
                $("#ulTacticType li").each(function (i) {
                    $(this).removeClass("close-list");
                    var chkid = $(this).find("input[type=checkbox]").attr("id");
                    $("#" + chkid).removeAttr("checked");
                });
            }
        }
</script>
