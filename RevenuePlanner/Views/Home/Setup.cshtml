@model RevenuePlanner.Models.InspectModel
@using RevenuePlanner.Helpers;
@{
    var tactic = (RevenuePlanner.Models.InspectModel)ViewBag.TacticDetail;
    var deployStatus = Model.IsDeployedToIntegration == true ? "Yes" : "No";
    deployStatus = tactic.IsIntegrationInstanceExist == "N/A" ? "Plan not Integrated" : deployStatus;////Modified by Mitesh Vaishnav for PL ticket #690 Model Interface - Integration
}

@using (Html.BeginForm())
{
    @Html.HiddenFor(model => model.PlanTacticId)
    
    <div class="inspect-column-parent source-sans-proregular remove-bottom-border">
        <div class="span6" id="inspect-modal-left-column1">
            <p>Parent Campaign</p>
            @Html.TextBox("txtCampaign", HttpUtility.HtmlDecode(tactic.CampaignTitle), new { @class = "span12 input-small truncate", style = "background:#F2F2F2;", @readonly = "true", title = tactic.CampaignTitle })
            <p>Parent Program</p>
            @Html.TextBox("txtProgram", HttpUtility.HtmlDecode(tactic.ProgramTitle), new { @class = "span12 input-small truncate", style = "background:#F2F2F2;", @readonly = "true", title = tactic.ProgramTitle })
            <p>Description</p>
            @Html.TextArea("txtDescription", HttpUtility.HtmlDecode(Model.Description), new { @class = "span12 text-area-size", style = "background:#F2F2F2;", @readonly = "true" })
        </div>
        <div class="span3" id="inspect-modal-left-column2" style="margin-left:10px;">
            <p>Tactic Type</p>
            @Html.TextBoxFor(model => model.TacticTypeTitle, new { @class = "input-small truncate", style = "background:#F2F2F2;", @readonly = "true", title = tactic.TacticTypeTitle })
            <p>Cost</p>
            @Html.TextBoxFor(model => model.Cost, new { @class = "input-small truncate", id = "txtCost", @readonly = "true", })
            @*Modified by Dharmraj for custom label, #738 Custom label for audience tab *@
            <p>Start Date</p>
            @Html.TextBoxFor(model => model.StartDate, new { @class = "input-small", @readonly = "true", @Value = Model.StartDate.ToString(@RevenuePlanner.Helpers.Common.DateFormat) })
            <p>End Date</p>
            @Html.TextBoxFor(model => model.EndDate, new { @class = "input-small truncate", @readonly = "true", @Value = Model.EndDate.ToString(@RevenuePlanner.Helpers.Common.DateFormat)  })
        </div>
        <div class="span3" id="inspect-modal-left-column3">
            <p>Owner</p>
            @Html.TextBoxFor(model => model.Owner, new { @class = "span12 input-small truncate", style = "background:#F2F2F2;", @readonly = "true", title = tactic.Owner })
            <p style="width: 110%;">Deployed to Integration</p>
            @Html.TextBox("txtDeployStatus", deployStatus, new { @class = "span12 input-small truncate", style = "background:#F2F2F2;", id = "txtDeployStatus", @readonly = "true" })
            <div class="cf width100">
             <div class="width65px margin-right20 pull-left" style="width: 30%">
                 @*<label title="@Html.LabelForINQ("INQ")">@Html.LabelForINQ("INQ")</label>*@

                 <label id="lblStageTitle" title="@Model.StageTitle">@Model.StageTitle &nbsp;
                          @if (ViewBag.IsDiffrentStageType == true)
                          {
                              <span>
                                  <img id="diffrentStageIcon" src="~/Content/images/flag-icon.png" title="Please note that the stage information at plan level is different than that at the model level" /></span>
                              
                          }</label>
                 @*@Html.TextBoxFor(model => model.INQs, new { placeholder = "0", id = "txtinq", @class = "priceValue", maxlength = @RevenuePlanner.Helpers.Common.maxLengthPriceValue })*@
                 @*@Html.TextBoxFor(model => model.ProjectedStageValue, new { placeholder = "0", id = "txtProjectedStageValue", @class = "priceValue", maxlength = @RevenuePlanner.Helpers.Common.maxLengthPriceValue })*@
                <input type="text" value="@Model.ProjectedStageValue" readonly="true" id = "txtProjectedStageValue" />
             </div>

             <div class="width65px margin-right20 pull-left" style="width: 30%">
                 <label title="@Html.LabelForMQL("MQLs")">@Html.LabelForMQL("MQLs")</label>
                 <input type="text" value="@Model.MQLs" readonly="true" id = "txtmql" />
             </div>

             <div class="width65px pull-left" style="width: 30%">
                 <label title="Revenue">Revenue</label>
                 @Html.TextBoxFor(model => model.Revenues, new { placeholder = "$0", id = "txtRevenue", @readonly = "true", maxlength = @RevenuePlanner.Helpers.Common.maxLengthDollar })
             </div>
         </div>
        </div>
    </div>
    <ul class="nav nav-tabs new-margin padding-bottom10 clear" id="InspectTab">
        <li class="pull-right">
            <h3 class="modal-popup-innertitle source-sans-proregular">Attributes</h3>
        </li>
    </ul>
    <div class="inspect-column-parent source-sans-proregular remove-bottom-border">
        <div class="span3 margin-top10">
            <p class="ellipsis" title="@Html.CustomLabelFor(Enums.CustomLabelCode.Audience)">@Html.CustomLabelFor(Enums.CustomLabelCode.Audience)</p>
            @Html.TextBox("txtAudience", (string)ViewBag.Audience, new { @class = "span12 input-small", style = "background:#F2F2F2;", @readonly = "true", title = (string)ViewBag.Audience })
        </div>
        <div class="span3 margin-top10 paddingleft25px">
            <p>Business Unit</p>
            @Html.TextBox("txtBusinessUnit", (string)ViewBag.BudinessUnitTitle, new { @class = "span12 input-small truncate", style = "background:#F2F2F2;", @readonly = "true", title = (string)ViewBag.BudinessUnitTitle })
        </div>
        <div class="span3 margin-top10 paddingleft25px">
            <p>Vertical</p>
             @Html.TextBoxFor(model => model.VerticalTitle, new { @class = "span12 input-small truncate", style = "background:#F2F2F2;", @readonly = "true", title = tactic.VerticalTitle })
        </div>
        <div class="span3 margin-top10 paddingleft25px">
            <p>Geography</p>
            @Html.TextBoxFor(model => model.GeographyTitle, new { @class = "span12 input-small truncate", style = "background:#F2F2F2;", @readonly = "true", title = tactic.GeographyTitle })
        </div>
        
         @HtmlHelpers.GenerateCustomFieldsForInspectPopup(tactic.PlanTacticId, Enums.EntityType.Tactic.ToString(),4)
    </div>
   
                                        
    <span class="flag-icon"></span>
    <input type="button" class="btn btn-blue text-shadow-blue source-sans-proregular gear-icon button-inspect-review-modal pull-right"
        id="button-review-tactic" name="button-save" value="Review Tactic" style="display: none;" />
}

<script type="text/javascript">
    $(document).ready(
      function () {
          $('#txtCost').priceFormat({ prefix: '$', centsSeparator: '', thousandsSeparator: ',', centsLimit: 0 });
          $('#txtCost').attr("title", $('#txtCost').val()); //added by uday for internal point to add title tooltip 2-7-2014
          $(".selectBox select").selectbox();

          $('form').find(".sbSelector").each(function () {
              $(this).unbind("click");
              $(this).removeAttr("href");
              $(this).prev().unbind("click");
              $(this).prev().removeAttr("href");
          });

      });
</script>
