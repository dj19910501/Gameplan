@model RevenuePlanner.Models.InspectModel
@{
    var tactic = (RevenuePlanner.Models.InspectModel)ViewBag.TacticDetail;
}

@using (Html.BeginForm())
{
    @Html.HiddenFor(model => model.PlanTacticId)
    <div class="span7" id="inspect-modal-right-div">
        <div id="nl-form" class="nl-form nl-form-modal">
            I'm running 
                <span id="tactic-type" class="color5693B3">@tactic.TacticTypeTitle</span>
            tactic called 
                <span id="tactic-name" class="color5693B3">@tactic.TacticTitle</span>
            from
                <span id="start-date" class="color5693B3">@tactic.StartDate.ToShortDateString()</span>
            to
                <span id="end-date" class="color5693B3">@tactic.EndDate.ToShortDateString()</span>
            for the
                <span id="vertical" class="color5693B3">@tactic.VerticalTitle</span>
            vertical.
                                          <br>
            The status is: 
                <span id="status" class="color5693B3">@tactic.Status</span>

            <div class="nl-overlay"></div>

        </div>
        <!--To call js for forms animations-->
        <script src="@Url.Content("~/Scripts/js/NaturalLanguageForm/nlform.js")"></script>
        <script>
            var nlform2 = new NLForm(document.getElementById('nl-form'));
        </script>
    </div>
                                       
    <div class="span2" id="inspect-modal-left-column1">
        <p>Parent Campaign</p>
            @Html.TextBox("txtCampaign", tactic.CampaignTitle, new { @class = "span12 input-small truncate", style = "background:#F2F2F2;", @readonly = "true", title = tactic.CampaignTitle })
        <p>Parent Program</p>
            @Html.TextBox("txtProgram", tactic.ProgramTitle, new { @class = "span12 input-small truncate", style = "background:#F2F2F2;", @readonly = "true", title = tactic.ProgramTitle })
        <p>Description</p>
            @Html.TextAreaFor(model => model.Description, new { @class = "span12 text-area-size truncate", style = "background:#F2F2F2;", @readonly = "true" })

    </div>
    <div class="span2" id="inspect-modal-left-column2">
        <p>Owner</p>
        @Html.TextBoxFor(model => model.Owner, new { @class = "span12 input-small truncate", style = "background:#F2F2F2;", @readonly = "true", title = tactic.Owner })
        <p>Audience</p>
            @Html.TextBox("txtAudience", (string)ViewBag.Audience, new { @class = "span12 input-small", style = "background:#F2F2F2;", @readonly = "true", title = (string)ViewBag.Audience })

        <p>Business Unit</p>
        @Html.TextBox("txtBusinessUnit", (string)ViewBag.BudinessUnitTitle, new { @class = "span12 input-small truncate", style = "background:#F2F2F2;", @readonly = "true", title = (string)ViewBag.BudinessUnitTitle })
        <p>Cost</p>
            @Html.TextBoxFor(model => model.Cost, new { @class = "span12 input-small truncate", style = "background:#F2F2F2;", id = "txtCost", @readonly = "true", title = tactic.Cost })
    </div>
                                        
    <span class="flag-icon"></span>
    <input type="button" class="btn btn-blue text-shadow-blue source-sans-proregular gear-icon button-inspect-review-modal pull-right"
        id="button-review-tactic" name="button-save" value="Review Tactic" style="display: none;"></input>
}

<script type="text/javascript">
    $(document).ready(
      function () {
          $('#txtCost').priceFormat({ prefix: '$', centsSeparator: '', thousandsSeparator: ',', centsLimit: 0 });
      });
</script>
