@using RevenuePlanner.Helpers;
@{
    var popupvalue = (string)ViewBag.InspectPopup;
    var RedirectType = (string)ViewBag.RedirectType;
    var RedirectTypeMode = (bool)(!string.IsNullOrEmpty(RedirectType) ? (RedirectType == Enums.InspectPopupRequestedModules.ApplyToCalendar.ToString() ? true : false) : false);
    bool isIndex = (bool)(!string.IsNullOrEmpty(RedirectType) ? (RedirectType == Enums.InspectPopupRequestedModules.Index.ToString() ? true : false) : true);
    var CalledFromBudget = (!string.IsNullOrEmpty(RedirectType) ? (RedirectType == Enums.InspectPopupRequestedModules.Budgeting.ToString() ? "Budegting" : "") : "");
    //// Flag to indicate unavailability of web service.
    //// Added By: Maninder Singh Wadhva on 11/24/2014.
    //// Ticket: 942 Exception handeling in Gameplan.
    bool isServiceUnavailable = Convert.ToBoolean(ViewBag.IsServiceUnavailable);
}
@Html.Hidden("hdnPopup", popupvalue, new { id = "hdnInspectPopup" })
<buttom class="close-x-big-icon" data-dismiss="modal" aria-hidden="true"></buttom>
@{
    var planLineItemId = 0;
    string colorCode = "C6EBF3";
    string tacticId = Convert.ToString(ViewBag.tacticId);
    var campaignId = Convert.ToString(ViewBag.CampaignId);
    var planProgrameId = Convert.ToString(ViewBag.PlanProgrameId);
     
    string lineitemTitle = "";
    bool IsPlanEditable = false;
    bool IsOtherLineItem = false;
    
    if (ViewBag.IsOtherLineItem != null)
	{
		 IsOtherLineItem = (bool)ViewBag.IsOtherLineItem;
	}
    
    if (ViewBag.IsPlanEditable != null)
    {
        IsPlanEditable = (bool)ViewBag.IsPlanEditable;
    }
    if (ViewBag.LineItemId!=null)
    {
    planLineItemId = ViewBag.LineItemId;
    lineitemTitle = ViewBag.LineItemTitle;
    }
    bool IsTacticActualsAddEditAuthorized = (bool)ViewBag.IsTacticActualsAddEditAuthorized;
}

@Html.Hidden("hdnPlanLineItemID", planLineItemId, new { id = "hdnPlanLineItemID" })
@Html.Hidden("hdnLineitemOpt", "View", new { id = "hdnLineitemOpt" })
@Html.Hidden("hdnRedirectType", RedirectType, new { id = "hdnRedirectType" })
<style type="text/css">
    #successMessageViewCampaign, #errorMessageEditCampaign {
        margin-bottom: 15px !important;
    }
</style>

<div id="successMessageViewLineItem" class="alert hide alert-success message-position-small">
    <a class="close">×</a>
    <span id="spanSuccessMessageViewLineitem"></span>
</div>

<div id="errorMessageEditLineitem" class="alert alert-error hide message-position-small">
    <a class="close">×</a>
    <strong>Error!</strong>
    <span id="spanMessageEditLineitem"></span>
</div>

<form>
    <div class="modal-popup-title">
        <span class="icon-flag bg-purple" style="background-color:#@colorCode !important;"></span>
        <h2 class="title-simple source-sans-prolight">
            @if (lineitemTitle != string.Empty)
            {
                <span>
                    <span id="lblLineitemTitle" class="tipsyclassTitle" title="@Html.Raw(lineitemTitle)" >@Html.Raw(lineitemTitle)</span>
                    @if (IsPlanEditable)
                    {
                        if(!IsOtherLineItem){  
                        <div class="delete-btn-tab" style="float: right;" id="divDeleteProgram">
                            <button class="delete-btn-gray" id="deleteLineItem" type="button">Delete</button>
                        </div>
                        }
                    }
                    
                    @if(!IsOtherLineItem){
                         <div style="float: right; position: relative;">
                            <span class="add-icon-white btn-blue btn-large" style="display: block; cursor: pointer; margin-right: 10px;" id="AddForm"></span>
                            <div class="btn-dropdwn" style="display: none; position: absolute; top: 40px;z-index:1;" id="popupLineitem">
                                <ul style="margin: 0;">
                                    <li class="new-prog" id="NewLineItem">New Line Item</li>
                                    <li class="copy-camp" id="CloneLineItem">Copy Line Item</li>
                                </ul>
                            </div>
                        </div>
                    }

                    @if (IsPlanEditable)
                    {
                        <a class="edit-icon-white btn-blue btn-large" href="#" id="btnEditlineItem" style="margin-right: 15px;"></a>
                    }
                </span> 
            }
            @Html.TextBox("txtTitle", HttpUtility.HtmlDecode(lineitemTitle), new { placeholder = "Line Item name goes here", require = "true", maxlength = "255", @class = "span12 input-small truncate light-blue-background", @style = "width: 95%; height: 28px;display:none;font-family:'source_sans_prolight', Arial, 'sans-serif';font-size:27px;color:#4d4d4d;line-height: normal;", title = lineitemTitle, id = "txtTitle" })
            @Html.TextBox("txtTitle1", "", new { @style = "display:none", id = "txtTitle" })
        </h2>
    </div>
</form>

<div>
    <ul class="nav nav-tabs new-margin" id="InspectTab">
        <li class="active pull-left" id="liSetup">
            <a>Setup</a>
        </li>
        
        @if (IsTacticActualsAddEditAuthorized)
        {
         <li class="pull-left" id="liActuals">
            <a>Actuals</a>
        </li>
        }
        @if (!IsOtherLineItem)
        {
            <li class="pull-left" id="liBudget">
            <a>Budget</a>
            </li>
        }      
        <li class="pull-right">
            <h3 class="modal-popup-innertitle source-sans-proregular">Details</h3>
        </li>
    </ul>
    <div id="divTab">
    </div>

</div>

<script type="text/javascript">

    var divPartial = "#divPartial";
    var TabSetup = "Setup";
    
    var TabBudget = "Budget";
    var divTab = "#divTab";
    var TabActual = "Actuals";	
 var PlanLineItemId = $("#hdnPlanLineItemID").val();
 //// Function to redirect to login page on unavailability of web service.
 //// Added By: Maninder Singh Wadhva on 11/24/2014.
 //// Ticket: 942 Exception handeling in Gameplan.
 function redirectOnServiceUnavailibility() {
     if ('@Html.Raw(Json.Encode(isServiceUnavailable))' == 'true') {
            window.location = '@Url.Content(RevenuePlanner.Helpers.Common.RedirectOnServiceUnavailibilityPage)';
        }
 }

    $(document).ready(
     function () {
         //// Call function to redirect on service unavailibility.
         //// Added By: Maninder Singh Wadhva on 11/24/2014.
         //// Ticket: 942 Exception handeling in Gameplan.
         redirectOnServiceUnavailibility();
         CloseIconClick();
         $("#btnEditlineItem").css("display", "block");
         $("#AddForm").css("display", "block");
         $("#divDeleteProgram").css("display", "block");
         NumberFormatterTipsyTitle(".tipsyclassTitle", 55);
         var InspectValue = $("#hdnInspectPopup").val();

         if (('@IsOtherLineItem'.toLowerCase().toString() == "true") && (InspectValue == "Budget")) {
             InspectValue = "Setup";
         }
         
         var planLineitemId = $("#hdnPlanLineItemID").val();

         // Call Remove Tabclass which will handle style of tabs
         RemoveTabClass();

         $("#li" + InspectValue).removeClass("pull-left");
         $("#li" + InspectValue).addClass("active pull-left");
         var tabtext = ($("#li" + InspectValue).children('a').text());
         $('#div' + tabtext).css({ display: "block" });
         $("#liSetup,#liReview,#liBudget,#liActuals").on("click", function () {
             $("#successMessageViewCampaign").slideUp(50);
             $("#errorMessageEditCampaign").slideUp(50);
             RemoveTabClass();
             $(this).removeClass("pull-left");
             $(this).addClass("active pull-left");
             $("#errorMessage").css("display", "none");
             $("#successMessage").css("display", "none");
             var tabtext = ($(this).children('a').text());
             loadReview(PlanLineItemId, tabtext);
         });
         if (planLineitemId != '0') {
             loadReview(planLineitemId, tabtext);
         }
         else {
             $("#liActuals ,#liBudget,#liSetup").unbind('click');
             loadAddSetup();
         }
       

     });

    //<--- End Document.ready event --->
  
    $("#NewLineItem").on("click", function () {
        loadInspectPopup(0, "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.LineItem).ToLower()", "Setup", "@Enums.InspectPopupMode.Add.ToString()", '@tacticId', '@RedirectType');
    });

    $("#btnEditlineItem").on("click", function () {
        $("#errorMessage").css("display", "none");
        $("#successMessage").css("display", "none");
        $("#hdnLineitemOpt").val("Edit");
        var InspectValue = $("#hdnInspectPopup").val();
        var tabtext = ($("#li" + InspectValue).children('a').text());
        if (tabtext == "Setup") {
            url = '@Url.Content("~/Home/LoadEditSetupLineitem/")';
			      $("#divTab").empty();
			      $("#divTab").load(url + '?id=' + PlanLineItemId, function (response, status, xhr) {
			          if (response == '{"serviceUnavailable":"~/Login/ServiceUnavailable"}') {
			              //// Call function to redirect on service unavailibility.
			              //// Added By: Maninder Singh Wadhva on 11/24/2014.
			              //// Ticket: 942 Exception handeling in Gameplan.
			              window.location = '@Url.Content(Common.RedirectOnServiceUnavailibilityPage)';
                    }
			      });
			  }
			  else if (tabtext == "Budget") {
			      url = '@Url.Content("~/Home/LoadLineItemBudgetAllocation/")';
                      $("#divTab").empty();
                      $("#divTab").load(url + '?id=' + PlanLineItemId);
                  }
                  else if (tabtext == "Actuals") {
                      loadReview(PlanLineItemId, tabtext);
                  }

           $("#btnEditlineItem").css("display", "none");
           $('#txtTitle').css('display', 'block');
           $('#lblLineitemTitle').css('display', 'none');
           $("#txtTitle").val($('#lblLineitemTitle').text());
           $("#txtTitle").prop('readonly', false);
           $("#AddForm").css("display", "none");
           $("#divDeleteProgram").css("display", "none");
           $("#txtTitle").removeClass('error');
           return false;
       });

    function RemoveTabClass() {
        $('#InspectTab').children().each(function () {
            if ($(this).hasClass('active pull-left')) {
                $(this).removeClass("active pull-left");
                $(this).addClass("pull-left");
            }
        });
    }

    $('#AddForm').click(function () {
        if ($('#popupLineitem').css('display') == 'none') {
            $('#popupLineitem').css('display', 'block')
        }
        else {
            $('#popupLineitem').css('display', 'none')
        }
    });

    $(document).mouseup(function (e) {
        var popup = $('#popupLineitem');
        var button = $('#AddForm');
        if (!popup.is(e.target) && popup.has(e.target).length === 0 && popup.css('display') == 'block' && !button.is(e.target) && button.has(e.target).length === 0) {
            $('#popupLineitem').css('display', 'none');
        }
    });

    function loadReview(id, tabValue) {

        $("#hdnInspectPopup").val(tabValue);
        $.ajaxSetup({ cache: false });
        var url;

        var LineitemOpt = $("#hdnLineitemOpt").val();
        if (tabValue == TabSetup) {
            if (LineitemOpt == "Edit") {
                $('#txtTitle').css('display', 'block');
                $('#lblLineitemTitle').css('display', 'none');
                url = '@Url.Content("~/Home/LoadEditSetupLineitem/")';
            }
            else {
                url = '@Url.Content("~/Home/LoadSetupLineitem/")';
            }
        }

        if (tabValue == TabBudget) {
            if (LineitemOpt == "Edit") {
                $('#txtTitle').css('display', 'block');
                $('#lblLineitemTitle').css('display', 'none');
            }
            url = '@Url.Content("~/Home/LoadLineItemBudgetAllocation/")';
        }
        if (tabValue == TabActual) {
            url = '@Url.Content("~/Home/LoadActualsLineItem/")';
        }

        RemoveTabClass();
        $("#li" + tabValue).removeClass("pull-left");
        $("#li" + tabValue).addClass("active pull-left");
        $('#div' + tabValue).css({ display: "block" });
        $("#divTab").empty();
        $("#divTab").load(url + '?id=' + id, function (response, status, xhr) {
            if (response == '{"serviceUnavailable":"~/Login/ServiceUnavailable"}') {
                //// Call function to redirect on service unavailibility.
                //// Added By: Maninder Singh Wadhva on 11/24/2014.
                //// Ticket: 942 Exception handeling in Gameplan.
                window.location = '@Url.Content(Common.RedirectOnServiceUnavailibilityPage)';
                    }
        });
    }
    // Close event for Error Message & Success Message Close button 
    $(".alert").find(".close").on("click", function (e) {
        e.stopPropagation();
        e.preventDefault();
        $(this).closest(".alert").css("display", "none");
    });

    $('#CloneLineItem').click(function () {
        var idPlanProgram = $("#hdnPlanLineItemID").val();
        var Title = $("#lblLineitemTitle").html();
        $.ajax({
            type: 'POST',
            url: '@Url.Content("~/Home/Clone")',
            data: {
                CloneType: '@Enums.DuplicationModule.LineItem',
                Id: idPlanProgram,
                title: Title,
                CalledFromBudget: '@CalledFromBudget',
                RequsetedModule: '@RedirectType'
            },
            success: function (data) {
                if (data.IsSuccess != 'undefined' && data.IsSuccess == '#') {
                    window.location = '@Url.Content("~/Login/Index")';
                }
                else if (data.IsSuccess) {
                    if (data.opt == '@Enums.InspectPopupRequestedModules.Index.ToString()') {
                        SaveMessageOnParent(data.msg);
                        $('body').removeClass('bodyOverflow');
                    }
                    else {

                        var currentTab = "Setup";

                        if ('@RedirectType' == "@Enums.InspectPopupRequestedModules.Budgeting.ToString()") {
                             currentTab = "Budget";
                         }

                        var lineItemId = data.Id;
                        var expandplanLineItemId = data.expand;
                        var planCampaignId = '@campaignId';
                        var planProgramId = '@planProgrameId';
                        var planTacticId = '@tacticId';
                        loadInspectPopup(lineItemId, "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.LineItem).ToLower()", currentTab, "@Enums.InspectPopupMode.ReadOnly.ToString()", 0, '@RedirectType');

                        if ("@Enums.InspectPopupRequestedModules.Budgeting.ToString()" == '@RedirectType') {
                            $("#hdnBudgetingExpandId").val(expandplanLineItemId);
                            $("#hdnBudgetingIsSave").val("true");
                        }
                        else {
                            RefreshCurrentTab('@RedirectType', planCampaignId, planProgramId, planTacticId);
                        }

                        $("#successMessage").css("display", "block");
                        $("#spanMessageSuccess").empty();
                        $("#spanMessageSuccess").text(data.msg);
                        $("#errorMessage").css("display", "none");
                        return;
                    }
                }
                else {
                    $("#successMessageViewProgram").slideUp(50);
                    $("#errorMessageEditProgram").slideDown(400);
                    $("#spanMessageEditProgram").empty();
                    $("#spanMessageEditProgram").val(data.msg);
                    return false;
                }
            }
        });
     });

function SaveMessageOnParent(value) {
    $("#modal-container-186470").modal('hide');
    $("#errorMessageDuplicatePlan").slideUp(50);
    $("#successMessageDuplicatePlan").slideDown(400);
    $("#cSuccessDuplicatePlan").empty();
    $("#cSuccessDuplicatePlan").text(htmlDecode(value));
    $("#successMessageDuplicatePlan").removeClass("message-position");
    $("#successMessageDuplicatePlan").addClass("successMessage-InspectPopUpSections");
    RefreshCurrentTab();
}

$("#deleteLineItem").click(function () {
    if (confirm('@Common.objCached.ConfirmationForDeleteLineItem')) {
        var ProgramId = $("#hdnPlanLineItemID").val();
            var uId = $(window).attr('name');
            var arrClosedTaskString = null;
            if (typeof arrClosedTask != 'undefined') {
                arrClosedTaskString = arrClosedTask.toString();
            }
            $.ajax({
                type: 'POST',
                url: '@Url.Content("~/Home/DeleteSection")',
                data: {
                    ID: ProgramId
                    , DeleteType: '@Enums.DuplicationModule.LineItem'
                     , UserId: uId
                     , closedTask: arrClosedTaskString
                     , CalledFromBudget: '@CalledFromBudget'
                        , IsIndex: '@isIndex'
                        , RedirectType: '@RedirectTypeMode'
                 },
                success: function (data) {
                    if (data.returnURL != 'undefined' && data.returnURL == '#') {
                        window.location = '@Url.Content("~/Login/Index")';
                     }
                     else {
                         if (data.IsSuccess && data.opt != 'undefined') {
                             if (data.opt == '@Enums.InspectPopupRequestedModules.Index.ToString()') {
                                 SaveMessageOnParent(data.msg);
                                 $('body').removeClass('bodyOverflow');
                             }
                             else {
                                 window.location.href = data.redirect;
                                 return;
                             }
                         }
                         else {
                             $("#successMessageViewProgram").slideUp(50);
                             $("#errorMessageEditProgram").slideDown(400);
                             $("#spanMessageEditProgram").empty();
                             $("#spanMessageEditProgram").val(data.msg);
                             return false;
                         }
                     }
                 }
            });
         }
});
    function loadAddSetup() {
        $("#errorMessage").css("display", "none");
        $("#successMessage").css("display", "none");
        $("#hdnLineitemOpt").val("Edit");
        var InspectValue = $("#hdnInspectPopup").val();
        var tabtext = ($("#li" + InspectValue).children('a').text());
        var tacticId = '@tacticId';
        if (tabtext == "Setup") {
            url = '@Url.Content("~/Home/createLineitem/")';
            $("#divTab").empty();
            $("#divTab").load(url + '?id='+tacticId);
        }
        $("#btnEditlineItem").css("display", "none");
        $("#AddForm").css("display", "none");
        $('#txtTitle').css('display', 'block');
        $('#txtTitle').text('');
        $('#lblLineitemTitle').css('display', 'none');
        return false;
    }

</script>

