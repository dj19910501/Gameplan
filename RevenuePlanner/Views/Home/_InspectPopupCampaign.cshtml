@using RevenuePlanner.Helpers;
@{
    var popupvalue = (string)ViewBag.InspectPopup;
}
@Html.Hidden("hdnPopup", popupvalue, new { id = "hdnInspectPopup" })
@Html.Display(popupvalue)
<buttom class="close-x-big-icon" data-dismiss="modal" aria-hidden="true"></buttom>
@{
    var campaignMaster = (RevenuePlanner.Models.InspectModel)ViewBag.CampaignDetail;
    bool IsPlanEditable = (bool)ViewBag.IsPlanEditable;
}
@Html.Hidden("hdnPlanCampaignId", campaignMaster.PlanCampaignId, new { id = "hdnPlanCampaignId" })
@Html.Hidden("hdnCampaignStatus", campaignMaster.Status, new { id = "hdnCampaignStatus" })
<div class="modal-popup-title">
    <span class="icon-flag bg-purple" style="background-color:#@campaignMaster.ColorCode !important;"></span>
    <h2 class="title-simple source-sans-prolight"><span class="tipsyclassTitle">@Html.Raw(campaignMaster.CampaignTitle)</span>
    @if (IsPlanEditable)
    {
            @Html.ActionLink(" ", "Assortment", "Plan", new { campaignId = campaignMaster.PlanCampaignId, programId = 0, tacticId = 0, EditObject = "Campaign", ismsg = "" }, new { @class = "edit-icon-white btn-blue btn-large" })
    }
    </h2>
</div>

<div class="modal-popup-summary">
    <h3 class="modal-popup-innertitle source-sans-proregular">Summary</h3>
    <div id="nl-form" class="nl-form nl-form-modal source-sans-prolight">
        I'm running a
            @*<span id="tactic-type" class="source-sans-prosemibold color5693B3">Email</span>*@
        campaign called 
            <span id="tactic-name" class="source-sans-prosemibold color5693B3">@campaignMaster.CampaignTitle</span>
        from
            <span id="start-date" class="source-sans-prosemibold color5693B3">@campaignMaster.StartDate.ToString(Common.DateFormateForInspectPopupDescription)</span>
        to
            <span id="end-date" class="source-sans-prosemibold color5693B3">@campaignMaster.EndDate.ToString(Common.DateFormateForInspectPopupDescription)</span>.
        
        <p class="modal-status">The status is: 

            @if (campaignMaster.Status == Enums.TacticStatusValues.Single(tacticStatus => tacticStatus.Key.Equals(Enums.TacticStatus.Submitted.ToString())).Value)
            {
               <span id="status" class="source-sans-prosemibold statussubmitted"> @campaignMaster.Status</span>
            }
            else if (campaignMaster.Status == Enums.TacticStatusValues.Single(tacticStatus => tacticStatus.Key.Equals(Enums.TacticStatus.Decline.ToString())).Value)
            {
               <span id="status" class="source-sans-prosemibold statusrejected"> @campaignMaster.Status</span>
            }
            else if (campaignMaster.Status == Enums.TacticStatusValues.Single(tacticStatus => tacticStatus.Key.Equals(Enums.TacticStatus.Complete.ToString())).Value ||
                     campaignMaster.Status == Enums.TacticStatusValues.Single(tacticStatus => tacticStatus.Key.Equals(Enums.TacticStatus.InProgress.ToString())).Value ||
                     campaignMaster.Status == Enums.TacticStatusValues.Single(tacticStatus => tacticStatus.Key.Equals(Enums.TacticStatus.Approved.ToString())).Value)
            {
               <span id="status" class="source-sans-prosemibold statusapproved"> @campaignMaster.Status</span>
            }
            else if (campaignMaster.Status == Enums.TacticStatusValues.Single(tacticStatus => tacticStatus.Key.Equals(Enums.TacticStatus.Created.ToString())).Value)
            {
               <span id="status" class="source-sans-prosemibold statuscreated"> @campaignMaster.Status</span>
            }
                                               .</p>
    </div>   
</div>


<div>
    <ul class="nav nav-tabs new-margin" id="InspectTab">
        <li class="active pull-left" id="liSetup">
            <a>Setup</a>
        </li>
        <li class="pull-left" id="liReview">
            <a>Review</a>
        </li>
        <li class="pull-right">
            <h3 class="modal-popup-innertitle source-sans-proregular">Details</h3>
        </li>
    </ul>
    <div id="divTab">
    </div>
</div>

<script type="text/javascript">

    var divPartial = "#divPartial";
    var TabSetup = "Setup";
    var TabReview = "Review";

    var divTab = "#divTab";

    $(document).ready(
      function () {
          NumberFormatterTipsyTitle(".tipsyclassTitle", 55);
          var InspectValue = $("#hdnInspectPopup").val();
          var planCampaignId = $("#hdnPlanCampaignId").val();
          // Call Remove Tabclass
          RemoveTabClass();

          $("#li" + InspectValue).removeClass("pull-left");
          $("#li" + InspectValue).addClass("active pull-left");
          var tabtext = ($("#li" + InspectValue).children('a').text());
          $('#div' + tabtext).css({ display: "block" });

          loadReview(planCampaignId, tabtext);

          // Click on Tab Partialview Refresh Based On Selected Tab
          $("#InspectTab li").on("click", function () {
              RemoveTabClass();
              $(this).removeClass("pull-left");
              $(this).addClass("active pull-left");
              $("#errorMessage").css("display", "none");
              $("#successMessage").css("display", "none");
              /*Changed by Nirav Shah for Inspect pop-up screen : CSS changes as per new HTML on 13 feb 2014*/
              var topsize = $(document).scrollTop();
              $("#modal-container-186470").css("top", topsize + "px");/*end changes*/
              var tabtext = ($(this).children('a').text());
              var planTacticId = $("#hdnPlanTacticId").val();
              loadReview(planCampaignId, tabtext);

          });

          // Close event for Error Message & Success Message Close button 
          $(".alert").find(".close").on("click", function (e) {
              e.stopPropagation();
              e.preventDefault();
              $(this).closest(".alert").css("display", "none");
              /*Changed by Nirav Shah for Inspect pop-up screen : CSS changes as per new HTML on 13 feb 2014*/
              var topsize = $(document).scrollTop();
              $("#modal-container-186470").css("top", topsize + "px");
          });

      });

    function RemoveTabClass() {
        $('#InspectTab').children().each(function () {
            if ($(this).hasClass('active pull-left')) {
                $(this).removeClass("active pull-left");
                $(this).addClass("pull-left");
            }
        });
    }

    function loadReview(id, tabValue) {


        $.ajaxSetup({ cache: false });
        var url;
        if (tabValue == TabSetup) {
            url = '@Url.Content("~/Home/LoadSetupCampaign/")';
        }
        if (tabValue == TabReview) {
            url = '@Url.Content("~/Home/LoadReviewCampaign/")';
          }


          RemoveTabClass();
          $("#li" + tabValue).removeClass("pull-left");
          $("#li" + tabValue).addClass("active pull-left");
          $('#div' + tabValue).css({ display: "block" });

          $("#divTab").empty();

          $("#divTab").load(url + '?id=' + id);
      }

</script>
