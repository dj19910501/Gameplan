@model RevenuePlanner.Models.FinanceModel
@using RevenuePlanner.Helpers;
@using RevenuePlanner.Models;
@using Newtonsoft.Json;
@{
    ViewBag.Title = "Finance";
    Layout = "~/Views/Shared/_Layout.cshtml";
    MRPEntities db = new MRPEntities();
    var MainGridData = Model.DhtmlXGridRowModelObj != null ? Model.DhtmlXGridRowModelObj : new RevenuePlanner.Models.DhtmlXGridRowModel();
    var HeaderDataModel = Model.DhtmlXGridRowModelObj.FinanemodelheaderObj != null ? Model.DhtmlXGridRowModelObj.FinanemodelheaderObj : new RevenuePlanner.Models.FinanceModelHeaders();
    var objColumns = (from ColumnSet in db.Budget_ColumnSet
                      join Columns in db.Budget_Columns on ColumnSet.Id equals Columns.Column_SetId
                      where ColumnSet.IsDeleted == false && Columns.IsDeleted == false
                      && ColumnSet.ClientId == Sessions.User.ClientId
                      select Columns).ToList();
    var objCustomColumns = objColumns.Where(a => a.IsTimeFrame == false).Select(a => a.CustomField.Name).ToList();
    var objTimeFrameColumns = objColumns.Where(a => a.IsTimeFrame == true).Select(a => a.CustomField.Name).ToList();
    var ListAllColumns = objColumns.Select(a => a.CustomField.Name).ToList();
    string AllColumns = String.Join(",", ListAllColumns);
    string CustomColumns = String.Join(",", objCustomColumns);
    string TimeFrameColumns = String.Join(",", objTimeFrameColumns);


}
<link href="@Url.Content("~/Content/css/DHTMLX/dhtmlxgrid.css")" rel="stylesheet" type="text/css" />
@*<script type="text/javascript" src="@Url.Content("~/Scripts/js/DHTMLX/dhtmlxgrid.js")">*@
<script src="@Url.Content("~/Scripts/js/DHTMLX/dhtmlxtreegrid.js")"></script>

<script src="@Url.Content("~/Scripts/js/DHTMLX/jquery-ui-1.11.4.min.js")"></script>


@section PlanHeader{
    <div id="headerValue">
        @Html.Partial("~/Views/Shared/_financeheader.cshtml", HeaderDataModel)
    </div>

}
@*Added by Rahul Shah on 13/10/2015 for PL#1667*@
@section nlFormContent{
    <link rel="stylesheet" href="@Url.Content("~/Content/css/NaturalLanguageForm/default.css")" type="text/css" />
    <link rel="stylesheet" href="@Url.Content("~/Content/css/NaturalLanguageForm/component.css")" type="text/css" />
    <script type="text/javascript" src="@Url.Content("~/Scripts/js/NaturalLanguageForm/modernizr.custom.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/js/NaturalLanguageForm/nlform.js?n=")@DateTime.Now"></script>
}


@Html.Hidden("hdn_row_parentId", "", new { id = "hdn_row_parentId", name = "hdn_row_parentId", value = "" })
@Html.Hidden("hdn_BudgetId", "", new { id = "hdn_BudgetId", name = "hdn_BudgetId", value = "" })
@Html.Hidden("hdn_BudgetDetailId", "", new { id = "hdn_BudgetDetailId", name = "hdn_BudgetDetailId", value = "" })
@*<div style="width: 100%;">*@
<div style="" class="finance-header">
    <div style="" id="DivFilter" class="finance-header-inner">
        <div style="" class="fin-head-left">
            <div style="float:left;" id="drpParentMain">
                <div id="nl-formParentFinanceMain" class="nl-form-plan-title without-margin plantitle financetitle">
                    @Html.DropDownList("ddlParentFinanceMain", new SelectList((System.Collections.IEnumerable)ViewBag.budgetlist, "Value", "Text"))
                    <div class="nl-overlay"></div>
                </div>
            </div>
            <div style="float:left; margin-right:15px;margin-left:15px;" id="divAddnew">
                <input type="button" id="btnAddNewBudget" name="btnAddNewBudget" value="Add New Budget" class="btn btn-blue text-shadow-blue source-sans-proregular" style="height: 30px !important;" />
            </div>
            <div style="float:left;" id="drpParent">
                <div id="nl-formParentFinance" class="nl-form-plan-title without-margin plantitle financetitle">
                    @Html.DropDownList("ddlParentFinance", new SelectList((System.Collections.IEnumerable)ViewBag.parentbudgetlist, "Value", "Text"))
                    <div class="nl-overlay"></div>
                </div>
            </div>
            <div style="float:left;margin-left:15px;margin-right:15px;" id="drpChild">
                <div id="nl-formChildFinance" class="nl-form-plan-title without-margin plantitle financetitle">
                    @Html.DropDownList("ddlChildFinance", new SelectList((System.Collections.IEnumerable)ViewBag.childbudgetlist, "Value", "Text"))
                    <div class="nl-overlay"></div>
                </div>
            </div>
            @*<div id="divSetttings" style="width:40px;float:left;position: relative;margin-right: 10px;">*@
            @*<button class="setting-icon btn btn-blue text-shadow-blue source-sans-proregular" type="button" style="min-width:30%;height: 30px !important;" id="btnSettings"></button>*@
            @*<span class="btn-Settings btn-blue btn-large" style="display: block; cursor: pointer; margin-right: 10px; height: 30px !important;" id="AddSettings"></span>
                <div class="btn-dropdwn" style="display: none; position: absolute; top: 40px;z-index:1;" id="btnSettings">
                    <ul style="margin: 0;">
                        <li id="delSection" onclick="DeleteSelected()">Delete Selected</li>
                    </ul>
                </div>
                </div>*@
            @*<div id="divExpandCollapse" style="width:120px;float:left;">
                <button class="btn btn-blue text-shadow-blue source-sans-proregular" type="button" style="min-width:100%;height: 30px !important;" id="btnExpandCollapse" onclick="javasript: ExpanCollapse();">
                    Collapse/Expand All
                </button>
                </div>*@

        </div>

        @*<div style="float:right;margin-top:10px;margin-bottom:10px;text-align: right;">
                <div id="divCheckbox" style="width:300px;float:left;line-height: 22px;">
                    <div id="divBudget" style="float:left;margin-right:10px;"><input type="checkbox" value="Budget" id="chkBudget" onchange="ShowHideColumns(this)" checked="checked" style="display: inline-block;vertical-align: middle;" /><label style="display: inline-block;vertical-align: sub; padding-left: 4px;">Budget</label></div>
                    <div id="divforecast" style="float:left;margin-right:10px;"><input type="checkbox" value="ForeCast" id="chkForeCast" onchange="ShowHideColumns(this)" checked="checked" style="display: inline-block;vertical-align: middle;" /><label style="display: inline-block;vertical-align: sub; padding-left: 4px;">Forecast</label></div>
                    <div id="divPlan" style="float:left;margin-right:10px;"><input type="checkbox" value="Plan" id="chkPlan" onchange="ShowHideColumns(this)" style="display: inline-block;vertical-align: middle;" /><label style="display: inline-block;vertical-align: sub; padding-left: 4px;">Planned</label></div>
                    <div id="divActual" style="float:left;margin-right:10px;"><input type="checkbox" value="Actual" id="chkActual" onchange="ShowHideColumns(this)" style="display: inline-block;vertical-align: middle;" /><label style="display: inline-block;vertical-align: sub; padding-left: 4px;">Actual</label></div>
                </div>
            </div>*@
        <div class="fin-head-right" style="">
            <div style="margin-top:10px;margin-bottom:10px;text-align: right;">
                <div id="divCheckbox" style="width:300px;float:left;line-height: 22px;">
                    <div id="divBudget" style="float:left;margin-right:10px;"><input type="checkbox" value="Budget" id="chkBudget" onchange="ShowHideColumns(this)" checked="checked" style="display: inline-block;vertical-align: middle;" /><label style="display: inline-block;vertical-align: sub; padding-left: 4px;">Budget</label></div>
                    <div id="divforecast" style="float:left;margin-right:10px;"><input type="checkbox" value="ForeCast" id="chkForeCast" onchange="ShowHideColumns(this)" checked="checked" style="display: inline-block;vertical-align: middle;" /><label style="display: inline-block;vertical-align: sub; padding-left: 4px;">Forecast</label></div>
                    <div id="divPlan" style="float:left;margin-right:10px;"><input type="checkbox" value="Plan" id="chkPlan" onchange="ShowHideColumns(this)" style="display: inline-block;vertical-align: middle;" /><label style="display: inline-block;vertical-align: sub; padding-left: 4px;">Planned</label></div>
                    <div id="divActual" style="float:left;margin-right:10px;"><input type="checkbox" value="Actual" id="chkActual" onchange="ShowHideColumns(this)" style="display: inline-block;vertical-align: middle;" /><label style="display: inline-block;vertical-align: sub; padding-left: 4px;">Actual</label></div>
                </div>
            </div>
            <span class="selectBox" id="ddlTimeFrameSelectBox" style="width: 158px;margin-right:0px;float: right;">
                @Html.DropDownList("ddlRevenueTimeFrame", new SelectList((System.Collections.IEnumerable)ViewBag.ViewByAllocated, "Value", "Text", (string)ViewBag.SelectedTimeFrame), new { @class = "ddlStyleReport hide quarterly_btn" })
            </span>
            <span class="selectBox quarter_selection" id="ddlColumnSetFrameBox" style="float:left;">
                @Html.DropDownList("ddlColumnSet", new SelectList((System.Collections.IEnumerable)ViewBag.ColumnSet, "Value", "Text", (string)ViewBag.SelectedTimeFrame), new { @class = "ddlStyleReport hide quarterly_btn" })
            </span>
            @*<div style="float:right;margin-top:10px;margin-bottom:10px;text-align: right;">
                    <div id="divCheckbox" style="width:300px;float:left;line-height: 22px;">
                        <div id="divBudget" style="float:left;margin-right:10px;"><input type="checkbox" value="Budget" id="chkBudget" onchange="ShowHideColumns(this)" checked="checked" style="display: inline-block;vertical-align: middle;" /><label style="display: inline-block;vertical-align: sub; padding-left: 4px;">Budget</label></div>
                        <div id="divforecast" style="float:left;margin-right:10px;"><input type="checkbox" value="ForeCast" id="chkForeCast" onchange="ShowHideColumns(this)" checked="checked" style="display: inline-block;vertical-align: middle;" /><label style="display: inline-block;vertical-align: sub; padding-left: 4px;">Forecast</label></div>
                        <div id="divPlan" style="float:left;margin-right:10px;"><input type="checkbox" value="Plan" id="chkPlan" onchange="ShowHideColumns(this)" style="display: inline-block;vertical-align: middle;" /><label style="display: inline-block;vertical-align: sub; padding-left: 4px;">Planned</label></div>
                        <div id="divActual" style="float:left;margin-right:10px;"><input type="checkbox" value="Actual" id="chkActual" onchange="ShowHideColumns(this)" style="display: inline-block;vertical-align: middle;" /><label style="display: inline-block;vertical-align: sub; padding-left: 4px;">Actual</label></div>
                    </div>
                </div>*@
            <div style="display:inline-block" id="ddlColumnsFrameBox">
                <select title="Basic example" multiple="multiple" name="example-basic" size="5" id="budget-select">

                </select>
            </div>
            <span class="selectBox quarter_selection" id="ddlMainTimeFrameSelectBox" style="">
                @Html.DropDownList("ddlMainGridTimeFrame", new SelectList((System.Collections.IEnumerable)ViewBag.ViewByMainGridAllocated, "Value", "Text", (string)ViewBag.SelectedTimeFrame), new { @class = "ddlStyleReport hide quarterly_btn" })
            </span>
        </div>
    </div>
</div>
@*<input type="button" id="btnRefreshMainGrid" name="btnRefreshMainGrid" value="Refresh MainGrid" />*@
@*<div id="divGridView" style="width:98%;display:block;margin-left:10px;margin-right:10px;">*@
<div id="divGridView" style="" class="finance-tbl">
    @Html.Partial("_MainGrid", MainGridData)
</div>
<div id="dvNoData" style="" class="no-data">
    No data found.
</div>
<div class="market-activity-main">
    <div class="btn-dropdwn" style="" id="popupType">
    </div>
</div>
<div class="row-fluid calc-height">
    <div class="span12">
        <div id="divDeletePopup" class="form-inspect-share hide fade height-auto popup-block margin_top0" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
            <div>
                <form>

                    <h2 class="primary-title source-sans-prosemibold resubmission_header">Deleting an item</h2>
                    <label style="text-align: center; width: 100%;" class="resubmission_content">You are about to delete </label>


                    <label id="lipname" style="text-align: center; width: 100%; font-weight:800;" class="resubmission_content"></label>
                    <label style="text-align: center; width: 100%;" class="resubmission_content">Do you want to proceed?</label>
                    <input type="hidden" id="hdnsourceid" />
                    <input type="hidden" id="hdndestid" />
                    <button class="form-inspect-share-button btn btn-large bottom-margin-popups" type="button" id="proceed-button_DeleteItem">Proceed</button>
                    <button id="cancel-button_DeleteItem" class="btn-link Cancel-button-center-popups" style="margin-left: 10.5%" type="button">Cancel</button>
                </form>
            </div>
        </div>
    </div>
</div>

</div>
<script type="text/javascript">
    var pageName = "MainGrid";
    var GlobalLevel = "";
    var CollapseExpand = true;
    var backBudgetid = '';
    var _mainTimeFrame = '';
    var GlobalEditLevel = '';
    var GlobalBudgetId = '';
    var AddNewrow = true;
    var EditRowID = "";
    var DeletIconID = "";
    var nlformParentFinanceMain;
    var nlformParentFinance;
    var nlformChildFinance;
    var isFromForecastChild = false;
    var RevnueTimeFrameChange = true;
    var valueTimeFrame = "";
    var _UserBudgetId = '';
    var BudgetDetails = {
        Name: []
    };
    var ValidOldValue = "";
    var IsClickOnAddNew = false; 
    var backlineBudgetDetailId = 0;     // this variable utilize when user click on back button in LineItem screen.
    var objAllColumns=[];
    var objCustomColumns = [];		
    var objTimeFrameColumns = [];
    var objTimeFrameColumns = [];
    //$('#AddSettings').click(function () {
    //    $('#errorMsg').css('display', 'none');
    //    $('#SuccessMsg').css('display', 'none');
    //    if ($('#btnSettings').css('display') == 'none') {
    //        $('#btnSettings').css('display', 'block')
    //    }
    //    else {
    //        $('#btnSettings').css('display', 'none')
    //    }
    //});
    //$(document).click(function (event) {
    //    if ($(event.target).closest("#AddSettings").get(0) == null) {
    //        $('#btnSettings').css('display', 'none')
    //    }
    //});
    $(document).ready(function () {
        //Added by Rahul Shah on 29/10/2015 to set maximum character length of dropdownlist.
        $('#ddlParentFinanceMain').attr('maxlength', '30');
        $('#ddlParentFinance').attr('maxlength', '30');
        $('#ddlChildFinance').attr('maxlength', '30');
        //// Proceed to save data.
        $('#proceed-button_DeleteItem').on("click", function () {
            DeleteSelected();
            $('#divDeletePopup').modal("hide");
        });
        $("#sidebar").css("display", "none");
        $("#content_wraper").css("width", "100%");
        //Coomented by Rahul shah on 13/10/2015 for Pl#1667
        //$("#ddlParentFinance,#ddlRevenueTimeFrame,#ddlChildFinance,#ddlParentFinanceMain,#ddlMainGridTimeFrame").multiselect({
        //    multiple: false,
        //    noneSelectedText: "Please Select",
        //    selectedList: 1
        //}).multiselectfilter({
        //});
        var Columnsetval = $("#ddlColumnSet").val();
        BindColumnsfilter(Columnsetval);
        
        objAllColumns= @Html.Raw(JsonConvert.SerializeObject(AllColumns.Split(',')));
        objCustomColumns = @Html.Raw(JsonConvert.SerializeObject(CustomColumns.Split(',')));
        objTimeFrameColumns = @Html.Raw(JsonConvert.SerializeObject(TimeFrameColumns.Split(',')));

        $("#ddlRevenueTimeFrame,#ddlMainGridTimeFrame").multiselect({
            multiple: false,
            noneSelectedText: "Please Select",
            selectedList: 1
        }).multiselectfilter({
        });
        $("#ddlColumnSet").multiselect({
            multiple: false,
            noneSelectedText: "Please Select",
            selectedList: 1
        });
        var _budgetId = $('#ddlParentFinance').val();
        var _budgetIdMain = $('#ddlParentFinanceMain').val();
        _mainTimeFrame = $('#ddlMainGridTimeFrame').val();

        $('#hdn_BudgetId').val(_budgetIdMain);
        @*$("#btnRefreshMainGrid").click(function () {
            var _budgetId = $('#ddlParentFinance').val();
            var url = '@Url.Content("~/Finance/RefreshMainGridData/")';
            $('#divGridView').load(url + '?budgetId=' + _budgetId);
        });*@
        @*$("#ddlParentFinance").change(function () {
            var budgetId = $('#ddlParentFinance').val();
            var url = '@Url.Content("~/Finance/RefreshMainGridData/")';
            $('#divGridView').load(url + '?budgetId=' + budgetId);
        });*@
        $("#btnAddNewBudget").click(function () {
            IsClickOnAddNew = true;
            myTreeGrid.editStop();
            $('#errorMsg').css('display', 'none');
            $('#SuccessMsg').css('display', 'none');
            $("#divGridView").show();
            $("#dvNoData").hide();
            var url = '@Url.Content("~/Finance/LoadnewBudget/")';
            $('#divGridView').load(url);
            RefreshBudgetDropdown(true);
            GetFinanceHeaderValue(0, true);
            IsClickOnAddNew = false;
        });
        //var testitem = "option[text=Budget3]";
        //$("#ddlParentFinance").find(testitem).attr("selected", "selected");
        //var budgetID = $("#ddlParentFinance").val();
        RefreshMainGridData(_budgetIdMain);

        GetFinanceHeaderValue(_budgetIdMain, true, _mainTimeFrame);
        // GetFinanceHeaderValue(_budgetId);
        //BindChildBudgetDrp(_budgetId);
        // EditBudget(21);
        ShowHideControls("MainGrid");
        //Added by Rahul Shah on 13/10/2015 for PL#1667

        var liParentFinanceMain = $('#ddlParentFinanceMain').find('option');
        if (liParentFinanceMain != null && liParentFinanceMain != 'undefined' && liParentFinanceMain.length > 0) {
            $("#drpParentMain").css("display", "block");
            $("#ddlParentFinanceMain").css("display", "block");
            $("#dvNoData").css('margin-left', '0px');
            nlformParentFinanceMain = new NLForm(document.getElementById('nl-formParentFinanceMain'));
            $('#nl-formParentFinanceMain > div[class="nl-field nl-dd"]').find('li').click(function (e) {
                $('#errorMsg').css('display', 'none');
                $('#SuccessMsg').css('display', 'none');
                $("#divGridView").show();
                $("#dvNoData").hide();
                var budgetIDMain = $(this).attr('value');
                $("#ddlParentFinanceMain").val(budgetIDMain);
                $('#hdn_BudgetId').val(budgetIDMain);
                if (budgetIDMain != null && budgetIDMain != 'undefined' && budgetIDMain != '0') {
                    RefreshMainGridData(budgetIDMain);
                    GetFinanceHeaderValue(budgetIDMain, true, _mainTimeFrame);
                }
                else {
                    $("#divGridView").hide();
                    $("#dvNoData").show();
                }
                //addded by Rahul Shah
                $('#nl-formParentFinanceMain .nl-field-toggle').text($(this).text());
            });
        }
        else {
            $("#drpParentMain").css("display", "none");
            $("#ddlParentFinanceMain").css("display", "none");
            $("#dvNoData").css('margin-left', '25px');
        }
        //var txtval = $("#btnMultiselect_ddlParentFinanceMain").find("span").text();
        //$("#btnMultiselect_ddlParentFinanceMain").find("span").text('');
        //$("#btnMultiselect_ddlParentFinanceMain").find("span").text(htmlDecode(txtval));
    });



    function DeleteSelected() {

        //  if (RowIDs.IDs.length > 0) {
        //if (confirm('Are you sure you want to delete this Budget item ?')) {
        for (var i = 0; i < RowIDs.IDs.length; i++) {
            myTreeGrid.deleteRow(RowIDs.IDs[i]);
        }

        var AllocatedBy = $('#ddlRevenueTimeFrame option:selected').val();
        var mainTimeFrame = $('#ddlMainGridTimeFrame option:selected').val();
        if (mainTimeFrame.toLowerCase() == "yearly") {
            AllocatedBy = "@Enums.PlanAllocatedBy.quarters.ToString()";
        } else {
            AllocatedBy = mainTimeFrame;
        }

        var selectedValues = [];
        if (RowIDs.IDs.length != 0) {
            for (var i = 0; i < RowIDs.IDs.length; i++) {
                //alert(budgetIDMain + ":" + RowIDs.IDs[i]);
                selectedValues.push({
                    Id: RowIDs.IDs[i],
                });
            }
        }
        selectedValues = JSON.stringify(selectedValues);

        if (pageName == "EditBudget") {
            var budgetID = 0;
            var budgetChildID = $("#ddlChildFinance").val();
            var budgetParentID = $("#ddlParentFinance").val();
            if (budgetChildID > 0) {
                budgetID = budgetChildID;
            }
            else {
                budgetID = budgetParentID;
            }

            // var EditLevel = GlobalEditLevel;
            //LoadBudgetGrid(AllocatedBy);
            //GetFinanceHeaderValue(0, false);
            //BindParentBudgetDrp(parseInt(budgetID));
            //BindChildBudgetDrp(parseInt(budgetID));

            $.ajax({
                type: 'POST',
                url: '@Url.Content("~/Finance/DeleteBudgetForecastData/")',
                dataType: "json",
                //   async: false,
                data: {
                    SelectedRowIDs: selectedValues,
                },
                success: function (data) {
                    var ActId = RowIDs.IDs[0];
                    var ParentOptions = {
                        text: [],
                        values: []
                    }
                    var ChildOptions = {
                        text: [],
                        values: []
                    };
                    $.each($("#ddlParentFinance").find("option"), function () {
                        ParentOptions.text.push($(this).text());
                        ParentOptions.values.push($(this).val())
                    });
                    $.each($("#ddlChildFinance").find("option"), function () {
                        ChildOptions.text.push($(this).text());
                        ChildOptions.values.push($(this).val())
                    });

                    var Childindex = ChildOptions.values.indexOf(ActId);
                    if (Childindex >= 0) {

                        ChildOptions.values.splice(Childindex, 1);
                        ChildOptions.text.splice(Childindex, 1);
                        BindChildBudgetDrp(parseInt(budgetParentID));
                        $("#ddlChildFinance").find('option:first').prop('selected', 'selected');
                        GlobalBudgetId = $('#ddlChildFinance').val();
                        if (budgetParentID > 0 && GlobalBudgetId == 0) {
                            GlobalBudgetId = budgetParentID;
                        }
                    }

                    var Parentindex = ParentOptions.values.indexOf(ActId);
                    if (Parentindex >= 0) {

                        ParentOptions.values.splice(Parentindex, 1);
                        ParentOptions.text.splice(Parentindex, 1);
                        $("#ddlParentFinance").html("");
                        if (ParentOptions.values.length > 0) {

                            for (var i = 0; i < ParentOptions.values.length ; i++) {
                                var opt = new Option(ParentOptions.text[i], ParentOptions.values[i]);
                                $('#ddlParentFinance').append(opt);
                            }


                            var nlDivs = $('#nl-formParentFinance div');
                            if (nlDivs.length > 0) {
                                var overlay = $('#nl-formParentFinance .nl-overlay');
                                if (overlay.length > 0) {
                                } else {
                                    $('#nl-formParentFinance div').first().remove();
                                }
                            }
                            nlformParentFinance = new NLForm(document.getElementById('nl-formParentFinance'));

                            $('#nl-formParentFinance > div[class="nl-field nl-dd"]').find('li').click(function (e) {

                                $('#errorMsg').css('display', 'none');
                                $('#SuccessMsg').css('display', 'none');
                                $("#divGridView").show();
                                $("#dvNoData").hide();
                                var budgetID = $(this).attr('value');
                                if (pageName == "EditBudget") {

                                    EditBudget(budgetID, false);
                                    //GetFinanceHeaderValue(budgetID);
                                }
                                //addded by Rahul Shah
                                $('#nl-formParentFinance .nl-field-toggle').text($(this).text());
                            });

                            var a = $("#nl-formParentFinance .nl-field.nl-dd");
                            for (var i = 0; i < a.length - 1 ; i++) {

                                $(a[i]).remove();
                            }
                        }
                    }
                    //$("select[id='ddlParentFinance'] option:selected").index();
                    GlobalBudgetId = $('#ddlParentFinance').val();
                    if (GlobalBudgetId == 0 || GlobalBudgetId == null) {
                        RefreshBudgetDropdown(false);
                        var newbudgetID = $("#ddlParentFinanceMain").val();
                        backBudgetid = newbudgetID;
                        ShowHideControls("MainGrid");
                        pageName = "MainGrid";
                        HeaderSectionName();
                        RefreshMainGridData(newbudgetID);
                        GetFinanceHeaderValue(newbudgetID, true, mainTimeFrame);
                        //BindParentBudgetDrp(parseInt(backBudgetid));
                    }
                    else {

                        BindChildBudgetDrp(parseInt(GlobalBudgetId));
                        LoadBudgetGrid(AllocatedBy);
                        GetFinanceHeaderValue(0, false);
                    }



                }
            });
        }
        else {
            var curntBudgetId = $("#ddlParentFinanceMain").val();
            var url = '@Url.Content("~/Finance/DeleteMainGrid/")';
            $('#divGridView').load(url + '?SelectedRowIDs=' + selectedValues + '&mainTimeFrame=' + mainTimeFrame + '&curntBudgetId=' + curntBudgetId, function () { RefreshBudgetDropdown(false); var newbudgetID = $("#ddlParentFinanceMain").val(); GetFinanceHeaderValue(newbudgetID, true, mainTimeFrame); });

        }

        ShowMessage(false, '@Common.objCached.PlanEntityDeleted'.replace('{0}', "Budget Item"), 1200);

    }

    function RefreshMainGridData(BudgetId) {
        // Add BY Nishant Sheth
        // Desc : display selected columns
        var Columnsetval = $("#ddlColumnSet").val();
        var ColumnsCheckBox = $("#multipleselect_budget-select").find('label[class^="ui-corner-all"]').find("input");
        var CheckedColumns = "";
        $.each(ColumnsCheckBox, function () {
            var a = $(this).attr("aria-selected");
            if (a != undefined && a == "true") {
                CheckedColumns += $(this).val() + ",";
            }
            CheckedColumns.slice(0, -1);
        });
        // End by nishant sheth
        $("#divGridView").show();
        $("#dvNoData").hide();
        var url = '@Url.Content("~/Finance/RefreshMainGridData/")';
        $('#divGridView').load(url + '?budgetId=' + BudgetId + '&mainTimeFrame=' + _mainTimeFrame+'&ListofCheckedColums='+CheckedColumns);
    }

    function BindTimeFrameForChild(Period) {

        $.ajax({
            type: 'POST',
            url: '@Url.Content("~/Finance/GetChildTimeFrame/")',
            dataType: "json",
            async: false,
            success: function (data) {

                $("#ddlRevenueTimeFrame").html("");

                for (var i = 0; i < data.length; i++) {

                    var opt = new Option(data[i].Text, data[i].Value);
                    $('#ddlRevenueTimeFrame').append(opt);
                }

                if (Period != null && Period != '') {
                    $("#ddlRevenueTimeFrame option[value='" + Period + "']").attr("selected", "selected");
                }
            }
        });
        $("#ddlRevenueTimeFrame").multiselect({
            multiple: false,
            //noneSelectedText: "Please Select",
            selectedList: 1
        }).multiselectfilter({
        });
    }
    $("#ddlColumnSet").change(function () {
        var Columnsetval = $("#ddlColumnSet").val();
        BindColumnsfilter(Columnsetval);
        //// Code for hide show columns
        var ListColumnsIndex=[];

        var clickcheck = 1;
        var ColumnsCheckBox = $("#multipleselect_budget-select").find('label[class^="ui-corner-all"]');


        $.each(ColumnsCheckBox,function(){
            if(pageName=="EditBudget"){
                var spanval = $(this).find("span");
                var checkboxval = $(this).find("input");
                var colName = spanval.attr("title");
                var AllocatedBy = $('#ddlRevenueTimeFrame option:selected').val();
                var IstimeFrame;
                var IsChecked = checkboxval.attr("aria-selected");
                var Count = 0;
                var TotalColumn = myTreeGrid.getColumnCount();
                var GetColName = false;

                if (checkboxval != null && checkboxval != undefined && checkboxval != '' ) {
                    for (var a = 0; a < TotalColumn; a++) {
                        if (!GetColName) {
                            var GridColName = myTreeGrid.getColLabel(a, 1);
                            if (GridColName == colName) {
                                Count = a;
                                for(var k=0;k<TotalColumn;k++)
                                {
                                    var GridAllColName = myTreeGrid.getColLabel(k, 1);
                                    if (GridAllColName == colName) {
                                        ListColumnsIndex.push(k);
                                    }
                                }
                                GetColName = true;
                            }
                        }

                        var IsDisplay = ListColumnsIndex.indexOf(a);
                        if(a>2 && a!=Count && !(IsDisplay>=0))
                        {
                            myTreeGrid.setColumnHidden(a, true);
                        }
                    }
                    if (AllocatedBy == "@Enums.PlanAllocatedBy.quarters.ToString()") {
                        LoopLength = 5;
                    }
                    else if (AllocatedBy == "@Enums.PlanAllocatedBy.months.ToString()") {
                        LoopLength = 13;
                    }
                    else {
                        LoopLength = 4;
                    }
                    IstimeFrame = objTimeFrameColumns.indexOf(colName);
                    if (IstimeFrame >= 0) {
                        if (IsChecked == "false" || IsChecked == undefined) {
                            for (var i = 0; i < LoopLength; i++) {
                                myTreeGrid.setColumnHidden(Count, true);
                                Count = Count + 4;
                            }
                        }

                        if (IsChecked == "true") {
                            for (var i = 0; i < LoopLength; i++) {
                                myTreeGrid.setColumnHidden(Count, false);
                                Count = Count + 4;
                            }
                        }
                    }else{
                        if (IsChecked == "false" || IsChecked == undefined) {
                            myTreeGrid.setColumnHidden(Count, true);
                        }
                        if (IsChecked == "true") {
                            myTreeGrid.setColumnHidden(Count, false);
                        }
                    }

                    clickcheck = clickcheck + 1;
                } else {
                    clickcheck = 1;
                    GetColName = false;
                }
            }else{
                var spanval = $(this).find("span");
                var checkboxval = $(this).find("input");
                var colName = spanval.attr("title");
                var AllocatedBy = $('#ddlRevenueTimeFrame option:selected').val();
                var IstimeFrame;
                var IsChecked = checkboxval.attr("aria-selected");
                var Count = 0;
                var TotalColumn = myTreeGrid.getColumnCount();
                var GetColName = false;
                if (checkboxval != null && checkboxval != undefined && checkboxval != '' ) {
                    for (var a = 0; a < TotalColumn; a++) {
                        if (!GetColName) {
                            var GridColName = myTreeGrid.getColLabel(a, 0);
                            if (GridColName == colName) {
                                Count = a;
                                for(var k=0;k<TotalColumn;k++)
                                {
                                    var GridAllColName = myTreeGrid.getColLabel(k, 0);
                                    if (GridAllColName == colName) {
                                        ListColumnsIndex.push(k);
                                    }
                                }
                                GetColName = true;
                            }
                        }

                        var IsDisplay = ListColumnsIndex.indexOf(a);
                        if(a>2 && a!=Count && !(IsDisplay>=0) && a<(TotalColumn-3))
                        {
                            myTreeGrid.setColumnHidden(a, true);
                        }
                    }
                    if (IsChecked == "false" || IsChecked == undefined) {
                        myTreeGrid.setColumnHidden(Count, true);
                    }
                    if (IsChecked == "true") {
                        myTreeGrid.setColumnHidden(Count, false);
                    }
                    clickcheck = clickcheck + 1;
                }
                else{
                    clickcheck = 1;
                    GetColName = false;
                }
            }
        });

        // End Code for hide show columns
    });
    function BindColumnsfilter(ColumnSetId) {
        $.ajax({
            type: 'POST',
            url: '@Url.Content("~/Finance/GetColumns/")',
            data: { ColumnSetId: ColumnSetId },
            dataType: "json",
            async: false,
            success: function (data) {

                $("#budget-select").html("");

                for (var i = 0; i < data.length; i++) {

                    //var opt = new Option(data[i].Text, data[i].Value);
                    //$('#budget-select').append(opt);
                    //<option value="option1" id="divBudget">Budget</option>
                    $('#budget-select').append("<option value=" + data[i].Value + " id='div" + data[i].Text + "'>" + data[i].Text + "</option>");
                }
            }
        });

        $('#budget-select').multiselect({ multiple: true, title: 'Filter Columns', noneSelectedText: "Filter Columns", });
        var clickcheck = 1;
        var ColumnsCheckBox = $("#multipleselect_budget-select").find('label[class^="ui-corner-all"]').find("input");
        $.each(ColumnsCheckBox,function(){

            $(this).attr("aria-selected","true");
            $(this).attr("checked","checked");
        });

        $("#multipleselect_budget-select").find('label[class^="ui-corner-all"]').click(function () {
            if(pageName=="EditBudget")
            {
                var spanval = $(this).find("span");
                var checkboxval = $(this).find("input");
                var colName = spanval.attr("title");
                var AllocatedBy = $('#ddlRevenueTimeFrame option:selected').val();
                var IstimeFrame;
                var IsChecked = checkboxval.attr("aria-selected");
                var Count = 0;
                var TotalColumn = myTreeGrid.getColumnCount();
                var GetColName = false;

                if (checkboxval != null && checkboxval != undefined && checkboxval != '' ) {
                    for (var a = 1; a <= TotalColumn; a++) {
                        if (!GetColName) {
                            var GridColName = myTreeGrid.getColLabel(a, 1);
                            if (GridColName == colName) {
                                Count = a;
                                GetColName = true;
                            }
                        }
                    }
                    if (AllocatedBy == "@Enums.PlanAllocatedBy.quarters.ToString()") {
                        LoopLength = 5;
                    }
                    else if (AllocatedBy == "@Enums.PlanAllocatedBy.months.ToString()") {
                        LoopLength = 13;
                    }
                    else {
                        LoopLength = 4;
                    }
                    IstimeFrame = objTimeFrameColumns.indexOf(colName);
                    if (IstimeFrame >= 0) {
                        if (IsChecked == "false" || IsChecked == undefined) {
                            for (var i = 0; i < LoopLength; i++) {
                                myTreeGrid.setColumnHidden(Count, false);
                                Count = Count + 4;
                            }
                        }

                        if (IsChecked == "true") {
                            for (var i = 0; i < LoopLength; i++) {
                                myTreeGrid.setColumnHidden(Count, true);
                                Count = Count + 4;
                            }
                        }
                    }else{
                        if (IsChecked == "false" || IsChecked == undefined) {
                            myTreeGrid.setColumnHidden(Count, false);
                        }
                        if (IsChecked == "true") {
                            myTreeGrid.setColumnHidden(Count, true);
                        }
                    }

                    clickcheck = clickcheck + 1;
                } else {
                    clickcheck = 1;
                    GetColName = false;
                }
            }else{
                
                var spanval = $(this).find("span");
                var checkboxval = $(this).find("input");
                var colName = spanval.attr("title");
                var AllocatedBy = $('#ddlMainGridTimeFrame option:selected').val();
                var IstimeFrame;
                var IsChecked = checkboxval.attr("aria-selected");
                var Count = 0;
                var TotalColumn = myTreeGrid.getColumnCount();
                var GetColName = false;
                if (checkboxval != null && checkboxval != undefined && checkboxval != '' ) {
                    for (var a = 1; a <= TotalColumn; a++) {
                        if (!GetColName) {
                            var GridColName = myTreeGrid.getColLabel(a, 0);
                            if (GridColName == colName) {
                                Count = a;
                                GetColName = true;
                            }
                        }
                    }
                    if (IsChecked == "false" || IsChecked == undefined) {
                        myTreeGrid.setColumnHidden(Count, false);
                    }
                    if (IsChecked == "true") {
                        myTreeGrid.setColumnHidden(Count, true);
                    }
                    clickcheck = clickcheck + 1;
                }else {
                    clickcheck = 1;
                    GetColName = false;
                }
            }
        });

    }
    //commented by Rahul shah on 12/10/2015 for PL #1667
    //$("#ddlParentFinance").change(function () {
    //    $('#errorMsg').css('display', 'none');
    //    $('#SuccessMsg').css('display', 'none');
    //    var budgetID = $("#ddlParentFinance").val();
    //    //RefreshMainGridData(budgetID);
    //    if (pageName == "EditBudget") {
    //        GetFinanceHeaderValue(budgetID);
    //        EditBudget(budgetID, false);
    //    }
    //    //myApp.hidePleaseWait();

    //    var txtval = $("#btnMultiselect_ddlParentFinance").find("span").text();
    //    $("#btnMultiselect_ddlParentFinance").find("span").text('');
    //    $("#btnMultiselect_ddlParentFinance").find("span").text(htmlDecode(txtval));
    //});
    //$("#ddlParentFinanceMain").change(function () {
    //    $('#errorMsg').css('display', 'none');
    //    $('#SuccessMsg').css('display', 'none');
    //    $("#divGridView").show();
    //    $("#dvNoData").hide();
    //    var budgetIDMain = $("#ddlParentFinanceMain").val();
    //    $('#hdn_BudgetId').val(budgetIDMain);
    //    if (budgetIDMain != null && budgetIDMain != 'undefined' && budgetIDMain != '0') {
    //        RefreshMainGridData(budgetIDMain);
    //        GetFinanceHeaderValue(budgetIDMain, true, _mainTimeFrame);
    //    }
    //    else {
    //        $("#divGridView").hide();
    //        $("#dvNoData").show();
    //    }
    //    //if (pageName == "EditBudget") {
    //    //    GetFinanceHeaderValue(budgetID);
    //    //    EditBudget(budgetID, false);
    //    //}
    //    //myApp.hidePleaseWait();

    //    var txtval = $("#btnMultiselect_ddlParentFinanceMain").find("span").text();
    //    $("#btnMultiselect_ddlParentFinanceMain").find("span").text('');
    //    $("#btnMultiselect_ddlParentFinanceMain").find("span").text(htmlDecode(txtval));
    //});
    //$("#ddlChildFinance").change(function () {
    //    $('#errorMsg').css('display', 'none');
    //    $('#SuccessMsg').css('display', 'none');
    //    myApp.showPleaseWait();
    //    var budgetID = $("#ddlChildFinance").val();
    //    var parentid = $("#ddlParentFinance").val();
    //    if (pageName == "EditBudget") {
    //        if (budgetID > 0) {

    //            EditBudget(budgetID, true);
    //            GetFinanceHeaderValue(budgetID);
    //        } else {

    //            EditBudget(parentid, true);
    //            GetFinanceHeaderValue(parentid);
    //        }
    //    }
    //    //myApp.hidePleaseWait();
    //    // $("#btnMultiselect_ddlChildFinance").find("span").text(htmlDecode($("#btnMultiselect_ddlChildFinance").find("span").text()));
    //    var txtval = $("#btnMultiselect_ddlChildFinance").find("span").text();
    //    $("#btnMultiselect_ddlChildFinance").find("span").text('');
    //    $("#btnMultiselect_ddlChildFinance").find("span").text(htmlDecode(txtval));
    //});

    function GetFinanceHeaderValue(_budgetId, Ismain, mainTimeFrame) {

        var ismainGird = false;
        if (Ismain != null && Ismain != undefined) {
            ismainGird = Ismain
        }
        var url = '@Url.Content("~/Finance/GetFinanceHeaderValue/")';
        $('#headerValue').load(url + '?budgetId=' + _budgetId + '&isQuarterly=monthly&timeFrameOption=2015&IsMain=' + ismainGird + '&mainTimeFrame=' + mainTimeFrame);

    }
    function BindChildBudgetDrp(_budgetId) {


        $.ajax({
            type: 'POST',
            url: '@Url.Content("~/Finance/GetChildBudget/")',
            dataType: "json",
            async: false,
            data: { budgetId: _budgetId },
            success: function (data) {
                $("#ddlChildFinance").html("");
                $('#ddlChildFinance').append($('<option></option>').attr('value', '0').text('Please Select'));
                for (var i = 0; i < data.length; i++) {

                    var opt = new Option(data[i].Text, data[i].Value);
                    $('#ddlChildFinance').append(opt);
                }
                var ChildID = $("#ddlChildFinance").val();
                if (ChildID > 0) {
                    $("#ddlChildFinance option[value='" + ChildID + "']").attr("selected", "selected");
                }
            }
        });
        //Added by Rahul Shah on 13/10/2015 for PL#1667
        //$('#nl-formChildFinance div').remove('');
        var nlDivs = $('#nl-formChildFinance div');
        if (nlDivs.length > 0) {
            var overlay = $('#nl-formChildFinance .nl-overlay');
            if (overlay.length > 0) {
            } else {
                $('#nl-formChildFinance div').first().remove();
            }
        }

        nlformChildFinance = new NLForm(document.getElementById('nl-formChildFinance'));
        $('#nl-formChildFinance > div[class="nl-field nl-dd"]').find('li').click(function (e) {

            $('#errorMsg').css('display', 'none');
            $('#SuccessMsg').css('display', 'none');
            $("#divGridView").show();
            $("#dvNoData").hide();

            var ChildbudgetID = $(this).attr('value');
            var parentid = $('#nl-formParentFinance .nl-dd-checked ').attr('value');

            if (pageName == "EditBudget") {
                if (ChildbudgetID > 0) {

                    EditBudget(ChildbudgetID, true);
                    //GetFinanceHeaderValue(ChildbudgetID);
                } else {

                    EditBudget(parentid, true);
                    //GetFinanceHeaderValue(parentid);
                }
            }
            //addded by Rahul Shah
            $('#nl-formChildFinance .nl-field-toggle').text($(this).text());
        });
        var a = $("#nl-formChildFinance .nl-field.nl-dd");

        for (var i = 0; i < a.length - 1 ; i++) {

            $(a[i]).remove();
        }
        //Commented by Rahul shah on 13/10/2015 for PL#1667
        //$("#ddlChildFinance").multiselect({
        //    multiple: false,
        //    //noneSelectedText: "Please Select",
        //    selectedList: 1
        //}).multiselectfilter({
        //});
    }
    function BindParentBudgetDrp(_budgetId) {

        $.ajax({
            type: 'POST',
            url: '@Url.Content("~/Finance/GetParentBudget/")',
            dataType: "json",
            async: false,
            data: { budgetId: _budgetId },
            success: function (data) {
                $("#ddlParentFinance").html("");
                for (var i = 0; i < data.length; i++) {

                    var opt = new Option(data[i].Text, data[i].Value);
                    $('#ddlParentFinance').append(opt);
                }

            }
        });
        $("#ddlParentFinance").val(_budgetId);
        //Added by Rahul Shah on 13/10/2015 for PL#1667
        //$('#nl-formParentFinance div').remove('');
        var nlDivs = $('#nl-formParentFinance div');
        if (nlDivs.length > 0) {
            var overlay = $('#nl-formParentFinance .nl-overlay');
            if (overlay.length > 0) {
            } else {
                $('#nl-formParentFinance div').first().remove();
            }
        }
        nlformParentFinance = new NLForm(document.getElementById('nl-formParentFinance'));

        $('#nl-formParentFinance > div[class="nl-field nl-dd"]').find('li').click(function (e) {
            //
            $('#errorMsg').css('display', 'none');
            $('#SuccessMsg').css('display', 'none');
            $("#divGridView").show();
            $("#dvNoData").hide();
            var budgetID = $(this).attr('value');
            if (pageName == "EditBudget") {

                EditBudget(budgetID, false);
                //GetFinanceHeaderValue(budgetID);
            }
            //addded by Rahul Shah
            $('#nl-formParentFinance .nl-field-toggle').text($(this).text());
        });
        var a = $("#nl-formParentFinance .nl-field.nl-dd");

        for (var i = 0; i < a.length - 1 ; i++) {

            $(a[i]).remove();
        }
        //Commented by Rahul shah on 13/10/2015 for PL#1667
        //$("#ddlParentFinance").multiselect({
        //    multiple: false,
        //    noneSelectedText: "Please Select",
        //    selectedList: 1
        //}).multiselectfilter({
        //});

    }

    function Edit(BudgetId, childChange, level, e) {
        
        var budgetIDMain = $("#ddlParentFinanceMain").val();
        backBudgetid = budgetIDMain;
        //$("#hdn_BudgetDetailId").val(BudgetId);
        _UserBudgetId = BudgetId;
        //e= window.event
        //var t = event.which;
        //var _targetDiv = e.srcElement;

        var _flagCondition;
        var _text = e.lastChild.textContent.trim();
        //var _targetDiv = event.target;
        //alert(_targetDiv);
        if (_text == "Edit") {
            _flagCondition = "Edit";
        }
        else {
            _flagCondition = "View";
        }
        myTreeGrid.editStop();
        $('#btnSettings').css('display', 'none')
        $('#errorMsg').css('display', 'none');
        $('#SuccessMsg').css('display', 'none');
        myApp.showPleaseWait();
        if (level != undefined && level != '') {
            GlobalLevel = level;
        }

        var AllocatedBy = $('#ddlRevenueTimeFrame option:selected').val();
        BindTimeFrameForChild(AllocatedBy);
        valueTimeFrame = $("#ddlRevenueTimeFrame").val();
        $("#ddlRevenueTimeFrame").val(valueTimeFrame);
        var url = '@Url.Content("~/Finance/EditPermission/")';
        $('#divGridView').load(url + '?BudgetId=' + BudgetId + '&IsQuaterly=' + AllocatedBy + '&level=' + GlobalLevel + '&FlagCondition=' + _flagCondition);
    }
    function EditBudget(BudgetId, childChange, level) {
        myTreeGrid.editStop();
        $('#btnSettings').css('display', 'none')
        $('#errorMsg').css('display', 'none');
        $('#SuccessMsg').css('display', 'none');
        $("#hdn_BudgetDetailId").val(BudgetId);
        backlineBudgetDetailId = BudgetId;      // this variable utilize when user click on back button in LineItem screen.
        //backBudgetid = BudgetId;
        var budgetIDMain = $("#ddlParentFinanceMain").val();
        backBudgetid = budgetIDMain;

        //  GetFinanceHeaderValue(BudgetId);
        if (level != undefined && level != '') {
            GlobalLevel = level;
        }

        myApp.showPleaseWait();
        var AllocatedBy = $('#ddlRevenueTimeFrame option:selected').val();
        // if user came from MainGrid Page then modify TimeFrame value for "Yearly" value.
        if (pageName == 'MainGrid') {
            var mainTimeFrame = $('#ddlMainGridTimeFrame option:selected').val();
            if (mainTimeFrame.toLowerCase() == "yearly") {
                AllocatedBy = "@Enums.PlanAllocatedBy.quarters.ToString()";
            } else {
                AllocatedBy = mainTimeFrame;
            }
        }
        //if (AllocatedBy == 'quarters') {
        //    AllocatedBy = true;
        //}
        //else {
        //    AllocatedBy = false;
        //}
        if (BudgetId == null || BudgetId == '') {
            BudgetId = 0;
        }

        if (childChange == false) {
            BindParentBudgetDrp(parseInt(BudgetId));
            BindChildBudgetDrp(parseInt(BudgetId));
        }
        BindTimeFrameForChild(AllocatedBy);
        valueTimeFrame = $("#ddlRevenueTimeFrame").val();
        $("#ddlRevenueTimeFrame").val(valueTimeFrame);
        var url = '@Url.Content("~/Finance/EditBudget/")';
        $('#divGridView').load(url + '?BudgetId=' + BudgetId + '&IsQuaterly=' + AllocatedBy + '&level=' + GlobalLevel);

    }

    function ExpanCollapse() {
        $('#errorMsg').css('display', 'none');
        $('#SuccessMsg').css('display', 'none');
        if (CollapseExpand) {
            CollapseExpand = false;
            myTreeGrid.collapseAll();
        }
        else {
            CollapseExpand = true;
            myTreeGrid.expandAll();
        }
        var tableheight = $(".objbox").find("table").height();

        $("#gridbox").css("height", tableheight + 100);
        myTreeGrid.setSizes();

        var GridWidth = $("#gridbox").width();

        $("#gridbox").find("table").css("width", GridWidth);
    }
    function ShowHideColumns(chekbox) {
        
        $('#errorMsg').css('display', 'none');
        $('#SuccessMsg').css('display', 'none');
        var GridWidth = $("#gridbox").width();
        var checkName = chekbox.value;
        var IsChecked = chekbox.checked;
        var Count = 0;
        var LoopLength = 0;
        var AllocatedBy = $('#ddlRevenueTimeFrame option:selected').val();
        if (AllocatedBy == "@Enums.PlanAllocatedBy.quarters.ToString()") {
            LoopLength = 5;
        }
        else if (AllocatedBy == "@Enums.PlanAllocatedBy.months.ToString()") {
            LoopLength = 13;
        }
        else {
            LoopLength = 4;
        }
        if (checkName == "Budget") {
            Count = 3;
        }
        else if (checkName == "ForeCast") {
            Count = 4;
        }
        else if (checkName == "Plan") {
            Count = 5;
        }
        else if (checkName == "Actual") {
            Count = 6;
        }
        var visibility = "false,";
        //mygrid.setColumnsVisibility("true,false,false,false,false");
        //for (var s = 1; s <= 24; s++) {
        //    myTreeGrid.setColumnHidden(s, false);
        //}

        //



        if (IsChecked) {
            for (var i = 0; i < LoopLength; i++) {
                myTreeGrid.setColumnHidden(Count, false);
                Count = Count + 4;
            }
        }

        if (!IsChecked) {
            for (var i = 0; i < LoopLength; i++) {
                myTreeGrid.setColumnHidden(Count, true);
                Count = Count + 4;
            }
        }
        //visibility += visibility.slice(0, -1);
        // myTreeGrid.enableAutoWidth(true, GridWidth, GridWidth);
        $("#gridbox").find("table").css("width", "100%");

        //var BorderLength = 4;
        //var ChkPlan = $("#chkPlan");
        //var ChkBudget = $("#chkBudget");
        //var ChkForeCast = $("#chkForeCast");
        //var ChkActual = $("#chkActual");

        //if (!ChkBudget[0].checked) {
        //    BorderLength = BorderLength - 1;
        //}
        //if (!ChkForeCast[0].checked) {
        //    BorderLength = BorderLength - 1;
        //}
        //if (!ChkPlan[0].checked) {
        //    BorderLength = BorderLength - 1;
        //}
        //if (!ChkActual[0].checked) {
        //    BorderLength = BorderLength - 1;
        //}
        ////$('.gridbox .xhdr .hdr td').css('border-color', '#e7f1ff #a4bed4 #a4bed4 #e7f1ff');
        ////$('.gridbox .xhdr .hdr td').css('border-width', '1px 1px 1px 1px');

        //var BorderCount = 3;
        //var loopChange = 0;
        //$('.gridbox .xhdr .hdr td').css("border-right", "");
        //$('.gridbox .objbox td').css("border-right", "");
        //for (var j = 1; j <= 23; j++) {
        //    if (BorderCount == j) {
        //        var check = $('.gridbox .xhdr .hdr td:nth-child(' + j + ')').css("display");
        //        if (check == "none") {
        //            if (BorderLength == 2) {
        //                if (ChkBudget[0].checked && ChkActual[0].checked) {
        //                    BorderCount = BorderCount + 2;
        //                }
        //                else {
        //                    BorderCount = BorderCount + 1;
        //                }
        //            }
        //            else {
        //                BorderCount = BorderCount + 1;
        //            }
        //        }
        //        $('.gridbox .xhdr .hdr td:nth-child(' + parseInt(BorderCount) + ')').css("border-right", "2px Solid #808080");
        //        $('.gridbox .objbox td:nth-child(' + parseInt(BorderCount) + ')').css("border-right", "2px Solid #808080");
        //    BorderCount += BorderLength;

        //    } else {
        //        var check = $('.gridbox .xhdr .hdr td:nth-child(' + j + ')').css("display");
        //        if (check == "none") {
        //            if (BorderLength == 2) {
        //                if (ChkBudget[0].checked && ChkActual[0].checked) {
        //                } else {
        //                    BorderCount = BorderCount + 1;
        //                }
        //            } else {
        //                BorderCount = BorderCount + 1;
        //            }
        //        }
        //    }
        //}
        //myTreeGrid.setColumnsVisibility(visibility);
        //myTreeGrid.init();
    }
    function ShowHideControls(Page) {
        if (Page == "MainGrid") {
            $("#drpParentMain").css("display", "block");
            $("#drpParent").css("display", "none");
            //$("#divExpandCollapse").css("display", "none");
            $("#divCheckbox").css("display", "none");
            $("#ddlTimeFrameSelectBox").css("display", "none");
            $("#ddlMainTimeFrameSelectBox").css("display", "block");
            $("#drpChild").css("display", "none");
            $("#divFinanceBack").css("display", "none");
            $("#divAddnew").css("display", "block");
            $("#dvBudgetHeader").css("display", "block");   // Show Budget Header
            $("#ddlColumnSetFrameBox").css("display","block"); 
            $("#ddlColumnsFrameBox").css("display","inline-block"); 
        }
        if (Page == "EditBudget") {
            $("#drpParentMain").css("display", "none");
            $("#drpParent").css("display", "block");
            $("#divExpandCollapse").css("display", "");
            $("#divCheckbox").css("display", "none");
            $("#ddlTimeFrameSelectBox").css("display", "");
            $("#ddlMainTimeFrameSelectBox").css("display", "none");
            $("#drpChild").css("display", "block");
            $("#divFinanceBack").css("display", "block");
            $("#divAddnew").css("display", "none");
            $("#divBudget").css("display", "block");        // Show Budget checkbox
            $("#dvBudgetHeader").css("display", "block");   // Show Budget Header
            $("#ddlColumnSetFrameBox").css("display","block"); 
            $("#ddlColumnsFrameBox").css("display","inline-block"); 
        }
        if (Page == "LineItemGrid") {
            $("#divBudget").css("display", "none");         // Hide Budget checkbox
            $("#dvBudgetHeader").css("display", "none");    // Hide Budget Header
            $("#drpParentMain").css("display", "none");
            $("#drpParent").css("display", "block");
            $("#divExpandCollapse").css("display", "");
            $("#divCheckbox").css("display", "");
            $("#ddlTimeFrameSelectBox").css("display", "");
            $("#ddlMainTimeFrameSelectBox").css("display", "none");
            $("#drpChild").css("display", "block");
            $("#divFinanceBack").css("display", "block");
            $("#divAddnew").css("display", "none");
            $("#ddlColumnSetFrameBox").css("display","none"); 
            $("#ddlColumnsFrameBox").css("display","none"); 
        }
    }

    window.onload = function () {
        ShowHideControls('MainGrid');
    }

    function RefreshBudgetDropdown(IsAddNew) {

        var _budgetId = $("#hdn_BudgetId").val();
        var $dropdown = $("#ddlParentFinanceMain");
        $dropdown.empty();
        var $html = '';
        if (IsAddNew != undefined && IsAddNew != null) {
            if (IsAddNew == true) {
                $html = '<option value="0">Please Select</option>';
            }
        }
        //else {
        $.ajax({
            type: 'POST',
            url: '@Url.Content("~/Finance/RefreshBudgetList/")',
            data: {},
            async: false,
            success: function (result) {

                if (result.length > 0) {
                    $.each(result, function (index, item) {

                        $html += '<option value="' + item.Value + '">' + item.Text + '</option>';

                    });
                }
            }
        });
        //}
        $dropdown.append($html);
        var ParentMainOptions = {
            values: []
        }

        $.each($("#ddlParentFinanceMain").find("option"), function () {
            ParentMainOptions.values.push($(this).val())
        });

        //Modified by komal rawal for 1721.
        //Checks if the budget id exists then set that value as selected.
        var CheckIfExist = ParentMainOptions.values.indexOf(_budgetId);
        if (CheckIfExist >= 0) {
            $("#ddlParentFinanceMain option[value='" + _budgetId + "']").attr("selected", "selected");
        }
        // Add By Nishant
        // Desc:: user go with same level in edit budget/foreacst and remove same level after click on back button issue

        var Parentindex = ParentMainOptions.values.indexOf(backBudgetid.toString());

        if (Parentindex >= 0) {
            _budgetId = _budgetId;
        } else {
            //$("#ddlParentFinanceMain").find('option:first').prop('selected', 'selected');
            if (backBudgetid.toString() != undefined && backBudgetid.toString() != null && backBudgetid.toString() != '') {
                var pIndex = ParentMainOptions.values.indexOf(backBudgetid.toString());
                if (pIndex == -1) {
                    $("#ddlParentFinanceMain").find('option:first').prop('selected', 'selected');
                    _budgetId = $("#ddlParentFinanceMain").val();
                }
            }
            backBudgetid = _budgetId;
        }
        //$dropdown.multiselect("refresh");
        if (IsAddNew != undefined && IsAddNew != null && IsAddNew == true) {
            $dropdown.val(0);
            $dropdown.find("input[type='search']").val(0);
            //Commented by Rahul shah on 13/10/2015 for PL#1667
            //var spanSelectedItem = $("#multipleselect_ddlParentFinanceMain").find("input[value='" + 0 + "']").next('span').html();
            //$('#btnMultiselect_ddlParentFinanceMain span:first-child').html(spanSelectedItem);
        }
        else {

            $dropdown.val(_budgetId);
            $dropdown.find("input[type='search']").val(_budgetId);
            $('select[name^="ddlParentFinanceMain"] option[value="' + _budgetId + '"]').attr("selected", "selected");
            //Commented by Rahul shah on 13/10/2015 for PL#1667
            //var spanSelectedItem = $("#multipleselect_ddlParentFinanceMain").find("input[value='" + _budgetId + "']").next('span').html();
            //$('#btnMultiselect_ddlParentFinanceMain span:first-child').html(spanSelectedItem);
        }
        //Addded by Rahul Shah on 13/10/2015 for PL #1667
        var nlDivs = $('#nl-formParentFinance div');
        if (nlDivs.length > 0) {
            var overlay = $('#nl-formParentFinance .nl-overlay');
            if (overlay.length > 0) {
            } else {
                $('#nl-formParentFinance div').first().remove();
            }
        }
        //$('#nl-formParentFinanceMain div').first().remove();
        nlformParentFinanceMain = new NLForm(document.getElementById('nl-formParentFinanceMain'));
        $('#nl-formParentFinanceMain > div[class="nl-field nl-dd"]').find('li').click(function (e) {
            $('#errorMsg').css('display', 'none');
            $('#SuccessMsg').css('display', 'none');
            $("#divGridView").show();
            $("#dvNoData").hide();
            var budgetIDMain = $(this).attr('value');
            $('#hdn_BudgetId').val(budgetIDMain);
            if (budgetIDMain != null && budgetIDMain != 'undefined' && budgetIDMain != '0') {
                RefreshMainGridData(budgetIDMain);
                GetFinanceHeaderValue(budgetIDMain, true, _mainTimeFrame);
            }
            else {
                $("#divGridView").hide();
                $("#dvNoData").show();
            }
            //addded by Rahul Shah
            $('#nl-formParentFinanceMain .nl-field-toggle').text($(this).text());
        });
        var a = $("#nl-formParentFinanceMain .nl-field.nl-dd");

        for (var i = 0; i < a.length - 1 ; i++) {

            $(a[i]).remove();
        }

        if ($('#nl-formParentFinanceMain .nl-field-toggle').text().length > 30) {
            $('#nl-formParentFinanceMain .nl-field-toggle').text().substring(0, 30) + '...';
        }
    }

    //$.ajaxSetup({
    //    beforeSend: function () {
    //        //console.log('test');
    //        myApp.showPleaseWait();
    //    },
    //    complete: function () {
    //        //            myApp.hidePleaseWait();
    //    }
    //});
    $("#ddlMainGridTimeFrame").change(function () {
        $('#errorMsg').css('display', 'none');
        $('#SuccessMsg').css('display', 'none');
        _mainTimeFrame = $('#ddlMainGridTimeFrame').val();
        var _budgetIdMain = $('#ddlParentFinanceMain').val();
        RefreshMainGridData(_budgetIdMain);
        GetFinanceHeaderValue(_budgetIdMain, true, _mainTimeFrame);
    });
    $("#ddlRevenueTimeFrame").change(function () {
        $('#errorMsg').css('display', 'none');
        $('#SuccessMsg').css('display', 'none');
        //
        // myApp.showPleaseWait();

        //if (AllocatedBy == 'quarters') {
        //    AllocatedBy = true;
        //}
        //else {
        //    AllocatedBy = false;
        //}
        //myTreeGrid.editStop();
        if (pageName == 'EditBudget') {
            valueTimeFrame = $("#ddlRevenueTimeFrame").val();
            $("#ddlRevenueTimeFrame").val(valueTimeFrame);
            var AllocatedBy = $('#ddlRevenueTimeFrame option:selected').val();
            if (RevnueTimeFrameChange) {
                LoadBudgetGrid(AllocatedBy);
                GetFinanceHeaderValue(0, false);
                //var BudgetColumns = $("#chkBudget");
                //var ForeCastColumns = $("#chkForeCast");
                //var PlanColumns = $("#chkPlan");
                //var ActualColumns = $("#chkActual");
                //BudgetColumns.change();
                //ForeCastColumns.change();
                //PlanColumns.change();
                //ActualColumns.change();
            }
            else {
                RevnueTimeFrameChange = true;
            }
            //RevnueTimeFrameChange = true;
            // myApp.showPleaseWait();
        }
        else if (pageName == 'LineItemGrid') {
            var paramDetailId = 0;
            var budgetDetailId = $('#ddlChildFinance').val();
            if (budgetDetailId > 0) {
                paramDetailId = budgetDetailId;
            }
            else {
                paramDetailId = $("#hdn_BudgetDetailId").val();
            }
            var AllocatedBy = $('#ddlRevenueTimeFrame option:selected').val();
            BindFinanceLineItmeData(paramDetailId, AllocatedBy);
            //GetFinanceHeaderValue(0, false);
            //ShowHideControls("LineItemGrid");
            //var ForeCastColumns = $("#chkForeCast");
            //var PlanColumns = $("#chkPlan");
            //var ActualColumns = $("#chkActual");
            //ForeCastColumns.change();
            //PlanColumns.change();
            //ActualColumns.change();
        }
    });
    function DisplayPopUpMenu(addControl, rowIndex) {
        var ul, newItemList = '';
        if (rowIndex > 0)
            newItemList = "<li class='new-finance new-prog' id='newFinanceItem' itemType='parallelitem'>New Item</li>";
        ul = "<ul style='margin: 0;'>  " + newItemList + " <li class='new-finance new-prog' id='newFinacneChildItem' itemType='childitem'>New Child Item</li>  </ul>";
        $('#popupType').css('display', 'block');
        $('#popupType').html(ul);
        var left = $(addControl).position().left + 45;//e.pageX;
        //var target = $(addControl);
        var targetOffset = $(addControl).offset().top;
        var scrollPosition = $(window).scrollTop();

        if ($('#popupType').css('display') != 'none') {
            if (scrollPosition <= targetOffset) {
                $('#popupType').css({
                    //'display': 'block',
                    'top': targetOffset,
                    'left': left,
                });
            }
            else {
                var targetHeight = target.height();
                var contentHeight = $('#popupType').outerHeight();
                var targetBottomOffset = targetOffset + targetHeight - contentHeight;
                $('#popupType').css({
                    // 'display': 'block',
                    'top': targetBottomOffset,
                    'left': left,
                });
            }
        }
        //e.stopPropagation();

        $('.new-finance').click(function () {
            var itemtype = $(this).attr('itemType');
            if (itemtype == 'childitem') {
                isFromForecastChild = true;
            }
            else {
                isFromForecastChild = false;
            }

            AddNewRowbyType(itemtype, addControl);
            $('#popupType').css('display', 'none');
        });
    }
    $(document).click(function () {
        $('#popupType').css('display', 'none');
    });

    $(document).mouseup(function (e) {
        $('#popupType').css("display", "none");
    });

    $("#chkBudget, #chkForeCast, #chkPlan, #chkActual").change(function () {
        
       if (pageName == 'LineItemGrid') {
            ShowHideLineItemsColumns(this);
        }
    });

    function LoadLineItemGrid(BudgetDetailid) {
        $('#btnSettings').css('display', 'none')
        $('#errorMsg').css('display', 'none');
        $('#SuccessMsg').css('display', 'none');

        BindParentLineItemDropdown(parseInt(BudgetDetailid));
        //var parentBudgetDetailId = $("#ddlParentFinance").val();
        //var parentBudgetDetailId = $("#hdn_BudgetDetailId").val();
        $("#ddlChildFinance").val(BudgetDetailid);
        if (BudgetDetailid > 0) {
            $("#ddlChildFinance option[value='" + BudgetDetailid + "']").attr("selected", "selected");
        }
        var childBudgetDetailId = BudgetDetailid;
        BindChildLineItemDropdown(childBudgetDetailId);

        myApp.showPleaseWait();
        var AllocatedBy = $('#ddlRevenueTimeFrame option:selected').val();
        BindTimeFrameForChild(AllocatedBy);
        //ShowHideControls("LineItemGrid");
        //BindFinanceLineItmeData(BudgetDetailid, AllocatedBy);

    }
    function BindFinanceLineItmeData(BudgetDetailid, AllocatedBy) {
        var url = '@Url.Content("~/Finance/GetFinanceLineItemData/")';
        $('#divGridView').load(url + '?BudgetDetailId=' + BudgetDetailid + '&IsQuaterly=' + AllocatedBy);
    }

    function BindParentLineItemDropdown(BudgetDetailId) {
        var parentBudgetDetailId = 0;
        $.ajax({
            type: 'POST',
            url: '@Url.Content("~/Finance/GetParentLineItemList/")',
            dataType: "json",
            async: false,
            data: { BudgetDetailId: BudgetDetailId },
            success: function (result) {
                var data = result.list;
                parentBudgetDetailId = result.parentId;
                $("#ddlParentFinance").html("");
                for (var i = 0; i < data.length; i++) {

                    var opt = new Option(data[i].Text, data[i].Value);
                    $('#ddlParentFinance').append(opt);
                }
            }
        });
        // debugger;
        //var parentBudgetDetailId = $("#hdn_BudgetDetailId").val();
        $("#ddlParentFinance").val(parentBudgetDetailId);
        $("#hdn_BudgetDetailId").val(parentBudgetDetailId);
        if (parentBudgetDetailId > 0) {
            $("#ddlParentFinance option[value='" + parentBudgetDetailId + "']").attr("selected", "selected");
        }
        //Added by Rahul Shah on 13/10/2015 for PL#1667
        //$('#nl-formParentFinance div').remove('');
        var nlDivs = $('#nl-formParentFinance div');
        if (nlDivs.length > 0) {
            var overlay = $('#nl-formParentFinance .nl-overlay');
            if (overlay.length > 0) {
            } else {
                $('#nl-formParentFinance div').first().remove();
            }
        }
        nlformParentFinance = new NLForm(document.getElementById('nl-formParentFinance'));
        var liParentFinance = $('#ddlParentFinance').find('option');
        if (liParentFinance != null && liParentFinance != 'undefined' && liParentFinance.length > 0) {

            //nlformParentFinance = new NLForm(document.getElementById('nl-formParentFinance'));

            $('#nl-formParentFinance > div[class="nl-field nl-dd"]').find('li').click(function (e) {
                //
                $('#errorMsg').css('display', 'none');
                $('#SuccessMsg').css('display', 'none');
                $("#divGridView").show();
                $("#dvNoData").hide();
                var parentbudgetDetailID = $(this).attr('value');
                $("#hdn_BudgetDetailId").val(parentbudgetDetailID);
                if (pageName == "LineItemGrid") {
                    $("#ddlChildFinance").val(0);
                    BindChildLineItemDropdown(0);
                    //GetFinanceHeaderValue(0,false);
                }

            });
            var a = $("#nl-formParentFinance .nl-field.nl-dd");
        }
        for (var i = 0; i < a.length - 1 ; i++) {

            $(a[i]).remove();
        }

    }
    function BindChildLineItemDropdown(childBudgetDetailId) {
        //debugger;
        var parentId = $("#hdn_BudgetDetailId").val();
        var ChildID = 0;
        var budgetDetailId = 0;
        $.ajax({
            type: 'POST',
            url: '@Url.Content("~/Finance/GetChildLineItemList/")',
            dataType: "json",
            async: false,
            data: { BudgetDetailId: parentId },
            success: function (data) {
                $("#ddlChildFinance").html("");
                //debugger;
                if (data == null || data.length == 0) {
                    $('#ddlChildFinance').append($('<option></option>').attr('value', '0').text('Please Select'));

                }
                for (var i = 0; i < data.length; i++) {

                    var opt = new Option(data[i].Text, data[i].Value);
                    $('#ddlChildFinance').append(opt);


                }
                if (childBudgetDetailId > 0) {
                    ChildID = childBudgetDetailId
                }
                else if (data.length > 0) {
                    ChildID = data[0].Value; // Set first value
                }
                $("#ddlChildFinance").val(ChildID);
                //var ChildID = $('#nl-formChildFinance .nl-dd-checked ').attr('value');
                //debugger;
                if (ChildID > 0) {
                    budgetDetailId = ChildID;
                    $("#ddlChildFinance option[value='" + ChildID + "']").attr("selected", "selected");
                }
                else {
                    budgetDetailId = parentId;
                }
                var AllocatedBy = $('#ddlRevenueTimeFrame option:selected').val();
                BindFinanceLineItmeData(budgetDetailId, AllocatedBy);
            }
        });


        //Added by Rahul Shah on 13/10/2015 for PL#1667
        //$('#nl-formChildFinance div').remove('');
        var nlDivs = $('#nl-formChildFinance div');
        if (nlDivs.length > 0) {
            var overlay = $('#nl-formChildFinance .nl-overlay');
            if (overlay.length > 0) {
            } else {
                $('#nl-formChildFinance div').first().remove();
            }
        }
        nlformChildFinance = new NLForm(document.getElementById('nl-formChildFinance'));
        var liChildFinance = $('#ddlChildFinance').find('option');
        if (liChildFinance != null && liChildFinance != 'undefined' && liChildFinance.length > 0) {

            $('#nl-formChildFinance > div[class="nl-field nl-dd"]').find('li').click(function (e) {

                $('#errorMsg').css('display', 'none');
                $('#SuccessMsg').css('display', 'none');
                $("#divGridView").show();
                $("#dvNoData").hide();

                var ChildbudgetID = $(this).attr('value');
                var parentid = $('#nl-formParentFinance .nl-dd-checked ').attr('value');

                if (pageName == "LineItemGrid") {
                    var AllocatedBy = $('#ddlRevenueTimeFrame option:selected').val();
                    if (ChildbudgetID > 0) {
                        BindFinanceLineItmeData(ChildbudgetID, AllocatedBy);
                    }
                    else {
                        BindFinanceLineItmeData(parentid, AllocatedBy);
                    }
                }
            });
        }
        var a = $("#nl-formChildFinance .nl-field.nl-dd");

        for (var i = 0; i < a.length - 1 ; i++) {

            $(a[i]).remove();
        }
    }
    $('#budget-select').multiselect({ multiple: true, title: 'Filter Columns', noneSelectedText: "Filter Columns", });
    function GetListOfBudgetName() {
        //alert('BudgetList');
        $.ajax({
            dataType: 'json',
            type: 'POST',
            url: '@Url.Content("~/Finance/ListOfBudgetName/")',
            success: function (data) {
                BudgetDetails.Name = data;

            }

        });
    }

    function GetListofForecastNames(BudgetId) {
        $.ajax({
            dataType: 'json',
            type: 'POST',
            data: {
                BudgetId: BudgetId,
            },
            url: '@Url.Content("~/Finance/GetListofForecastNames/")',
            success: function (data) {
                BudgetDetails.Name = data;

            }

        });
    } 
    $("#selectAll_budget-select").click(function(){
        var ListOfColName=[];
        var Coldrp=$("#multipleselect_budget-select").find('label[class^="ui-corner-all"]').find("span");
        $.each(Coldrp,function(){
            ListOfColName.push($(this).text());
        });
        var TotalColumn = myTreeGrid.getColumnCount();
        if(pageName=="EditBudget")
        {
            for(var i=0;i<TotalColumn;i++)
            {
                if(i>2)
                {
                    var colName= myTreeGrid.getColLabel(i,1);
                    var isList= ListOfColName.indexOf(colName);
                    if(isList>=0)
                    {
                        myTreeGrid.setColumnHidden(i, false);
                    }
                }
            }
        }else{
            for(var i=0;i<TotalColumn;i++)
            {
                if(i>2)
                {
                    var colName= myTreeGrid.getColLabel(i,0);
                    var isList= ListOfColName.indexOf(colName);
                    if(isList>=0)
                    {
                        myTreeGrid.setColumnHidden(i, false);
                    }
                }
            }
        }
    });
    $("#deselectAll_budget-select").click(function(){
        var ListOfColName=[];
        var Coldrp=$("#multipleselect_budget-select").find('label[class^="ui-corner-all"]').find("span");
        $.each(Coldrp,function(){
            ListOfColName.push($(this).text());
        });
        var TotalColumn = myTreeGrid.getColumnCount();
        if(pageName=="EditBudget")
        {
            for(var i=0;i<TotalColumn;i++)
            {
                if(i>2)
                {
                    var colName= myTreeGrid.getColLabel(i,1);
                    var isList= ListOfColName.indexOf(colName);
                    if(isList>=0)
                    {
                        myTreeGrid.setColumnHidden(i, true);
                    }
                }
            }
        }else{
            for(var i=0;i<TotalColumn;i++)
            {
                if(i>2)
                {
                    var colName= myTreeGrid.getColLabel(i,0);
                    var isList= ListOfColName.indexOf(colName);
                    if(isList>=0)
                    {
                        myTreeGrid.setColumnHidden(i, true);
                    }
                }
            }
        }
    });
</script>
