<style>
    div.xhdr {
        width: 100.7% !important;
    }

    div.objbox {
        width: 100.7% !important;
    }

    div.objbox {
        height: 100% !important;
    }

    div.gridbox {
        height: 100% !important;
    }

    div.gridbox_dhx_skyblue.gridbox div.xhdr table.hdr {
        width: 100% !important;
    }

    div.gridbox_dhx_skyblue.gridbox div.objbox table.row20px {
        width: 100% !important;
    }
    .finance-tbl div.gridbox
  {
      height:58px !important;
  }
</style>


<div id="newGridbox" style="width:100%; height:100px; background-color:white;"></div>

<script type="text/javascript">

    var newTreeGrid;
    var ValidParentId = 0;
    var ValidColumnId = 0;
    var ValidRowId = 0;
    BudgetDetails = {
        Name: []
    };
    var IsValid = true;
    var gridWidth = $("#divGridView").width();
    $(document).ready(function () {
        $('#ddlMainTimeFrameSelectBox').css('display', 'none');
        $('#ddlColumnSetFrameBox').css('display', 'none');
        $('#ddlColumnsFrameBox').css('display', 'none');
        // Added by Rushil Bhuptani on 06/06/2015 for ticket #2247 to address issue of exporting previous data.
        $('#dvExportToExcel').css('display', 'none');
        GetListOfBudgetName();
        // Add By Nishant Sheth
        // Desc :: handle for same name or empty string
        dhtmlxValidation.isCustomNameValid = function (data) {
            var childitems = newTreeGrid.getSubItems(ValidParentId).split(',');
            var isrepeat = true;
            if (data.trim() == '' || data.trim() == null) {
                isrepeat = false;
                IsValid = false;
            } else {
                var BudgetIndex = BudgetDetails.Name.indexOf(data.toLowerCase().trim());
                if (BudgetIndex >= 0) {

                    isrepeat = false;
                    IsValid = false;
                    ShowMessage(true,'@RevenuePlanner.Helpers.Common.objCached.BudgetTitleExist', 1200);
                }
            }
            return isrepeat;
        };

        newTreeGrid = new dhtmlXGridObject('newGridbox');
        newTreeGrid.setImagePath('@Url.Content("~/codebase/imgs/")');
        newTreeGrid.setImageSize(1, 1);

        newTreeGrid.setHeader("Task Name,,Budget,Forecast,Planned,Actual,Line Items", null, ["text-align:center;border-right:0px solid #d4d4d4;", "border-left:0px solid #d4d4d4;", , "text-align:center", "text-align:center;", "text-align:center", "text-align:center;", "text-align:center"]);
        newTreeGrid.setInitWidths("100,100,100,100,100,100,100");
        newTreeGrid.setColAlign("left,center,center,center,center,center,center");
        newTreeGrid.setColTypes("tree,ro,ron,ron,ron,ron,ro");
        newTreeGrid.enableValidation(true);
        newTreeGrid.setColValidators("CustomNameValid,,,,,,");
        newTreeGrid.setColumnIds("title,action,budget,forecast,planned,actual,lineitems");
        newTreeGrid.attachEvent("onEditCell", OnEditCell);

        newTreeGrid.attachEvent("onValidationError", function (id, ind, value) {
            IsValid = false;
            return true;
        });
        newTreeGrid.attachEvent("onValidationCorrect", function (id, index, value, rule) {
            IsValid = true;
        });
        newTreeGrid.init();

        var newBudget = "newBudget";
        newTreeGrid.addRow("newBudget", ["New Budget", "Edit Budget", "0", "0", "0", "0", "0"], 0);

        newTreeGrid.selectRowById(newBudget);
        var rowindex = newTreeGrid.getRowIndex(newBudget);
        window.setTimeout(function () {
            newTreeGrid.selectCell(rowindex, 0, false, false, true, true);
            newTreeGrid.editCell();
            //newTreeGrid.editor.obj.placeholder = "New Budget";
        }, 1);
        newTreeGrid.forEachRow(function (rowid) {
            var titleIndex = newTreeGrid.getColIndexById('title');
            //alert(titleIndex);
            newTreeGrid.setCellTextStyle(rowid, titleIndex, "border-right:0px solid #d4d4d4;");

        });
        $("#newGridbox").find('table').css('width', gridWidth);
        return true;
    });

    function OnEditCell(stage, id, index, newVal, oldVal) {
        ValidParentId = newTreeGrid.getParentId(id);
        ValidColumnId = index;
        ValidRowId = id;
        var ColumnName = myTreeGrid.getColLabel(index, 0);

        if (stage == 1) {

            if (ColumnName == "Task Name") {
                $(".dhx_combo_edit").off("keydown");
                $(".dhx_combo_edit").on('keydown', (
                newTreeGrid.editor.obj.onkeypress = function (event) {

                    var text = this.value;
                    if (event.keyCode == 8 || event.keyCode == 46
                     || event.keyCode == 37 || event.keyCode == 39) {

                        return true;
                    }
                    else if (text.length > 250) { //max length of the text
                        return false;
                    }
                    else { return true; }

                }));
            }
        }

        if (stage.toString() == '0' || stage.toString() == '1') {
            return true;
        }
        if (IsValid) {
            if (stage.toString() == '2') {
                if (newVal == null || newVal == '') {
                    return false;
                }
                else {
                    SaveNewBudgetDetail(htmlDecode(newVal));
                    return true;
                }
            }
        }
    };
    function SaveNewBudgetDetail(budgetName) {
        // Desc : display selected columns
        var Columnsetval = $("#ddlColumnSet").val();
        var ColumnsCheckBox = $("#multipleselect_budget-select").find('label[class^="ui-corner-all"]').find("input");
        var CheckedColumns = "";
        $.each(ColumnsCheckBox, function () {
            var a = $(this).attr("aria-selected");
            if (a != undefined && a == "true") {
                CheckedColumns += $(this).val() + ",";
            }
            CheckedColumns.slice(0, -1);
        });
        // End by nishant sheth
        if (IsClickOnAddNew == false) {
            $('#btnAddNewBudget').prop('disabled', false);
            var url = "@Url.Content("~/Finance/CreateNewBudget")";
            $("#divGridView").load(url + '?budgetName=' + escape(budgetName) + '&ListofCheckedColums=' + CheckedColumns, function () { RefreshBudgetDropdown(); });
        }


    }


</script> 