@model RevenuePlanner.Models.DhtmlXGridRowModel
@using Newtonsoft.Json;
@{
    var _mainGridData = Model != null ? JsonConvert.SerializeObject(Model) : string.Empty;
    var BudgetId = ViewBag.BudgetId != null ? (Int32)ViewBag.BudgetId : 0;
    var IsBudgetCreateEdit = ViewBag.IsBudgetCreateEdit;
    var IsBudgetView = ViewBag.IsBudgetView;
    var IsForecastView = ViewBag.IsForecastView;
    var IsForecastCreateEdit = ViewBag.IsForecastCreateEditView;
}
<style>
        div.xhdr {
        width: 100.7% !important;
    }

       div.objbox {
        width: 100.7% !important;
    }
    </style>
<div id="gridbox" style="width:100%; height:500px; background-color:white;"></div>
@Html.Hidden("hdnBudgetId", BudgetId, new  {id="hdnBudgetId",name="hdnBudgetId",value=BudgetId })
<script type="text/javascript">
    var RowIDs = {
        IDs: []
    }
    var myTreeGrid;
    var _isNewRowAdd = false;
    var _newrowid = '';
    var _newParentId = '';
    var _parentRowId = '';
    var _row_parentId = '';
    var IsBudgetCreateEdit = '@IsBudgetCreateEdit';
    var IsForecastCreateEdit = '@IsForecastCreateEdit';
    var gridWidth = $("#divGridView").width() - 3;
    $(document).ready(function () {
        ShowHideControls('MainGrid');
        //myGrid = new dhtmlXGridObject('gridbox');
        //myGrid.setImagePath("../../codebase/imgs/");
        //myGrid.setHeader("Sales, Book Title, Author");
        //myGrid.setInitWidths("70,250,*");
        //myGrid.setColAlign("right,left,left");
        //myGrid.setColTypes("dyn,ed,ro");
        //myGrid.setColSorting("int,str,str");
        //myGrid.init();
        //myGrid.parse(data, "json");
        
        myTreeGrid = new dhtmlXGridObject('gridbox');
        myTreeGrid.setImagePath('@Url.Content("~/codebase/imgs/")');
        myTreeGrid.setImageSize(1, 1);
        //myTreeGrid.enableTreeCellEdit(false);
        myTreeGrid.setHeader("Task Name,,,Budget,Forecast,Planned,Actual,Action,Line Items", null, ["text-align:center;", , "text-align:center;", "text-align:center", "text-align:center;", "text-align:center", "text-align:center;", "text-align:center", "text-align:center"]);
        myTreeGrid.setInitWidths("200,20,30,100,100,100,100,100,100");
        myTreeGrid.setColAlign("left,center,center,center,center,center,center,center,center");
        myTreeGrid.setColTypes("tree,ro,ro,ron,ron,ron,ron,ro,ro");
        //myTreeGrid.setNumberFormat("0,000.00", 2, ".", ",");
        myTreeGrid.setColValidators("NotEmpty");
        myTreeGrid.setColumnIds("title,addrow,SelectBox,budget,forecast,planned,actual,action,lineitems");
        //myTreeGrid.setColSorting("str,na,str,str,na,str");
      
        if (IsBudgetCreateEdit == "False" && IsForecastCreateEdit == "False") {
            myTreeGrid.setColumnsVisibility("false,true,true,false,false,false,false,false,false");
            $('#btnAddNewBudget').css("display", "none");
            $('#AddSettings').css("display", "none");
            

        }
        else {
            myTreeGrid.setColumnsVisibility("false,false,false,false,false,false,false,false,false");

        }
       
        if (IsBudgetCreateEdit == "False")
        {
            $('#btnAddNewBudget').css("display", "none");

        }
        myTreeGrid.attachEvent("onEditCell", OnEditCell);
        //myTreeGrid.attachEvent("onXLE", function () {
        //    if (!myTreeGrid.getRowsNum())
        //        myTreeGrid.addRow(myTreeGrid.uid(), "no data");
        //})
        myTreeGrid.attachEvent("onOpenEnd", function () {
            var tableheight = $(".objbox").find("table").height();
            $("#gridbox").css("height", tableheight + 100);
            myTreeGrid.setSizes();
            $("#gridbox").find("table").css("width", gridWidth);
            return true;
        });
        
        myTreeGrid.init();
        var _budgetIdVal = $("#hdnBudgetId").val();
        $("#hdn_BudgetId").val(_budgetIdVal);
        //myTreeGrid.setSkin("dhx_skyblue");
        //myTreeGrid.setStyle("", "background-color:#e3e3e3;color:black; font-weight:bold;", "", "");
        var mainGridData = "@_mainGridData";
        //mainGridData = "@HttpUtility.HtmlDecode(_mainGridData)"
        //mainGridData = $('<div/>').html(mainGridData).text(); // Decode Html content.
        mainGridData = $('<div/>').html(mainGridData.toString().replace(/[\\]/g, "\\\\")).text(); // Decode Html content.
        var GridData = (mainGridData.toString().replace(/&quot;/g, '"'));

       // GridData = JSON.parse(GridData);
        myTreeGrid.parse(GridData, "json");
        myTreeGrid.expandAll();
        //myTreeGrid.parse(data2, "json");
        //myTreeGrid.selectRow(0, false, false, true);
        var tableheight = $(".objbox").find("table").height();
        $("#gridbox").css("height", tableheight + 100);
        myTreeGrid.setSizes();
        
        $("#gridbox").find('table').css('width', gridWidth);

        RowIDs = {
            IDs: []
        }
        //myTreeGrid.attachEvent("onCheck", function (rId, cInd, state) {
        //    //debugger;

        //    var val = rId.split('_')[1];

        //    if (state == true) {
        //        RowIDs.IDs.push(val);
        //    }
        //    else {
        //        var index = RowIDs.IDs.indexOf(val);
        //        RowIDs.IDs.splice(index, 1);
        //    }
            //var ids = [];
            //    ids = myTreeGrid.getAllSubItems(rId).split(',');
            //    alert(ids.length);
            //    alert(ids);
            //for (var i = 0; i < ids.length; i++)
            //{
               
            //    myTreeGrid.cells(ids[i], cInd).setValue(state);
            //}

            //    var parentid = myTreeGrid.getParentId(rId);
            //    SetParentCheckbox(parentid, cInd);
            
            //if (parentid != 0)
            //{
            //    var ids1 = [];
            //    ids1 = myTreeGrid.getAllSubItems(parentid).split(',');

            //    for (var i = 0; i < ids1.length; i++) {
            //        if (!myTreeGrid.cells(ids1[i], cInd).getValue()) {
            //            break;
            //        }
            //    }
            //}

            //myTreeGrid.forEachRow(function (rowid) {
            //    var state = myTreeGrid.cells(rId, cInd).getValue();
            //    if (state == true)
            //    {
            //        RowIDs.IDs.push(rowid.split('_')[1]);
            //    }
            //});

           
       // });

        //function SetParentCheckbox(parentid, cInd)
        //{
        //    alert(parentid);
        //    if (parentid != 0) {
        //        var ids1 = [];
        //        ids1 = myTreeGrid.getAllSubItems(parentid).split(',');
        //        var flag = true;
        //        for (var i = 0; i < ids1.length; i++) {
        //            if (myTreeGrid.cells(ids1[i], cInd).getValue() == 0) {
        //                flag = false;
        //                break;
        //            }
        //        }
        //        myTreeGrid.cells(parentid, cInd).setValue(flag);
        //        var parentid = myTreeGrid.getParentId(parentid);
        //        SetParentCheckbox(parentid, cInd);
        //    }
        //    return;
        //}

    });
    RowIDs = {
        IDs: []
    }
    function CheckboxClick(checkbox)
    {
       
        var val = $(checkbox).attr('row-id').split('_')[1];
        var state = $(checkbox).attr("checked");
        if (state == "checked") {
            RowIDs.IDs.push(val);
        }
        else {
            var index = RowIDs.IDs.indexOf(val);
            RowIDs.IDs.splice(index, 1);
        }


    }
    function AddRow(cntrl) {
       // debugger;
        if (_isNewRowAdd == false) {
        var row_id = $(cntrl).attr('row-id');
        
        //var rowId = myTreeGrid.getSelectedId();
        //var rowindex = myTreeGrid.getRowIndex(row_id.toString());

        var childrencount = myTreeGrid.hasChildren(row_id); // Get Current Row Children count.
        var insertrowindex = childrencount + 1;
        /*Start: Get ParentId and BudgetDetailId from RowId */
        var budgetDetailId = 0;
        if (row_id !== null && row_id !== 'undefined' && row_id !== '') {
            var arr = row_id.split('_');
            if (arr !== null && arr !== 'undefined' && arr.length > 0 ) {
                if (arr[1] != null && arr[1] != 'undefined') {
                    _newParentId = budgetDetailId = arr[1];
                }
            }
        }
        // Create RowId for newRecord.
        _newrowid = "new" + insertrowindex.toString() +"_0_"+_newParentId;  // RowId format: NameofItem_BudgetDetailId_ParentId.
        _isNewRowAdd = true;
        _parentRowId = row_id;
        _row_parentId = _row_parentId + "," + _newrowid + "~" + _newParentId + "~" + row_id; // Store NewRowId & ParentRowId in global variable This variable use to save data in OnEditCell event.
        $("#hdn_row_parentId").val(_row_parentId);
        /*End: Get ParentId and BudgetDetailId from RowId */

            myTreeGrid.addRow(_newrowid, ["", "<div id='dv" + _newrowid + "' class='finance_grid_add' row-id='" + _newrowid + "' title='Add New Row' />", "<input id='dv" + _newrowid + "'  row-id='" + _newrowid + "' type='checkbox' />", "0", "0", "0", "0", "Edit Forecast", "0"], -1, row_id);
        myTreeGrid.openItem(row_id);
        $("#gridbox").find("table").css("width", gridWidth);
        //myTreeGrid.enableValidation(true);
        var titleIndex = myTreeGrid.getColIndexById('title');
        //myTreeGrid.cells(_newrowid, titleIndex).setAttribute("validate", "NotEmpty");

        //myTreeGrid.setItemText(_newrowid, 'new text')
        //var sdateindex = myTreeGrid.getColIndexById('Tree');
        
        //if (childrencount == null || childrencount == 'undefined' || childrencount == '' || childrencount.toString() == "0") {
        //    UpdateActionColumn(budgetDetailId);
        //}

        var _newRowIndex = myTreeGrid.getRowIndex(_newrowid.toString());
            myTreeGrid.selectRow(_newRowIndex);
            myTreeGrid.selectCell(_newRowIndex, 0, false, false, true, true);
        //myTreeGrid.cells(_newrowid, titleIndex).edit();
        //myTreeGrid.selectCell(_newRowIndex, titleIndex, false, true, true);
            event.cancelBubble = true;
        }
    }

    function OnEditCell(stage, id, index, newVal, oldVal) {
        if (stage == 0 && index == 2) return true;
        var _val = $("#hdn_row_parentId").val();
        var splitRowParentIds = '';
        var rowId = '', parentId = '',parentRowID='';
        var itemIndex=-1;
        if (_row_parentId != null && _row_parentId.length > 0) {
            splitRowParentIds = _row_parentId.split(',');
            $.each(splitRowParentIds, function (key, val) {
                rowId = val.split('~')[0];
                parentId = val.split('~')[1];
                parentRowID = val.split('~')[2];
                itemIndex = key;
                if (rowId == id) {
                    return false;
                }
            });
        }
        
        if (rowId != id && stage.toString() == '0') {
            if (id != null && id != 'undefined' && id != '') {
                arr = id.split('_');
                if (arr.length > 0) {
                    var isEdit = arr[3];
                    if (isEdit.toString().toLowerCase() == 'false') {    // if user does not have create/Edit permission then return.
                        return false;
                    }
                }
            }
        }

            if (stage.toString() == '0' || stage.toString() == '1') {
                return true;
            }
            if (stage.toString() == '2') {
                
                //var _budgetIdVal = $('#ddlParentFinanceMain').val();
                var _budgetIdVal = $("#hdnBudgetId").val();
                if (newVal == null || newVal == '' || newVal == oldVal) {
                    return false;
                }
                else {
                    if (rowId == id) {
                        SaveNewBudgetDetail(_budgetIdVal, newVal, parentId, parentRowID);
                        RefreshBudgetDropdown(false);
                        //myTreeGrid.openItem(parentId);
                        _newrowid = "";
                        _isNewRowAdd = false;
                        _newParentId = 0;
                        _parentRowId = "";
                        return true;
                    }
                    else {
                        if (id != null && id != 'undefined' && id != '') {
                            arr = id.split('_');
                            if (arr.length > 0) {
                                var budgetDetailId = arr[1];
                                parentId = arr[2];
                                var isEdit = arr[3];
                                if (isEdit.toString().toLowerCase() == 'true') {    // if user has create/Edit permission then update.
                                    UpdateBudgetDetail(_budgetIdVal, newVal, budgetDetailId, parentId, parentRowID);
                                    RefreshBudgetDropdown(false);
                                }
                                else {
                                    return false;
                                }
                            }
                        }
                    }
                }
            }
        //}
        //else {
        //    return false;
        //}
        //alert(id);
        return true;
    };

    //function UpdateActionColumn(budgetDetailId) {
    //    var actionIndex = myTreeGrid.getColIndexById('action');
    //    var newAction = "<a href='#' onclick='EditBudget(" + budgetDetailId.toString() + ")'>Edit Budget</a>"
    //    myTreeGrid.cells(actionIndex).setValue(newAction);
    //}
    function SaveNewBudgetDetail(budgetId, budgetDetailName, parentId, parentRowID) {
        //budgetId = 8;
        var mainTimeFrame = $('#ddlMainGridTimeFrame').val();
        var url = "@Url.Content("~/Finance/SaveNewBudgetDetail")";
        $("#divGridView").load(url + '?BudgetId=' + budgetId + '&BudgetDetailName=' + escape(budgetDetailName) + '&ParentId=' + parentId + '&mainTimeFrame=' + mainTimeFrame, function () {
            myTreeGrid.openItem(parentRowID);
        });
    }
    function UpdateBudgetDetail(budgetId, budgetDetailName,budgetDetailId, parentId, parentRowID) {
        //budgetId = 8;
        var mainTimeFrame = $('#ddlMainGridTimeFrame').val();
        var url = "@Url.Content("~/Finance/UpdateBudgetDetail")";
        $("#divGridView").load(url + '?BudgetId=' + budgetId + '&BudgetDetailName=' + escape(budgetDetailName) + '&BudgetDetailId=' + budgetDetailId + '&ParentId=' + parentId + '&mainTimeFrame=' + mainTimeFrame, function () {
            myTreeGrid.openItem(parentRowID);
        });
    }
</script> 