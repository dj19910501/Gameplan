@using RevenuePlanner.Helpers;

@model RevenuePlanner.Models.FinanceModel

<style type="text/css">
    div.xhdr {
        height: auto !important;
        width: 100.7% !important;
    }

    div.objbox {
        width: 100.7% !important;
    }

    div.gridbox_dhx_skyblue.gridbox table.hdr td div.hdrcell {
        text-align: center;
        padding-left: 0px !important;
        padding-right: 7px !important;
    }

     div.objbox {
        height: 100% !important;
    }

    div.gridbox {
        height: 100% !important;
    }
</style>
<div id="gridbox" style="width:100%; background-color:white;"></div>
<script type="text/javascript">
    var RowIDs = {
        IDs: []
    }
    var myTreeGrid;
  //  var GlobalBudgetId = '';
    //var GlobalEditLevel = '';
    var IsAddNew = false;
    var _isBudgetCreateEdit = '', _isForecastCreateEdit = '';

    $(document).ready(function () {
        GlobalBudgetId = '@ViewBag.BudgetId';
        GlobalEditLevel = '@ViewBag.EditLevel';
        pageName = "EditBudget";
        _isBudgetCreateEdit = '@ViewBag.IsBudgetCreate_Edit';
        _isForecastCreateEdit = '@ViewBag.IsForecastCreate_Edit';
        ShowHideControls("EditBudget");

        //ShowHideColumns($("#chkPlan"));
        var GridData = "";
        var AllocatedBy = $('#ddlRevenueTimeFrame option:selected').val();

        //if (AllocatedBy == 'quarters') {
        //    AllocatedBy = true;
        //}
        //else {
        //    AllocatedBy = false;
        //}
        LoadBudgetGrid(AllocatedBy);

        var ChkPlan = $("#chkPlan");
        var ChkBudget = $("#chkBudget");
        var ChkForeCast = $("#chkForeCast");
        var ChkActual = $("#chkActual");
        ShowHideColumns(ChkPlan[0]);
        ShowHideColumns(ChkBudget[0]);
        ShowHideColumns(ChkForeCast[0]);
        ShowHideColumns(ChkActual[0]);
        GetFinanceHeaderValue(0, false);
        //ShowHideColumns($("#chkBudget"));
        //ShowHideColumns($("#chkForeCast"));
        //ShowHideColumns($("#chkActual"));
        //myApp.hidePleaseWait();
        //Commented by Rahul Shah desc: it override dropdown lable value
        //$("#btnMultiselect_ddlParentFinance").find("span").text(htmlDecode($("#btnMultiselect_ddlParentFinance").find("span").text()));
        //$("#btnMultiselect_ddlChildFinance").find("span").text(htmlDecode($("#btnMultiselect_ddlChildFinance").find("span").text()));

    });

    function LoadBudgetGrid(AllocatedBy) {
        myApp.showPleaseWait();
        var GridWidth = $("#gridbox").width();

        var Jan = "@Enums.ReportMonthDisplayValues[RevenuePlanner.Helpers.Enums.ReportMonthDisplay.Jan.ToString()]";
        var Feb = "@Enums.ReportMonthDisplayValues[RevenuePlanner.Helpers.Enums.ReportMonthDisplay.Feb.ToString()]";
        var Mar = "@Enums.ReportMonthDisplayValues[RevenuePlanner.Helpers.Enums.ReportMonthDisplay.Mar.ToString()]";
        var April = "@Enums.ReportMonthDisplayValues[RevenuePlanner.Helpers.Enums.ReportMonthDisplay.April.ToString()]";
        var May = "@Enums.ReportMonthDisplayValues[RevenuePlanner.Helpers.Enums.ReportMonthDisplay.May.ToString()]";
        var Jun = "@Enums.ReportMonthDisplayValues[RevenuePlanner.Helpers.Enums.ReportMonthDisplay.Jun.ToString()]";
        var July = "@Enums.ReportMonthDisplayValues[RevenuePlanner.Helpers.Enums.ReportMonthDisplay.July.ToString()]";
        var Aug = "@Enums.ReportMonthDisplayValues[RevenuePlanner.Helpers.Enums.ReportMonthDisplay.Aug.ToString()]";
        var Sep = "@Enums.ReportMonthDisplayValues[RevenuePlanner.Helpers.Enums.ReportMonthDisplay.Sep.ToString()]";
        var Oct = "@Enums.ReportMonthDisplayValues[RevenuePlanner.Helpers.Enums.ReportMonthDisplay.Oct.ToString()]";
        var Nov = "@Enums.ReportMonthDisplayValues[RevenuePlanner.Helpers.Enums.ReportMonthDisplay.Nov.ToString()]";
        var Dec = "@Enums.ReportMonthDisplayValues[RevenuePlanner.Helpers.Enums.ReportMonthDisplay.Dec.ToString()]";

        myTreeGrid = new dhtmlXGridObject('gridbox');
        myTreeGrid.setImagePath("@Url.Content("~/codebase/imgs/")");
        //myTreeGrid.setImageSize(1, 1);
       
        $.ajax({
            dataType: 'json',
            async: false,
            type: 'POST',
            url: '@Url.Content("~/Finance/EditBudgetGridData/")',
            data: {
                BudgetId: GlobalBudgetId,
                IsQuaterly: AllocatedBy,
                EditLevel: GlobalEditLevel
            },
            success: function (data) {

                GridData = data;
                //var mainGridData = $('<div/>').html(data).text(); // Decode Html content.
                //GridData = (mainGridData.toString().replace(/&quot;/g, '"'));
                //alert(GridData);
                //alert(Data1);

                //myTreeGrid.enableCellIds(true);

            }

        });

        if (AllocatedBy == "@Enums.PlanAllocatedBy.quarters.ToString()") {
            myTreeGrid.setHeader(",,,Q1,Q1,Q1,Q1,Q2,Q2,Q2,Q2,Q3,Q3,Q3,Q3,Q4,Q4,Q4,Q4,Total,Total,Total,Total");
            myTreeGrid.attachHeader("Task Name,,Line Items,Budget,Forecast,Planned,Actual,Budget,Forecast,Planned,Actual,Budget,Forecast,Planned,Actual,Budget,Forecast,Planned,Actual,Budget,Forecast,Planned,Actual");
            myTreeGrid.setColumnIds("Title,,LineItems,BudgetQ1,ForecastQ1,PlannedQ1,ActualQ1,BudgetQ2,ForecastQ2,PlannedQ2,ActualQ2,BudgetQ3,ForecastQ3,PlannedQ3,ActualQ3,BudgetQ4,ForecastQ4,PlannedQ4,ActualQ4,BudgetTotal,ForecastTotal,PlannedTotal,ActualTotal");
            for (var i = 4; i <= 23; i++) {
                myTreeGrid.setNumberFormat("0,000.00", i, ".", ",");
            }

            myTreeGrid.setColValidators("NotEmpty,,,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric");
            myTreeGrid.setInitWidths("200,50,65,60,65,55,60,60,65,55,60,60,65,55,60,60,65,55,60,60,65,55,60");
            myTreeGrid.setColAlign("left,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center");
            if (GlobalEditLevel == 'Budget') {
                if (_isBudgetCreateEdit != null && _isBudgetCreateEdit != 'undefined' && _isBudgetCreateEdit.toLowerCase() == 'true') {
                    myTreeGrid.setColTypes("tree,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ro,ro,ro,ro");
                    myTreeGrid.enableTreeCellEdit(true);
                }
                else {
                    myTreeGrid.enableTreeCellEdit(false);
                    myTreeGrid.setColTypes("tree,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro");
                }
                if (_isBudgetCreateEdit == "False" && _isForecastCreateEdit == "False") {
                    myTreeGrid.setColumnsVisibility("false,true,true,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true");
                   // $('#AddSettings').css("display", "none");
                }
                else {
                    myTreeGrid.setColumnsVisibility("false,false,true,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true");
                }
            } else {
                if (_isForecastCreateEdit != null && _isForecastCreateEdit != 'undefined' && _isForecastCreateEdit.toLowerCase() == 'true') {
                    myTreeGrid.setColTypes("tree,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ro,ro,ro");
                    myTreeGrid.enableTreeCellEdit(true);
                }
                else {
                    myTreeGrid.setColTypes("tree,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro");
                    myTreeGrid.enableTreeCellEdit(false);
                }

                if (_isBudgetCreateEdit == "False" && _isForecastCreateEdit == "False") {
                    myTreeGrid.setColumnsVisibility("false,true,false,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true");
                  //  $('#AddSettings').css("display", "none");
                }
                else {
                    myTreeGrid.setColumnsVisibility("false,false,false,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true");
                }
            }

            //myTreeGrid.setColSorting("str,str,str,na,str");

        } else if (AllocatedBy == "@Enums.PlanAllocatedBy.months.ToString()") {
           myTreeGrid.setHeader(",,," + Jan + "," + Jan + "," + Jan + "," + Jan + "," + Feb + "," + Feb + "," + Feb + "," + Feb + "," + Mar + "," + Mar + "," + Mar + "," + Mar + "," + April + "," + April + "," + April + "," + April + "," + May + "," + May + "," + May + "," + May + "," + Jun + "," + Jun + "," + Jun + "," + Jun + "," + July + "," + July + "," + July + "," + July + "," + Aug + "," + Aug + "," + Aug + "," + Aug + "," + Sep + "," + Sep + "," + Sep + "," + Sep + "," + Oct + "," + Oct + "," + Oct + "," + Oct + "," + Nov + "," + Nov + "," + Nov + "," + Nov + "," + Dec + "," + Dec + "," + Dec + "," + Dec + ",Total,Total,Total,Total");
            myTreeGrid.attachHeader("Task Name,,Line Items,Budget,Forecast,Planned,Actual,Budget,Forecast,Planned,Actual,Budget,Forecast,Planned,Actual,Budget,Forecast,Planned,Actual,Budget,Forecast,Planned,Actual,Budget,Forecast,Planned,Actual,Budget,Forecast,Planned,Actual,Budget,Forecast,Planned,Actual,Budget,Forecast,Planned,Actual,Budget,Forecast,Planned,Actual,Budget,Forecast,Planned,Actual,Budget,Forecast,Planned,Actual,Budget,Forecast,Planned,Actual");
            myTreeGrid.setColumnIds("Title,,LineItems,BudgetM1,ForecastM1,PlannedM1,ActualM1,BudgetM2,ForecastM2,PlannedM2,ActualM2,BudgetM3,ForecastM3,PlannedM3,ActualM3,BudgetM4,ForecastM4,PlannedM4,ActualM4,BudgetM5,ForecastM5,PlannedM5,ActualM5,BudgetM6,ForecastM6,PlannedM6,ActualM6,BudgetM7,ForecastM7,PlannedM7,ActualM7,BudgetM8,ForecastM8,PlannedM8,ActualM8,BudgetM9,ForecastM9,PlannedM9,ActualM9,BudgetM10,ForecastM10,PlannedM10,ActualM10,BudgetM11,ForecastM11,PlannedM11,ActualM11,BudgetM12,ForecastM12,PlannedM12,ActualM12,BudgetTotal,ForecastTotal,PlannedTotal,ActualTotal");
            for (var i = 4; i <= 55; i++) {
                myTreeGrid.setNumberFormat("0,000.00", i, ".", ",");
            }
            //myTreeGrid.setInitWidths("150,60,65,60,65,60,65,60,65,60,65,60,65,60,65,60,65,60,65,60,65,60,65,60,65,60,65");
            myTreeGrid.setColValidators("NotEmpty,,,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric,ValidNumeric");
            myTreeGrid.setInitWidths("200,50,90,60,65,55,60,60,65,55,60,60,65,55,60,60,65,55,60,60,65,55,60,60,65,55,60,60,65,55,60,60,65,55,60,60,65,55,60,60,65,55,60,60,65,55,60,60,65,55,60,60,65,55,60");
            myTreeGrid.setColAlign("left,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center");
            if (GlobalEditLevel == 'Budget') {
                if (_isBudgetCreateEdit != null && _isBudgetCreateEdit != 'undefined' && _isBudgetCreateEdit.toLowerCase() == 'true') {
                    myTreeGrid.setColTypes("tree,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ro,ro,ro,ro");
                    myTreeGrid.enableTreeCellEdit(true);
                }
                else {
                    myTreeGrid.setColTypes("tree,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro");
                    myTreeGrid.enableTreeCellEdit(false);
                }
                if (_isBudgetCreateEdit == "False" && _isForecastCreateEdit == "False") {
                    myTreeGrid.setColumnsVisibility("false,true,true,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true");
                   // $('#AddSettings').css("display", "none");
                }
                else {
                    myTreeGrid.setColumnsVisibility("false,false,true,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true");
                }
            } else {
                if (_isForecastCreateEdit != null && _isForecastCreateEdit != 'undefined' && _isForecastCreateEdit.toLowerCase() == 'true') {
                    myTreeGrid.setColTypes("tree,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ro,ro,ro");
                    myTreeGrid.enableTreeCellEdit(true);
                }
                else {
                    myTreeGrid.setColTypes("tree,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro");
                    myTreeGrid.enableTreeCellEdit(false);
                }

                if (_isBudgetCreateEdit == "False" && _isForecastCreateEdit == "False") {
                    myTreeGrid.setColumnsVisibility("false,true,false,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true");
                  //  $('#AddSettings').css("display", "none");
                }
                else {
                    myTreeGrid.setColumnsVisibility("false,false,false,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true");
                }
            }

            //myTreeGrid.setColSorting("str,str,str,na,str");
        } else {

            var startMonth = 0;
            var endMonth = 0;
            if (AllocatedBy == "@Enums.QuarterWithSpace.Quarter1.ToString()") {
                startMonth = 1;
                endMonth = 3;
            }
            if (AllocatedBy == "@Enums.QuarterWithSpace.Quarter2.ToString()") {
                startMonth = 4;
                endMonth = 6;
            }
            if (AllocatedBy == "@Enums.QuarterWithSpace.Quarter3.ToString()") {
                startMonth = 7;
                endMonth = 9;
            }
            if (AllocatedBy == "@Enums.QuarterWithSpace.Quarter4.ToString()") {
                startMonth = 10;
                endMonth = 12;
            }

           var columnames = ",,,";
            var attachHeader = "Task Name,,Line Items,";
            var colIds = "Title,,LineItems,";
           var colvalidatiors = "NotEmpty,,,";
            // var colWidths = "200,30,70,";

            for (var i = startMonth; i <= endMonth; i++) {
                var MonthName = "";
                if (i == 1) {
                    MonthName = Jan;
                } else if (i == 2) {
                    MonthName = Feb;
                }
                else if (i == 3) {
                    MonthName = Mar
                }
                else if (i == 4) {
                    MonthName = April;
                }
                else if (i == 5) {
                    MonthName = May;
                }
                else if (i == 6) {
                    MonthName = Jun
                }
                else if (i == 7) {
                    MonthName = July;
                }
                else if (i == 8) {
                    MonthName = Aug;
                }
                else if (i == 9) {
                    MonthName = Sep;
                }
                else if (i == 10) {
                    MonthName = Oct;
                }
                else if (i == 11) {
                    MonthName = Nov;
                }
                else if (i == 12) {
                    MonthName = Dec;
                }
                for (var j = 1; j <= 4; j++) {

                    var headername = "";
                    if (j == 1) {
                        headername = "Budget";
                    }
                    else if (j == 2) {
                        headername = "Forecast";
                    }
                    else if (j == 3) {
                        headername = "Planned";
                    }
                    else if (j == 4) {
                        headername = "Actual";
                    }
                    colIds += headername + i + j + ",";
                    columnames += MonthName + ",";
                    attachHeader += headername + ",";
                    colvalidatiors += "ValidNumeric" + ",";
                }
            }
            columnames += "Total,Total,Total,Total";
            attachHeader += "Budget,Forecast,Planned,Actual";
            colvalidatiors = colvalidatiors.slice(0, -1);
            colIds = colIds + "BudgetTotal,ForecastTotal,PlannedTotal,ActualTotal";
            //colWidths = colWidths.slice(0, -1);

            myTreeGrid.setHeader(columnames);
            myTreeGrid.attachHeader(attachHeader);
             myTreeGrid.setInitWidths("200,50,90,60,65,60,65,60,65,60,65,60,65,60,65,60,65,60,65");
            myTreeGrid.setColAlign("left,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center,center");
            myTreeGrid.setColumnIds(colIds);
            //myTreeGrid.setHeader(",,,Jan,Jan,Jan,Jan,Feb,Feb,Feb,Feb,Mar,Mar,Mar,Mar,Total,Total,Total,Total");
            //myTreeGrid.setColTypes("tree,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro");

            if (GlobalEditLevel == 'Budget') {
                if (_isBudgetCreateEdit != null && _isBudgetCreateEdit != 'undefined' && _isBudgetCreateEdit.toLowerCase() == 'true') {
                    myTreeGrid.setColTypes("tree,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ro,ro,ro,ro");
                    myTreeGrid.enableTreeCellEdit(true);
                }
                else {
                    myTreeGrid.enableTreeCellEdit(false);
                    myTreeGrid.setColTypes("tree,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro");
                }
                if (_isBudgetCreateEdit == "False" && _isForecastCreateEdit == "False") {
                    myTreeGrid.setColumnsVisibility("false,true,true,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true");
                  //  $('#AddSettings').css("display", "none");
                }
                else {
                    myTreeGrid.setColumnsVisibility("false,false,true,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true");
                }
            } else {
                if (_isForecastCreateEdit != null && _isForecastCreateEdit != 'undefined' && _isForecastCreateEdit.toLowerCase() == 'true') {
                    myTreeGrid.setColTypes("tree,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ro,ro,ro");
                    myTreeGrid.enableTreeCellEdit(true);
                }
                else {
                    myTreeGrid.setColTypes("tree,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro");
                    myTreeGrid.enableTreeCellEdit(false);
                }

                if (_isBudgetCreateEdit == "False" && _isForecastCreateEdit == "False") {
                    myTreeGrid.setColumnsVisibility("false,true,false,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true");
                  //  $('#AddSettings').css("display", "none");
                }
                else {
                    myTreeGrid.setColumnsVisibility("false,false,false,false,false,true,true,false,false,true,true,false,false,true,true,false,false,true,true");
                }
            }
            myTreeGrid.setColValidators(colvalidatiors);
            //myTreeGrid.attachHeader();
            //for (var i = 3; i <= 16; i++) {
            //myTreeGrid.setNumberFormat("0,000.00", i, ".", ",");
            //}
            //myTreeGrid.setColValidators(""+colvalidatiors+"");
        }



        myTreeGrid.init();
        myTreeGrid.setImageSize(1, 1);
        myTreeGrid.setSkin("dhx_skyblue");
        myTreeGrid.parse(GridData, "json");

        myTreeGrid.forEachRow(function (rowid) {
            if (GlobalEditLevel != 'Budget') {
                var locked = myTreeGrid.getUserData(rowid, "row_locked");
               

                    myTreeGrid.forEachCell(rowid, function (cellObj, ind) {
                        //execute code for each cell in a row with the id "row1"
                        //cellObj - related cell object
                        //ind - column index
                        var headerLable = myTreeGrid.getColLabel(ind, 1);
                        if (headerLable != "Task Name" && ind!=2) {
                        if (locked == 1) {
                            myTreeGrid.cells(rowid, ind).setDisabled(true);
                            myTreeGrid.setCellTextStyle(rowid, ind, "color:gray;");
                        }
                        else {
                                //var headerLable = myTreeGrid.getColLabel(ind, 1);
                            //#region start
                            if (headerLable.toLowerCase() != GlobalEditLevel.toLowerCase()) {
                                myTreeGrid.cells(rowid, ind).setDisabled(true);
                                myTreeGrid.setCellTextStyle(rowid, ind, "color:gray;");
                            }
                            //#endregion end
                        }
                        }
                    });
               
            }
            else {
                myTreeGrid.forEachCell(rowid, function (cellObj, ind) {
                    //execute code for each cell in a row with the id "row1"
                    //cellObj - related cell object
                    //ind - column index
                    var headerLable = myTreeGrid.getColLabel(ind, 1);
                    if (headerLable.toLowerCase() != GlobalEditLevel.toLowerCase() && headerLable != "Task Name" && ind!=2) {
                        myTreeGrid.cells(rowid, ind).setDisabled(true);
                        myTreeGrid.setCellTextStyle(rowid, ind, "color:gray;");
                    }
                });
            }
        });
        //myTreeGrid.setUserData("id");
        $("#gridbox").find("table").first().find("tr").next().last().find("td").first().css("text-align", "center");

        var IsValid = true;

        myTreeGrid.attachEvent("onValidationError", function (id, ind, value) {
            IsValid = false;
            return true;
        });
        myTreeGrid.attachEvent("onValidationCorrect", function (id, index, value, rule) {
            IsValid = true;
        });
        myTreeGrid.attachEvent("onEditCancel", function (id, value) {
            //debugger;
            //myTreeGrid.cells(id, 0).setCValue("invalid");
            //alert('');
        });
        myTreeGrid.attachEvent("onCellChanged", function (id, ind, value) {

            //if (!myTreeGrid._ignore_next) {
            //    myTreeGrid._ignore_next = true;
            if (parseInt(value) == 0) {
                // myTreeGrid.cells(id, ind).setValue("0");
            }
            //    myTreeGrid._ignore_next = false;
            //}
        });

        myTreeGrid.attachEvent("onResizeEnd", function (obj) {
            $("#gridbox").find("table").css("width", GridWidth);
        });

        myTreeGrid.attachEvent("onResizeEnd", function (cInd, cWidth, obj) {
            $("#gridbox").find("table").css("width", GridWidth);
        });
        //IsValid = true;
        //myTreeGrid.enableAutoWidth(true, GridWidth, GridWidth);
        myTreeGrid.attachEvent("onEditCell", function (stage, rId, cInd, nValue, oValue) {
            //debugger;
            var ColumnName = myTreeGrid.getColLabel(cInd, 1);
            if (stage == 1) {
                if (ColumnName != "Task Name") {
                $(".dhx_combo_edit").off("keydown");
                $(".dhx_combo_edit").on('keydown', (function (e) { GridPriceFormatKeydown(e); }));
                myTreeGrid.editor.obj.onkeypress = function (e) {
                    e = e || window.event;
                    if ((e.keyCode >= 47) || (e.keyCode == 0)) {
                        var text = this.value;
                        if (text.length > 10) { //max length of the text
                            return false;
                            }
                        }
                    }

                    var psv = myTreeGrid.cell;
                    this.editor.obj.value = (psv.title.replace(/,/g, ""));
                }
            }
            if (stage == 0 && cInd == 2) return true;
            var ParentID = $("#ddlParentFinance").val();
            var ChildID = $("#ddlChildFinance").val();
            if (IsValid) {
                if (oValue != undefined) {
                    oValue = oValue.replace(/,/g, "");
                }
                //if (IsAddNew == true) {
                //    _parentRowId = $("#hdn_row_parentId").val();
                //}
                var splitRowParentIds = '';
                var rowId = '', parentId = '', parentRowID = '';
                var itemIndex = -1;
                if (_row_parentId != null && _row_parentId.length > 0) {
                    splitRowParentIds = _row_parentId.split(',');
                    $.each(splitRowParentIds, function (key, val) {
                        //  debugger;
                        rowId = val.split('~')[0];
                        parentId = val.split('~')[1];
                        parentRowID = val.split('~')[2];
                        itemIndex = key;
                        if (rowId == rId) {
                            return false;
                        }
                    });
                }

                var Period = myTreeGrid.getColLabel(cInd, 0);

                var BudgetQuartelyColIndex = ["4", "8", "12", "16"];
                var ForeCastQuartelyColIndex = ["5", "9", "13", "17"];
                var BudgetQuaterTotalIndex = 20;
                var ForcastQuaterTotalIndex = 21;
                var BudgetMonthTotalIndex = 52;
                var ForcastMonthTotalIndex = 53;
                var BudgetRowTotal = 0;
                var ForCastRowTotal = 0;

                if (nValue != oValue) {
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("UpdateBudgetGridData")',
                        data: { BudgetId: rId, IsQuaterly: AllocatedBy, nValue: htmlDecode(nValue), oValue: oValue, ColumnName: ColumnName, Period: Period, ParentRowId: _parentRowId, GlobalEditLevel: GlobalEditLevel },
                        dataType: 'json',
                        beforeSend: function (x) { //Called before every request
                            myApp.hidePleaseWait();
                        },
                        success: function (states) {
                            var cellObj = myTreeGrid.cells(rId, cInd);

                            if (states.errormsg != null && states.errormsg.trim() != "") {
                                alert(states.errormsg.trim());
                                myTreeGrid.cells(rId, cInd).setValue(oValue);
                                return false;
                            }
                            myTreeGrid.cells(rId, cInd).setValue(Intl.NumberFormat().format(nValue));
                            if (ColumnName == "Budget") {
                                
                                if (AllocatedBy == "@Enums.PlanAllocatedBy.quarters.ToString()") {
                            //        $.each(BudgetQuartelyColIndex, function () {

                            //            var ColValue = myTreeGrid.cells(rId, this).getValue();
                                    //    BudgetRowTotal += parseFloat(ColValue.replace(/,/g, ""));
                            //        });
                            //        myTreeGrid.cells(rId, BudgetQuaterTotalIndex).setValue(BudgetRowTotal);
                                    for (var i = 1; i <= 18; i++) {
                                        var colId = myTreeGrid.getColumnId(i);
                                        var colIndex = myTreeGrid.getColIndexById(colId);
                                        var ColName = myTreeGrid.getColLabel(colIndex, 1);
                                        if (ColName == "Budget") {
                                            var ColCurrentValue = myTreeGrid.cells(rId, colIndex).getValue();
                                            BudgetRowTotal += parseFloat(ColCurrentValue.replace(/,/g, ""));
                                        }
                                    }
                                    //BudgetRowTotal = parseFloat(ColTotalValue) + parseFloat(ColCurrentValue);
                                    BudgetMonthTotalIndex = myTreeGrid.getColIndexById("BudgetTotal");
                                    myTreeGrid.cells(rId, BudgetMonthTotalIndex).setValue(Intl.NumberFormat().format(BudgetRowTotal));
                                } else if (AllocatedBy == "@Enums.PlanAllocatedBy.months.ToString()") {

                            //        var ColTotalValue = myTreeGrid.cells(rId, BudgetMonthTotalIndex).getValue();
                                    for (var i = 1; i <= 50; i++) {
                                        var colId = myTreeGrid.getColumnId(i);
                                        var colIndex = myTreeGrid.getColIndexById(colId);
                                        var ColName = myTreeGrid.getColLabel(colIndex, 1);
                                        if (ColName == "Budget") {
                                            var ColCurrentValue = myTreeGrid.cells(rId, colIndex).getValue();
                                            BudgetRowTotal += parseFloat(ColCurrentValue.replace(/,/g, ""));
                                        }
                                    }
                            //        BudgetRowTotal = parseFloat(ColTotalValue) + parseFloat(ColCurrentValue);
                                    BudgetMonthTotalIndex = myTreeGrid.getColIndexById("BudgetTotal");
                                    myTreeGrid.cells(rId, BudgetMonthTotalIndex).setValue(Intl.NumberFormat().format(BudgetRowTotal));
                                } else {
                                    for (var i = 1; i <= 14; i++) {
                                        var colId = myTreeGrid.getColumnId(i);
                                        var colIndex = myTreeGrid.getColIndexById(colId);
                                        var ColName = myTreeGrid.getColLabel(colIndex, 1);
                                        if (ColName == "Budget") {
                                            var ColCurrentValue = myTreeGrid.cells(rId, colIndex).getValue();
                                            BudgetRowTotal += parseFloat(ColCurrentValue.replace(/,/g, ""));
                                        }
                                    }
                                    //BudgetRowTotal = parseFloat(ColTotalValue) + parseFloat(ColCurrentValue);
                                    BudgetMonthTotalIndex = myTreeGrid.getColIndexById("BudgetTotal");
                                    myTreeGrid.cells(rId, BudgetMonthTotalIndex).setValue(Intl.NumberFormat().format(BudgetRowTotal));
                                }
                                var TotalVal = "$" + myTreeGrid.cells(myTreeGrid.getRowId(0), BudgetMonthTotalIndex).getValue();
                                $("#budgetID").html(TotalVal);
                                $("#budgetID").attr("data-original-title", TotalVal);
                                formatBudgetValues("#budgetID");

                            }
                            else if (ColumnName == "Forecast") {

                                
                                var forparentid = myTreeGrid.getParentId(rId);
                                if (forparentid > 0) {
                                    RollupFinanceValue(forparentid, 0, cInd);
                                }

                                if (AllocatedBy == "@Enums.PlanAllocatedBy.quarters.ToString()") {
                            //        $.each(ForeCastQuartelyColIndex, function () {

                            //            var ColValue = myTreeGrid.cells(rId, this).getValue();
                            //            ForCastRowTotal += parseFloat(ColValue);
                            //        });
                                    //myTreeGrid.cells(rId, ForcastQuaterTotalIndex).setValue(ForCastRowTotal);
                                    for (var i = 1; i <= 18; i++) {
                                        var colId = myTreeGrid.getColumnId(i);
                                        var colIndex = myTreeGrid.getColIndexById(colId);
                                        var ColName = myTreeGrid.getColLabel(colIndex, 1);
                                        if (ColName == "Forecast") {
                                            var ColCurrentValue = myTreeGrid.cells(rId, colIndex).getValue();
                                            ForCastRowTotal += parseFloat(ColCurrentValue.replace(/,/g, ""));
                                        }
                                    }
                            //        BudgetRowTotal = parseFloat(ColTotalValue) + parseFloat(ColCurrentValue);
                                    ForcastMonthTotalIndex = myTreeGrid.getColIndexById("ForecastTotal");
                                    myTreeGrid.cells(rId, ForcastMonthTotalIndex).setValue(Intl.NumberFormat().format(ForCastRowTotal));
                                }
                                else if (AllocatedBy == "@Enums.PlanAllocatedBy.months.ToString()") {
                                    //var ColTotalValue = myTreeGrid.cells(rId, BudgetMonthTotalIndex).getValue();
                                    for (var i = 1; i <= 50; i++) {
                                        var colId = myTreeGrid.getColumnId(i);
                                        var colIndex = myTreeGrid.getColIndexById(colId);
                                        var ColName = myTreeGrid.getColLabel(colIndex, 1);
                                        if (ColName == "Forecast") {
                                            var ColCurrentValue = myTreeGrid.cells(rId, colIndex).getValue();
                                            ForCastRowTotal += parseFloat(ColCurrentValue.replace(/,/g, ""));
                                        }
                                    }
                                    //BudgetRowTotal = parseFloat(ColTotalValue) + parseFloat(ColCurrentValue);
                                    ForcastMonthTotalIndex = myTreeGrid.getColIndexById("ForecastTotal");
                                    myTreeGrid.cells(rId, ForcastMonthTotalIndex).setValue(Intl.NumberFormat().format(ForCastRowTotal));
                                } else {
                                    for (var i = 1; i <= 14; i++) {
                                        var colId = myTreeGrid.getColumnId(i);
                                        var colIndex = myTreeGrid.getColIndexById(colId);
                                        var ColName = myTreeGrid.getColLabel(colIndex, 1);
                                        if (ColName == "Forecast") {
                                            var ColCurrentValue = myTreeGrid.cells(rId, colIndex).getValue();
                                            ForCastRowTotal += parseFloat(ColCurrentValue.replace(/,/g, ""));
                                        }
                                    }
                                    //BudgetRowTotal = parseFloat(ColTotalValue) + parseFloat(ColCurrentValue);
                                    ForcastMonthTotalIndex = myTreeGrid.getColIndexById("ForecastTotal");
                                    myTreeGrid.cells(rId, ForcastMonthTotalIndex).setValue(Intl.NumberFormat().format(ForCastRowTotal));
                                }
                                if (forparentid > 0) {
                                    RollupFinanceValue(forparentid, 0, ForcastMonthTotalIndex);
                                }
                                //myTreeGrid.cells(rId, ForcastMonthTotalIndex).setValue(Intl.NumberFormat().format(myTreeGrid.cells(rId, ForcastMonthTotalIndex).getValue()));
                                var TotalVal = "$" + myTreeGrid.cells(myTreeGrid.getRowId(0), ForcastMonthTotalIndex).getValue();
                                $("#ForecastID").html(TotalVal);
                                $("#ForecastID").attr("data-original-title", TotalVal);
                              
                                formatForecastValues("#ForecastID");

                                //$("#ForecastID").html("$" + myTreeGrid.cells(myTreeGrid.getRowId(0), ForcastMonthTotalIndex).getValue());
                                //formatForecastValues("#ForecastID");
                            }

                            //LoadBudgetGrid(AllocatedBy);
                            // GetFinanceHeaderValue(rId, false);
                            var ChkPlan = $("#chkPlan");
                            var ChkBudget = $("#chkBudget");
                            var ChkForeCast = $("#chkForeCast");
                            var ChkActual = $("#chkActual");
                            ShowHideColumns(ChkPlan[0]);
                            ShowHideColumns(ChkBudget[0]);
                            ShowHideColumns(ChkForeCast[0]);
                            ShowHideColumns(ChkActual[0]);
                            //var rowIndex = myTreeGrid.getRowIndex(rId);
                            //debugger;
                            //if (rowIndex == 0) {

                            $("#divFinanceBack").css("display", "block");
                            //}
                            if (ColumnName == "Task Name") {
                                LoadBudgetGrid(AllocatedBy);
                                GetFinanceHeaderValue(rId, false);
                            BindParentBudgetDrp(ParentID);

                            BindChildBudgetDrp(ParentID);
                            }
                            _isNewRowAdd = false;
                            //myApp.hidePleaseWait();
                        }
                    });
                }

            }
        });
        //myTreeGrid.attachEvent("onMouseIn", function (id) {
        //    $("#gridbox").find("table").css("width", GridWidth);
        //});
        //myTreeGrid.attachEvent("onSelect", function (id) {

        //    $("#gridbox").find("table").css("width", GridWidth);
        //});
        myTreeGrid.attachEvent("onOpenEnd", function () {

            //$("#gridbox").find("table").css("width", "100%");
            var tableheight = $(".objbox").find("table").height();

            $("#gridbox").css("height", tableheight + 100);
            myTreeGrid.setSizes();

            $("#gridbox").find("table").css("width", GridWidth);


            return true;
        });

        myTreeGrid.expandAll();
        //alert(GridWidth);
        //var PlanColumns = $("#chkPlan");
        //var ActualColumns = $("#chkActual");
        //PlanColumns.change();
        //ActualColumns.change();

        //myTreeGrid.enableAutoWidth(true, GridWidth, GridWidth);
        var tableheight = $(".objbox").find("table").height();

        $("#gridbox").css("height", tableheight + 100);
        myTreeGrid.setSizes();


        $("#gridbox").find("table").css("width", GridWidth);

        $(".grid_add").attr("data-title", "Add Row");
        CollapseExpand = true;
        _isNewRowAdd = false;
        //alert($("#gridbox").find("table").width());
    }

    //$("#ddlRevenueTimeFrame").change(function () {
    //    var AllocatedBy = $('#ddlRevenueTimeFrame option:selected').text();
    //    if (AllocatedBy == 'Quarterly') {
    //        AllocatedBy = true;
    //    }
    //    else {
    //        AllocatedBy = false;
    //    }
    //    LoadBudgetGrid(AllocatedBy);
    //    var BudgetColumns = $("#chkBudget");
    //    var ForeCastColumns = $("#chkForeCast");
    //    var PlanColumns = $("#chkPlan");
    //    var ActualColumns = $("#chkActual");
    //    BudgetColumns.change();
    //    ForeCastColumns.change();
    //    PlanColumns.change();
    //    ActualColumns.change();
    //});

    var _isNewRowAdd = false;
    var _newrowid = '';
    var _newParentId = '';
    var _parentRowId = '';
    var _row_parentId = '';

    function CheckboxClick(checkbox) {

        RowIDs = {
            IDs: []
        }
        var val = $(checkbox).attr('row-id');
        var Name = $(checkbox).attr('name');
            RowIDs.IDs.push(val);
            $("#lipname").html(Name);
            $("#divDeletePopup").modal('show');
            $('#cancel-button_DeleteItem').on("click", function () {
                var index = RowIDs.IDs.indexOf(val);
                RowIDs.IDs.splice(index, 1);
                $('#divDeletePopup').modal("hide");

            });


    }
    //Added BY Komal Rawal for #1639
    //RowIDs = {
    //    IDs: []
    //}
    //var CheckedSubitems = [];
    //var ids = [];
    //function CheckboxClick(checkbox) {
    //    RowIDs = {
    //        IDs: []
    //    }
    //    var state = $(checkbox).attr("checked");
    //    ids = myTreeGrid.getAllSubItems($(checkbox).attr('row-id')).split(',');
       
    //    //if (ids.length > 1) {
    //        for (var i = 0; i < ids.length; i++) {
    //            var Checkbox = ids[i];

    //    if (state == "checked") {
    //        $('#cb_' + Checkbox).attr("checked", "checked");
    //        if (ids[i] != "") {
    //            RowIDs.IDs.push(ids[i]);
    //    }
    //    }
    //    else {
            
    //                $('#cb_' + Checkbox).removeAttr("checked");
    //    }

    //}
    //   // }

    //    var parentid = myTreeGrid.getParentId($(checkbox).attr('row-id'));
    //    if (parentid == 0) {
    //        if ($(checkbox).attr("checked") == "checked")
    //            {
            
    //            RowIDs.IDs.push($(checkbox).attr("id").split('_')[1]);
       // }
    //        else {
    //            var index = RowIDs.IDs.indexOf($(checkbox).attr("id").split('_')[1]);
    //            RowIDs.IDs.splice(index, 1);

    //        }
    //    }
    //    SetParentCheckbox(parentid);
    //}

    //function SetParentCheckbox(parentid) {
    //    var flag = true;
    //    if (parentid != 0) {
    //        RowIDs = {
    //            IDs: []
    //        }
    //        CheckedSubitems = myTreeGrid.getAllSubItems(parentid).split(',');
    //        if (CheckedSubitems.length >= 1) {

    //            for (var i = 0; i < CheckedSubitems.length; i++) {
    //                if ($('#cb_' + CheckedSubitems[i]).attr("checked") == "checked") {
    //                    flag == true
    //                    RowIDs.IDs.push(CheckedSubitems[i]);
    //                }
    //                else {
    //                    var index = RowIDs.IDs.indexOf(CheckedSubitems[i]);
    //                    if (index >= 0) {
    //        RowIDs.IDs.splice(index, 1);
    //    }
    //                    flag = false;
    //                }
    //            }

    //        }
    //        if (flag == true) {
    //            $('#cb_' + parentid).attr("checked", "checked")
    //            RowIDs.IDs.push($('#cb_' + parentid).attr("id").split('_')[1]);
    //        }
    //        else {
    //            $('#cb_' + parentid).removeAttr("checked");
    //        }
    //        var parentid = myTreeGrid.getParentId($('#cb_' + parentid).attr('row-id'));
    //        SetParentCheckbox(parentid);
    //    }
    //    return;
    //}

    ////End
    function AddRow(cntrl) {
        // debugger;
        DisplayPopUpMenu(cntrl);
    }
    function IsRootMostParentId(curntRowid) {
        var parentid = myTreeGrid.getParentId(curntRowid);
        var result = false;
        if (parentid == null || parentid == 'undefined' || parentid <= 0) {
            result = true;
        }
        return result;
    }
    function AddNewRowbyType(itemType, cntrl) {
        if (_isNewRowAdd == false) {
            //debugger;
            var AllocatedBy = $('#ddlRevenueTimeFrame option:selected').val();
            //if (AllocatedBy == 'quarters') {
            //    AllocatedBy = true;
            //}
            //else {
            //    AllocatedBy = false;
            //}
            var row_id = $(cntrl).attr('row-id');

            //var rowId = myTreeGrid.getSelectedId();
            //var rowindex = myTreeGrid.getRowIndex(row_id.toString());

            var childrencount = myTreeGrid.hasChildren(row_id); // Get Current Row Children count.
            var insertrowindex = childrencount + 1;
            /*Start: Get ParentId and BudgetDetailId from RowId */
            var budgetDetailId = 0;
            if (row_id !== null && row_id !== 'undefined' && row_id !== '') {
                var arr = row_id.split('_');
                _newParentId = arr;
                //if (arr !== null && arr !== 'undefined' && arr.length > 0) {
                //    if (arr[1] != null && arr[1] != 'undefined') {
                //        _newParentId = budgetDetailId = arr[1];
                //    }
                //}
            }
            // Create RowId for newRecord.
            _newrowid = "new" + insertrowindex.toString() + "_0_" + _newParentId;  // RowId format: NameofItem_BudgetDetailId_ParentId.
            _isNewRowAdd = true;
            if (itemType.toLowerCase() == 'parallelitem') {
                _parentRowId = $(cntrl).attr('parentId');
            }
            else {
            _parentRowId = row_id;
            }
            _row_parentId = _row_parentId + "," + _newrowid + "~" + _newParentId + "~" + row_id; // Store NewRowId & ParentRowId in global variable This variable use to save data in OnEditCell event.
            $("#hdn_row_parentId").val(_row_parentId);
            /*End: Get ParentId and BudgetDetailId from RowId */
            var isRootMostParent = IsRootMostParentId(row_id);

            if (AllocatedBy == "@Enums.PlanAllocatedBy.quarters.ToString()") {
                if (GlobalEditLevel == 'Budget') {
                    myTreeGrid.setColTypes("tree,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ro,ro,ro,ro");
                } else {
                    myTreeGrid.setColTypes("tree,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ro,ro,ro");
                }
                if (itemType.toLowerCase() == 'childitem') {
                    myTreeGrid.addRow(_newrowid, ["New item", "<div id='dv" + _newrowid + "' class='finance_grid_add' onclick='AddRow(this)' row-id='" + _newrowid + "' style='float:none !important'></div><div title='" + "" + "' id='cb" + _newrowid + "' row-id='" + _newrowid + "' onclick='CheckboxClick(this)' class='grid_Delete'></div>", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], -1, row_id);
                }
                else if (isRootMostParent) {
                    myTreeGrid.addRow(_newrowid, ["New item", "<div id='dv" + _newrowid + "' class='finance_grid_add' onclick='AddRow(this)' row-id='" + _newrowid + "' style='float:none !important'></div><div title='" + "" + "' id='cb" + _newrowid + "' row-id='" + _newrowid + "' onclick='CheckboxClick(this)' class='grid_Delete'></div>", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"]);
                }
                else {
                    myTreeGrid.addRow(_newrowid, ["New item", "<div id='dv" + _newrowid + "' class='finance_grid_add' onclick='AddRow(this)' row-id='" + _newrowid + "' style='float:none !important'></div><div title='" + "" + "' id='cb" + _newrowid + "' row-id='" + _newrowid + "' onclick='CheckboxClick(this)' class='grid_Delete'></div>", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], -1, _parentRowId);
                }
            }
            else if (AllocatedBy == "@Enums.PlanAllocatedBy.months.ToString()") {
                if (GlobalEditLevel == 'Budget') {
                    myTreeGrid.setColTypes("tree,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ro,ro,ro,ro");
                } else {
                    myTreeGrid.setColTypes("tree,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ro,ro,ro");
                }
                if (itemType.toLowerCase() == 'childitem') {
                    myTreeGrid.addRow(_newrowid, ["New item", "<div id='dv" + _newrowid + "' class='finance_grid_add' onclick='AddRow(this)' row-id='" + _newrowid + "' style='float:none !important'></div><div title='" + "" + "' id='cb" + _newrowid + "' row-id='" + _newrowid + "' onclick='CheckboxClick(this)' class='grid_Delete'></div>", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], -1, row_id);
                }
                else if (isRootMostParent) {
                    myTreeGrid.addRow(_newrowid, ["New item", "<div id='dv" + _newrowid + "' class='finance_grid_add' onclick='AddRow(this)' row-id='" + _newrowid + "' style='float:none !important'></div><div title='" + "" + "' id='cb" + _newrowid + "' row-id='" + _newrowid + "' onclick='CheckboxClick(this)' class='grid_Delete'></div>", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"]);
                }
                else {
                    myTreeGrid.addRow(_newrowid, ["New item", "<div id='dv" + _newrowid + "' class='finance_grid_add' onclick='AddRow(this)' row-id='" + _newrowid + "' style='float:none !important'></div><div title='" + "" + "' id='cb" + _newrowid + "' row-id='" + _newrowid + "' onclick='CheckboxClick(this)' class='grid_Delete'></div>", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], -1, _parentRowId);
                }
            } else {
                if (GlobalEditLevel == 'Budget') {
                    myTreeGrid.setColTypes("tree,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ro,ro,ro,ro");
                } else {
                    myTreeGrid.setColTypes("tree,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ed,ro,ro,ro,ro,ro,ro");
                }
                if (itemType.toLowerCase() == 'childitem') {
                    myTreeGrid.addRow(_newrowid, ["New item", "<div id='dv" + _newrowid + "' class='finance_grid_add' onclick='AddRow(this)' row-id='" + _newrowid + "' style='float:none !important'></div><div title='" + "" + "' id='cb" + _newrowid + "' row-id='" + _newrowid + "' onclick='CheckboxClick(this)' class='grid_Delete'></div>", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], -1, row_id);
                }
                else if (isRootMostParent) {
                    myTreeGrid.addRow(_newrowid, ["New item", "<div id='dv" + _newrowid + "' class='finance_grid_add' onclick='AddRow(this)' row-id='" + _newrowid + "' style='float:none !important'></div><div title='" + "" + "' id='cb" + _newrowid + "' row-id='" + _newrowid + "' onclick='CheckboxClick(this)' class='grid_Delete'></div>", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"]);
                }
                else {
                    myTreeGrid.addRow(_newrowid, ["New item", "<div id='dv" + _newrowid + "' class='finance_grid_add' onclick='AddRow(this)' row-id='" + _newrowid + "' style='float:none !important'></div><div title='" + "" + "' id='cb" + _newrowid + "' row-id='" + _newrowid + "' onclick='CheckboxClick(this)' class='grid_Delete'></div>", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], -1, _parentRowId);
                }
            }
            myTreeGrid.openItem(row_id);
            var GridWidth = $("#gridbox").width();
            $("#gridbox").find("table").css("width", GridWidth);
            //myTreeGrid.enableValidation(true);
            var titleIndex = myTreeGrid.getColIndexById('title');
            //myTreeGrid.cells(_newrowid, titleIndex).setAttribute("validate", "NotEmpty");

            //myTreeGrid.setItemText(_newrowid, 'new text')
            //var sdateindex = myTreeGrid.getColIndexById('Tree');

            //if (childrencount == null || childrencount == 'undefined' || childrencount == '' || childrencount.toString() == "0") {
            //    //UpdateActionColumn(budgetDetailId);
            //}
            // debugger;
            var _newRowIndex = myTreeGrid.getRowIndex(_newrowid.toString());
            IsAddNew = true;
            //myTreeGrid.selectCell(myTreeGrid.getRowIndex(_newRowIndex), 0, false, false, true);
            myTreeGrid.selectRow(_newRowIndex);
            myTreeGrid.selectCell(_newRowIndex, 0, false, false, true, true);
            //myTreeGrid.cells(_newrowid, titleIndex).edit();
            //myTreeGrid.selectCell(_newRowIndex, titleIndex, false, true, true);
            if (GlobalEditLevel !== 'Budget') {
            myTreeGrid.forEachCell(row_id, function (cellObj, ind) {
                //execute code for each cell in a row with the id "row1"
                //cellObj - related cell object
                //ind - column index
                myTreeGrid.cells(row_id, ind).setDisabled(true);
                myTreeGrid.setCellTextStyle(row_id, ind, "color:gray;");
            });
            }
            event.cancelBubble = true;
        }
        //myTreeGrid.editCell();
    }

</script>