@model RevenuePlanner.Models.AlertRule

<div class="accordion-group ">

    <div class="accordion-body collapse" id="collapseGrp1">
        <div id="divrule0">
            <div class="alertdiv-delet">
                <a class="alert-delet" title="Cancel" onclick="CancleCreateNew('collapseGrp1');"><i class="fa fa-times-circle" aria-hidden="true"></i></a>
            </div>
            <div class="accordion-row margin-top18">
                <div class="alert-question"> 1. What item would you like to be alerted for?</div>
                <div class="alert-value-box">
                    <span class="searchtextbox"><input id="searchentity" class="searchtext" type="text" tabindex="1" onkeyup="searchtext(this);" placeholder="Enter at least 4 characters to search" /></span>
                </div>
                
            </div>
            <input id="hdnRuleId" type="hidden" value="0" />
            <input id="hdnEntityId" type="hidden" />
            <input id="hdnEntityType" type="hidden" />

            <div class="accordion-row clearfix" id="divque2">
                <div class="alert-question"> 2. What performance indicator should trigger the alert?</div>
                <div class="alert-value-box">

                    <span class="selectBox">
                        @Html.DropDownList("ddlindicator", (SelectList)Model.GoalType,new { tabindex = "2", style="width:170px" })
                    </span>
                    <div id="divque2part2">
                        <span class="vb-text">are</span>
                        <span class="selectBox">
                            @*@Html.DropDownList("ddlperformance", Enumerable.Empty<selectlistitem>
                                ())*@
                            @Html.DropDownList("ddlperformance", (SelectList)Model.PerformanceComparison, new { tabindex = "3" })
                        </span>
                        <span class="selectBox">
                            @Html.DropDownList("ddlGolanum", (SelectList)Model.GoalNum, "Select", new { tabindex = "4" })
                        </span>

                        <span class="vb-text">% of Goal</span>
                    </div>
                </div>
            </div>

            <div class="accordion-row clearfix" id="divque3">
                <div class="alert-question"> 3. When would you like to be alerted?</div>
                <div class="alert-value-box inline-span">
                    <span class="vb-text">When</span> <span id="lblentity"></span><span class="vb-text margin-left5px"> is </span>
                    <span class="selectBox">
                        @Html.DropDownList("ddlpercentage", (SelectList)Model.GoalNum, "Select", new { tabindex = "5", style="line-height: 20px;"})
                    </span>
                    <span class="vb-text"> % completed</span>
                </div>
            </div>
            <div class="accordion-row calendar_div clearfix" id="divque4">
                <div class="alert-question"> 4. How often should you be alerted?</div>
                <div class="alert-value-box">
                    <span class="selectBox pull-left">

                        @Html.DropDownList("ddlfrequency", (SelectList)Model.lstFrequency, new { tabindex = "6", @class = "frequncy" })
                    </span>
                    <span class="selectBox day-option-wrap pull-left" id="divDayOptions" style="display:none;">
                        
                        @Html.DropDownList("dayOptions", (SelectList)Model.lstWeekdays, new { tabindex = "7" })

                    </span>
                    <div class="pull-left margin-left5px" id="divDateOptions" style="display:none;">
                        @*<div id="datetimepicker-alert" class="input-group date">
                        *@
                       
                        <input type="text" class="form-control margin-bottom0" id="txtDateofmonth" tabindex="8" style="width:150px;"
                               placeholder="Enter date of month" onkeypress="return isNumberKey(event)" maxlength="2">
                        
                            @*<span class="input-group-addon">
                <span class="fa fa-calendar">
                </span>
            </span>*@
                       
                    </div>
                </div>
            </div>

        </div>
        <div class="container-button pull-left" id="divSave">
            <input type="submit" value="Save" title="save" tabindex="9" class="btn btn-blue btn-save pull-right" ruleid="0" onclick="saveRule(this);">
        </div>
    </div>
</div>
<div class="accordion-group" id="copyAccourdingroup">


</div>
@if (Model.lstAlertRule != null && Model.lstAlertRule.Count > 0)
{
    int tabndex = 9;
    foreach (var alertrule in Model.lstAlertRule)
    {
        string ruleId = alertrule.RuleId.ToString();
        string collapsid = "collapseGrp" + ruleId;
        string divrulid = "divrule" + ruleId;
        string groupid = "group-" + ruleId;
        bool isdisable = alertrule.IsDisable == true ? false : true;
        string alertTitle = alertrule.IsDisable == true ? "Off" : "On";
        string Alertsummary = alertrule.EntityName + " ";
        <div class="accordion-group" id="group-@ruleId">
            <div class="accordion-heading clearfix">
                <div class="alert-heading pull-left">
                    <h4 class="entity-name">@Alertsummary</h4> @Html.Raw(alertrule.RuleSummary)
                </div>
                <div class="pull-right acco-icons">
                    <a class="alert-delet" title="Delete" onclick="DeleteAlrtRule(@alertrule.RuleId);"><i class="fa fa-times-circle" aria-hidden="true"></i></a>
                    <a class="accordion-toggle alert-edit" data-toggle="collapse" data-parent="#Ruleaccordion" href="#@collapsid" title="Edit"><i class="fa fa-pencil-square-o" aria-hidden="true"></i></a>
                    <a class="alert-copy" onclick="CopyAlertRule('@collapsid',@ruleId);" title="Copy" ><i class="fa fa-clone" aria-hidden="true"></i></a>
                    <div  class="pull-right alert-rule-check">
                        Alert On 
                        <input id="chkOnOff" class="chkbxfilter" type="checkbox" checked="@isdisable"  onchange="OnOffAlert(this);"  title ="@alertTitle" ruleid="@ruleId">
                </div> 
                </div>
            </div>
            <div class="accordion-body collapse" id="@collapsid">
                <div id="@divrulid" class="maindiv">
                    <div class="accordion-row margin-top18">
                        <div class="alert-question"> 1. What item would you like to be alerted for?</div>
                        <div class="alert-value-box">
                            <span class="searchtextbox">
                                @{tabndex = tabndex + 1;}
                                <input id="searchentity" class="searchtext" type="text" tabindex="@tabndex" value="@alertrule.EntityName" onkeyup="searchtext(this);" />
                            </span>
                        </div>
                    </div>
                    <input id="hdnRuleId" type="hidden" value="@alertrule.RuleId" />
                    <input id="hdnEntityId" type="hidden" value="@alertrule.EntityID" />
                    <input id="hdnEntityType" type="hidden" value="@alertrule.EntityType" />

                    <div class="accordion-row clearfix" id="divque2">
                        <div class="alert-question"> 2. What performance indicator should trigger the alert?</div>
                        <div class="alert-value-box">

                            <span class="selectBox">
                                @{tabndex = tabndex + 1;}
                                @Html.DropDownList("ddlindicator", new SelectList(Model.GoalType, "Value", "Text", alertrule.Indicator), new { tabindex = tabndex, style = "width:170px" })
                            </span>
                            <div id="divque2part2" style="display:inline-block;">
                                <span class="vb-text">are</span>
                                <span class="selectBox">
                                    @*@Html.DropDownList("ddlperformance", Enumerable.Empty<selectlistitem>
                                        ())*@
                                    @{tabndex = tabndex + 1;}
                                    @Html.DropDownList("ddlperformance", new SelectList(Model.PerformanceComparison, "Value", "Text", alertrule.IndicatorComparision), new { tabindex = tabndex })
                                </span>
                                <span class="selectBox">
                                    @{tabndex = tabndex + 1;}
                                    @Html.DropDownList("ddlGolanum", new SelectList(Model.GoalNum, "Value", "Text", alertrule.IndicatorGoal), new { tabindex = tabndex })
                                </span>

                                <span class="vb-text">% of Goal</span>
                            </div>
                        </div>
                    </div>

                    <div class="accordion-row clearfix" id="divque3">
                        <div class="alert-question"> 3. When would you like to be alerted?</div>
                        <div class="alert-value-box inline-span">
                            <span class="vb-text">When</span> <span id="lblentity" title="@alertrule.EntityName">@alertrule.EntityName</span><span class="vb-text margin-left5px"> is </span>
                            <span class="selectBox">
                                @{tabndex = tabndex + 1;}
                                @Html.DropDownList("ddlpercentage", new SelectList(Model.GoalNum, "Value", "Text", alertrule.CompletionGoal), new { tabindex = tabndex, style = "line-height: 20px;" })
                            </span>
                            <span class="vb-text"> % completed</span>
                        </div>
                    </div>
                    <div class="accordion-row calendar_div clearfix" id="divque4">
                        <div class="alert-question"> 4. How often should you be alerted?</div>
                        <div class="alert-value-box">
                            <span class="selectBox pull-left">
                                @{tabndex = tabndex + 1;}
                                @Html.DropDownList("ddlfrequency", new SelectList(Model.lstFrequency, "Value", "Text", alertrule.Frequency), new { tabindex = tabndex, @class = "frequncy" })
                            </span>
                            <span class="selectBox day-option-wrap pull-left" id="divDayOptions" style="display:none;">
                                @{tabndex = tabndex + 1;}
                                @Html.DropDownList("dayOptions", new SelectList(Model.lstWeekdays, "Value", "Text", alertrule.DayOfWeek), new { tabindex = tabndex, @class = "weekday" })

                            </span>
                            <div class="pull-left margin-left5px" id="divDateOptions" style="display:none;">
                                @*<div id="datetimepicker-alert" class="input-group date">
                                *@
                                @{tabndex = tabndex + 1;}
                                <input type="text" class="form-control margin-bottom0 monthdate" id="txtDateofmonth" tabindex="@tabndex" style="width:150px;"
                                       placeholder="Enter date of month" onkeypress="return isNumberKey(event)" maxlength="2" value="@alertrule.DateOfMonth">

                                @*<span class="input-group-addon">
                                        <span class="fa fa-calendar">
                                        </span>
                                    </span>*@

                            </div>
                        </div>
                    </div>

                </div>
                <div class="container-button pull-left" id="divSave">
                    <input type="submit" value="Save" title="save" tabindex="@tabndex + 9" class="btn btn-blue btn-save pull-right" ruleid="@ruleId" onclick="saveRule(this);">
                </div>
            </div>
        </div>
    }
}

<script type="text/javascript">
    
    function CopyAlertRule(groupid,ruleId) {
        var clongroupid = "#" + groupid;
        $("#successMessage").css("display", "none");
        $("#errorMessage").css("display", "none");
        $("#spanMessageSuccess").empty();
        $("#spanMessageError").empty();
        $("#copyAccourdingroup").empty();
        $(clongroupid).find(".maindiv").find("#hdnRuleId").val('0');
        var tableId = "#divrule" + ruleId;
        var isvalid = CheckValidate(tableId);
        if (isvalid) {
            $newPanel = $(clongroupid).clone();

            $newPanel.attr("id", "collapseGrpCopy");
            $newPanel.find(".maindiv").attr("id", "divrule-1");
            $newPanel.find(".maindiv").find("#hdnRuleId").val('0');
            $newPanel.find(".btn-save").attr("ruleid", "-1");
            $newPanel.removeClass('in');
            $("#copyAccourdingroup").append($newPanel.fadeIn());
            $('.accordion-body.in').collapse('hide');
            var onclickevent = "CancleCreateNew('collapseGrpCopy')";
            $newPanel.find(".maindiv").append('<div class="alertdiv-delet"><a class="alert-delet" title="Cancel" onclick="' + onclickevent + ';"><i class="fa fa-times-circle" aria-hidden="true"></i></a></div>');
            $(".frequncy").change(function () {
                showHideOption(this);
            });
            $('#copyAccourdingroup').find('.accordion-body').collapse('show');
        }
        else
            return false;
    }

    $("#txtDateofmonth").blur(function (e) {
        var count = $(this).val();
        if (parseInt(count) > 31 || count.length > 2) {
            //$(this).val('');
            $('#txtDateofmonth').addClass("error");
        }
        else
            $('#txtDateofmonth').removeClass("error");
    });
    function isNumberKey(evt) {
        var charCode = evt.which;
        if (charCode != 46 && charCode > 31
          && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }
    $(document).ready(function () {
        var rulecnt = '@Model.lstAlertRule.Count';
        if (rulecnt > 0)
        {
            $("#divnoRecords").hide();
        }
        else
        {
            $("#divnoRecords").show();
        }
        $("#ddlindicator").change(function () {
            if ($(this).val() != "") {
                $("#divrule0").find("#divque2part2").css("display", "inline-block");
                $("#divrule0").find("#divque2part2").css("visibility", "visible");
                $("#divrule0").find("#divque2part2").find("#ddlperformance").focus();
                $(this).removeClass("error");
            }
        });
        $("#ddlGolanum").change(function () {
            if ($(this).val() != "") {
                $("#divrule0").find("#divque3").show();
                $("#divrule0").find("#divque3").css("visibility", "visible");
                $("#divrule0").find("#divque3").find("#ddlpercentage").focus();
                $(this).removeClass("error");
            }
        });
        $("#ddlpercentage").change(function () {
            if ($(this).val() != "") {
                $("#divrule0").find("#divque4").show();
                $("#divrule0").find("#divque4").css("visibility", "visible");
                $("#collapseGrp1").find("#divSave").show();
                $("#collapseGrp1").find("#divSave").css("visibility", "visible");
                $("#divrule0").find("#divque4").find("#ddlfrequency").focus();
                $(this).removeClass("error");
            }
        });
        $(".frequncy").change(function () {
            showHideOption(this);
        });

        $("#Ruleaccordion").find('.frequncy').each(function () {
            showHideOption(this);
        });
        //$('.searchtext').bind('paste', function (e) {
        //    setTimeout(function () {
        //        //  $('#ID').trigger('autocomplete');
        //        searchtext(this);
        //    }, 0);
        //});
     
    });
    function OnOffAlert(e)
    {

        var OnOff = e.checked;
        var result = true;
        var ruleid = $(e).attr("ruleid");
        if (!e.checked) {
            result = confirm("Are you sure you want to turn off this alert rule?");
                   }
        if (result) {
            $(e).attr("title", 'Off');
            $.ajax({
                type: 'POST',
                url: '@Url.Action("DisableAlertRule", "User")',
                data: {
                    RuleId: parseInt(ruleid),
                    RuleOn: OnOff
                },
                success: function (data) {
                    if (data.Success != null && data.Success == true && data.SuccessMessage != null) {
                        $("#successMessage").css("display", "block");
                        $("#spanMessageSuccess").empty();
                        $("#spanMessageSuccess").text(data.SuccessMessage);
                        $("#errorMessage").css("display", "none");
                        $("#Ruleaccordion").load('@Url.Action("GetAlertRuleList", "User")');
                    }
                }
            });
        }
        else {
            $(e).attr('checked', !e.checked);
            $(e).attr("title", 'On');
        }
        return false;
    }
    function showHideOption(e) {
        var selectedSpan = $(e).val();
        var parentdiv = $(e).parent().parent();
            if (selectedSpan != "") {
                if (selectedSpan == "Daily") {
                $(parentdiv).find("#divDayOptions").hide();
                $(parentdiv).find("#divDateOptions").hide();
                }
                else if (selectedSpan == "Weekly") {
                    $(parentdiv).find("#divDayOptions").show();
                    $(parentdiv).find("#divDayOptions").focus();
                $(parentdiv).find("#divDateOptions").hide();
                }
                else if (selectedSpan == "Monthly") {
                    $(parentdiv).find("#divDayOptions").hide();
                    $(parentdiv).find("#divDateOptions").show();
                    $(parentdiv).find("#divDateOptions").focus();

            }
        }
    }
    var customRenderMenu = function (ul, items) {
        var self = this;
        var categoryArr = [];

        function contain(item, array) {
            var contains = false;
            $.each(array, function (index, value) {
                if (item == value) {
                    contains = true;
                    return false;
                }
            });
            return contains;
        }

        $.each(items, function (index, item) {
            if (!contain(item.category, categoryArr)) {
                categoryArr.push(item.category);
            }
        });

        $.each(categoryArr, function (index, category) {
            ul.append("<li class='ui-autocomplete-group' aria-label=" + category + ">" + category + "</li>");
            $.each(items, function (index, item) {
                var li;
                if (item.category == category) {
                    li = self._renderItemData(ul, item);
                    if (item.category) {
                        li.attr("title", item.label);
                    }
                }

            });
        });
      
      
    };
    // $(".searchtext").keyup(
    function searchtext(el) {

        var maindiv = $(el).parent().parent().parent().parent();
        if ($(el).val().trim().length > 0) {
            $(el).autocomplete({
                source: function (request, response) {
                    if ($(el).val) {
                        var urlcontent = '@Url.Content("~/User/ListEntity/")';

                        $.getJSON(urlcontent, { 'term': request.term }, function (data) {
                            var t = data;
                           
                            if (data.length > 0) {
                                myApp.hidePleaseWait();
                                response($.map(data, function (item) {

                                    return { category: item.category, value: item.value, label: item.label };
                                }))
                            }
                            else {
                               
                                $('.ui-autocomplete').html('No Records found');
                                var hdnid = $(maindiv).find("#hdnEntityId");
                                $(hdnid).val('');

                                var hdntypeid = $(maindiv).find("#hdnEntityType");
                                $(hdntypeid).val('');
                                $(el).attr("title", '');
                                var lbl = $(maindiv).find("#lblentity");
                                $(lbl).attr("title", '');
                                $(lbl).html('');
                            }

                        });
                        myApp.hidePleaseWait();
                    }
                },
                minLength: 4,
                create: function () {

                    $(el).data('uiAutocomplete')._renderMenu = customRenderMenu;
                },
                select: function (event, ui) {
                    if (ui.item != null && ui.item != undefined) {
                        $(el).val(ui.item.label);
                        $(el).attr("title", ui.item.label);
                        var id = $(el).attr('id');
                        $("#" + id).removeClass("error");
                        var hdnid = $(maindiv).find("#hdnEntityId");
                        $(hdnid).val(ui.item.value);

                        var hdntypeid = $(maindiv).find("#hdnEntityType");
                        $(hdntypeid).val(ui.item.category);

                        var lbl = $(maindiv).find("#lblentity");
                        $(lbl).html(ui.item.label);
                        $(lbl).attr("title",ui.item.label);
                        $(maindiv).find("#divque2").css("visibility", "visible");
                    }
                    return false;
                },
                focus: function (e, ui) {
                    var a = e.items;
                    return false;

                }
                //change: function (event, ui) {
                //    if (!ui.item) {
                //        $(el).val("");
                //        var hdnid = $(maindiv).find("#hdnEntityId");
                //        $(hdnid).val('');

                //        var hdntypeid = $(maindiv).find("#hdnEntityType");
                //        $(hdntypeid).val('');
                //        $(el).attr("title", '');
                //        var lbl = $(maindiv).find("#lblentity");
                //        $(lbl).attr("title", '');
                //        $(lbl).html('');
                //    }
                //}

            });

        }
        else {
            var hdnid = $(maindiv).find("#hdnEntityId");
            $(hdnid).val('');

            var hdntypeid = $(maindiv).find("#hdnEntityType");
            $(hdntypeid).val('');
            $(el).attr("title", '');
            var lbl = $(maindiv).find("#lblentity");
            $(lbl).attr("title", '');
            $(lbl).html('');
            //$(maindiv).find("#searchentity").addClass("error");
        }
    }
    //);

    //$(".btn-save").click(
    function saveRule(el) {
        var ruleid = $(el).attr('ruleid');
        var tableId = "#divrule" + ruleid;
        var isvalid = CheckValidate(tableId);
        if (isvalid) {
            var str = '';
            var AlertRuleDetail ;
            var EntityId = $(tableId).find("#hdnEntityId").val();
            var RuleId = $(tableId).find("#hdnRuleId").val();
            var Performancefector = $(tableId).find("#ddlperformance").val();
            var GoalType = $(tableId).find("#ddlindicator").val();
            var GoalNum = $(tableId).find("#ddlGolanum").val();
            var ComplettionGoal = $(tableId).find("#ddlpercentage").val();
            var frequency = $(tableId).find("#ddlfrequency").val();
            var EntityType = $(tableId).find("#hdnEntityType").val();
            var EntityName = $(tableId).find("#lblentity").html();
            var DayOfWeek = $(tableId).find("#dayOptions").val();
            var DateofMonth = $(tableId).find("#txtDateofmonth").val();
            var rulesummary = "<h4>  " + $(tableId).find("#ddlindicator option:selected").text() + " are " + $(tableId).find("#ddlperformance option:selected").text().toString().toLowerCase() + " " + GoalNum + "% of Goal</h4>" +
                "<br/><span>Start at " + ComplettionGoal + "% completion</span><span>Repeat " + frequency + "</span>";

            if (EntityId != "" && EntityId != null && parseInt(EntityId) != 0) {
                AlertRuleDetail={
                    EntityID: EntityId.toString(),
                    EntityType: EntityType.toString(),
                    Indicator: GoalType.toString(),
                    IndicatorComparision: Performancefector.toString(),
                    IndicatorGoal: GoalNum.toString(),
                    CompletionGoal: ComplettionGoal.toString(),
                    Frequency: frequency.toString(),
                    DayOfWeek: DayOfWeek.toString(),
                    DateOfMonth: DateofMonth.toString(),
                    RuleSummary: rulesummary.toString()	,
                    RuleId: RuleId
                };
            }
            if (AlertRuleDetail != null) {
                AlertRuleDetail = JSON.stringify(AlertRuleDetail);

                $.ajax({

                    type: 'POST',
                    url: '@Url.Action("SaveAlertRule", "User")', // we are calling json method
                    dataType: 'json',
                    contentType: 'application/json',
                    data: "{'RuleDetail':" + (AlertRuleDetail) + ",'RuleID':" + parseInt(RuleId) + "}",
                    success: function (data) {
                        if (data.Success != null && data.Success == true && data.SuccessMessage != null) {
                            $("#successMessage").css("display", "block");
                            $("#spanMessageSuccess").empty();
                            $("#spanMessageSuccess").text(data.SuccessMessage);
                            $("#errorMessage").css("display", "none");
                            $("#Ruleaccordion").load('@Url.Action("GetAlertRuleList", "User")');
                        }
                        if (data.Success != null && data.Success == false && data.ErrorMessage != null) {
                            $("#errorMessage").css("display", "block");
                            $("#spanMessageError").empty();
                            $("#spanMessageError").text(data.ErrorMessage);
                            $("#successMessage").css("display", "none");
                        }

                    }
                });
            }
        }
    }
    //);
    function DeleteAlrtRule(ruleid) {
        var result = confirm("Are you sure you want to delete the Alert?");
        if (result) {
            $.ajax({

                type: 'POST',
                url: '@Url.Action("DeleteAlertRule", "User")', // we are calling json method
                data: { RuleId: parseInt(ruleid) },
                success: function (data) {
                    if (data.Success != null && data.Success == true && data.SuccessMessage != null) {
                        $("#successMessage").css("display", "block");
                        $("#spanMessageSuccess").empty();
                        $("#spanMessageSuccess").text(data.SuccessMessage);
                        $("#errorMessage").css("display", "none");
                        $("#Ruleaccordion").load('@Url.Action("GetAlertRuleList", "User")');
                    }
                    if (data.Success != null && data.Success == false && data.ErrorMessage != null) {
                        $("#errorMessage").css("display", "block");
                        $("#spanMessageError").empty();
                        $("#spanMessageError").text(data.ErrorMessage);
                        $("#successMessage").css("display", "none");
                    }

                }
    });
        }
    }
    function CancleCreateNew(e)
    {
        $('#'+e).collapse('hide');
    }
</script>
