@model RevenuePlanner.Models.UserModel
@using RevenuePlanner.Helpers
@{
    var srcval = (string)ViewBag.SourceValue;
    var currentUserId = (string)ViewBag.CurrentUserId;
}
<script src="@Url.Content("~/Scripts/jquery.validate.js")"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")"></script>
<div class="span10 content-colum-info-user">
    @using (Html.BeginForm("Edit", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
        @Html.ValidationSummary(true)

        @Html.HiddenFor(model => model.UserId)
        @Html.HiddenFor(model => model.RoleCode)
        @Html.HiddenFor(model => model.Password)
        @Html.HiddenFor(model => model.ConfirmPassword)
        @Html.HiddenFor(model => model.IsManager)   // Added by :- Sohel Pathan on 17/06/2014 for PL ticket #517   

        <div class="cf inputs-aligned-horizontal">
            @Html.LabelFor(model => model.FirstName)
            @if (Convert.ToString(Model.UserId) == currentUserId || (bool)ViewBag.IsUserAdminAuthorized) //|| permRoleCodesForDel.Contains(Model.RoleCode))
                    {
                @Html.TextBoxFor(model => model.FirstName, new { @class = "input-small" })
                @Html.ValidationMessageFor(model => model.FirstName)
                    }
                    else
                    {
                @Html.TextBox("txtFirstName", Model.FirstName, new { style = "background:#F2F2F2;", @readonly = "true", title = Model.FirstName })
                    }
        </div>
        <div class="cf inputs-aligned-horizontal">
            @Html.LabelFor(model => model.LastName)
            @if (Convert.ToString(Model.UserId) == currentUserId || (bool)ViewBag.IsUserAdminAuthorized) // || permRoleCodesForDel.Contains(Model.RoleCode))
                    {
                @Html.TextBoxFor(model => model.LastName)
                @Html.ValidationMessageFor(model => model.LastName)
                    }
                    else
                    {
                @Html.TextBox("txtLastName", Model.LastName, new { style = "background:#F2F2F2;", @readonly = "true", title = Model.LastName })
                    }
        </div>
        <div class="cf inputs-aligned-horizontal">
            @Html.Hidden("CurrEmail", Model.Email)
            @Html.LabelFor(model => model.Email)
            @* Start - Modified by Sohel Pathan on 10/07/2014 for Internal Functional Review Points #51 *@
            @Html.HiddenFor(model => model.Email)
            @Html.TextBox("txtEmail", Model.Email, new { style = "background:#F2F2F2;", @readonly = "true", title = Model.Email })
            @* End - Modified by Sohel Pathan on 10/07/2014 for Internal Functional Review Points #51 *@
        </div>
                 
                // Start - Added by :- Sohel Pathan on 17/06/2014 for PL ticket #517
        <div class="cf inputs-aligned-horizontal">
            @Html.LabelFor(model => model.Phone)
            @if (Convert.ToString(Model.UserId) == currentUserId || (bool)ViewBag.IsUserAdminAuthorized)
                    {
                @Html.TextBoxFor(model => model.Phone)
                @Html.ValidationMessageFor(model => model.Phone)
                    }
                    else
                    {
                @Html.HiddenFor(model => model.Phone)
                @Html.TextBox("txtPhone", Model.Phone, new { style = "background:#F2F2F2;", @readonly = "true", title = Model.Phone })
                    }
        </div>
                // End - Added by :- Sohel Pathan on 17/06/2014 for PL ticket #517
                    
        <div class="cf inputs-aligned-horizontal">
            @Html.LabelFor(model => model.JobTitle)
            @if ((Convert.ToString(Model.UserId) == currentUserId) || (bool)ViewBag.IsUserAdminAuthorized) //|| permRoleCodesForDel.Contains(Model.RoleCode))
                    {
                @Html.TextBoxFor(model => model.JobTitle)
                @Html.ValidationMessageFor(model => model.JobTitle)
                    }
                    else
                    {
                @Html.TextBox("txtJobTitle", Model.JobTitle, new { style = "background:#F2F2F2;", @readonly = "true", title = Model.JobTitle })
                    }

        </div>
                if (!string.IsNullOrWhiteSpace(srcval) && srcval.ToLower() == "myaccount")
                {
        <div class="cf inputs-aligned-horizontal">
            @Html.LabelFor(model => model.ProfilePhoto)
            <div class="container-img">
                <img id="userImage" src="@Url.Action("LoadUserImage", "User", new { id = Model.UserId, width = 60, height = 60 })" class="pull-left">
                <div class="pull-left">
                    <div class="btn-group">
                        <input name="file" id="filePrev" type="file" style="display: inline-block; width: 200px;" />
                    </div>
                    <small>JPG or PNG format only (size up to 1 MB).</small>
                </div>
                @if (Model.ProfilePhoto != null)
                        {
                    <a href="#" prop="@ViewBag.DefaultImage" id="aRemoveImage" class="remove-img">Remove Image</a>
                        }
            </div>
        </div>
                }
        <div class="cf inputs-aligned-horizontal">
            @Html.LabelFor(model => model.ClientId)
            @*Start Modified by Dharmraj for ticket #583 on 7th July 2014 *@

            @Html.HiddenFor(model => model.ClientId)
            @Html.HiddenFor(model => model.Client)
            @Html.TextBox("txtClient", Model.Client, new { style = "background:#F2F2F2;", @readonly = "true", title = Model.Client })

            @*}*@
            @*End Modified by Dharmraj for ticket #583 on 7th July 2014 *@
        </div>

        <div class="cf inputs-aligned-horizontal">
            @Html.LabelFor(model => model.RoleId)
            @if ((bool)ViewBag.IsUserAdminAuthorized && currentUserId != Convert.ToString(Model.UserId))
                    {
                        //Modified by :- Sohel on 27 March 2014 for ticket #334
                <div class="selectBox UserProfile" id="ddlRoleIdSelectBox">
                    @Html.DropDownListFor(c => c.RoleId, new SelectList((System.Collections.IEnumerable)ViewData["Roles"], "RoleId", "Title"), "Please Select", new { @class = "hide" })
                </div>
                @Html.ValidationMessageFor(model => model.RoleId)
                @Html.Label("", Common.objCached.RoleRequired, new { @class="field-validation-error selectbox-validation-message", id="lblRoleIdRequired" })    // Added by Sohel Pathan on 26/06/2014 for PL ticket #517
                    }
                    else
                    {
                @Html.HiddenFor(model => model.RoleId)
                @Html.HiddenFor(model => model.RoleTitle)
                @Html.TextBox("txtRole", Model.RoleTitle, new { style = "background:#F2F2F2;", @readonly = "true", title = Model.RoleTitle })
                    }
        </div>
                
                // Start - Added by :- Sohel Pathan on 17/06/2014 for PL ticket #517   
        <div class="cf inputs-aligned-horizontal" id="divManager">
            @if ((bool)ViewBag.IsUserAdminAuthorized && currentUserId != Convert.ToString(Model.UserId))
                        {
                @Html.Label("Manager")
                <div class="selectBox UserProfile" id="ddlManagerIdSelectBox">
                    @if (ViewData["ManagerList"] != null)
                                {
                        @Html.DropDownListFor(c => c.ManagerId, new SelectList((System.Collections.IEnumerable)ViewData["ManagerList"], "ManagerId", "ManagerName"), "Please Select", new { @class = "hide" })
                                }
                                else
                                {
                        @Html.DropDownListFor(c => c.ManagerId, Enumerable.Empty<SelectListItem>(), "Please Select", new { @class = "hide" })
                                }
                </div>
                @Html.Label("", Common.objCached.ManagerRequired, new { @class="field-validation-error selectbox-validation-message", id="lblManagerIdRequired" })  // Added by Sohel Pathan on 26/06/2014 for PL ticket #517
                        }
                        else
                        {
                @Html.Label("Manager")
                @Html.HiddenFor(model => model.ManagerId)
                @Html.HiddenFor(model => model.ManagerName)     // Added by Sohel Pathan on 10/07/2014 for Internal Functional Review Points #50
                @Html.TextBox("txtManager", Model.ManagerName, new { style = "background:#F2F2F2;", @readonly = "true", title = Model.ManagerName })
                        }
        </div>
                // End - Added by :- Sohel Pathan on 17/06/2014 for PL ticket #517   
                
                if (currentUserId != Convert.ToString(Model.UserId))
                {
                    if ((bool)ViewBag.IsUserAdminAuthorized) //permRoleCodesForDel.Contains(Model.RoleCode))
                    {
        <div class="cf inputs-aligned-horizontal" style="margin-left: 179px;" id="divUserDelete">
            <div class="delete-container">
                <div>
                    @Html.LabelFor(model => model.IsDeleted, new { style = "float:left;padding-left:44px;padding-top:2px;" })   @* Modified by Sohel Pathan on 10/07/2014 for PL ticket #589 *@
                    @{
                                var items = new List<System.Web.UI.WebControls.ListItem> { new System.Web.UI.WebControls.ListItem { Text = "No", Value = "No" }, new System.Web.UI.WebControls.ListItem { Text = "Yes", Value = "Yes" } };
                                // Start - Added by Sohel Pathan on 26/06/2014 for PL ticket #517
                                if(ViewBag.isForDelete == "true")
                                {
                                    Model.IsDeleted = "Yes";
                                }
                                else
                                {
                                    Model.IsDeleted = "No";
                                }
                                // End - Added by Sohel Pathan on 26/06/2014 for PL ticket #517
                    }
                    @*Modified by :- Sohel on 27 March 2014 for ticket #334*@
                    <div class="selectBox" id="ddlIsDeletedSelectBox">
                        @Html.DropDownListFor(c => c.IsDeleted, new SelectList(items, "Value", "Text"), new { style = "width:54px; height:23px;float:right;margin-top:10px;margin-right:12px;", @class = "hide" })
                    </div>
                </div>
                <div id="divNewManager">
                   
                    @Html.Label("Reassign Subordinates to")
                    <div class="selectBox" id="ddlNewManagerIdSelectBox">
                        @if(ViewBag.isForDelete == "true")
                                            {
                            @Html.DropDownListFor(c => c.NewManagerId, new SelectList((System.Collections.IEnumerable)ViewData["ManagerList"], "ManagerId", "ManagerName"), "Please Select", new { @class = "hide" })
                                            }
                                            else
                                            {
                            @Html.DropDownListFor(c => c.NewManagerId, Enumerable.Empty<SelectListItem>(), "Please Select", new { @class = "hide" })
                                            }
                    </div>
                </div>
            </div>
            @Html.Label("", Common.objCached.ReassignRequired, new { @class="field-validation-error selectbox-validation-message", id="lblNewManagerIdRequired" })  @* Added by Sohel Pathan on 26/06/2014 for PL ticket #517 *@
        </div>
                    }
                }
                else
                {
                    if (!(bool)ViewBag.IsUserAdminAuthorized) //!Model.IsSystemAdmin)
                    {
        <div class="cf inputs-aligned-horizontal" style="margin-left: 179px;">
            <p>Contact your <strong>administrator</strong> to update locked settings.</p>
        </div>
                    }
                }

                if (Convert.ToString(Model.UserId) == currentUserId || (bool)ViewBag.IsUserAdminAuthorized)//isViewOnly != "true")
                {
        <div class="cf inputs-aligned-horizontal">
            <div class="container-button">
                <input id="btnSubmit" type="submit" value="Save" title="save" class="btn btn-blue btn-save text-shadow-blue source-sans-proregular" style="margin-left: 179px;" />
            </div>
        </div>
                }
            }
</div>

<script type="text/javascript">
    $(document).ready(function () {

        // Start - Added by Sohel Pathan on 26/06/2014 for PL ticket #517
        $('#lblClientIdRequired').hide();
        $('#lblRoleIdRequired').hide();
        $('#lblManagerIdRequired').hide();
        $('#lblNewManagerIdRequired').hide();
        // End - Added by Sohel Pathan on 26/06/2014 for PL ticket #517

        //Added by :- Sohel on 27 March 2014 for ticket #334
        $(".selectBox select").selectbox();

        $('.sbHolder .sbOptions li').click(function () {
            SetddlSelectedItem(this);
        });

        $('.sbHolder .sbOptions li').keyup(function () {
            SetddlSelectedItem(this);
        });

        $('.sbHolder .sbSelector').bind("DOMSubtreeModified", function () {
            SetddlSelectedItem($(this).parent().find('ul li.setFocusli'));
        });

        function SetddlSelectedItem(obj) {
            var id = $(obj).parent().parent().parent().find('select').attr('id');
            $('#' + id + ' option').each(function () {
                $(this).removeAttr('selected');
            });

            var selectedOption = $(obj).find('a').attr('rel');

            $("#" + id + " option").filter(function (index) {
                return $(this).attr("value") === selectedOption;
            }).attr("selected", "selected");
        }

        $('#btnSubmit').click(function () {
            var isValid = true;

            //ClientId Dropdown Required Validtion
            if (($("#ClientId option").eq(0).val() == "" && $("#ClientId").val() == "")) {
                $("#ddlClientIdSelectBox .sbHolder").addClass("selectBoxError");
                $('#lblClientIdRequired').show();   // Added by Sohel Pathan on 26/06/2014 for PL ticket #517
                isValid = false;
            }
            else {
                $("#ddlClientIdSelectBox .sbHolder").removeClass("selectBoxError");
                $('#lblClientIdRequired').hide();   // Added by Sohel Pathan on 26/06/2014 for PL ticket #517
            }
            //RoleID Dropdown Required Validtion
            if (($("#RoleId option").eq(0).val() == "" && $("#RoleId").val() == "")) {
                $("#ddlRoleIdSelectBox .sbHolder").addClass("selectBoxError");
                $('#lblRoleIdRequired').show(); // Added by Sohel Pathan on 26/06/2014 for PL ticket #517
                isValid = false;
            }
            else {
                $("#ddlRoleIdSelectBox .sbHolder").removeClass("selectBoxError");
                $('#lblRoleIdRequired').hide(); // Added by Sohel Pathan on 26/06/2014 for PL ticket #517
            }
            // Start - Added by :- Sohel Pathan on 17/06/2014 for PL ticket #517
            if (($("#ManagerId option").eq(0).val() == "" && $("#ManagerId").val() == "") && $('#IsDeleted').val().toLowerCase() != 'yes') {
              
                    $("#ddlManagerIdSelectBox .sbHolder").addClass("selectBoxError");
                        $('#lblManagerIdRequired').show();  // Added by Sohel Pathan on 26/06/2014 for PL ticket #517
                        isValid = false;
                    }
                    else {
                        $("#ddlManagerIdSelectBox .sbHolder").removeClass("selectBoxError");
                        $('#lblManagerIdRequired').hide();  // Added by Sohel Pathan on 26/06/2014 for PL ticket #517
                    }

                if ($('#IsDeleted').val().toLowerCase() == 'yes' && $('#IsManager').val().toLowerCase() == 'true') {
                    if ($("#NewManagerId option").eq(0).val() == "" && $("#NewManagerId").val() == "") {
                        $("#ddlNewManagerIdSelectBox .sbHolder").addClass("selectBoxError");
                        $('#lblNewManagerIdRequired').show();   // Added by Sohel Pathan on 26/06/2014 for PL ticket #517
                        isValid = false;
                    }
                    else {
                        $("#ddlNewManagerIdSelectBox .sbHolder").removeClass("selectBoxError");
                        $('#lblNewManagerIdRequired').hide();   // Added by Sohel Pathan on 26/06/2014 for PL ticket #517
                    }
                }
            // End - Added by :- Sohel Pathan on 17/06/2014 for PL ticket #517
            return isValid;
        });
        //

        $("#content_wraper").removeClass("span10 all-height").addClass("span10 padding-top40");
        $("#aRemoveImage").click(function () {
            var src = $(this).attr('prop');
            $('#userImage').attr('src', 'data:image/jpg;base64,' + src);
            $("<input/>", { type: 'hidden', name: 'removeflag', id: 'removeflagid' }).val("true").appendTo("#btnSubmit");//added by uday #555 
        });

        $('#btnSubmit').click(function () {
            $('#content :input').each(function () {
                if (($(this).attr('type') == 'text' || $(this).attr('type') == 'select') && this.id != 'Phone') {   // Modified by :- Sohel Pathan on 17/06/2014 for PL ticket #517 
                    var input = $(this).val();
                    if (input == '') {
                        $(this).addClass("error");
                    } else {
                        $(this).removeClass("error");
                    }
                }
            });
        });

        //function to add or remove class ERROR when inputs text are empty.
        $('input').blur(function () {
            if ($(this).attr('type') == 'text' && !$(this).is('[readonly]') && this.id != 'Phone') {
                if ($(this).val() == '') {
                    $(this).addClass("error");
                } else {
                    $(this).removeClass("error");
                }
            }
        });
        $('select').blur(function () {
            if ($(this).val() == '') {
                $(this).addClass("error");
            } else {
                $(this).removeClass("error");
            }
        });

        if ($('#SuccMsg').val() == null || $('#SuccMsg').val() == '') {
            $("#successMessage").slideUp(400);
        }
        else {
            $("#successMessage").slideDown(1200);
        }
        if ($('#ErrMsg').val() == null || $('#ErrMsg').val() == '') {
            $("#errorMessage").slideUp(400);
        }
        else {
            $("#errorMessage").slideDown(400);
            $("html, body").animate({ scrollTop: 0 }, 1000);
        }
        $("#ClientId").change(function () {
            var clientId = $(this).val();
            if (clientId != "") {
                // Start - Added by Sohel Pathan on 03/07/2014 for Functional review points.
                loadManagers(clientId);
                if ($('#IsDeleted').val().toLowerCase() == 'yes')
                    loadNewManagers(clientId);
                // End - Added by Sohel Pathan on 03/07/2014 for Functional review points.

                // Start - Added by Sohel Pathan on 26/06/2014 for PL ticket #517
                $('#lblClientIdRequired').hide();
                $('#lblRoleIdRequired').hide();
                $('#lblManagerIdRequired').hide();
            }
            else {
                $("#ddlClientIdSelectBox .sbHolder").addClass("selectBoxError");
                $('#lblClientIdRequired').show();
            }
            // End - Added by Sohel Pathan on 26/06/2014 for PL ticket #517
        });
        // Start - Added by Sohel Pathan on 03/07/2014 for Functional review points.
        function loadManagers(clientId) {
            if (clientId != "" && clientId != "0" && clientId != "null") {
                $.getJSON("@Url.Content("~/User/GetManagers")", { id: clientId, UserId: $('#UserId').val() },
                function (managerData) {
                    var select = $("#ManagerId");
                    select.empty();
                    $.each(managerData, function (index, itemData) {
                        select.append($('<option/>', {
                            value: itemData.ManagerId,
                            text: itemData.ManagerName
                        }));
                    });
                    if ($("#ManagerId option").eq(0).val() != "") {
                        $("#ManagerId option").eq(0).before($("<option></option>").val("").text("Please select"));
                    }
                    if ($("#ManagerId option").eq(0).val() == undefined) {
                        $("#ManagerId").append($("<option></option>").val("").text("Please select"));
                    }
                    $("#ManagerId").val("");

                    $(".selectBox select").selectbox('detach');
                    $(".selectBox select").selectbox("attach");
                });
            }
        }
        // End - Added by Sohel Pathan on 03/07/2014 for Functional review points.
       
        
        // Start - Added by Sohel Pathan on 26/06/2014 for PL ticket #517
        if ($('#IsManager').val().toLowerCase() == 'true') {
            if (typeof $('#IsDeleted').val() != 'undefined') {
                if ($('#IsDeleted').val().toLowerCase() == 'yes')
                    $('#divNewManager').show();
                else
                    $('#divNewManager').hide();
            }
            else {
                $('#divNewManager').hide();
            }
        }
        else {
            $('#divNewManager').hide();
        }
        // End - Added by Sohel Pathan on 26/06/2014 for PL ticket #517
    });
    $('#Email').keyup(function () {
        $('#isEmailExist').html('');
    });
    $('#Email').blur(function () {
        $('#isEmailExist').html('');
        $('#isEmailExist').removeClass();

        var email = this.value;
        var currEmail = $("#CurrEmail").val();

        if ((currEmail != null && currEmail != '') && (email != null && email != '')) {
            if (email == currEmail) {
                return;
            }
        }

        if (email != null && email != '') {
            var pattern = new RegExp(/^\b[A-Z0-9._%-]+@@[A-Z0-9.-]+\.[A-Z]{2,4}\b$/i);
            if (!pattern.test(email)) {
                $('#isEmailExist').addClass('field-validation-error');
                $('#isEmailExist').html('@Common.objCached.NotValidEmail');
                return;
            }
            $.ajax(
            {
                type: "GET",
                cache: false,
                url: 'IsEmailExist',
                data: { email: this.value },
                dataType: "json",
                success: function (data) {
                    if (data == '1') {
                        $('#isEmailExist').addClass('field-validation-error');
                        $('#isEmailExist').html('@Common.objCached.EmailAlreadyExits');
                    }
                    else if (data == '0') {
                        $('#isEmailExist').addClass('field-validation-success');
                        $('#isEmailExist').html('@Common.objCached.EmailAvailable');
                    }
                    else {
                        $('#isEmailExist').html('');
                    }
                },
                error: function () {
                    $('#isEmailExist').html('');
                    GoToLogin();
                }
            });
        }
    });

    $("#filePrev").change(function () {
        var id = $(this).attr("id");
        var filesize = this.files[0].size;
        if (filesize > 1 * 1024 * 1024) {
            alert("@Common.objCached.InvalidProfileImage");
            return false;
        }
        ChangeFile("#userImage", "#filePrev");
    });

    var validExtensions = new Array(".jpg", ".png");
    function isValidExtension(ext) {
        var flag = false;
        for (var i = 0; i < validExtensions.length; i++) {
            if (validExtensions[i] == ext) {
                flag = true;
                break;
            }
        }
        return flag;
    }

    function ChangeFile(thumbID, fileID) {

        var imgTag = $(thumbID);
        var inputTag = $(fileID);

        var file = $(fileID).val();
        var ext = file.slice(file.lastIndexOf(".")).toLowerCase();
        if (!isValidExtension(ext)) {
            alert("@Common.objCached.InvalidProfileImage");
            return false;
        }
        $('<input>').attr({ type: $(inputTag).attr('type'), name: "name-clone" }).addClass("upload-clone").insertAfter(inputTag);
        $("<form>").attr({
            method: "post",
            id: "prototype",
            action: "@Url.Content("~/User/AjaxSubmit")"
        }).appendTo("body").hide();
        $('#prototype').attr((this.encoding ? 'encoding' : 'enctype'), 'multipart/form-data');
        $(inputTag).appendTo("#prototype").hide();
        $("#prototype").ajaxSubmit(function () {
            var d = new Date();
            $(imgTag)[0].src = "@Url.Content("~/User/ImageLoad?a=")" + d.getMilliseconds();
            $(inputTag).insertAfter('.upload-clone').show();
            $('.upload-clone').remove();
            $('#prototype').remove();

            return false;
        });
        return false;
    }

    // Start - Added by Sohel Pathan on 03/07/2014 for Functional review points.
    function loadNewManagers(clientId) {
        if (clientId != "" && clientId != "0" && clientId != "null") {
            $.getJSON("@Url.Content("~/User/GetManagers")", { id: clientId, UserId: $('#UserId').val() },
                function (managerData) {
                    var select = $("#NewManagerId");
                    select.empty();
                    $.each(managerData, function (index, itemData) {
                        select.append($('<option/>', {
                            value: itemData.ManagerId,
                            text: itemData.ManagerName
                        }));
                    });
                    if ($("#NewManagerId option").eq(0).val() != "") {
                        $("#NewManagerId option").eq(0).before($("<option></option>").val("").text("Please select"));
                    }
                    if ($("#NewManagerId option").eq(0).val() == undefined) {
                        $("#NewManagerId").append($("<option></option>").val("").text("Please select"));
                    }
                    $("#NewManagerId").val("");

                    $(".selectBox select").selectbox('detach');
                    $(".selectBox select").selectbox("attach");
                });
            }
    }
    // End - Added by Sohel Pathan on 03/07/2014 for Functional review points.

    $('#IsDeleted').change(function () {
            if ($('#IsManager').val().toLowerCase() == 'true') {
                if ($(this).val().toLowerCase() == 'yes') {
                    $('#divNewManager').show();
                    // Start - Added by Sohel Pathan on 03/07/2014 for Functional review points.
                    var ClientId = $('#ClientId').val();
                    loadNewManagers(ClientId);
                    // End - Added by Sohel Pathan on 03/07/2014 for Functional review points.
                }
                else {
                    $('#divNewManager').hide();
                    $('#lblNewManagerIdRequired').hide();   // Added by Sohel Pathan on 26/06/2014 for PL ticket #517
                }
            }
        //}
    });
    // End - Added by :- Sohel Pathan on 17/06/2014 for PL ticket #517

    $("#RoleId").change(function () {
        var RoleId = $(this).val();
        if (RoleId != "") {
            $("#ddlRoleIdSelectBox .sbHolder").removeClass("selectBoxError");
            $('#lblRoleIdRequired').hide();
        }
        else {
            $("#ddlRoleIdSelectBox .sbHolder").addClass("selectBoxError");
            $('#lblRoleIdRequired').show();
        }
    });

    $("#ManagerId").change(function () {
        var ManagerId = $(this).val();
        if (ManagerId != "") {
            $("#ddlManagerIdSelectBox .sbHolder").removeClass("selectBoxError");
            $('#lblManagerIdRequired').hide();
        }
        else {
            $("#ddlManagerIdSelectBox .sbHolder").addClass("selectBoxError");
            $('#lblManagerIdRequired').show();
        }
    });

    $("#NewManagerId").change(function () {
        var NewManagerId = $(this).val();
        if (NewManagerId != "") {
            $("#ddlNewManagerIdSelectBox .sbHolder").removeClass("selectBoxError");
            $('#lblNewManagerIdRequired').hide();
        }
        else {
            $("#ddlNewManagerIdSelectBox .sbHolder").addClass("selectBoxError");
            $('#lblNewManagerIdRequired').show();
        }
    });

    // End - Added by Sohel Pathan on 26/06/2014 for PL ticket #517
</script>