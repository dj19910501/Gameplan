@model RevenuePlanner.Models.PlanModel
@using RevenuePlanner.Helpers
@{
    ViewBag.Title = "Plan Definition";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string strPlanid = Convert.ToString(Model.PlanId);
    bool IsPlanCreateAuthorized = (bool)ViewBag.IsPlanCreateAuthorized;
    bool IsBusinessUnitEditable = (bool)ViewBag.IsBusinessUnitEditable;    
    ViewBag.strplanid = strPlanid;//Added by Mitesh Vaishnav on 11/07/2014 for functional review point 49   
    ViewBag.PageTitle = "Create";//Added by Mitesh Vaishnav on 11/07/2014 for functional review point 49   
}

@section nlFormContent{
    <link rel="stylesheet" href="@Url.Content("~/Content/css/NaturalLanguageForm/default.css")" type="text/css" />
    <link rel="stylesheet" href="@Url.Content("~/Content/css/NaturalLanguageForm/component.css")" type="text/css" />
    <script type="text/javascript" src="@Url.Content("~/Scripts/js/NaturalLanguageForm/modernizr.custom.js")"></script>
}

@Html.Hidden("hdnPlanId", strPlanid, new { id = "hdnPlanId" })
@Html.Hidden("IsBusinessUnitEditable", IsBusinessUnitEditable)

@section Sidebar
{
    @Html.Partial("~/Views/Plan/_plan.cshtml")
}


@using (Html.BeginForm("SavePlan", "Plan", FormMethod.Post, new { @name = "SavePlanForm" }))
{    
   
    <!--Error message-->
    <div id="errorMessage" class="alert alert-error hide message-position-small">
        <a class="close" id="aclose">×</a>
        <strong>Error! </strong><span id="spanMessageError">Make sure all fields are filled and try again.</span>
    </div>
    <!--Error message-->
            
                
    
    <table class="light-blue-background margin5">
        <tbody>

            <tr>
                <td>
                    <div id="nl-form" class="nl-form nomargin pull-left form-plan-mini padding-assortment">
                        <div class="bold font_size16">1. Plan definition</div>
                        I'm using the 
					    @*@Html.DropDownList("ddlModel", (SelectList)TempData["selectList"])*@
                        @{
                        if (strPlanid == "" || strPlanid == "0")//if (strPlanid == "" || strPlanid == "0" || Model.IsDirector)
                        {
                            @Html.DropDownListFor(m => m.ModelId, (SelectList)TempData["selectList"], new { datadefault = "SelectModel", @class = "myValue", placeholder = @Model.ModelId })
                        }
                        else
                        {      
                            <span id="spandef">@Model.ModelTitle</span>
                        }
                        }
                        model to create a new plan called						
														@Html.TextBoxFor(model => model.Title, new { placeholder = @Model.Title, datasubline = "For example: <em>2014 North American Events</em>", datadefault = "Title", maxlength = "50", @class = "myValue" })
                        in
                        @{
                        if(strPlanid == "" || strPlanid == "0"  || (bool)ViewBag.IsBusinessUnitEditable == true)
                        {
                         @Html.DropDownListFor(m => m.Year, (SelectList)TempData["selectYearList"], new { placeholder = @Model.Year, @class = "myValue" })
                        }
                        else
                        {
                            <span id="spandef">@Model.Year</span>
                        }
                        }
                        that generates 
														@Html.TextBoxFor(model => model.MQls, new { placeholder = @Model.MQls, datasubline = "For example: <em>200</em>", datadefault = "MQL", datamask = "ddd-dddd", id = "txtMQL", formatType = "priceValue", maxlength = @RevenuePlanner.Helpers.Common.maxLengthPriceValue, @class = "myValueFormat" })
                        @Html.LabelForMQL("MQL") with a budget of
														@Html.TextBoxFor(model => model.Budget, new { placeholder = @Model.Budget, datasubline = "For example: <em>$800,000</em>", datadefault = "Budget", formatType = "currency_dollar", maxlength = @RevenuePlanner.Helpers.Common.maxLengthDollar, id = "txtBudget", @class = "myValueFormat" }).
													    <div class="nl-overlay"></div>
                        <!--To call js for forms animations-->
                        <script type="text/javascript" src="@Url.Content("~/Scripts/js/NaturalLanguageForm/nlform.js")"></script>
                        <script>
                            var nlform = new NLForm(document.getElementById('nl-form'));
                            // Start - Added by Sohel Pathan on 02/07/2014 for PL ticket #563 to apply custom restriction logic on Business Units - isViewOnly parameter added
                            //if ($('#IsBusinessUnitEditable').val().toLowerCase() == 'false') {
                            //    $('#nl-form :input').each(function () {
                            //        if ($(this).attr('type') == 'text') {
                            //            $(this).attr('readonly', 'readonly');
                            //        }
                            //    });
                            //}
                            // End - Added by Sohel Pathan on 02/07/2014 for PL ticket #563 to apply custom restriction logic on Business Units - isViewOnly parameter added
                        </script>
                    </div>
                </td>
                <td class="width100px bg-content-blue">
                    @*<button class="btn btn-blue text-shadow-blue source-sans-proregular padding-side20" type="button">Next </button>*@
                    <input type="button" value="Next" id="button-save" class="btn btn-blue text-shadow-blue source-sans-proregular padding-side20" />
                </td>
                @Html.Hidden("Planid", strPlanid)
                @Html.HiddenFor(model => model.ModelId)
                @Html.HiddenFor(model => model.PlanId)
            </tr>
        </tbody>
    </table>
          

}



<script type="text/javascript">

    $(document).ready(
      function () {
          var hdnPlanId = $("#hdnPlanId").val();
          if (hdnPlanId != 0) {
              $('.changes').html('');
              var url = '@Url.Content("~/Home/LoadChangeLog")';
              $('.changes').load(url + '?objectId=' + "@RevenuePlanner.Helpers.Sessions.PlanId");
          }
          // Start - Added by Sohel Pathan on 02/07/2014 for PL ticket #563 to apply custom restriction logic on Business Units
          if ($('#IsBusinessUnitEditable').val().toLowerCase() == 'false') {
              $('#form1 :input').each(function () {
                  if ($(this).attr('type') == 'text' || $(this).attr('type') == 'textarea' || $(this).attr('type') == 'select') {
                      $(this).attr('readonly', 'readonly');
                  }
              });
              $("#button-save").hide();
          }
          else {
              $("#button-save").show();
          }
          // End - Added by Sohel Pathan on 02/07/2014 for PL ticket #563 to apply custom restriction logic on Business Units

          $('#BtnGroup').click(function (e) {
              //Dharmraj 11July2014 : 547 (Warning of data loss during new plan creation)
              @*var url = '@Url.Content("~/Plan/Create/0")';
              window.location.href = url;*@
              displayconfirm('@Url.Content("~/Plan/Create/0")');
          });

          $("#button-save").click(function () {

              var isError = false;
              $('.nl-field').each(function () {
                  if ($(this).next().attr('datadefault') == "Title") {
                      var tValue = $(this).children('a').text();

                      if (tValue == '' || tValue == "Plan Title") {
                          $(this).children('a').addClass("error-form");
                          isError = true;
                      }
                      else {
                          $(this).children('a').removeClass("error-form");
                      }

                  }
                  else if ($(this).next().attr('datadefault') == "MQL") {
                      var tValue = $(this).children('a').text();
                      if (tValue == '' || tValue == '0') {
                          $(this).children('a').addClass("error-form");
                          isError = true;
                      }
                      else {
                          $(this).children('a').removeClass("error-form");
                      }
                  }
                  else if ($(this).next().attr('datadefault') == "Budget") {
                      var tValue = $(this).children('a').text();
                      if (tValue == '' || tValue == '$0') {
                          $(this).children('a').addClass("error-form");
                          isError = true;
                      }
                      else {
                          $(this).children('a').removeClass("error-form");
                      }
                  }
                  else if ($(this).next().attr('datadefault') == "SelectModel") {
                      if ($("#Planid").val() == '' || $("#Planid").val() == '0') {
                          var tValue = $(this).children('a').text();
                          if (tValue == 'select') {
                              $(this).children('a').addClass("error-form");
                              isError = true;

                          }
                          else {
                              $(this).children('a').removeClass("error-form");
                          }
                      }
                  }

              });

              if (isError) {
                  $("#errorMessage").css("display", "block");
                  $("#spanMessageError").empty();
                  $("#spanMessageError").text("Make sure all fields are filled and try again.");
              }
              else {
                  $("#errorMessage").css("display", "none");
              }

              //CheckUserSession("#button-save", true);
              //if (reason == 'user') {
              //    return false;
              //}
              if (!isError) {
                  $("#txtMQL").val(ReplaceCC($("#txtMQL").val()));
                  $("#txtBudget").val(ReplaceCC($("#txtBudget").val()));
                  $.ajax({
                      type: 'POST',
                      url: '@Url.Content("~/Plan/SavePlan")',
                      data: $("form[name=SavePlanForm]").serialize(),
                      success: function (data) {
                          if (data != 'undefined') {
                              if (data.id == -1) {
                                  $("#errorMessage").css("display", "block");
                                  $("#spanMessageError").empty();
                                  $("#spanMessageError").text(data.imsg);
                                  return false;
                              }
                              else if (data.id != 0) {
                                  window.location.href = data.redirect;
                                  return;
                              }
                              else {
                                  $("#errorMessage").css("display", "block");
                                  $("#spanMessageError").empty();
                                  $("#spanMessageError").text("@RevenuePlanner.Helpers.Common.objCached.InvalidError");
                                  return false;
                              }
                      }
                      },
                      error: function () {
                          GoToLogin();
                          $("#errorMessage").css("display", "block");
                          $("#spanMessageError").empty();
                          return false;
                      }
                  });
          }
              return isError;
          });

          // $("#content_wraper").removeClass("span10 all-height").addClass("span10 padding-top40");
      });


</script>
<script type="text/javascript">
    //Manoj Start 28Jan2014 : Bug-12 (User can lose data via navigation in application)
    //function to check myValue attribute values and input values that any changes made?
    function isDataChanged() {
        var changed = false;
        $('.myValue').each(function () {
            var iv = $(this).attr("placeholder");
            if ($(this).val() != iv) {
                changed = true;
            }
        });
        $('.myValueFormat').each(function () {
            var iv = $(this).attr("placeholder");
            if (ReplaceCC($(this).val()) != ReplaceCC(iv)) {
                changed = true;
            }
        });
        return changed;
    }
    $(document).on("click", "#confirmClose", function (e) {
        $("#errorMessage").slideUp(3000);
    });
    $(document).on("click", "#aApplyToCalender", function (e) {
        displayconfirm('@Url.Action("ApplyToCalendar", "Plan")');
    });
    $(document).on("click", "#LeftNavCampaigns", function (e) {
        displayconfirm('@Url.Action("Assortment", "Plan")');
    });
    function displayconfirm(strURL) {
        if (isDataChanged()) {
            $('#errorMessage').html("<strong>Error! </strong> You have unsaved changes. Do you wish to leave this page and lose your work?<br><a style='font-weight:bold;color:gray;' href='" + strURL + "'>Ok</a>&nbsp;&nbsp;<a style='font-weight:bold;color:gray;' id='confirmClose' href='#'>Cancel</a>");
            $("#errorMessage").slideDown(3000);
        }
        else {
            window.location.href = strURL;
        }
    }
    //Manoj End 28Jan2014 : Bug-12 (User can lose data via navigation in application)

    //Dharmraj Start 7July2014 : 547 (Warning of data loss during tactic/Program/Campaign creation)
    $("#header a").not("#ContactSupport").click(function () {
        //alert($(this).attr('href'));
        if (isDataChanged()) {
            displayconfirm($(this).attr('href'));
            return false;
        }
        else {
            return true;
        }
    });
    //Dharmraj End 7July2014 : 547 (Warning of data loss during tactic/Program/Campaign creation)

</script>
