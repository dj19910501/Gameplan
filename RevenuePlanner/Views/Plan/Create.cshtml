@model RevenuePlanner.Models.PlanModel
@using RevenuePlanner.Helpers
@{
    ViewBag.Title = "Plan Definition";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string strPlanId = Convert.ToString(Model.PlanId);
    bool IsPlanCreateAuthorized = (bool)ViewBag.IsPlanCreateAuthorized;
    bool IsBusinessUnitEditable = (bool)ViewBag.IsBusinessUnitEditable;    
    ViewBag.strplanid = strPlanId;//Added by Mitesh Vaishnav on 11/07/2014 for functional review point 49   
    ViewBag.PageTitle = "Create";//Added by Mitesh Vaishnav on 11/07/2014 for functional review point 49   
    bool isBackFromAssortment = false;//Added by Mitesh vaishnav on 25/07/2014 for PL ticket 619
    if (TempData["IsBackFromAssortment"] != null)
    {
        isBackFromAssortment = (bool)TempData["IsBackFromAssortment"];
    }
}

@section nlFormContent{
    <link rel="stylesheet" href="@Url.Content("~/Content/css/NaturalLanguageForm/default.css")" type="text/css" />
<link rel="stylesheet" href="@Url.Content("~/Content/css/NaturalLanguageForm/component.css")" type="text/css" />
    <script type="text/javascript" src="@Url.Content("~/Scripts/js/NaturalLanguageForm/modernizr.custom.js")"></script>
}

@Html.Hidden("hdnPlanId", strPlanId, new { id = "hdnPlanId" })
@Html.Hidden("IsBusinessUnitEditable", IsBusinessUnitEditable)

@section Sidebar
{
    @Html.Partial("~/Views/Plan/_plan.cshtml")
}


@using (Html.BeginForm("SavePlan", "Plan", FormMethod.Post, new { @name = "SavePlanForm" }))
{    
   
    <!--Error message-->
    <div id="errorMessage" class="alert alert-error hide message-position-small">
        <a class="close" id="aclose">×</a>
        <strong>Error! </strong><span id="spanMessageError">@Common.objCached.ValidateForEmptyField</span>
    </div>
    <!--Error message-->
            
    <div id="divErrLessBudget" class="alert alert-error hide message-position-small">
        <a class="close" id="aclose">×</a>
        <strong>Error! </strong><span>@Common.objCached.ErrMsgLessPlanBudget</span>
    </div>
    
    <table class="light-blue-background margin5">
        <tbody>
            <tr>
                <td>
                    <div id="nl-form" class="nl-form nomargin pull-left form-plan-mini padding-assortment">
                        <div class="bold font_size16">1. Plan definition</div>
                        <div id="divPlanDefinationEnabled">
                        I'm using the 
					    @*@Html.DropDownList("ddlModel", (SelectList)TempData["selectList"])*@
                        @{
                        if (strPlanId == "" || strPlanId == "0")//if (strPlanId == "" || strPlanId == "0" || Model.IsDirector)
                        {
                            @Html.DropDownListFor(m => m.ModelId, (SelectList)TempData["selectList"], new { datadefault = "SelectModel", @class = "myValue calculateBudget", placeholder = @Model.ModelId })
                            <span id="ModelTitle" class="source-sans-proregular"></span>
                        }
                        else
                        {      
                            <span id="ModelTitle" class="source-sans-proregular">@Model.ModelTitle</span>
                        }
                        }
                        model to create a plan called						
						@Html.TextBoxFor(model => model.Title, new { placeholder = @Model.Title, datasubline = "For example: <em>2014 North American Events</em>", datadefault = "Title", maxlength = "50", @class = "myValue" })
                        in
                        @{
                        if(strPlanId == "" || strPlanId == "0"  || (bool)ViewBag.IsBusinessUnitEditable == true)
                        {
                         @Html.DropDownListFor(m => m.Year, (SelectList)TempData["selectYearList"], new { placeholder = @Model.Year, @class = "myValue" })
                        }
                        else
                        {
                            <span id="spandef">@Model.Year</span>
                        }
                        }
                        @* Start - Modified by Sohel Pathan on 15/07/2014 for PL ticket #566 *@
                        with a
                        @{
                        if (strPlanId == "" || strPlanId == "0" || (bool)ViewBag.IsBusinessUnitEditable == true)
                        {
                            @Html.DropDownListFor(m => m.GoalType, (SelectList)TempData["goalTypeList"], "select", new { datadefault = "SelectGoalType", @class = "myValue calculateBudget", placeholder = @Model.GoalType})
                        }
                        else
                        {
                            <span id="spandef">@Model.GoalType</span>
                        }
                        }
                        goal of
                        <span id="revenueSign"> $ </span>
                        @Html.TextBoxFor(model => model.GoalValue, new { placeholder = @Model.GoalValue, datasubline = "For example: <em>800,000</em>", datadefault = "GoalValue", datamask = "ddd-dddd", formatType = "priceValue", maxlength = @RevenuePlanner.Helpers.Common.maxLengthPriceValue, @class = "myValueFormat" })    
                        and a budget of
                        @Html.TextBoxFor(model => model.Budget, new { placeholder = @Model.Budget, datasubline = "For example: <em>$800,000</em>", datadefault = "Budget", formatType = "currency_dollar", maxlength = @RevenuePlanner.Helpers.Common.maxLengthDollar, id = "txtBudget", @class = "myValueFormat" })
                        allocated by
                        @{
                        if (strPlanId == "" || strPlanId == "0" || (bool)ViewBag.IsBusinessUnitEditable == true)    
                        {
                            @Html.DropDownListFor(m => m.AllocatedBy, new SelectList((System.Collections.IEnumerable)TempData["allocatedByList"], "Value", "Text"), "select", new { datadefault = "SelectAllocatedBy", @class = "myValue", placeholder = @Model.AllocatedBy})
                        }
                        else
                        {
                            <span id="spanAllocatedBy">@Model.AllocatedBy</span>
                        }
                        }.
                        <div class="nl-overlay"></div>
                        </div>
                        <div id="divPlanDefinationDisabled">
                            I'm using the 
                            <span id="disabledModelTitle" class="source-sans-proregular"></span> 
                            model to create a plan called 
                            <span id="disabledPlanTitle" class="source-sans-proregular"></span> in 
                            <span id="disabledPlanYear" class="source-sans-proregular"></span> 
                            with a
                            <span id="disabledGoalType" class="source-sans-proregular"></span>
                            goal of
                            <span id="disabledGoalValue" class="source-sans-proregular"></span>
                            and a budget of
                            <span id="disabledBudgetValue" class="source-sans-proregular"></span>
                            allocated by
                            <span id="disabledAllocatedBy" class="source-sans-proregular"></span>.
                        </div>
                        <div id="divBudgetSummary">
                            Based on my goal, this plan will require
                            <span id="input1" class="source-sans-prosemibold"></span>
                            <span id="msg1" class="source-sans-prosemibold"></span>
                            <span id="conjuntionWord">and </span>
                            <span id="input2" class="source-sans-prosemibold"></span>
                            <span id="msg2" class="source-sans-prosemibold"></span>
                            with an<span class="source-sans-prosemibold"> average deal size of</span>
                            <span id="averageDealSize" class="source-sans-prosemibold">@Model.AverageDealSize</span>.
                        </div>
                        @* End - Modified by Sohel Pathan on 15/07/2014 for PL ticket #566 *@
                        <!--To call js for forms animations-->
                        <script type="text/javascript" src="@Url.Content("~/Scripts/js/NaturalLanguageForm/nlform.js")"></script>
                        <script>
                            var nlform = new NLForm(document.getElementById('nl-form'));
                        </script>
                    </div>
                </td>
                <td class="width100px bg-content-blue">
                    <input type="button" value="Next" id="button-save" class="btn btn-blue text-shadow-blue source-sans-proregular padding-side20" />
                    <input type="button" value="Back" id="button-back" class="btn btn-gray text-shadow-blue source-sans-proregular padding-side20" />
                </td>
                @*@Html.Hidden("PlanId", strPlanId)*@           @* Commented By Sohel Pathan on 28/07/2014 for PL ticket #597 as PlanId ID conflict because used twice. *@
                @Html.HiddenFor(model => model.ModelId)
                @Html.HiddenFor(model => model.PlanId)
                @Html.HiddenFor(model => model.TotalAllocatedCampaignBudget)
            </tr>
        </tbody>
    </table>
          

}

<div style="display:none;" id="divPlanBudgetAllocation" class="light-blue-background margin5 padding15 padding-bottom0">
	<div class="gray-title-steps source-sans-probold cf">
		<span class="pull-left width60">2. Allocate Plan Budget</span>		
		<div class="budget-section">
            <div class="white-bg" style="max-height:150px;height:auto;">
                <div id="divMonthQuarterAllocation">
                    <div id="divMonthlyBudget">
                        <div class="budget-month">
                            <span class="month">Jan</span>
                            <input id="MY1" placeholder="---" maxlength="12" class="backgroundC6EBF3 text-align-right width75px input-table priceValue"/>
                            <input type="hidden" id="hdnMY1" value="0" />
                        </div>
                        <div class="budget-month">
                            <span class="month">Feb</span>
                            <input id="MY2" placeholder="---" maxlength="12" class="backgroundC6EBF3 text-align-right width75px input-table priceValue"/>
                            <input type="hidden" id="hdnMY2" value="0" />
                        </div>
                        <div class="budget-month">
                            <span class="month">Mar</span>
                            <input id="MY3" placeholder="---" maxlength="12" class="backgroundC6EBF3 text-align-right width75px input-table priceValue"/>
                            <input type="hidden" id="hdnMY3" value="0" />
                        </div>
                        <div class="budget-month">
                            <span class="month">Apr</span>
                            <input id="MY4" placeholder="---" maxlength="12" class="backgroundC6EBF3 text-align-right width75px input-table priceValue"/>
                            <input type="hidden" id="hdnMY4" value="0" />
                        </div>
                        <div class="budget-month">
                            <span class="month">May</span>
                            <input id="MY5" placeholder="---" maxlength="12" class="backgroundC6EBF3 text-align-right width75px input-table priceValue"/>
                            <input type="hidden" id="hdnMY5" value="0" />
                        </div>
                        <div class="budget-month">
                            <span class="month">Jun</span>
                            <input id="MY6" placeholder="---" maxlength="12" class="backgroundC6EBF3 text-align-right width75px input-table priceValue"/>
                            <input type="hidden" id="hdnMY6" value="0" />
                        </div>
                        <div class="budget-month">
                            <span class="month">Jul</span>
                            <input id="MY7" placeholder="---" maxlength="12" class="backgroundC6EBF3 text-align-right width75px input-table priceValue"/>
                            <input type="hidden" id="hdnMY7" value="0" />
                        </div>
                        <div class="budget-month">
                            <span class="month">Aug</span>
                            <input id="MY8" placeholder="---" maxlength="12" class="backgroundC6EBF3 text-align-right width75px input-table priceValue"/>
                            <input type="hidden" id="hdnMY8" value="0" />
                        </div>
                        <div class="budget-month">
                            <span class="month">Sep</span>
                            <input id="MY9" placeholder="---" maxlength="12" class="backgroundC6EBF3 text-align-right width75px input-table priceValue"/>
                            <input type="hidden" id="hdnMY9" value="0" />
                        </div>
                        <div class="budget-month">
                            <span class="month">Oct</span>
                            <input id="MY10" placeholder="---" maxlength="12" class="backgroundC6EBF3 text-align-right width75px input-table priceValue"/>
                            <input type="hidden" id="hdnMY10" value="0" />
                        </div>
                        <div class="budget-month">
                            <span class="month">Nov</span>
                            <input id="MY11" placeholder="---" maxlength="12" class="backgroundC6EBF3 text-align-right width75px input-table priceValue"/>
                            <input type="hidden" id="hdnMY11" value="0" />
                        </div>
                        <div class="budget-month">
                            <span class="month">Dec</span>
                            <input id="MY12" placeholder="---" maxlength="12" class="backgroundC6EBF3 text-align-right width75px input-table priceValue"/>
                            <input type="hidden" id="hdnMY12" value="0" />
                        </div>
                        <div class="budget-month">
                            <span class="month">@Common.UnallocatedBudgetLabelText</span>
                            <input id="unallocatedBudget" placeholder="---" maxlength="12" readonly="true" class="backgroundC6EBF3 text-align-right width75px input-table priceValue gray-input"/>
                    </div>
                    </div>
                    <div id="divQuarterlyBudget" style="left: 0px;padding-bottom:10px;" class="mCSB_container mCS_no_scrollbar">
                        <div class="budget-quarters">
                            <span class="month">Q1</span>
                            <input id="QY1" placeholder="---" maxlength="12" class="backgroundC6EBF3 text-align-right width75px input-table priceValue"/>
                            <input type="hidden" id="hdnQY1" value="0" />
                        </div>
                        <div class="budget-quarters">
                            <span class="month">Q2</span>
                            <input id="QY4" placeholder="---" maxlength="12" class="backgroundC6EBF3 text-align-right width75px input-table priceValue"/>
                            <input type="hidden" id="hdnQY4" value="0" />
                        </div>
                        <div class="budget-quarters">
                            <span class="month">Q3</span>
                            <input id="QY7" placeholder="---" maxlength="12" class="backgroundC6EBF3 text-align-right width75px input-table priceValue"/>
                            <input type="hidden" id="hdnQY7" value="0" />
                        </div>
                        <div class="budget-quarters">
                            <span class="month">Q4</span>
                            <input id="QY10" placeholder="---" maxlength="12" class="backgroundC6EBF3 text-align-right width75px input-table priceValue"/>
                            <input type="hidden" id="hdnQY10" value="0" />
                        </div>
                        <div class="budget-quarters">
                            <span class="month">@Common.UnallocatedBudgetLabelText</span>
                            <input id="unallocatedBudget" placeholder="---" maxlength="12" readonly="true" class="backgroundC6EBF3 text-align-right width75px input-table priceValue gray-input"/>
                    </div>
                    </div>
                </div>
                <div class="font30 alignCenter" id="divDefaultBudget">
                    @Common.objCached.DefaultPlanAllocationMessage
				</div>					
            </div>
            <div class="budget-result source-sans-prolight">
                <p>
                    <span id="spnThisMonth">Allocated Campaigns Budget (this month):</span>
                    <span id="spnThisQuarter">Allocated Campaigns Budget (this quarter):</span>
                    <span id="spnCampaignAllocatedBudget" class="source-sans-proregular">$0</span></p>
                <p>Total Allocated:<span id="spnTotalAllocatedBudget" class="source-sans-proregular">$0</span></p>
                <p>Total Budgeted:<span id="spnTotalBudget" class="source-sans-proregular"></span></p>
            </div>
            <div id="divErrMoreAllocation" class="alert alert-error error-msg">
                <a class="close">×</a>
                <p class="source-sans-probold">@Common.objCached.ErrMsgBudgetAllocationExceeds</p>
            </div>
            <div id="divErrCampaignBudgetAllocation" class="alert alert-error error-msg">
                <a class="close ErrCampaignBudgetAllocation">×</a>
                <p class="source-sans-probold">@Common.objCached.ErrMsgLessCampaignBudget</p>
            </div>
        </div>
	</div>
</div>
<div class="padding-content" style="padding-bottom:155px;padding-top:15px;">
    <input type="button" value="Save &amp; Continue" id="button-saveContinue" style="display:none;" class="btn btn-blue text-shadow-blue source-sans-proregular padding-side20" />
</div>

<script type="text/javascript">
    
    $(document).ready(
      function () {
          
          //$(".white-bg").mCustomScrollbar({
          //    scrollButtons: {
          //        enable: true
          //    },
          //    horizontalScroll: true,
          //    advanced: { autoExpandHorizontalScroll: true, updateOnContentResize: false }
          //});

          var hdnPlanId = $("#hdnPlanId").val();
          if (hdnPlanId != 0) {
              $('.changes').html('');
              var url = '@Url.Content("~/Home/LoadChangeLog")';
              $('.changes').load(url + '?objectId=' + "@RevenuePlanner.Helpers.Sessions.PlanId");
          }
          // Start - Added by Sohel Pathan on 02/07/2014 for PL ticket #563 to apply custom restriction logic on Business Units
          if ($('#IsBusinessUnitEditable').val().toLowerCase() == 'false') {
              $('#form1 :input').each(function () {
                  if ($(this).attr('type') == 'text' || $(this).attr('type') == 'textarea' || $(this).attr('type') == 'select') {
                      $(this).attr('readonly', 'readonly');
                  }
              });
              $("#button-save").hide();
          }
          else {
              $("#button-save").show();
          }
          // End - Added by Sohel Pathan on 02/07/2014 for PL ticket #563 to apply custom restriction logic on Business Units

          if ($("#GoalType").val().toLowerCase() == "revenue") {
              $('#revenueSign').show();
          }
          else {
              $('#revenueSign').hide();
          }

          $('#BtnGroup').click(function (e) {
              //Dharmraj 11July2014 : 547 (Warning of data loss during new plan creation)
              @*var url = '@Url.Content("~/Plan/Create/0")';
              window.location.href = url;*@
              @*displayconfirm('@Url.Content("~/Plan/Create/0")');*@

              //#599 Added By Kalpesh Sharma : Plan: Unable to Duplicate Plan 
              if ($(this).html().toLowerCase() == "duplicate") {
                  CheckUserSession("#BtnGroup", true);
                  if (reason == 'user') {
                      return false;
                  }
                  DuplicatePlan();
              }
              else {
                  var url = '@Url.Content("~/Plan/Create/0")';
                    window.location.href = url;
                }

          });

          //#599 Added By Kalpesh Sharma : Plan: Unable to Duplicate Plan 
          function DuplicatePlan() {
              $.ajax({
                  type: 'POST',
                  url: '@Url.Content("~/Plan/DuplicatePlan/")',
            dataType: "json",
            success: function (data) {
                if (data.isSuccess == true) {
                    var url = '@Url.Content("~/Home/Index?ActiveMenu=")' + $('#ActiveMenu').val() + '&currentPlanId=' + data.planId;
                    window.location.href = url;
                }
                else {
                    alert('Error');
                }
            }
        });
    }

 $("#button-save").click(function () {

              var isError = false;
              $('.nl-field').each(function () {
                  if ($(this).next().attr('datadefault') == "Title") {
                      var tValue = $(this).children('a').text();

                      if (tValue == '' || tValue == "Plan Title") {
                          $(this).children('a').addClass("error-form");
                          isError = true;
                      }
                      else {
                          $(this).children('a').removeClass("error-form");
                      }
                  }
                  else if ($(this).next().attr('datadefault') == "GoalValue") { @* Modified by Sohel Pathan on 15/07/2014 for PL ticket #566 *@
                      var tValue = $(this).children('a').text();
                      if (tValue == '' || tValue == '0') {
                          $(this).children('a').addClass("error-form");
                          isError = true;
                      }
                      else {
                          $(this).children('a').removeClass("error-form");
                      }
                  }
                  else if ($(this).next().attr('datadefault') == "Budget") {
                      var tValue = $(this).children('a').text();
                      if (tValue == '' || tValue == '$0') {
                          $(this).children('a').addClass("error-form");
                          isError = true;
                      }
                      else {
                          $(this).children('a').removeClass("error-form");
                      }
                  }
                  else if ($(this).next().attr('datadefault') == "SelectModel") {
                          var tValue = $(this).children('a').text();
                          if (tValue == 'select') {
                              $(this).children('a').addClass("error-form");
                              isError = true;

                          }
                          else {
                              $(this).children('a').removeClass("error-form");
                          }
                  }
                  @* Start - Added by Sohel Pathan on 15/07/2014 for PL ticket #566 *@
                  else if ($(this).next().attr('datadefault') == "SelectGoalType") {
                          var tValue = $(this).children('a').text();
                          if (tValue == 'select') {
                              $(this).children('a').addClass("error-form");
                              isError = true;

                          }
                          else {
                              $(this).children('a').removeClass("error-form");
                          }
                  }
                  else if ($(this).next().attr('datadefault') == "SelectAllocatedBy") {
                          var tValue = $(this).children('a').text();
                          if (tValue == 'select') {
                              $(this).children('a').addClass("error-form");
                              isError = true;

                          }
                          else {
                              $(this).children('a').removeClass("error-form");
                          }
                  }
                  @* End - Added by Sohel Pathan on 15/07/2014 for PL ticket #566 *@
              });

              if (isError) {
                  $("#errorMessage").css("display", "block");
                  $("#spanMessageError").empty();
                  $("#spanMessageError").text("@Common.objCached.ValidateForEmptyField");
                  return false;
              }
              else {
                  $("#errorMessage").css("display", "none");
              }

              var TotalAllocatedCampaignBudget = $('#TotalAllocatedCampaignBudget').val();
              var totalBudget = parseInt(ReplaceCC($("#txtBudget").val()));
              if(TotalAllocatedCampaignBudget > totalBudget)
              {
                  $('#divErrLessBudget').css("display", "block");
                  isError = true;
              }
              else{
                  $("#divErrLessBudget").css("display", "none");
              }
     
              if (!isError) {
                  $("#GoalValue").val(ReplaceCC($("#GoalValue").val()));    @* Modified by Sohel Pathan on 15/07/2014 for PL ticket #566 *@
                  $("#txtBudget").val(ReplaceCC($("#txtBudget").val()));
                  var uId = $(window).attr('name');     // Added by Sohel Pathan on 07/08/2014 for PL ticket #672
                  $.ajax({
                      type: 'POST',
                      url: '@Url.Content("~/Plan/SavePlan")',
                      data: $("form[name=SavePlanForm]").serialize() + '&UserId=' + uId,    // Modified by Sohel Pathan on 07/08/2014 for PL ticket #672
                      success: function (data) {
                          if (data != 'undefined') {
                              if (data.returnURL != 'undefined' && data.returnURL == '#') {
                                  window.location = '@Url.Content("~/Login/Index")';
                              }
                              else {
                                  if (data.id == -1) {
                                      $("#errorMessage").css("display", "block");
                                      $("#spanMessageError").empty();
                                      $("#spanMessageError").text(data.imsg);
                                      $('#divPlanBudgetAllocation').hide();
                                      $('#button-back').hide();
                                      $('#button-saveContinue').hide();
                                      $("#divErrLessBudget").css("display", "none");
                                      return false;
                                  }
                                  else if (data.id != 0) {
                                      $('#PlanId').val(data.id.toString());
                                      $('#button-back').css('display', 'block');
                                      $('#button-save').hide();
                                      $('#divPlanBudgetAllocation').show();
                                      $('#button-saveContinue').show();
                                      $('#divPlanDefinationEnabled').hide();
                                      $('#divPlanDefinationDisabled').show();
                                      $('#ModelTitle').html($('#divPlanDefinationEnabled').find('#ModelTitle').html());
                                      renderDisablePlanDefinationSection();
                                      $('#divErrCampaignBudgetAllocation').hide();
                                      $('#divErrMoreAllocation').hide();
                                      var totalBudget = FormatCurrency($("#txtBudget").val(), false);
                                      if ($('#AllocatedBy').val().toLowerCase() == '@Enums.PlanAllocatedByList[Enums.PlanAllocatedBy.defaults.ToString()].ToString().ToLower()') {
                                          $('#divDefaultBudget').show();
                                          $('#spnTotalAllocatedBudget').html('---');
                                          $('#spnTotalBudget').html(totalBudget);
                                          $('#divMonthQuarterAllocation').hide();
                                          $('#unallocatedBudget').val(FormatCommas($("#txtBudget").val().toString(), false));
                                          $('#unallocatedBudget').removeClass('error-text');
                                          $('#spnCampaignAllocatedBudget').html('---');
                                          $('#spnThisQuarter').hide();
                                          $('#spnThisMonth').show();
                                      }
                                      else if ($('#AllocatedBy').val().toLowerCase() == '@Enums.PlanAllocatedByList[Enums.PlanAllocatedBy.months.ToString()].ToString().ToLower()') {
                                          $('#divMonthQuarterAllocation').show();
                                          $('#divDefaultBudget').hide();
                                          $('#divMonthlyBudget').show();
                                          $('#spnTotalBudget').html(totalBudget);
                                          $('#divQuarterlyBudget').hide();
                                          $('#divMonthlyBudget').find('#unallocatedBudget').val(FormatCommas($("#txtBudget").val().toString(), false));
                                          $('#spnThisQuarter').hide();
                                          $('#spnThisMonth').show();
                                      }
                                      else if ($('#AllocatedBy').val().toLowerCase() == '@Enums.PlanAllocatedByList[Enums.PlanAllocatedBy.quarters.ToString()].ToString().ToLower()') {
                                          $('#divMonthQuarterAllocation').show();
                                          $('#divDefaultBudget').hide();
                                          $('#divMonthlyBudget').hide();
                                          $('#spnTotalBudget').html(totalBudget);
                                          $('#divQuarterlyBudget').show();
                                          $('#divQuarterlyBudget').find('#unallocatedBudget').val(FormatCommas($("#txtBudget").val().toString(), false));
                                          $('#spnThisQuarter').show();
                                          $('#spnThisMonth').hide();
                                      }
                                      GetAllocatedBudgetForPlan(hdnPlanId);
                                  }
                                  else {
                                      $("#errorMessage").css("display", "block");
                                      $("#spanMessageError").empty();
                                      $("#spanMessageError").text("@RevenuePlanner.Helpers.Common.objCached.InvalidError");
                                      $('#divPlanBudgetAllocation').hide();
                                      $('#button-back').hide();
                                      $('#button-saveContinue').hide();
                                      $("#divErrLessBudget").css("display", "none");
                                      return false;
                                  }
                              }
                        } 
                      },
                      error: function () {
                          GoToLogin();
                          //$("#errorMessage").css("display", "block");
                          //$("#spanMessageError").empty();
                          //$("#divErrLessBudget").css("display", "none");
                          return false;
                      }
                  });
          }
              return isError;
          });

          @* Start - Added by Sohel Pathan on 15/07/2014 for PL ticket #566 *@
          if (hdnPlanId != 0) {
              $('#divBudgetSummary').show();
              var modelId = 0;
              var goalType = $("#GoalType").val();
              var goalValue = $("#GoalValue").val();

              if ($('#ModelId').val() != '')
                  modelId = $('#ModelId').val();

              if (goalType != '')
                  calculateBudget(modelId, goalType, goalValue);

              if (goalType.toLowerCase() == "revenue") {
                  $('#revenueSign').show();
                  $('#conjuntionWord').html('and ');
              }
              else {
                  $('#revenueSign').hide();
                  $('#conjuntionWord').html('to deliver ');
              }
          }
          else {
              $('#divBudgetSummary').hide();
              $('#unallocatedBudget').val(FormatCommas($("#txtBudget").val().toString(), false));
          }
          @* End - Added by Sohel Pathan on 15/07/2014 for PL ticket #566 *@

          @* Start - Added by Sohel Pathan on 25/07/2014 for PL ticket #597 *@
          $('#button-back').hide();
          $('#divPlanBudgetAllocation').hide();
          $('#divErrMoreAllocation').hide();
          $('#button-saveContinue').hide();
          $('#divPlanDefinationEnabled').show();
          $('#divPlanDefinationDisabled').hide();
          $('#divErrCampaignBudgetAllocation').hide();
          $('#spnThisQuarter').hide();
          $('#spnThisMonth').show();
          @* End - Added by Sohel Pathan on 25/07/2014 for PL ticket #597 *@

          /* Added by Mitesh Vaishnav for PL ticket 619*/

          if ('@isBackFromAssortment' == 'True') {
              $('#button-back').css('display', 'block');
              $('#button-save').hide();
              $('#divPlanBudgetAllocation').show();
              $('#button-saveContinue').show();
              $('#divPlanDefinationEnabled').hide();
              $('#divPlanDefinationDisabled').show();
              $('#ModelTitle').html($('#divPlanDefinationEnabled').find('#ModelTitle').html());
              renderDisablePlanDefinationSection();
              $('#divErrCampaignBudgetAllocation').hide();
              $('#divErrMoreAllocation').hide();
              var totalBudget = FormatCurrency($("#txtBudget").val(), false);
              if ($('#AllocatedBy').val().toLowerCase() == '@Enums.PlanAllocatedByList[Enums.PlanAllocatedBy.defaults.ToString()].ToString().ToLower()') {
                  $('#divDefaultBudget').show();
                  $('#spnTotalAllocatedBudget').html('---');
                  $('#spnTotalBudget').html(totalBudget);
                  $('#divMonthQuarterAllocation').hide();
                  $('#spnUnallocatedBudget').html(totalBudget);
                  $('#spnUnallocatedBudget').removeClass('error-text');
                  $('#spnCampaignAllocatedBudget').html('---');
              }
              else if ($('#AllocatedBy').val().toLowerCase() == '@Enums.PlanAllocatedByList[Enums.PlanAllocatedBy.months.ToString()].ToString().ToLower()') {
                  $('#divMonthQuarterAllocation').show();
                  $('#divDefaultBudget').hide();
                  $('#divMonthlyBudget').show();
                  $('#spnTotalBudget').html(totalBudget);
                  $('#divQuarterlyBudget').hide();
                  $('#spnUnallocatedBudget').html(totalBudget);
              }
              else if ($('#AllocatedBy').val().toLowerCase() == '@Enums.PlanAllocatedByList[Enums.PlanAllocatedBy.quarters.ToString()].ToString().ToLower()') {
                  $('#divMonthQuarterAllocation').show();
                  $('#divDefaultBudget').hide();
                  $('#divMonthlyBudget').hide();
                  $('#spnTotalBudget').html(FormatCurrency(totalBudget));
                  $('#divQuarterlyBudget').show();
                  $('#spnThisQuarter').show();
                  $('#spnThisMonth').hide();
              }
          GetAllocatedBudgetForPlan('@strPlanId');
              // Added by dharmraj to focus first month/Quarter
              if ($('#AllocatedBy').val().toLowerCase() == '@Enums.PlanAllocatedByList[Enums.PlanAllocatedBy.months.ToString()].ToString().ToLower()') {
                  var My1Val = $("$MY1").val() == '' ? '0' : $("$MY1").val();
                  var cam1Val = $("hdnMY1").val() == '' ? '0' : $("hdnMY1").val();
                  if (parseInt(My1Val) < parseInt(cam1Val)) {
                      $("#spnCampaignAllocatedBudget").addClass('error-text');
                  }
              }
              else if ($('#AllocatedBy').val().toLowerCase() == '@Enums.PlanAllocatedByList[Enums.PlanAllocatedBy.quarters.ToString()].ToString().ToLower()') {
                  var My1Val = $("$QY1").val() == '' ? '0' : $("$QY1").val();
                  var cam1Val = $("hdnQY1").val() == '' ? '0' : $("hdnQY1").val();
                  if (parseInt(My1Val) < parseInt(cam1Val)) {
                      $("#spnCampaignAllocatedBudget").addClass('error-text');
                  }
              }
          }

          /*End : Added by Mitesh Vaishnav for PL ticket 619*/
      });

    @* Start - Added by Sohel Pathan on 15/07/2014 for PL ticket #566 *@
    $('#nl-form').find('.nl-field.nl-dd').find('li').click(function () {
        var element = $(this).parent().parent().next();
        if (element.hasClass('calculateBudget')) {
            if ($("#GoalType").val().toLowerCase() == 'revenue') {
                $('#revenueSign').show();
                $('#conjuntionWord').html('and ');
            }
            else {
                $('#revenueSign').hide();
                $('#conjuntionWord').html('to deliver ');
            }

            if ($("#GoalType").val().toLowerCase() == '') {
                $('#divBudgetSummary').hide();
            }
            else {
                $('#divBudgetSummary').show();
            }

            var modelId = 0;
            var goalType = $("#GoalType").val();
            var goalValue = $("#GoalValue").val();

            if ($('#ModelId').val() != '') {
                modelId = $('#ModelId').val();
                $('#averageDealSize').html("0");
                $('#ModelTitle').html($('#ModelId').prev().find('.nl-field-toggle').html());
                $('#ModelTitle').hide();
            }

            if (goalType != '')
                calculateBudget(modelId, goalType, goalValue);
        }
    });

    function calculateBudget(_modelId, _goalType, _goalValue)
    {
        $.ajax({
            type: 'GET',
            url: '@Url.Content("~/Plan/CalculateBudget/")',
            dataType: "json",
            data:{ modelId : _modelId, goalType : _goalType, goalValue : _goalValue },
            success: function (data) {
                $('#msg1').html(data.msg1);
                $('#msg2').html(data.msg2);
                $('#input1').html(number_format(data.input1.toString(), 0, '.', ','));
                if (_goalType.toLowerCase() != "revenue") {
                    $('#input2').html('$' + number_format(data.input2.toString(), 0, '.', ','));
                }
                else {
                    $('#input2').html(number_format(data.input2.toString(), 0, '.', ','));
                }
                $('#averageDealSize').html(FormatCurrency(data.ADS, false));
            }
        });
    }
    
    $('#GoalValue').parent().find('.priceValue').blur(function () {
        if (!$(this).parent().hasClass('budget-month') && !$(this).parent().hasClass('budget-quarters')) {
            var modelId = 0;
            var goalType = $("#GoalType").val();
            var goalValue = $('#GoalValue').parent().find('.priceValue').val();

            if ($('#ModelId').val() != '')
                modelId = $('#ModelId').val();

            if (goalType != '')
                calculateBudget(modelId, goalType, goalValue);
        }
    });
    @* End - Added by Sohel Pathan on 15/07/2014 for PL ticket #566 *@

</script>
<script type="text/javascript">
    var isErrorShown = true;
    //Manoj Start 28Jan2014 : Bug-12 (User can lose data via navigation in application)
    //function to check myValue attribute values and input values that any changes made?
    function isDataChanged() {
        var changed = false;
        if ($('#divPlanBudgetAllocation').css('display') == "none") {   // Added by Sohel Pathan on 03/09/2014 for PL ticket #742
            $('.myValue').each(function () {
                var iv = $(this).attr("placeholder");
                if ($(this).val() != iv) {
                    changed = true;
                    return false; // Added by Sohel Pathan on 03/09/2014 for PL ticket #742
                }
            });
            $('.myValueFormat').each(function () {
                var iv = $(this).attr("placeholder");
                if (ReplaceCC($(this).val()) != ReplaceCC(iv)) {
                    changed = true;
                    return false; // Added by Sohel Pathan on 03/09/2014 for PL ticket #742
                }
            });
        }
        // Start - Added by Sohel Pathan on 31/07/2014 for Internal Review Point
        if ($('#divPlanBudgetAllocation').css('display') != "none") {
            $('.myValue-budget').each(function () {
                var iv = $(this).attr("oldValue");
                if ($(this).val() != iv) {
                    changed = true;
                    return false;
                }
            });
        }
        // End - Added by Sohel Pathan on 31/07/2014 for Internal Review Point
        return changed;
    }
    $(document).on("click", "#confirmClose, .confirmClose", function (e) {
        $("#errorMessage").slideUp(1000);
        $("#divErrLessBudget").css("display", "none");
    });
    $(document).on("click", "#aApplyToCalender", function (e) {
        displayconfirm('@Url.Action("ApplyToCalendar", "Plan")');
    });
    $(document).on("click", "#LeftNavCampaigns", function (e) {
        displayconfirm('@Url.Action("Assortment", "Plan")');
    });
    $(document).on("click", "#LeftNavAddActivity", function (e) {
        var hdnPlanId = $("#hdnPlanId").val();
        if (hdnPlanId == 0) {
            displayconfirm('@Url.Content("~/Home/Index")' + "?ActiveMenu=Plan");
        }
        else {
            displayconfirm('@Url.Content("~/Home/Index")' + "?ActiveMenu=Plan&currentPlanId=" + hdnPlanId + "");
        }
        //  
      });
    $(document).on("click", "#aBudgeting", function (e) {
        displayconfirm('@Url.Action("Budgeting", "Plan")');
    });
    function displayconfirm(strURL) {
        if (isDataChanged()) {
            $('#errorMessage').html("<strong>Error! </strong> <span id='spanMessageError'>You have unsaved changes. Do you wish to leave this page and lose your work?&nbsp;&nbsp;&nbsp;&nbsp;<a style='color:gray;' href='" + strURL + "' class='btn-gray'>Continue</a>&nbsp;&nbsp;<a style='color:gray;' id='confirmClose' href='#' class='underline'>Cancel</a></span><a id='aclose' class='close confirmClose'>×</a>");
            $("#errorMessage").slideDown(400);  // Modified by Sohel Pathan on 19/08/2014 for Internal Review Points
            $("#divErrLessBudget").css("display", "none");
        }
        else {
            window.location.href = strURL;
        }
    }

    // Added by Dharmraj on 25/08/2014 for Internal Review Points
    function displayConfirmCommon(functionName) {
        if (isDataChanged()) {
            $('#errorMessage').html("<strong>Error! </strong> <span id='spanMessageError'>You have unsaved changes. Do you wish to leave this page and lose your work?&nbsp;&nbsp;&nbsp;&nbsp;<a id='btnConfirmOK' class='btn-gray CursorHand' style='color:gray;'>Continue</a>&nbsp;&nbsp;<a style='color:gray;' id='confirmClose' href='#' class='underline'>Cancel</a></span><a id='aclose' class='close confirmClose'>×</a>");
            $("#errorMessage").slideDown(400);
            $("#btnConfirmOK").click(function () {
                $('#errorMessage').html("");
                $("#errorMessage").hide();
                eval(functionName);
            });
        }
        else {
            eval(functionName);
        }
    }

    //Manoj End 28Jan2014 : Bug-12 (User can lose data via navigation in application)

    //Dharmraj Start 7July2014 : 547 (Warning of data loss during tactic/Program/Campaign creation)
    $("#header a").not("#ContactSupport").click(function () {
        //alert($(this).attr('href'));
        if (isDataChanged()) {
            displayconfirm($(this).attr('href'));
            return false;
        }
        else {
            return true;
        }
    });
    //Dharmraj End 7July2014 : 547 (Warning of data loss during tactic/Program/Campaign creation)

    $('#button-back').click(function () {
        displayConfirmCommon('buttonBackClick();');
    });

    function buttonBackClick() {
        $('#button-save').show();
        $('#button-back').hide();
        $('.budget-month .priceValue').each(function () {
            $(this).removeClass('border000000');
        });
        $('.budget-quarters .priceValue').each(function () {
            $(this).removeClass('border000000');
        });
        $('#divPlanBudgetAllocation').hide();
        $('#button-saveContinue').hide();
        $('table').removeClass('element-disable');
        $('#divPlanDefinationEnabled').show();
        $('#divPlanDefinationDisabled').hide();
        isErrorShown = true;
    }

    $('.budget-month .priceValue').focus(function () {

        $('.budget-month .priceValue').each(function () {
            $(this).removeClass('border000000');
        });
        
        $(this).addClass('border000000');

        if (this.id.toString() != 'unallocatedBudget') {
        checkCampaignBudget(this);
        }
    });

    $('.budget-quarters .priceValue').focus(function () {

        $('.budget-quarters .priceValue').each(function () {
            $(this).removeClass('border000000');
        });

        $(this).addClass('border000000');

        if (this.id.toString() != 'unallocatedBudget') {
        checkCampaignBudget(this);
        }
    });
    
    $('.budget-month .priceValue').keyup(function () {
        if (this.id.toString() != 'unallocatedBudget') {
        var allocatedBudget = calculateAllocatedBudgetMonthly();
        checkBudgetDifference(allocatedBudget, $('#divMonthlyBudget'));
        checkCampaignBudget(this);
        }
    });

    $('.budget-quarters .priceValue').keyup(function () {
        if (this.id.toString() != 'unallocatedBudget') {
        var allocatedBudget = calculateAllocatedBudgetQuarterly();
        checkBudgetDifference(allocatedBudget, $('#divQuarterlyBudget'));
        checkCampaignBudget(this);
        }
    });

    function checkCampaignBudget(input)
    {
        var inputHdn = $(input).next();
        var campaignBudget = inputHdn.val() == '' ? 0 : parseInt(inputHdn.val());
        $('#spnCampaignAllocatedBudget').html(FormatCurrency(campaignBudget.toString(), false));
        var isInputBlank = false;
        if ($(input).val() == '') {
            isInputBlank = true;
        }
        var selectedMonthBudget = parseInt($(input).val() == '' ? 0 : ($(input).val().trim().replace(/,/g, '').replace('$', '')));
        if (campaignBudget > selectedMonthBudget) {
            $('#spnCampaignAllocatedBudget').addClass('error-text');
            $(input).addClass('campaignBudgetError');
        }
        else {
            $('#spnCampaignAllocatedBudget').removeClass('error-text');
            $(input).removeClass('campaignBudgetError');
        }
        if (isInputBlank) {
            $(input).val('');
        }
        else {
        $(input).val(FormatCommas(selectedMonthBudget.toString(), false));
    }
    }

    function calculateAllocatedBudgetMonthly()
    {
        var allocatedBudget = 0;
        $('.budget-month .priceValue').each(function () {
            if ($(this).val().trim() != '' && this.id.toString() != 'unallocatedBudget') {
                var currentValue = $(this).val().trim().replace(/,/g, '').replace('$', '');
                if (currentValue.match('^(0|[1-9][0-9]*)$')) {
                    allocatedBudget += parseInt(currentValue);
                }
            }
        });
        return allocatedBudget;
    }

    function calculateAllocatedBudgetQuarterly()
    {
        var allocatedBudget = 0;
        $('.budget-quarters .priceValue').each(function () {
            if ($(this).val().trim() != '' && this.id.toString() != 'unallocatedBudget') {
                var currentValue = $(this).val().trim().replace(/,/g, '').replace('$', '');
                if (currentValue.match('^(0|[1-9][0-9]*)$')) {
                    allocatedBudget += parseInt(currentValue);
                }
            }
        });
        return allocatedBudget;
    }

    function checkBudgetDifference(allocatedBudget, allocatedBy)
    {
        var totalBudget = parseInt(ReplaceCC($("#txtBudget").val()));
        $('#spnTotalAllocatedBudget').html(FormatCurrency(allocatedBudget, false));
        var unAllocatedBudget = totalBudget - allocatedBudget;

        if (totalBudget != 0) {
            
            $(allocatedBy).find('#unallocatedBudget').val(FormatCommas(unAllocatedBudget.toString(), false));
            
            if (allocatedBudget > totalBudget) {
                $('#spnTotalAllocatedBudget').addClass('error-text');
                $(allocatedBy).find('#unallocatedBudget').addClass('error-text');
            }
            else {
                $('#spnTotalAllocatedBudget').removeClass('error-text');
                $(allocatedBy).find('#unallocatedBudget').removeClass('error-text');
            }
        }
    }

    $('#button-saveContinue').click(function (e) {
        if ($('#spnTotalAllocatedBudget').hasClass('error-text')) {
            $('#divErrMoreAllocation').show();
            $('#divErrCampaignBudgetAllocation').find('.source-sans-probold').html('');
            $('#divErrCampaignBudgetAllocation').hide();
            isErrorShown = true;
            return;
        }
        else {
            $('#divErrMoreAllocation').hide();
            var isError = false;
            var inputsType;
            var AllocatedBy = $('#AllocatedBy').val().toLowerCase();
            if (AllocatedBy == '@Enums.PlanAllocatedByList[Enums.PlanAllocatedBy.months.ToString()].ToString().ToLower()')
            {
                if (isErrorShown) {
                    @*$('.budget-month .priceValue').each(function () {
                        if ($(this).val().toString() != '' && $(this).hasClass('campaignBudgetError') && this.id.toString() != 'unallocatedBudget') {
                            $('#divErrCampaignBudgetAllocation').show();
                            var errorMsg = '@RevenuePlanner.Helpers.Common.objCached.ErrMsgLessCampaignBudget ';
                            errorMsg += $(this).prev().html() + ' month';
                            errorMsg += '. <br />If you want to continue, hit Save & Continue below.';
                            $('#divErrCampaignBudgetAllocation').find('.source-sans-probold').html(errorMsg);
                            isError = true;
                            isErrorShown = false;
                            return false;
                        }
                    });*@

                    var lstAllocInputs = $(".budget-month .priceValue.campaignBudgetError").not('#unallocatedBudget');
                    if (lstAllocInputs.length > 0) {
                        var errorMsg = "@RevenuePlanner.Helpers.Common.objCached.ErrMsgLessCampaignBudget ";
                        var inputLength = lstAllocInputs.length;
                        var removeLength = 0;
                        for (var i = 0; i < lstAllocInputs.length; i++) {

                            if (inputLength == 1) {
                                errorMsg += ($(lstAllocInputs[i]).prev().html());
                            }
                            else if (inputLength == 2) {
                                errorMsg += ($(lstAllocInputs[i]).prev().html() + ' and ');
                                removeLength = 4;
                            }
                            else if (inputLength > 2) {
                                if (i == inputLength - 2) {
                                    errorMsg += ($(lstAllocInputs[i]).prev().html() + ' and ');
                                    removeLength = 4;
                                }
                                else {
                                    errorMsg += ($(lstAllocInputs[i]).prev().html() + ', ');
                                    removeLength = 2;
                                }
                            }
                        }

                        errorMsg = errorMsg.substring(0, errorMsg.length - removeLength);
                        errorMsg += ' month. <br />If you want to continue, hit Save & Continue below.';
                        $('#divErrCampaignBudgetAllocation').find('.source-sans-probold').html(errorMsg);
                        $('#divErrCampaignBudgetAllocation').show();
                        isError = true;
                        isErrorShown = false;
                        return false;
                    }
                }
                inputsType = '.budget-month .priceValue';
            }
            else if (AllocatedBy == '@Enums.PlanAllocatedByList[Enums.PlanAllocatedBy.quarters.ToString()].ToString().ToLower()')
            {
                if (isErrorShown) {
                    @*$('.budget-quarters .priceValue').each(function () {
                        if ($(this).val().toString() != '' && $(this).hasClass('campaignBudgetError') && this.id.toString() != 'unallocatedBudget') {
                            $('#divErrCampaignBudgetAllocation').show();
                            var errorMsg = '@RevenuePlanner.Helpers.Common.objCached.ErrMsgLessCampaignBudget ';
                            errorMsg += $(this).prev().html() + ' quarter';
                            errorMsg += '. <br />If you want to continue, hit Save & Continue below.';
                            $('#divErrCampaignBudgetAllocation').find('.source-sans-probold').html(errorMsg);
                            isError = true;
                            isErrorShown = false;
                            return false;
                        }
                    });*@

                    var lstAllocInputs = $(".budget-quarters .priceValue.campaignBudgetError").not('#unallocatedBudget');
                    if (lstAllocInputs.length > 0) {
                        var errorMsg = "@RevenuePlanner.Helpers.Common.objCached.ErrMsgLessCampaignBudget ";
                        var inputLength = lstAllocInputs.length;
                        var removeLength = 0;
                        for (var i = 0; i < lstAllocInputs.length; i++) {

                            if (inputLength == 1) {
                                errorMsg += ($(lstAllocInputs[i]).prev().html());
                            }
                            else if (inputLength == 2) {
                                errorMsg += ($(lstAllocInputs[i]).prev().html() + ' and ');
                                removeLength = 4;
                            }
                            else if (inputLength > 2) {
                                if (i == inputLength - 2) {
                                    errorMsg += ($(lstAllocInputs[i]).prev().html() + ' and ');
                                    removeLength = 4;
                                }
                                else {
                                    errorMsg += ($(lstAllocInputs[i]).prev().html() + ', ');
                                    removeLength = 2;
                                }
                            }
                        }

                        errorMsg = errorMsg.substring(0, errorMsg.length - removeLength);
                        errorMsg += ' quarter. <br />If you want to continue, hit Save & Continue below.';
                        $('#divErrCampaignBudgetAllocation').find('.source-sans-probold').html(errorMsg);
                        $('#divErrCampaignBudgetAllocation').show();
                        isError = true;
                        isErrorShown = false;
                        return false;
                    }

                }
                inputsType = '.budget-quarters .priceValue';
            }
            if (!isError) {
                saveBudgetAllocation(inputsType);
            }
        }
    });

    function saveBudgetAllocation(inputsType)
    {
        var _planId = $('#PlanId').val();
        var _inputs = [];
        if (inputsType != '') {
            $(inputsType).each(function () {
                if (this.id.toString() != 'unallocatedBudget') {
                    // Modified by Dharmraj to handle case were user update empty or zero allocation value.
                    //if ($(this).val().trim() != '') {
                    //    var currentValue = $(this).val().trim().replace(/,/g, '').replace('$', '');
                    //    if (currentValue.match('^(0|[1-9][0-9]*)$')) {
                    //        _inputs.push(parseInt(currentValue));
                    //    }
                    //    else {
                    //        _inputs.push(0);
                    //    }
                    //}
                    //else {
                    //    _inputs.push("");
                    //}

                    _inputs.push(ReplaceCC($(this).val()));
                }
            });
            if (_planId != "" || _planId != "0") {
                $.ajax({
                    type: 'GET',
                    url: '@Url.Content("~/Plan/SaveBudgetAllocation/")',
                    dataType: "json",
                    data: { planId: _planId, inputs: _inputs.toString() },
                    success: function (data) {
                        if (data != 'undefined') {
                            if (data.id == -1) {
                                $("#errorMessage").css("display", "block");
                                $("#spanMessageError").empty();
                                $("#spanMessageError").text(data.imsg);
                                $("#divErrLessBudget").css("display", "none");
                                return false;
                            }
                            else if (data.id != 0) {
                                window.location.href = data.redirect;
                                return;
                            }
                            else {
                                $("#errorMessage").css("display", "block");
                                $("#spanMessageError").empty();
                                $("#spanMessageError").text("@RevenuePlanner.Helpers.Common.objCached.InvalidError");
                                $("#divErrLessBudget").css("display", "none");
                                return false;
                            }
                        }
                    },
                    error: function () {
                        GoToLogin();
                        $("#errorMessage").css("display", "block");
                        $("#spanMessageError").empty();
                        $("#divErrLessBudget").css("display", "none");
                        return false;
                    }
                });
            }
        }
    }

    function GetAllocatedBudgetForPlan(planId)
    {
        $.ajax({
            type: 'GET',
            url: '@Url.Content("~/Plan/GetAllocatedBudgetForPlan/")',
                dataType: "json",
                data: { planId: planId, allocatedBy: $('#AllocatedBy').val() },
                success: function (data) {
                    if (data.status == 1) {
                        if (typeof data.planBudgetAllocationList != 'undefined')    // Modified by Sohel Pathan on 05/09/2014 for PL ticket #642
                        {
                            if (data.planBudgetAllocationList.length > 0)
                            {
                                emptyAllBudgetFields();

                                if ($('#AllocatedBy').val().toLowerCase() == '@Enums.PlanAllocatedByList[Enums.PlanAllocatedBy.months.ToString()].ToString().ToLower()')
                                {
                                    var i;
                                    for (i = 1; i <= 12; i++)
                                    {
                                        // Start - Modified by Sohel Pathan on 05/09/2014 for PL ticket #642
                                        var allocatedAmount = data.planBudgetAllocationList[i - 1].budgetValue.toString();
                                        // Modified by Dharmraj to handle case were user update empty or zero allocation value.
                                        //if (parseInt(allocatedAmount) > 0) {
                                        $('#M' + data.planBudgetAllocationList[i - 1].periodTitle.toString()).val(FormatCommas(allocatedAmount, false));
                                        $('#M' + data.planBudgetAllocationList[i - 1].periodTitle.toString()).attr('oldValue', FormatCommas(allocatedAmount, false));
                                        //}
                                        //else {
                                        //$('#M' + data.planBudgetAllocationList[i - 1].periodTitle.toString()).attr('oldValue', '');
                                        //}
                                        //if (data.planCampaignBudgetAllocationList != 'undefined') {
                                            //if (data.planCampaignBudgetAllocationList.length > 0) {
                                                var campaignAllocatedAmount = data.planBudgetAllocationList[i - 1].campaignMonthlyBudget.toString();
                                                if (parseInt(campaignAllocatedAmount) > 0) {
                                                    $('#hdnM' + data.planBudgetAllocationList[i - 1].periodTitle.toString()).val(campaignAllocatedAmount);
                                                }
                                                if (i == 1) {
                                                    $('#spnCampaignAllocatedBudget').html(FormatCurrency($('#hdnMY' + i).val(), false));

                                                    if (parseInt(campaignAllocatedAmount) > parseInt(allocatedAmount)) {
                                                        $("#spnCampaignAllocatedBudget").addClass('error-text');
                                                    }
                                                    else {
                                                        $("#spnCampaignAllocatedBudget").removeClass('error-text');
                                                    }

                                                    $('#MY' + i).addClass('border000000');
                                                }
                                                if (parseInt(campaignAllocatedAmount) > parseInt(allocatedAmount)) {
                                                    $('#MY' + i).addClass('campaignBudgetError');
                                                }
                                                else {
                                                    $('#MY' + i).removeClass('campaignBudgetError');
                                                }
                                            //}
                                        //}
                                        // End - Modified by Sohel Pathan on 05/09/2014 for PL ticket #642
                                        $('#MY' + i).addClass('myValue-budget');
                                    }

                                    var allocatedBudget = calculateAllocatedBudgetMonthly();
                                    $('#spnTotalAllocatedBudget').html(FormatCurrency(allocatedBudget, false));
                                    checkBudgetDifference(allocatedBudget, $('#divMonthlyBudget'));
                                }
                                else if ($('#AllocatedBy').val().toLowerCase() == '@Enums.PlanAllocatedByList[Enums.PlanAllocatedBy.quarters.ToString()].ToString().ToLower()') {
                                    // Start - Modified by Sohel Pathan on 05/09/2014 for PL ticket #642
                                    //var i;
                                    var r = data.planBudgetAllocationList;
                                    //for (i = 1; i <= 12; i = i++) {
                                    for (i in r) {
                                        var allocatedAmount = r[i].budgetValue.toString();
                                        // Modified by Dharmraj to handle case were user update empty or zero allocation value.
                                        //if (parseInt(allocatedAmount) > 0) {
                                        $('#Q' + r[i].periodTitle.toString()).val(FormatCommas(allocatedAmount, false));
                                        $('#Q' + r[i].periodTitle.toString()).attr('oldValue', FormatCommas(allocatedAmount, false));
                                        //}
                                        //else {
                                        //$('#Q' + data.planBudgetAllocationList[i - 1].periodTitle.toString()).attr('oldValue', '');
                                        //}
                                        //if (data.planCampaignBudgetAllocationList != 'undefined') {
                                            //if (data.planCampaignBudgetAllocationList.length > 0) {
                                                var campaignAllocatedAmount = r[i].campaignMonthlyBudget.toString();
                                                if (parseInt(campaignAllocatedAmount) > 0) {
                                                    $('#hdnQ' + r[i].periodTitle.toString()).val(campaignAllocatedAmount);
                                                }
                                                if (r[i].periodTitle.toString() == "Y1") {
                                                    $('#spnCampaignAllocatedBudget').html(FormatCurrency($('#hdnQY1').val(), false));

                                                    if (parseInt(campaignAllocatedAmount) > parseInt(allocatedAmount)) {
                                                        $("#spnCampaignAllocatedBudget").addClass('error-text');
                                                    }
                                                    else {
                                                        $("#spnCampaignAllocatedBudget").removeClass('error-text');
                                                    }
                                                    $('#QY1').addClass('border000000');
                                                }
                                                if (parseInt(campaignAllocatedAmount) > parseInt(allocatedAmount)) {
                                                    $('#Q' + r[i].periodTitle.toString()).addClass('campaignBudgetError');
                                                }
                                                else {
                                                    $('#Q' + r[i].periodTitle.toString()).removeClass('campaignBudgetError');
                                                }
                                            //}
                                        //}
                                        $('#Q' + r[i].periodTitle.toString()).addClass('myValue-budget');
                                        // End - Modified by Sohel Pathan on 05/09/2014 for PL ticket #642
                                    }
                                    
                                    var allocatedBudget = calculateAllocatedBudgetQuarterly();
                                    $('#spnTotalAllocatedBudget').html(FormatCurrency(allocatedBudget, false));
                                    checkBudgetDifference(allocatedBudget, $('#divQuarterlyBudget'));
                                }
                                else if ($('#AllocatedBy').val().toLowerCase() == '@Enums.PlanAllocatedByList[Enums.PlanAllocatedBy.defaults.ToString()].ToString().ToLower()')
                                {
                                    checkBudgetDifference(0, $('#divMonthlyBudget'));
                                }
                            }
                            else
                            {
                                emptyAllBudgetFields();
                            }
                        }
                        else
                        {
                            emptyAllBudgetFields();
                        }
                    }
                },
             error: function () {
                 GoToLogin();
                 $("#errorMessage").css("display", "block");
                 $("#spanMessageError").empty();
                 $("#divErrLessBudget").css("display", "none");
                 return false;
             }
         });
    }
    
    function emptyAllBudgetFields()
    {
        $('.budget-month .priceValue').each(function () {
            if (this.id.toString() != 'unallocatedBudget') {
                $(this).val('');
                $(this).attr('oldValue', '');
                $(this).removeClass('myValue-budget');
                $(this).next().val('');
            }
        });

        $('.budget-quarters .priceValue').each(function () {
            if (this.id.toString() != 'unallocatedBudget') {
                $(this).val('');
                $(this).attr('oldValue', '');
                $(this).removeClass('myValue-budget');
                $(this).next().val('');
            }
        });            
    }

    function renderDisablePlanDefinationSection()
    {
        $('table').addClass('element-disable');
        $('#disabledModelTitle').html($('#ModelTitle').html());
        $('#disabledPlanTitle').html($('#Title').prev().find('.nl-field-toggle').html());
        $('#disabledPlanYear').html($('#Year').val());
        $('#disabledGoalType').html($('#GoalType').prev().find('.nl-field-toggle').html());
        if ($('#GoalType').val().toLowerCase() == "revenue") {
            $('#disabledGoalValue').html("$"+ $('#GoalValue').prev().find('.nl-field-toggle').html());
        }
        else {
            $('#disabledGoalValue').html($('#GoalValue').prev().find('.nl-field-toggle').html());
        }
        $('#disabledBudgetValue').html($('#txtBudget').prev().find('.nl-field-toggle').html());
        $('#disabledAllocatedBy').html($('#AllocatedBy').prev().find('.nl-field-toggle').html());
        $('#AllocatedBy').attr('placeholder', $('#AllocatedBy').val());
    }

    $('.ErrCampaignBudgetAllocation').click(function () {
        isErrorShown = true;
    });

</script>
<script src="~/Scripts/js/jquery.mCustomScrollbar.concat.min.js"></script>
<link rel="stylesheet" href="@Url.Content("~/Content/css/jquery.mCustomScrollbar.css")" type="text/css" />