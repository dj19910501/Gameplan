@model RevenuePlanner.Models.HomePlanModel
@using RevenuePlanner.Helpers
@{
    ViewBag.Title = ViewBag.ActiveMenu;
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Budgeting";
    ViewBag.PageTitle = "Budgeting";
    //bool showBid = ViewBag.showBid;
    int CurrentPlanId = ViewBag.PlanId;
    bool IsPlanCreateAuthorized = (bool)ViewBag.IsPlanCreateAuthorized;
    string type = Convert.ToString(Request.QueryString["type"]);
    string expand = Convert.ToString(Request.QueryString["expand"]);
    if (string.IsNullOrEmpty(type))
    {
        type = "allocated";
    }
    string sucMsg = Convert.ToString(TempData["SuccessMessage"]);
    TempData["SuccessMessage"] = null;
    string myView = "0";
    if (TempData["ViewBy"] != null)
    {
        myView = Convert.ToString(TempData["ViewBy"]);
        if (string.IsNullOrEmpty(myView))
        {
            myView = "0";
        }
    }
   var ListBudgetingPlan = Model.objplanhomemodelheader.plans; //Modified for new homepage UI
   var IsQuarter = ViewBag.IsQuarter;
   bool BudgetingIsSave = false;
   var RequestedModule = "";
   var BudgetingBussinessUnitId = 0;
   var BudgetingCurrentTab = "aAllocated";
   var BudgetingCurrentPlanId = 0;
   var IsGridView = (bool)ViewBag.GridView; //Added by Komal Rawal for 2013 Home/Plan Layout changes
}

@section PlanHeader{

    <div class="light-blue-chart cf full-width-header" id="planHeader">
        @Html.Partial("~/Views/Shared/_planheader.cshtml", Model.objplanhomemodelheader)
    </div>

}

@section Sidebar
{
   <div class="padding-content padding-bottom0" id="DivButtonsHome">
        <h4 class="text-shadow-black source-sans-prolight">Actions</h4>
        <div class="wraper-btns cf">
            <div >
                <button class="btn btn-blue text-shadow-blue source-sans-proregular" type="button" onclick="BackToPlan()" style="min-width:90%">< Back to Plan</button>
            </div>
        </div>
    </div>

    <ul class="nav nav-list nav-gray-plan">
        <li id="change-log" class="nav-header">
            <span>Change Log</span>
            <div class="changes">
                <div class="change"><span class="action">None</span></div>
            </div>
        </li>
    </ul>
}
@section nlFormContent{
    <link rel="stylesheet" href="@Url.Content("~/Content/css/NaturalLanguageForm/default.css")" type="text/css" />
    <link rel="stylesheet" href="@Url.Content("~/Content/css/NaturalLanguageForm/component.css")" type="text/css" />
    <script type="text/javascript" src="@Url.Content("~/Scripts/js/NaturalLanguageForm/modernizr.custom.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/js/NaturalLanguageForm/nlform.js?n=")@DateTime.Now"></script>
}
<link rel="stylesheet" href="@Url.Content("~/Content/css/jquery.mCustomScrollbar.css")" type="text/css" />
<script type="text/javascript" src="@Url.Content("~/Scripts/js/jquery.slimscroll.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/js/slimScrollHorizontal.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/js/jquery.mCustomScrollbar.concat.min.js")"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/js/jquery.actual.js")"></script>
<style type="text/css">
    .margin-top-50 {
        margin-top: 50px;
    }
    /*Added by Maitri Gandhi on 22/3/2016 for #2039*/
    div#DivloadPlan .nav.nav-tabs
    {
        border-bottom: 1px solid #eee;
    }
    
</style>

@Html.Hidden("hdnBudgetingBussinessUnitId", BudgetingBussinessUnitId)
@Html.Hidden("hdnBudgetingCurrentTab", BudgetingCurrentTab)
@Html.Hidden("CurrentPlanId", CurrentPlanId)
@Html.Hidden("hdnBudgetingIsSave", BudgetingIsSave)
@Html.Hidden("hdnRequestedModule", RequestedModule)
@Html.Hidden("hdnBudgetingCurrentPlanId", BudgetingCurrentPlanId)

<div id="listingsuccessMessage" class="alert alert-success message-position" style="display: none;">
    <a class="close">×</a>
    <strong>Success.</strong> <span id="listingspanMessageSuccess"></span>
</div>
<div id="errorMessageDuplicatePlan" class="alert hide alert-error message-position-small">
    <a class="close">×</a>
    <div id="cErrorDuplicatePlan"></div>
</div>

<div class=" budgetColums budgetReporting remove_btm_pdng ">
    <div class="plannedCost budget_allocation ">
        <h3 class="source-sans-proregular" id="planCostTitle" style="padding-top: 0px;"></h3>
        <div class="progressPlanned" style="border-bottom-width: 0px; margin-bottom: 20px;">
            <div id="divPlanProgress" class="progress"></div>
        </div>
        <div class="progressText source-sans-proregular" id="planCostValue"></div>
        <div style="clear: both;"></div>
    </div>
    <div class="budgetCompare Section-width">
        <h3 class="source-sans-proregular" id="monthCompareTitle"></h3>
        <div class="budgetCompareInner innerSection-height" id="monthContainer">
        </div>
        <div style="clear: both;"></div>
    </div>
</div>
<div class="filter-base source-sans-prosemibold">
    <div id="divViewBy" style="display: none; border-left: none; margin-left: 0; padding-left: 0;">
        @Html.Label("View By:", new { id = "lblViewBy", style = "font-family:Helvetica Neue,Helvetica,Arial,sans-serif !important;font-size:13px;" })
        @Html.DropDownList("ddlViewBy", new SelectList((System.Collections.IEnumerable)ViewBag.ViewBy, "Value", "Text", myView), new { @class = "ddlStyleReport hide" })
    </div>
    <div id="divCostBudget" style="display: none;"> @*Modified by Maitri Gandhi on 22/3/2016 for #2039*@
        <label for="Cost_By:" id="lblCostBudget" style="font-family: Helvetica Neue, Helvetica, Arial, sans-serif !important; font-size: 13px; float: left; margin-right: 10px; font-weight: bold; top: 0px; padding-top: 5px;">Cost vs Budget:</label>
        @*<div class="request-icon-block" style="top:0px; cursor:pointer;"><a id="aonCost" class="request" style="padding: 6px 27px 4px;">ON</a></div>*@
        <div class="request-icon-block" style="top: 0px; cursor: pointer;"><a id="aonCost" class="new-btn-plan">ON</a>
        </div>
        <div class="request-icon-block" style="top: 0px; cursor: pointer;"><a id="aoffCost" class="new-btn-plan request-btn-active">OFF</a>
        </div>
    </div>
    @*Added by Rushil Bhuptani on 06/03/2016 for #2214*@
    <div id="goalwrapper" class="source-sans-proregular export-link">
        <a class="export-link" style="cursor: pointer" id="exportcsv" onclick="return ExportToExcel(); ">
            <i class="fa fa-external-link"></i>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>Export.xls</span>
        </a>
    </div>
</div>
<div id="DivloadPlan">
    <ul class="nav nav-tabs">
      @*  <li class="title-header source-sans-proregular bold font-size25px">
            <form id="nl-form2" class="nl-form-plan-title without-margin plantitle">
                <select id="dropdown-plan-title" data-default="0%" class="" maxlength="40">
                </select>
                <div class="nl-overlay"></div>

            </form>
        </li>*@
        <li id="aAllocated" class="pull-right" onclick="TabLoad('aAllocated');">
            <a href="#">Budget</a>
        </li>
        <li id="aPlanned" class="pull-right" onclick="TabLoad('aPlanned');">
            <a href="#">Planned</a>
        </li>
        <li id="aActuals" class="pull-right" onclick="TabLoad('aActuals');">
            <a href="#">Actuals</a>
        </li>
    </ul>
</div>
<div id="divTabData" style="margin-top: 20px; margin-bottom: 30px;"></div>
<div id="dvCopyEntity"></div>
<script>
    var CurrentPlanId = '@CurrentPlanId';
    var Bid;
    var expand = $("#hdnBudgetingExpandId").val();
    var CurrentView = '@myView';
    var currentTab = 'aAllocated';
    var isQuater = '@IsQuarter';
    var IsHeaderActuals = true;

    var isLoadcopied = false;
    var cloneObj = "";
    var activeMenu = $('#ActiveMenu').val().toLowerCase();
    function OpentCopyPopup(obj, isProceed) {
        cloneObj = obj;
        var redirectType = $(obj).attr('redirecttype');
        if (redirectType == "" || redirectType == undefined) {
            if ($('#IsGridView').val().toLowerCase() == "false") { //Modified by Komal Rawal for 2013 Home/Plan Layout changes
                scrollstate = gantt.getScrollState();
            }
            else {
                linkItemId = $(obj).attr('entityid');
                if (linkItemId.indexOf("_") >= 0) {
                    linkItemId = linkItemId.split('_')[1];
                }
                else {
                    linkItemId = $(obj).attr('entityid').replace("_", "");
                }
                var selectedcell = HomeGrid.findCell(linkItemId, 3, true);
                var id = selectedcell[0];
                var rowid = id[0];
                ItemIndex = HomeGrid.getRowIndex(rowid);
                state0 = ItemIndex;
            }
        }
        var sectionType = $(obj).attr('sectionType');
        var entityId = $(obj).attr('entityId');
        var popuptype = $(obj).attr('popupType');
        var returnpara = true;
        var activeTab = $("#InspectTab li.active a").text();
        if (activeTab != null && activeTab != undefined && activeTab != '' && redirectType != undefined) {
            if (sectionType == '@Enums.Section.Tactic.ToString()') {

                if ((checkChangeValue(".resubmission", true)) && ($("#hdnIsResubmitableStatus").val().toString().toLowerCase() == "true") && isProceed == undefined) {
                    var iserror = false;
                    $('form').find('input[type=text], select, textarea').each(function () {
                        if ($(this).attr('require') == 'true') {
                            if ($(this).val().toString().trim() == '' && $(this).parent().css("display") != "none") {
                                $(this).addClass("error");
                                iserror = true;
                            }
                            else {
                                $(this).removeClass("error");
                            }
                        }
                    });
                    $('.dropdown_new_btn').each(function () {
                        if (typeof $(this).attr('require') != 'undefined' && $(this).attr('require') == 'true' && $(this).find('p').text() == 'Please Select' && $(this).parent().parent().css("display") != "none") {
                            $(this).addClass("error");
                            iserror = true;
                        }
                        else {
                            $(this).removeClass("error");
                        }
                    });
                    if (iserror) {
                        ShowError("@RevenuePlanner.Helpers.Common.objCached.ValidateForEmptyField");
                        return false;
                    }

                    url = '@Url.Content("~/Inspect/LoadResubmission")';
                    $("#divResubmission").load(url + '?redirectionType=' + "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Tactic)" + '&labelValues=' + _resubmissionLabelValues);
                    isLoadcopied = true;
                }
                else {
                    returnpara = SaveAllData(activeTab);
                    $('#spanMessageSuccess').empty();
                    $("#successMessage").css("display", "none");
                }
            }
            else {
                returnpara = SaveAllData(activeTab);
                $('#spanMessageSuccess').empty();
                $("#successMessage").css("display", "none");
            }
        }
        if (returnpara && !isLoadcopied) {
            $("#dvCopyEntity").empty();
            var url = '@Url.Content("~/Plan/LoadCopyEntityPopup")';
            $("#dvCopyEntity").load(url + "?entityId=" + entityId + "&section=" + sectionType + "&PopupType=" + popuptype + "&RedirectType=" + redirectType); // section parameter added to open share tactic popup
        }
        else {
            $("#SuccessMsg").css("display", "none");
            $("#successMessage").css("display", "none");
            $('.btn-dropdwn').hide();
        }
    }
    function OpentCopyPopuponProceed(obj) {
        var redirectType = $(obj).attr('redirecttype');
        var sectionType = $(obj).attr('sectionType');
        var entityId = $(obj).attr('entityId');
        var popuptype = $(obj).attr('popupType');
        var planTacticId = entityId.split('_')[1];
        loadInspectPopup(planTacticId, "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Tactic).ToLower()", "Setup", "@Enums.InspectPopupMode.Edit.ToString()", 0, "@Enums.InspectPopupRequestedModules.Index.ToString()");
        $("#dvCopyEntity").empty();
        var url = '@Url.Content("~/Plan/LoadCopyEntityPopup")';
        $("#dvCopyEntity").load(url + "?entityId=" + entityId + "&section=" + sectionType + "&PopupType=" + popuptype + "&RedirectType=" + redirectType); // section parameter added to open share tactic popup
        $("#SuccessMsg").css("display", "none");
        $('.btn-dropdwn').hide();
    }
    if ('@type' == 'plan') {
        currentTab = 'aPlanned';
    }
    else if ('@type' == 'actuals') {
        currentTab = 'aActuals';
    }

    $("#aonCost").click(function () {
        $("#aoffCost").removeClass('request-btn-active');
        $("#aonCost").addClass('request-btn-active');
        $('.red-corner-budget').css('display', 'block');
    });
    $("#aoffCost").click(function () {
        $("#aonCost").removeClass('request-btn-active');
        $("#aoffCost").addClass('request-btn-active');
        $('.red-corner-budget').css('display', 'none');
    });


    function ShowChangeLog(CurrentPlanId) {
        $('.changes').html('');
        var url = '@Url.Content("~/Home/LoadChangeLog/")';
        $('.changes').load(url + '?objectId=' + CurrentPlanId, function (response, status, xhr) {
            if (response == '{"serviceUnavailable":"~/Login/ServiceUnavailable"}') {
                //// Call function to redirect on service unavailibility.
                //// Added By: Maninder Singh Wadhva on 11/24/2014.
                //// Ticket: 942 Exception handeling in Gameplan.
                window.location = '@Url.Content(Common.RedirectOnServiceUnavailibilityPage)';
            }
        });
    }

    function ShowModel(mode, section, id, ParentId, RequestedModule) {
        removeDefaultModalPopupBackgroungColor();
        modalFullPosition(); // Added by Kapil Antala on 17 Sep 2014 for #732 - new popup design

        $('.modal-backdrop').addClass('modalFull-backdrop');
        $('.modal-backdrop').attr("style", "display:none !important;");
        $("#successMessage").css("display", "none");
        $("#errorMessage").css("display", "none");
        $("#successMessageDuplicatePlan").css("display", "none");
        $("#modal-container-186470").modal('show');
        ParentId = typeof ParentId != 'undefined' ? ParentId : '0';
        RequestedModule = typeof RequestedModule != 'undefined' ? RequestedModule : '';

        $("#hdnRequestedModule").val(RequestedModule);

        var currentTab = "Setup";
        if ((RequestedModule == "@Enums.InspectPopupRequestedModules.Budgeting.ToString()") && (mode == "@Enums.InspectPopupMode.ReadOnly.ToString()")) {
            currentTab = "Budget";
        }

        if (section == "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Campaign).ToLower()") {
            if (mode == "@Enums.InspectPopupMode.Add.ToString()") {
                loadInspectPopup("0", "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Campaign).ToLower()", currentTab, "@Enums.InspectPopupMode.Add.ToString()", '@CurrentPlanId', RequestedModule);
            }
            else {
                loadInspectPopup(id, "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Campaign).ToLower()", currentTab, "@Enums.InspectPopupMode.Edit.ToString()", 0, RequestedModule);
            }
        }
        else if (section == "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Program).ToLower()") {
            if (mode == "@Enums.InspectPopupMode.Add.ToString()") {
                loadInspectPopup("0", "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Program).ToLower()", currentTab, "@Enums.InspectPopupMode.Add.ToString()", ParentId, RequestedModule);
            }
            else {
                loadInspectPopup(id, "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Program).ToLower()", currentTab, "@Enums.InspectPopupMode.Edit.ToString()", 0, RequestedModule);
            }
        }
        else if (section == "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Tactic).ToLower()") {
            currentTab = "Setup";
            if (mode == "@Enums.InspectPopupMode.Add.ToString()") {
                loadInspectPopup("0", "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Tactic).ToLower()", currentTab, "@Enums.InspectPopupMode.Add.ToString()", ParentId, RequestedModule);
            }
            else {
                loadInspectPopup(id, "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Tactic).ToLower()", currentTab, "@Enums.InspectPopupMode.Edit.ToString()", ParentId, RequestedModule);
            }
        }
        else if (section == "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.ImprovementTactic).ToLower()") {
            if (mode == "@Enums.InspectPopupMode.Add.ToString()") {
                loadInspectPopup(0, "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.ImprovementTactic).ToLower()", currentTab, "@Enums.InspectPopupMode.Add.ToString()", ParentId, RequestedModule);
            }
            else {
                loadInspectPopup(id, "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.ImprovementTactic).ToLower()", currentTab, "@Enums.InspectPopupMode.Edit.ToString()", ParentId, RequestedModule);
            }
        }
        else if (section == "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.LineItem).ToLower()") {
            if (mode == "@Enums.InspectPopupMode.Add.ToString()") {
                loadInspectPopup("0", "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.LineItem).ToLower()", currentTab, "@Enums.InspectPopupMode.Add.ToString()", ParentId, RequestedModule);
            }
            else {
                loadInspectPopup(id, "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.LineItem).ToLower()", currentTab, "@Enums.InspectPopupMode.Edit.ToString()", ParentId, RequestedModule);
            }
        }
        else if (section == "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Plan).ToLower()") {
            if (mode == "@Enums.InspectPopupMode.Add.ToString()") {
                loadInspectPopup("0", "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Plan).ToLower()", currentTab, "@Enums.InspectPopupMode.Add.ToString()", ParentId, RequestedModule);
            }
            else {
                loadInspectPopup(id, "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Plan).ToLower()", currentTab, "@Enums.InspectPopupMode.Edit.ToString()", ParentId, RequestedModule);
            }
        }
        modalBackdropDisplayNone();
    };

    // Added by Arpita Soni on 05/26/2016 to resolve issue in copy tactic in inspect popup
    function RefershPlanHeaderCalc() {
        var _planId = $('#PlanId').val();
        GetHealderData(_planId,"","","","","",true);
        GetNumberOfActivityPerMonByPlanId(_planId, "", "", "", "", "", true);
    }

    function loadInspectPopup(id, section, tabValue, mode, parentId, RequestedModule) {
        parentId = typeof parentId != 'undefined' ? parentId : '0';
        RequestedModule = typeof RequestedModule != 'undefined' ? RequestedModule : '';
        var url = '@Url.Content("~/Inspect/LoadInspectPopup")';
        $("#divPartial").empty();
        $("#divPartial").load(url + '?id=' + id + '&Section=' + section + '&TabValue=' + tabValue + '&InspectPopupMode=' + mode + '&parentId=' + parentId + '&RequestedModule=' + RequestedModule, function (response, status, xhr) {
            if (response == '{"serviceUnavailable":"~/Login/ServiceUnavailable"}') {
                //// Call function to redirect on service unavailibility.
                //// Added By: Maninder Singh Wadhva on 11/24/2014.
                //// Ticket: 942 Exception handeling in Gameplan.
                window.location = '@Url.Content(Common.RedirectOnServiceUnavailibilityPage)';
            }
        });
    };

    function modalBackdropDisplayNone() {
        setTimeout(function () {
            $('.modal-backdrop').each(function () {
                if (typeof ($(this).attr('id')) == 'undefined') {
                    $(this).attr("style", "display:none !important;");
                }
            });
        }, 500);
    };

    function CloseIconClick() {
        $('.close-x-big-icon').click(function () {
            $("#modal-container-186470").addClass("transition-close");
            $("#modal-container-186470").removeClass("transition_y");
            addDefaultModalPopupBackgroungColor();
            $('body').removeClass('bodyOverflow');

            if ((($("#hdnBudgetingIsSave").val().toLowerCase().toString()) == "true") && ("@Enums.InspectPopupRequestedModules.Budgeting.ToString()" == $("#hdnRequestedModule").val())) {
                $('#DivloadPlan').load('@Url.Action("BudgetPlanList", "Plan")' + '?Bid=' + $("#hdnBudgetingBussinessUnitId").val(), function () { TabLoad($("#hdnBudgetingCurrentTab").val()); ShowChangeLog($("#hdnBudgetingCurrentPlanId").val()); hideAllMessages = true; });
                $("#hdnBudgetingIsSave").val("false");
            }

            @*//window.location = '@Url.Content("~/Plan/Assortment")';*@
            //Added by Viral Kadiya on 11/07/2014 for PL #941 to refresh gantt data
            var hdnRefresh = $("#hdnRefresh").val();    // This hidden value set from ApplyToCalendar page, to check flag, whether this page called from ApplyTocalender or not.
            if (hdnRefresh != null && gantt != null) {
                gantt.refreshData();
            }
            $(".datepicker.dropdown-menu").each(function () {
                $(this).remove();
            });

            ////
            @*if (("@Enums.InspectPopupRequestedModules.ApplyToCalendar.ToString()" == $("#hdnRequestedModule").val())) {
                var isRefresh = $("#hdnIsCreate_Clone").val();
                $("#hdnIsCreate_Clone").val(false);
                if (isRefresh.toString().toLowerCase() == 'true')
                    window.location.reload();//loadEditableIdsToHidden();  //// This method exist in ApplyToCalendar page.
            }*@
        });
    };

    function HideMessages() {
        $("#listingsuccessMessage").slideUp(1);
        $('#listingspanMessageSuccess').html('');
        $("#content_wraper").removeClass("span10 padding-top40").addClass("span10 all-height");
    }
    var hideAllMessages = false;
    $(document).ready(function () {
        $("#lblMarkringActivitiesTitle").hide();
        $("#errorMessageDuplicatePlan").slideUp(300);
        $(".selectBox select").selectbox();
        $("#ddlViewBy").multiselect({
            multiple: false,
            CustomName: '@Common.CustomTitle',
            selectedList: 1,
            CustomCampaignName: "@Common.CampaignCustomTitle",
            CustomProgramName: "@Common.ProgramCustomTitle",
            CustomTacticName: "@Common.TacticCustomTitle",
            classes: 'custom-right-pos total_cost_dropdown' // Added by Sohel Pathan on 11/11/2014 for PL ticket #934, NOTE : Please don't change class name, it is used in js.
        }).multiselectfilter({
            CustomCampaignName: "@Common.CampaignCustomTitle",
            CustomProgramName: "@Common.ProgramCustomTitle",
            CustomTacticName: "@Common.TacticCustomTitle"
        });
        $("#ddlViewBy").multiselect('refresh');
        LoadPlan();
        onClickPlanTitle();

    });
    function ExpandItems() {
        expand = $("#hdnBudgetingExpandId").val();
   
        if (expand != undefined && expand != '') {
            //modified by Rahul Shah on 25/09/2015 for PL #900.. remove try..catch for handle elmah log
            //try {
            if (CurrentView != "0") {

                $(".column1").find(".firstLevel").each(function () {

                    var currObj = $(this).attr('id');

                    $('#' + currObj).css('display', 'block');
                    $(".sub[data-parent='" + currObj + "']").css('display', 'block');
                    $('#' + currObj + ' a:first-child').addClass('collapse');
                });
            }

            var strExpand = expand;
            var strExpandType = '';
            var strExpandId = 0;
            if (strExpand != undefined && strExpand != '') {
                if (strExpand.indexOf('lineitem') >= 0) {
                    strExpandType = 'lineitem';
                }
                else if (strExpand.indexOf('tactic') >= 0) {
                    strExpandType = 'tactic';
                }
                else if (strExpand.indexOf('program') >= 0) {
                    strExpandType = 'program';
                }
                else if (strExpand.indexOf('campaign') >= 0) {
                    strExpandType = 'campaign';
                }

                strExpandId = strExpand.replace(strExpandType, '');
                //  if ($.isNumeric(strExpandId)) {removed by mitesh vaishnav for make expand functionality working in planned and actual tab
                var currObj, tacticDP, programDP, campaignDP;
                if (strExpandType == 'lineitem') {
                    if ($("#hdnBudgetingIsDelete").val() != "true") {
                        currObj = $('#' + strExpandId.replace('_', '')).parent();
                        tacticDP = $(currObj).parent().attr('data-parent'); //tactic
                        programDP = $(currObj).parent().parent().attr('data-parent'); //program
                        campaignDP = $(currObj).parent().parent().parent().attr('data-parent'); //campaign
                    }
                    else {
                        if (currentTab != 'aAllocated') {
                            strExpandId = "#tacticcpt_" + strExpandId;
                        }

                        currObj = $(strExpandId).next();
                        tacticDP = $(currObj).attr('data-parent'); //tactic
                        programDP = $(currObj).parent().attr('data-parent'); //program
                        campaignDP = $(currObj).parent().parent().attr('data-parent'); //campaign
                        $("#hdnBudgetingIsDelete").val("false");
                    }

                    $('#' + campaignDP).css('display', 'block');
                    $(".sub[data-parent='" + campaignDP + "']").css('display', 'block');
                    $('#' + campaignDP + ' a:first-child').addClass('collapse');
                    $('#' + programDP).css('display', 'block');
                    $(".sub[data-parent='" + programDP + "']").css('display', 'block');
                    $('#' + programDP + ' a:first-child').addClass('collapse');
                    $('#' + tacticDP).css('display', 'block');
                    $(".sub[data-parent='" + tacticDP + "']").css('display', 'block');
                    $('#' + tacticDP + ' a:first-child').addClass('collapse');

                    if ('@myView' != "0") {
                        var mainDP = $(currObj).parent().parent().parent().parent().attr('data-parent'); //audiance
                        $('#' + mainDP).css('display', 'block');
                        $(".sub[data-parent='" + mainDP + "']").css('display', 'block');
                        $('#' + mainDP + ' a:first-child').addClass('collapse');
                    }

                }
                else if (strExpandType == 'campaign') {
                    if (currentTab != 'aAllocated') {
                        strExpand = 'campaignc_' + strExpandId;
                    }
                    $(".sub[data-parent='" + strExpand + "']").css('display', 'block');
                    $('#' + strExpand).css('display', 'block');
                    $('#' + strExpand + ' a:first-child').addClass('collapse');
                }
                else if (strExpandType == 'program') {
                    if (currentTab != 'aAllocated') {
                        strExpand = 'programcp_' + strExpandId;
                    }
                    if (typeof $('#' + strExpand).parent().attr('data-parent') != 'undefined') {
                        $('#' + strExpand).parent().css('display', 'block');

                        campaignDP = $('#' + strExpand).parent().attr('data-parent');
                        $(".sub[data-parent='" + campaignDP + "']").css('display', 'block');
                        $('#' + campaignDP).css('display', 'block');
                        $('#' + campaignDP + ' a:first-child').addClass('collapse');
                    }
                    $(".sub[data-parent='" + strExpand + "']").css('display', 'block');
                    $('#' + strExpand).css('display', 'block');
                    $('#' + strExpand + ' a:first-child').addClass('collapse');

                }
                else if (strExpandType == 'tactic') {
                    if (currentTab != 'aAllocated') {
                        strExpand = 'tacticcpt_' + strExpandId;
                    }
                    var prgm = $('#' + strExpand).parent().attr('data-parent');
                    var cmgn = $('#' + prgm).parent().attr('data-parent');
                    if (typeof cmgn != 'undefined') {
                        $(".sub[data-parent='" + cmgn + "']").css('display', 'block');
                        $('#' + cmgn).css('display', 'block');
                        $('#' + cmgn + ' a:first-child').addClass('collapse');
                    }
                    if (typeof prgm != 'undefined') {
                        $('#' + strExpand).parent().css('display', 'block');
                        $(".sub[data-parent='" + prgm + "']").css('display', 'block');
                        $('#' + prgm).css('display', 'block');
                        $('#' + prgm + ' a:first-child').addClass('collapse');
                    }
                    $(".sub[data-parent='" + strExpand + "']").css('display', 'block');
                    $('#' + strExpand).css('display', 'block');
                    $('#' + strExpand + ' a:first-child').addClass('collapse');

                }
                $('#hdnBudgetingExpandId').val('');
                // } removed by mitesh vaishnav for make expand functionality working in planned and actual tab
            }
            //} catch (e) {

            //}
        }
        //Added By : Kalpesh Sharma : #739 Adding additional views to Budget Planning screen
    var data = $(".column1").get(0);
    $(".budget-table .column1 > tr").each(function () {
        $(this).width(data.scrollWidth);
    });
}
    $("#ddlViewBy").change(function () {
    CurrentView = $('#ddlViewBy').val();
    var TacCustomTitle = "@Common.TacticCustomTitle";
        //alert("TacCustomTitle: " + TacCustomTitle + " index: " + CurrentView.indexOf(TacCustomTitle));
        if (CurrentView.length > 0 && CurrentView.indexOf(TacCustomTitle) >= 0) {
            //$('#divCostBudget').hide(); Commented By Maitri Gandhi on 22/3/2016 for #2039
            CurrentView = CurrentView.replace(TacCustomTitle, "");
            
        }
        else {
            if (currentTab == "aPlanned") {
                $('#divCostBudget').show();
            }
        }
            TabLoad(currentTab);
        });

    function TabLoad(sender) {
            currentTab = sender;
            $("#hdnBudgetingCurrentTab").val(currentTab);
            $("#hdnBudgetingCurrentPlanId").val(CurrentPlanId);

            $('.pull-right').removeClass('active');
            $('#' + sender).addClass('active');
            if (CurrentPlanId != 0) {
                $('.plannedCost').children().show();
                $('.budgetCompare').children().show();
                $('#nl-form2').show();

                if (currentTab == 'aAllocated') {
                    $('#divTabData').load('@Url.Action("GetAllocatedBugetData", "Plan")' + '?PlanId=' + CurrentPlanId, function (response, status, xhr) {
                if (response == '{"serviceUnavailable":"~/Login/ServiceUnavailable"}') {
                    //// Call function to redirect on service unavailibility.
                    //// Added By: Maninder Singh Wadhva on 11/24/2014.
                    //// Ticket: 942 Exception handeling in Gameplan.
                    window.location = '@Url.Content(Common.RedirectOnServiceUnavailibilityPage)';
                }
                ExpandItems();
            });
            $("#DivloadPlan").removeClass('margin-top-50');
        }
        else if (currentTab == 'aPlanned') {
            $('#divViewBy').show();
            $('#divTabData').load('@Url.Action("GetBudgetedData", "Plan")' + '?PlanId=' + CurrentPlanId + '&budgetTab=1&viewBy=' + CurrentView, function (response, status, xhr) {
                    if (response == '{"serviceUnavailable":"~/Login/ServiceUnavailable"}') {
                        //// Call function to redirect on service unavailibility.
                        //// Added By: Maninder Singh Wadhva on 11/24/2014.
                        //// Ticket: 942 Exception handeling in Gameplan.
                        window.location = '@Url.Content(Common.RedirectOnServiceUnavailibilityPage)';
                }
                ExpandItems();
            });
            $("#DivloadPlan").addClass('margin-top-50');
        }
        else if (sender == 'aActuals') {
            $('#divViewBy').show();
            $('#divTabData').load('@Url.Action("GetBudgetedData", "Plan")' + '?PlanId=' + CurrentPlanId + '&budgetTab=2&viewBy=' + CurrentView, function (response, status, xhr) {
                if (response == '{"serviceUnavailable":"~/Login/ServiceUnavailable"}') {
                    //// Call function to redirect on service unavailibility.
                    //// Added By: Maninder Singh Wadhva on 11/24/2014.
                    //// Ticket: 942 Exception handeling in Gameplan.
                    window.location = '@Url.Content(Common.RedirectOnServiceUnavailibilityPage)';
                }
                ExpandItems();
            });
            $("#DivloadPlan").addClass('margin-top-50');
        }
               
}
else {
    $('#nl-form2').hide();
    $('#divTabData').html('');
    $('#DivloadPlan').html('<h5 style="padding-left:22px;">No plan exist</h5>');
    $('.plannedCost').children().hide();
    $('.budgetCompare').children().hide();
    $('#divViewBy').hide();
}
    if (hideAllMessages) {
        $('.datepicker.dropdown-menu').css("display", "none");
        $("#slidepanel").css("display", "none");
        $("#slidepanel-container").empty();
        $("#errorMessageDuplicatePlan").slideUp(300);
        HideMessages();
    }
}


function LoadPlan() {
     
    //  $('#DivloadPlan').load('@Url.Action("BudgetPlanList", "Plan")', function () { TabLoad(currentTab); ShowChangeLog(CurrentPlanId); hideAllMessages = true; });
    ShowChangeLog(CurrentPlanId);
    var plans = @Html.Raw(Json.Encode(ListBudgetingPlan))
   populateNF(plans, "dropdown-plan-title");
    var nlform = new NLForm(document.getElementById('nl-form2'));
    TabLoad(currentTab);   
    GetHealderData(CurrentPlanId, "", "", "", "", "", IsHeaderActuals);
    GetNumberOfActivityPerMonByPlanId(CurrentPlanId, isQuater, "", "", "", "", "", IsHeaderActuals);
    hideAllMessages = true;
}

function populateNF(items, id) {
    var $dropdown = $("#" + id);
    var $html = '';
    if (items.length > 0) {
        $.each(items, function (index, plan) {
            if (plan.Selected) {
                $html += '<option value="' + plan.Value + '" selected>' + plan.Text + '</option>';
                CurrentPlanId = plan.Value;
            } else {
                $html += '<option value="' + plan.Value + '">' + plan.Text + '</option>';
            }
        });
    } else {
        $html += '<option value=' + 0 + ' selected>' + "Plan Title" + '</option>';
        CurrentPlanId = 0;
    }
    $dropdown.append($html);
}

function onClickPlanTitle() {
   
    $('#nl-form2 > div[class="nl-field nl-dd"]').find('li').click(function (e) {
        //Added by Maitri Gandhi for #2040 on 31/3/2016
        var cookie = document.cookie;
        if (cookie.indexOf("gridOpengridbox") > -1) {
            var cookies = cookie.split(';');
            for (var i = 0; i < cookies.length; i++) {
                if (cookies[i].indexOf("gridOpengridbox") > -1) {
                    cookies[i] = "gridOpengridbox=plan.1";
                }
            } document.cookie = "gridOpengridbox=plan.1";
            //document.cookie = cookies.join(';');
        }
        else {
            //cookie += "; gridOpen=plan.1";
            document.cookie = "gridOpengridbox=plan.1";
        }

        CurrentPlanId = $(this).attr('value');
        ShowChangeLog(CurrentPlanId);
        $("#CurrentPlanId").val(CurrentPlanId);
        TabLoad(currentTab);
        $('.datepicker.dropdown-menu').css("display", "none");
        $("#slidepanel").css("display", "none");
        $("#slidepanel-container").empty();
        $("#errorMessageDuplicatePlan").slideUp(300);
        HideMessages();
        isQuater = "";
        if (CurrentPlanId > 0) {  //Modified by komal rawal for new homepage UI
            GetHealderData(CurrentPlanId, "", "", "", "", "", IsHeaderActuals);
            GetNumberOfActivityPerMonByPlanId(CurrentPlanId, isQuater, "", "", "", "", "", IsHeaderActuals);
        }
    });
}

function BackToPlan() {
       
    var pid = $("#CurrentPlanId").val();
        var url = '@Url.Content("~/Home/Index?ActiveMenu=")' + '@Enums.ActiveMenu.Plan' + '&currentPlanId=' + pid + '&IsPlanSelector=' + "true" + '&PreviousPlanID=' + '@Sessions.PlanId' + '&isGridView=' + '@IsGridView'; //Modified by Komal Rawal for 2013 Home/Plan Layout changes
        window.location.href = url;
    }


$(document).on("click", "#LeftNavInput", function (e) {
    //Added By : Kalpesh Sharma : #741: Maintain context while switching with in plan's tabs
    var queryStringArr = [];

    queryStringArr.push(
     {
         key: 'id',
         Value: CurrentPlanId
     });

    displayconfirm('@Url.Content("~/Plan/Create")', queryStringArr);
});

$(document).on("click", "#LeftNavAddActivity", function (e) {
    var queryStringArr = [];

    queryStringArr.push(
     {
         key: 'ActiveMenu',
         Value: "Plan"
     });

    queryStringArr.push(
     {
         key: 'currentPlanId',
         Value: CurrentPlanId
     });

    displayconfirm('@Url.Content("~/Home/Index")', queryStringArr);
});

$(document).on("click", "#LeftNavCampaigns", function (e) {
    var queryStringArr = [];
    displayconfirm('@Url.Action("Assortment", "Plan")', queryStringArr);
});

$(document).on("click", "#aApplyToCalender", function (e) {
    window.location.href = '@Url.Action("ApplyToCalendar", "Plan")';
    });

    function displayconfirm(strURL, queryStringArr) {
        HideMessages();
        // window.location.href = strURL;
        formSubmitEvent(strURL, queryStringArr);
    }

    $(document).on("click", "#confirmClose", function (e) {
        $("#errorMessageDuplicatePlan").slideUp(400);   // Modified by Sohel Pathan on 18/08/2014 for Internal Review Points
    });

    function isDataChanged() {
        var changed = false;

        $('#slidepanel-container').find("input[type=text],textarea,select, .priceValue").each(function () {     // Modified by Sohel Pathan on 18/08/2014 for Internal Review Points
            if ($(this).is('[readonly]') == false) {
                var iv = $(this).attr("myValue");
                if ($(this).attr('id') == 't_startdate' || $(this).attr('id') == 't_enddate') {
                    var strValue = $(this).val();
                    if (strValue != null && strValue != '') {
                        strValue = strValue.replace(' 12:00:00 AM', '');
                        $(this).val(strValue);
                        var newDateObj = new Date($(this).val());
                        var oldDateObj = new Date(iv);
                        if (newDateObj.getFullYear() + '-' + newDateObj.getMonth() + '-' + newDateObj.getDate() != oldDateObj.getFullYear() + '-' + oldDateObj.getMonth() + '-' + oldDateObj.getDate()) {
                            changed = true;
                            return false;   // Added by Sohel Pathan on 19/08/2014 for Internal Review Points
                        }
                    }
                }
                else {
                    if ($(this).val() != iv) {
                        changed = true;
                        return false;   // Added by Sohel Pathan on 18/08/2014 for Internal Review Points
                    }
                }
            }
        });
        return changed;
    }
    // Start - Added by Sohel Pathan on 19/08/2014 for Internal Review Points


    $("#header a").not("#ContactSupport").click(function () {
        if (isDataChanged()) {
            displayconfirm($(this).attr('href'));
            return false;
        }
        else {
            return true;
        }
    });

    // End - Added by Sohel Pathan on 19/08/2014 for Internal Review Points

    function ShowModels(mode, section, id, ParentId, RequestedModule) {
        removeDefaultModalPopupBackgroungColor();
        modalFullPosition(); // Added by Kapil Antala on 17 Sep 2014 for #732 - new popup design

        $('.modal-backdrop').addClass('modalFull-backdrop');
        $('.modal-backdrop').attr("style", "display:none !important;");
        $("#successMessage").css("display", "none");
        $("#errorMessage").css("display", "none");
        $("#successMessageDuplicatePlan").css("display", "none");
        $("#modal-container-186470").modal('show');
        ParentId = typeof ParentId != 'undefined' ? ParentId : '0';
        RequestedModule = typeof RequestedModule != 'undefined' ? RequestedModule : '';

        $("#hdnRequestedModule").val(RequestedModule);
        var currentTab = "Setup";
        if ((RequestedModule == "Budgeting") && (mode == "ReadOnly")) {
            currentTab = "Budget";
        }

        if (section == "campaign") {
            if (mode == "Add") {
                loadInspectPopup("0", "campaign", currentTab, "Add", ParentId, RequestedModule);
            }
            else {
                loadInspectPopup(id, "campaign", currentTab, "Edit", ParentId, RequestedModule);
            }
        }
        else if (section == "program") {
            if (mode == "Add") {
                loadInspectPopup("0", "program", currentTab, "Add", ParentId, RequestedModule);
            }
            else {
                loadInspectPopup(id, "program", currentTab, "Edit", ParentId, RequestedModule);
            }
        }
        else if (section == "tactic") {
            if (mode == "Add") {
                loadInspectPopup("0", "tactic", currentTab, "Add", ParentId, RequestedModule);
            }
            else {
                loadInspectPopup(id, "tactic", currentTab, "Edit", ParentId, RequestedModule);
            }
        }
        else if (section == "improvementtactic") {
            if (mode == "Add") {
                loadInspectPopup(0, "improvementtactic", currentTab, "Add", ParentId, RequestedModule);
            }
            else {
                loadInspectPopup(id, "improvementtactic", currentTab, "Edit", ParentId, RequestedModule);
            }
        }
        else if (section == "lineitem") {
            if (mode == "Add") {
                loadInspectPopup("0", "lineitem", currentTab, "Add", ParentId, RequestedModule);
            }
            else {
                loadInspectPopup(id, "lineitem", currentTab, "Edit", ParentId, RequestedModule);
            }
        }
        else if (section == "plan") {
            if (mode == "Add") {
                loadInspectPopup("0", "plan", currentTab, "Add", ParentId, RequestedModule);
            }
            else {
                loadInspectPopup(id, "plan", currentTab, "Edit", ParentId, RequestedModule);
            }
        }
        //modalBackdropDisplayNone();
    }

    var currentRequestforTactics = null;
    function GetTacticTypelist(Planids, async, OnPlanChange) {

        var asyncval = false;
        if (async != undefined && async != 'undefined' && async != '' && async != null) {
            asyncval = async;
        }
        else {
            asyncval = false;
        }
        $('#ulTacticType').html('');

        currentRequestforTactics = $.ajax({
            beforeSend: function (x) {
                if (!asyncval) {
                    myApp.showPleaseWait();
                }
                if (currentRequestforTactics != null) {
                    currentRequestforTactics.abort();
                }
            },
            type: "GET",
            cache: false,
            async: asyncval,
            url: '@Url.Action("GetTacticTypeListForFilter", "Home")',
            data: {
                PlanId: Planids.toString()
            },
            dataType: "json",
            success: function (data) {

                if (data.returnURL != 'undefined' && data.returnURL == '#') {
                    window.location = '@Url.Content(Common.RedirectOnServiceUnavailibilityPage)';
                }
                else {
                    if (data.isSuccess == true) {
                        LoadTacticTypelist(data);
                    }
                    else {
                        $("#TacticTypeAllModule").css("display", "none");
                        $("#NoTTFound").show();
                    }
                    TactictypeCount = $("#ulTacticType li").length;
                    checkedTTcount = $("#ulTacticType li input:checkbox:checked").length;
                    $('#tTTcount').text('/' + TactictypeCount);
                    $('#cTTcount').text(checkedTTcount);
                    async = true;
                }
            }
        });

    }

    var selectedFilters = {
        yearIds: [],
        planName: [],
        ownerName: [],
        tacticTypeTitle: [],
        StatusIds: []
    };
    var FiltersNone = "None";
    function LoadTacticTypelist(data) {
        if (data.TacticTypelist != 'undefined' && data.TacticTypelist != null) {
            TactictypeCount = data.TacticTypelist.length;
            if (TactictypeCount > 0) {
                $("#TacticTypeAllModule").css("display", "block");
                $("#NoTTFound").hide();
                $('#ulTacticType li').remove();
                $.each(data.TacticTypelist, function (i, TactictypeItem) {
                    var checkedclass = "";
                    var checked = "";
                    checked = "checked"
                    checkedclass = "close-list"
                    $('#ulTacticType').append('<li class="accordion-inner ' + checkedclass + '" title="' + TactictypeItem.Title + ' (' + TactictypeItem.Number + ')" id="liTT' + TactictypeItem.TacticTypeId + '"><span class="sidebarliwidth">' + TactictypeItem.Title + " " + '(<span class="font-size14 TacticNumber" Previousvalue= ' + TactictypeItem.Number + '>' + TactictypeItem.Number + '</span>) </span><input type="checkbox" class="chkbxfilter" TacticTypeTitle="' + TactictypeItem.Title + '" onchange="toggleTacticType(this)" id="CbTT' + TactictypeItem.TacticTypeId + '"' + checked + '></input></li>');
                });
                selectedFilters.tacticTypeTitle = [];
                $("#ulTacticType li input[type=checkbox]:checked").each(function () {
                    if (selectedFilters.tacticTypeTitle.indexOf($(this).attr('tactictypetitle').toString()) == -1) {
                        selectedFilters.tacticTypeTitle.push($(this).attr('tactictypetitle').toString());
                    }
                });

                if (selectedFilters.tacticTypeTitle.length == 0) {
                    $('#lstTType').text(FiltersNone);
                }
                else if ($("#ulTacticType li").length == selectedFilters.tacticTypeTitle.length) {

                    $('#lstTType').text(FiltersAll);
                }
                else {
                    $('#lstTType').text(selectedFilters.tacticTypeTitle.join(", "));
                }
                //End
            }
            else {
                $("#TacticTypeAllModule").css("display", "none");
                $("#NoTTFound").show();
            }
        }
    }

    function GetOwnerListForFilter(Planids, async, OnPlanChange) {
        return true;
    }
    function SaveLastSetofViews(ViewName) {
        return true;
    }

    function BindUpcomingActivites(SelectedPlanIds) {

        // Start - #1942
        var listCheckbox = $("#ulSelectedYear").find("input[type=checkbox]");
        var years = "";
        $.each(listCheckbox, function () {
            if ($(this).attr("checked")) {
                years += $(this).attr('yearValue') + ",";
            }
        });
        years = years.slice(0, -1);
        // End - #1942
        //Modified by Komal Rawal for maintaining time fram when we change time frame and add a tactic
        var currentval = $("#ddlUpComingActivites").val();
        $.ajax({
            type: 'POST',
            url: '@Url.Content("~/Home/BindUpcomingActivitesValues/")',
            async: false,// Comment by bhavesh // Uncomment By Nishant Sheth Desc :: Due to selected min year records display
            data: {
                planids: SelectedPlanIds,
                fltrYears: years
            },
            success: function (data) {
                BindUpcomingActivies(data);
                var upcomingvalues = [];
                $.each($("#ddlUpComingActivites option"), function () {
                    upcomingvalues.push(this.value.toString());
                });
                if (upcomingvalues.indexOf(currentval) > 0) {
                    $.each($("#ddlUpComingActivites option"), function () {
                        $(this).removeAttr('selected');
                    });
                    $("#ddlUpComingActivites option[value='" + currentval + "']").attr('selected', 'selected');
                    $("#ddlUpComingActivites").selectbox('detach');
                    $("#ddlUpComingActivites").selectbox("attach");
                }
                //End
            }
        });
    }
    function BindUpcomingActivies(items) {
        var $dropdown = $("#ddlUpComingActivites");
        $dropdown.html('');
        var $html = '';
        if (items.length > 0) {
            $.each(items, function (index, pvalues) {
                if (pvalues.Selected) {
                    $html += '<option value="' + pvalues.Value + '" selected="selected">' + pvalues.Text + '</option>';
                } else {
                    $html += '<option value="' + pvalues.Value + '">' + pvalues.Text + '</option>';
                }
            });
        }
        $dropdown.append($html);
        Currenttime = $("#ddlUpComingActivites").val();
        $("#ddlUpComingActivites").selectbox('detach');
        $("#ddlUpComingActivites").selectbox("attach");
    }
     @*Added by Rushil Bhuptani on 06/03/2016 for #2214*@
    function ExportToExcel() {
        if (currentTab == "aAllocated") {
            ExportToExcelBudget();
        }
        else if (currentTab == "aPlanned" || currentTab == "aActuals") {
            ExportToExcelPlannedActuals();
        }
    }
</script>