@model RevenuePlanner.Models.BudgetDHTMLXGridModel
@using RevenuePlanner.Models
@using RevenuePlanner.Helpers

@*TODO :- Commented code by Rushil on 26/05/2016 after conversion of HTML grid to DHTMLX grid for #2197. Need to remove this code after testing.*@
@*@model List<BudgetModel>*@
@{
    string allocatedBy = ViewBag.AllocatedBy;
      @*TODO :- Commented code by Rushil on 26/05/2016 after conversion of HTML grid to DHTMLX grid for #2197. Need to remove this code after testing.*@
    //BudgetModel plan = Model.SingleOrDefault(p => p.ActivityType == ActivityType.ActivityPlan);
    string strDefault = Enums.PlanAllocatedByList[Enums.PlanAllocatedBy.defaults.ToString()].ToLower();
    string strMonths = Enums.PlanAllocatedByList[Enums.PlanAllocatedBy.months.ToString()].ToLower();
    string strQuarters = Enums.PlanAllocatedByList[Enums.PlanAllocatedBy.quarters.ToString()].ToLower();
    bool isquarter = allocatedBy.ToLower() == strQuarters;
}
@{
    BudgetMonth PercAllocated = ViewBag.PercAllocated; 
    double planAllocation = 0;

    // Modified by Rushil Bhuptani on 26/05/2016 for #2197
    double sumMonth = ViewBag.SumMonth;
    planAllocation = ViewBag.PlanAllocation;
    double budgeted = ViewBag.Budgeted;
  
    //BudgetDHTMLXGridModel TestModel = (BudgetDHTMLXGridModel)Session["TestGrid"];
   
}
<link href="@Url.Content("~/Content/css/DHTMLX/dhtmlxtreegrid2_min.css")" rel="stylesheet" type="text/css" />
<link href="~/Content/css/fileinput.css" rel="stylesheet" />
<script type="text/javascript" src="@Url.Content("~/Scripts/js/DHTMLX/dhtmlxtreegrid_min.js")"></script>
<script src="~/Scripts/jquery.cluetip.js"></script>
<script src="~/Scripts/js/fileinput.js"></script>
<style>

    div.gridbox_dhx_skyblue.gridbox table.hdr td div.hdrcell
    {
        text-align: center;
        padding-left: 0px !important;
    }

    div.gridbox_dhx_skyblue.gridbox div.xhdr table.hdr
    {
        width: 100% !important;
    }

    div.gridbox_dhx_skyblue.gridbox div.xhdr table.hdr tr
    {
        color: black;
    }

    div.gridbox_dhx_skyblue.gridbox div.objbox table.row20px
    {
        width: 100% !important;
    }

    div.gridbox_dhx_skyblue.gridbox div.objbox table.row20px tr
    {
        color: black;
    }

    div.gridbox_dhx_skyblue.gridbox div.objbox table.row20px tr td div.treegrid_cell
    {
        text-align: left !important;
    }

    div.gridbox_dhx_skyblue.gridbox div.objbox table.row20px tr td div
    {
        text-align: center;
    }

    div.gridbox_dhx_skyblue.gridbox div.objbox table.row20px .progressBar.budgetError
    {
        background: #ff1e26 none repeat scroll 0 0;
    }

    div.gridbox_dhx_skyblue.gridbox div.objbox table.row20px .progressBar
    {
        background: #3fa9f5 none repeat scroll 0 0;
        bottom: 0;
        height: 2px !important;
        left: 0;
        margin: 0;
        max-width: 100%;
        padding: 0;
        position: absolute;
    }

    div.gridbox_dhx_skyblue.gridbox div.objbox table.row20px tr td div.budgetError, span.budgetError
    {
        color: #ff1e26;
    }

    #gridbox.gridbox_dhx_skyblue.gridbox div.objbox table.row20px tr td
    {
        position: relative;
    }

    .dhxgrid_sort_asc, .dhxgrid_sort_desc
    {
        background-repeat: no-repeat;
        height: 26px;
        top: 44px !important;
        width: 15px;
    }


    .clickmeAnchor {
        color: #000 !important;
        cursor: pointer;
    }
   .kv-upload-progress {
        display: none;
    }
</style>
<div class="tab-content all-height cf" style="position:relative">
    
    <div class="ExpImp-Btnwrap clearfix">
        <a class="btn btn-blue text-shadow-blue" onclick="showModal();" id="ImportBtn" role="button" data-toggle="modal" style="">
            Import
        </a>
        <a class="btn btn-blue text-shadow-blue budget-export-link" style="cursor: pointer" id="exportcsv" onclick="return ExportToExcel(); ">
            <span>Export</span>
        </a>
    </div>
    <div class="tab-pane active all-height" id="panel-656352">
        <div id="paln-populated-collaborators-panel-wrapper" class="pl20 cf">
            <div class="cf all-height lenght-div">
                <div class="budget-table source-sans-proregular">
                    @*TODO :- Commented code by Rushil on 26/05/2016 after conversion of HTML grid to DHTMLX grid for #2197. Need to remove this code after testing.*@

                    @*<table cellpadding="0" cellspacing="0" border="0" class="budget-table">
                        <tbody class="column1 display-table-row">
                            <tr>
                                <td>
                                    <div id="div2PlanDetails">&nbsp;</div>
                                </td>
                            </tr>
                            <tr>
                                <td class="event-row">
                                    <div id="divPlanDetails"><a id="aPlanDetails">@plan.ActivityName</a></div>
                                </td>
                            </tr>
                            @Html.ActivityCampaign(ActivityType.ActivityCampaign, plan.ActivityId, Model, "0")
                        </tbody>
                        <tbody class="column4">
                            <tr>
                                <td>
                                    <div>Budget</div>
                                </td>
                            </tr>
                            @Html.CampaignBudgetSummary(ActivityType.ActivityCampaign, plan.ActivityId, Model, allocatedBy, "0")
                        </tbody>
                        <tbody class="column2">
                            @Html.AllocatedPlanMonth(ActivityType.ActivityPlan, plan.ActivityId, plan.Month, plan.ParentMonth, allocatedBy, Model)
                            @Html.AllocatedCampaignMonth(ActivityType.ActivityCampaign, plan.ActivityId, Model, allocatedBy)
                        </tbody>
                        <tbody class="column3">
                            <tr>
                                <td>
                                    <div>Unallocated</div>
                                </td>
                            </tr>
                            @Html.CampaignSummary(ActivityType.ActivityCampaign, plan.ActivityId, Model, allocatedBy, "0")
                        </tbody>
                    </table>*@
                    <div style="clear: both;"></div>
                </div>
                <div id="gridbox" style="background-color: white; width: 100%;" class="financeReportGrid"></div>
                @*Added by Rushil Bhuptani on 06/03/2016 for #2214*@
                <div id="gridExport" style="background-color: white; width: 100%;display:none" class="financeReportGrid"></div>
            </div>
        </div>
    </div>
</div>
<div id="loadme" class="loadme-true" style="display: none;">
    <h3 class="source-sans-proregular"></h3>
    <div class="tooltip-field">
    </div>
    <p class="button-grp-tooltip">
        <button class="btn btn-blue text-shadow-blue source-sans-proregular tooltip-button" id="btnClueTip">Save</button>
    </p>
</div>
<div class="container-fluid all-height" id="modalMainContainer">
    <div class="row-fluid calc-height">
        <div class="container-fluid">
            <div class="row-fluid ">
                <div class="span12">

                    <div id="modal-container-186470" class="modal-inspect-review hide fade modal-full-view" role="dialog" aria-labelledby="myModalLabel" aria- hidden="true" style="display: none; position: fixed; overflow:hidden;">
                        <div class="partial_wrapper">
                            <div id="successMessage" class="alert alert-success  messagewidth">
                                <a class="close">×</a>
                                <strong>Success.</strong> <span id="spanMessageSuccess"></span>
                            </div>
                            <div id="errorMessage" class="alert alert-error hide  messagewidth">
                                <a class="close">×</a>
                                <strong>Error!</strong> <span id="spanMessageError">@Common.objCached.ValidateForEmptyField</span>
                            </div>
                            <div id="divPartial" class="partial_wrapper">
                            </div>

                        </div>
                    </div>
                    <div id="divResubmission">
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@* #2227 Popup Modal - Added by Bhumika*@
<div id="ImportModal" class="modal hide fade import-popover">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
        <h4> Import Data  </h4>
    </div>
    <div class="modal-body">
        <ul>
            <li><strong>Download file format <a href="~/Content/Common/grid sample.xls">here</a></strong></li>
            <li><strong>Make any necessary changes</strong><br />
                <span>Note: Any additional rows or columns added will not appear after imported</span></li>
            <li><strong>Import the file</strong><br />
<span>Note:The file format must match the file format of sample file.</span>
</li>
        </ul>
        <input id="input-43" name="input43[]" type="file" class="file-loading select-file">
        <div id="errorBlock" class="help-block"></div>
    </div>

    @*<div class="modal-footer">
            <a href="#" class="btn">Close</a>
            <a href="#" class="btn btn-primary">Save changes</a>
        </div>*@
</div>

<script type="text/javascript">
   
    // Added by Rushil Bhuptani on 22/06/2016 for #2227 to show popup.
    function showModal() {
        $('#ImportModal').modal('show');
    }

    var heights = $('.column1').find('div').map(function () {
        var intWidth = 0;
        if ($(this).css('display') == 'none') {
            intWidth = $(this).actual('width');
        }
        else {
            intWidth = $(this).width();
        }

        return $(this).width();
    }).get();

    $(document).ready(function () {
        
        // Added by Rushil Bhuptani on 22/06/2016 for #2227 to clear file input on modal hide.
        $('#ImportModal').on('hidden.bs.modal', function() {
            $('#input-43').fileinput('clear');
        });
        $('#input-43').on('fileclear', function (event) {
            $('.fileinput-upload-button').hide();
        });

        // Added by Rushil Bhuptani on 14/06/2016 for #2227 for initializing file input plugin
        $("#input-43").fileinput({
            type: 'POST',
            showPreview: false,
            uploadUrl: '@Url.Action("ExcelFileUpload", "Plan")',
            allowedFileExtensions: ["xls", "xlsx"],
            msgInvalidFileExtension: 'Incorrect file format. Please export the file and use that file to upload your changes',
            elErrorContainer: "#errorBlock"

        });

        // Added by Rushil Bhuptani on 16/06/2016 for #2227 for showing progress bar while importing file.
        $('#input-43').on('filepreupload', function (event, data, previewId, index) {
            myApp.showPleaseWait();
        });

        // Added by Rushil Bhuptani on 15/06/2016 for #2227 to refresh grid data after file is uploaded.
        $('#input-43').on('fileuploaded', function (event, data, previewId, index) {
           
            // Added by Rushil Bhuptani on 21/06/2016 for ticket #2267 for showing message for conflicting data.
            if (data.response.conflict == true) {
                ShowMessage(false,data.response.message);
            }
            $('#divTabData').load('@Url.Action("GetAllocatedBugetData", "Plan")' + '?PlanId=' + CurrentPlanId, function (response, status, xhr) {
                if (response == '{"serviceUnavailable":"~/Login/ServiceUnavailable"}') {
                    window.location = '@Url.Content(Common.RedirectOnServiceUnavailibilityPage)';
                }
                ExpandItems();
                myApp.hidePleaseWait();
            });
            $("#DivloadPlan").removeClass('margin-top-50');
            // Added by Rushil Bhuptani on 22/06/2016 for #2227 to close popup on successful import of data.
            $('#ImportModal').modal('hide');
           
        });

        $('#input-43').on('fileloaded', function (event, file, previewId, index, reader) {
            $('.fileinput-upload-button').show();
        });
        $('#input-43').on('fileuploaderror', function (event, data, msg) {
            $('.fileinput-upload-button').hide();
        });
        $('#errorMessageDuplicatePlan').slideUp(400);
        //The object CurrentTab is initiate in parent of this view
        var TacCustomTitle = "@Common.TacticCustomTitle";
        if (currentTab == "aPlanned" && $('#ddlViewBy').val().indexOf(TacCustomTitle) < 0) {
            $("#divCostBudget").removeAttr('style');
        }
        else {
            $("#aonCost").removeClass('request-btn-active');
            $("#aoffCost").addClass('request-btn-active');
            $("#divCostBudget").attr('style', 'display:none;')
        }
     
        SetHeader();
        BindBudgetGrid();
        
        $.fn.hasScrollBar = function () {
            return this.get(0).scrollWidth > this.width();
        }

        // Budget Table
        var mainTableWidth = $('.budget-table').width();
        var columnWidth1 = $('.column1').width();
        var columnWidth3 = $('.column3').width();
        var columnWidth4 = $('.column4').width();
        $('.column2').width(mainTableWidth - columnWidth1 - columnWidth3 - columnWidth4 - 24);
        $('.cluetip-outer').parent().remove();

        var isquarter = false;
        if ('@isquarter' == 'True') {
            isquarter = true;
        }
        $('.clickme').cluetip({ activation: 'click', arrows: true, dropShadow: false, sticky: true, mouseOutClose: false, local: true, isQuarter: isquarter });

        // Added by Rushil on 26/05/2016 to enable child text click for #2197.
        $('.clickmeprogram').cluetip({ activation: 'click', arrows: true, dropShadow: false, sticky: true, mouseOutClose: false, local: true, isQuarter: isquarter });
        $('.clickmeAnchor').cluetip({ activation: 'click', arrows: true, dropShadow: false, sticky: true, mouseOutClose: false, local: true, isQuarter: isquarter });

        $('.accordionClick').on('click', function () {
            var accordionId = $(this).parent().attr('id');
            $('table').find(".sub[data-parent='" + accordionId + "']").fadeToggle(100);
            $(this).toggleClass('collapse');

            if ($(".sub[data-parent='" + accordionId + "']").show()) {
                $(".sub[data-parent='" + accordionId + "']").prev('#' + accordionId).toggleClass('open');
            }

            //Added By : Kalpesh Sharma : #739 Adding additional views to Budget Planning screen
            var data = $(".column1").get(0);

            $(".budget-table .column1 > tr").each(function () {
                $(this).width(data.scrollWidth);
            });

        });

        //in case of chrome browser it is creating design issue
        $.browser.chrome = /chrom(e|ium)/.test(navigator.userAgent.toLowerCase());
        if ($.browser.chrome) {
            //var maxHeight = Math.max.apply(Math, heights);
            //var column1Width = $('.column1 div').css('width');
            //column1Width = column1Width.replace('px', '');
            //modified by Rahul Shah on 25/09/2015 for PL #900.. remove try..catch for handle elmah log
            //try {
            $('.display-table-row').removeClass('display-table-row');
            //if (parseInt(column1Width) < maxHeight) {
            //    //$('#divPlanDetails').css('width', parseInt(maxHeight) - 15);
            //    //$('#div2PlanDetails').css('width', parseInt(maxHeight) + 15);
            //    //if ($('.column1 .programLevel').length > 0)
            //    //    $('.column1 .programLevel').css('width', parseInt(maxHeight) - parseInt($(".programLevel").css("padding-left").replace("px", "")) - parseInt($(".programLevel").css("padding-right").replace("px", "")) + 15);
            //    //if ($('.column1 .campaignLevel').length > 0)
            //    //    $('.column1 .campaignLevel').css('width', parseInt(maxHeight) - parseInt($(".campaignLevel").css("padding-left").replace("px", "")) - parseInt($(".campaignLevel").css("padding-right").replace("px", "")) + 15);
            //    //if ($('.column1 .program-lvl').length > 0)
            //    //    $('.column1 .program-lvl').css('width', parseInt(maxHeight) + 15);
            //    $('.display-table-row').removeClass('display-table-row');
            //}
            //else {
            //    $('.display-table-row').removeClass('display-table-row');
            //}
            //} catch (e) {

            //}
        }
    });

    @*function cluetipClick(test) {
       
        var isquarter = false;
        if ('@isquarter' == 'True') {
            isquarter = true;
        }
        $(test).cluetip({ activation: 'click', arrows: true, dropShadow: false, sticky: true, mouseOutClose: false, local: true, isQuarter: isquarter });
    }*@

    //Added By Maitri Gandhi on  13/5/2016 for
    function BindBudgetGrid() {
        
        var JsonModel = '@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Grid))';
        
        

        @*TODO :- Commented code by Rushil on 26/05/2016 after conversion of HTML grid to DHTMLX grid for #2197. Need to remove this code after testing.*@
        @*var JsonModel = '@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(TestModel.Grid))';*@
        HomeGrid = new dhtmlXGridObject('gridbox');
       
        var imgpath = '@Url.Content("~/codebase/imgs/")';
        HomeGrid.setImagePath(imgpath);
        HomeGrid.setImageSize(1, 1);
        HomeGrid.setHeader('@Model.SetHeader');
        HomeGrid.setColTypes('@Model.ColType');
        HomeGrid.setInitWidths('@Model.Width');
        HomeGrid.setColSorting('@Model.ColSorting');

        
        @*TODO :- Commented code by Rushil on 26/05/2016 after conversion of HTML grid to DHTMLX grid for #2197. Need to remove this code after testing.*@
        @*HomeGrid.setHeader('@TestModel.SetHeader');
        HomeGrid.setColTypes('@TestModel.ColType');
        HomeGrid.setInitWidths('@TestModel.Width');
        HomeGrid.setColSorting('@TestModel.ColSorting');*@
        HomeGrid.enableAutoHeight(true);
        HomeGrid.enableAutoWidth(false);
        HomeGrid.setEditable(false);
        HomeGrid.init();
        setTimeout(function () {
            HomeGrid.loadOpenStates();
        }, 500);
        setTimeout(function () {
            HomeGrid.setSizes();
        }, 200);


        var mainGridData = JsonModel;
        mainGridData = $('<textarea/>').html(mainGridData.toString().replace(/[\\]/g, "\\\\")).text(); // Decode Html content.
        var GridDataHomeGrid = (mainGridData.toString().replace(/&amp;/g, '&'));

        HomeGrid.parse(GridDataHomeGrid, "json");
        //  HomeGrid.splitAt(3);
        HomeGrid.setColumnHidden(0, true);
         
        @*Added by Rushil Bhuptani on 06/03/2016 for #2214*@
        HomeGrid.setColumnHidden(HomeGrid.getColumnsNum() - 1, true);
        //Commented by Rahul Shah for PL #2231 on 06/06/2016
        //var parsedJSON = $.parseJSON(JsonModel);
        //if (parsedJSON.rows[0].rows.length <= 1) {
        //    $('.treegrid_cell').find('img').css('display', 'none');

        //}
        //added by devanshi for pl ticke #2213
        var selectedid = $("#hdnSelectedTacticLineItemId").val();
        if (selectedid != "0") {
            var selectedrowid = 'tactic' + selectedid;
            HomeGrid.forEachRow(function (rowid) {
                if (rowid == selectedrowid) {
                    var pid = HomeGrid.getParentId(rowid);
                    HomeGrid.openItem(pid);
                    HomeGrid.openItem(HomeGrid.getParentId(pid));
                    HomeGrid.openItem(HomeGrid.getParentId(HomeGrid.getParentId(pid)));

                    HomeGrid.selectRow(HomeGrid.getRowIndex(rowid), true, true, true);

                    if ($("#gridbox").find(".rowselected").length >= 1) {
                        var scrolltop = $(".rowselected").offset().top;
                        $(window).scrollTop(scrolltop - 100);
                    }
                }
            });
        }
        //end

    }

    function SetHeader() {
        $('#divViewBy').hide();
        if ('@allocatedBy' != '@strDefault') {
            $('#planCostTitle').html('Planned Budget Allocation');
            var sumMonth = number_format('@sumMonth', 0, '.', ',');
            var allocated = number_format('@budgeted', 0, '.', ',');
            $('#planCostValue').prop('title', '$' + sumMonth + '/' + '$' + allocated);

            $('#planCostValue').popover('destroy');
            bootstrapetitle($('#planCostValue'), '$' + sumMonth + '/' + '$' + allocated, "tipsy-innerWhite");

            sumMonth = FormatNumber('@sumMonth', false);
            allocated = FormatNumber('@budgeted', false);

            $('#planCostValue').html(sumMonth + '/' + allocated);
            $('#divPlanProgress').css("width", "@planAllocation%");
            if ('@planAllocation' > 100) {
                $('#divPlanProgress').css("width", "100%");
                $('#divPlanProgress').css("background", "#ff1e26");
            }
            else {
                $('#divPlanProgress').css("background", "#3fa9f5");
            }


            $('#monthCompareTitle').html('Monthly Budget Allocation');
            $('.progressPlanned').show();
        }
        else {
            $('#planCostTitle').html('Planned Budget Allocation');

            $('#planCostValue').html('');
            $('#divPlanProgress').css("width", "0%");
            $('#monthCompareTitle').html('Monthly Budget Allocation');
            $('.progressPlanned').show();
        }

        if ('@allocatedBy' == '@strQuarters') {
            $('#monthCompareTitle').html('Quarterly Budget Allocation');
        }
        var strMonthHTML = '';
        if ('@allocatedBy' == '@strMonths') {
            for (var i = 1; i <= 12; i++) {
                strMonthHTML += '<div class="budgetMonth">';
                if (i == 1) {
                    strMonthHTML += '<span class="title source-sans-proregular">JAN</span>';
                    if ('@PercAllocated.Jan' <= 100)
                        strMonthHTML += '<div title="@PercAllocated.Jan%"><span style="width:@PercAllocated.Jan%;"></span></div>';
                    else
                        strMonthHTML += '<div title="@PercAllocated.Jan%"><span style="width:@PercAllocated.Jan%;background-color:#FF931E;" class="error"></span></div>';
                }
                else if (i == 2) {
                    strMonthHTML += '<span class="title source-sans-proregular">FEB</span>';
                    if ('@PercAllocated.Feb' <= 100)
                        strMonthHTML += '<div title="@PercAllocated.Feb%"><span style="width:@PercAllocated.Feb%;"></span></div>';
                    else
                        strMonthHTML += '<div title="@PercAllocated.Feb%"><span style="width:@PercAllocated.Feb%;background-color:#FF931E;" class="error"></span></div>';
                }
                else if (i == 3) {
                    strMonthHTML += '<span class="title source-sans-proregular">MAR</span>';
                    if ('@PercAllocated.Mar' <= 100)
                        strMonthHTML += '<div title="@PercAllocated.Mar%"><span style="width:@PercAllocated.Mar%;"></span></div>';
                    else
                        strMonthHTML += '<div title="@PercAllocated.Mar%"><span style="width:@PercAllocated.Mar%;background-color:#FF931E;" class="error"></span></div>';
                }
                else if (i == 4) {
                    strMonthHTML += '<span class="title source-sans-proregular">APR</span>';
                    if ('@PercAllocated.Apr' <= 100)
                        strMonthHTML += '<div title="@PercAllocated.Apr%"><span style="width:@PercAllocated.Apr%;"></span></div>';
                    else
                        strMonthHTML += '<div title="@PercAllocated.Apr%"><span style="width:@PercAllocated.Apr%;background-color:#FF931E;" class="error"></span></div>';
                }
                else if (i == 5) {
                    strMonthHTML += '<span class="title source-sans-proregular">MAY</span>';
                    if ('@PercAllocated.May' <= 100)
                        strMonthHTML += '<div title="@PercAllocated.May%"><span style="width:@PercAllocated.May%;"></span></div>';
                    else
                        strMonthHTML += '<div title="@PercAllocated.May%"><span style="width:@PercAllocated.May%;background-color:#FF931E;" class="error"></span></div>';
                }
                else if (i == 6) {
                    strMonthHTML += '<span class="title source-sans-proregular">JUN</span>';
                    if ('@PercAllocated.Jun' <= 100)
                        strMonthHTML += '<div title="@PercAllocated.Jun%"><span style="width:@PercAllocated.Jun%;"></span></div>';
                    else
                        strMonthHTML += '<div title="@PercAllocated.Jun%"><span style="width:@PercAllocated.Jun%;background-color:#FF931E;" class="error"></span></div>';
                }
                else if (i == 7) {
                    strMonthHTML += '<span class="title source-sans-proregular">JUL</span>';
                    if ('@PercAllocated.Jul' <= 100)
                        strMonthHTML += '<div title="@PercAllocated.Jul%"><span style="width:@PercAllocated.Jul%;"></span></div>';
                    else
                        strMonthHTML += '<div title="@PercAllocated.Jul%"><span style="width:@PercAllocated.Jul%;background-color:#FF931E;" class="error"></span></div>';
                }
                else if (i == 8) {
                    strMonthHTML += '<span class="title source-sans-proregular">AUG</span>';
                    if ('@PercAllocated.Aug' <= 100)
                        strMonthHTML += '<div title="@PercAllocated.Aug%"><span style="width:@PercAllocated.Aug%;"></span></div>';
                    else
                        strMonthHTML += '<div title="@PercAllocated.Aug%"><span style="width:@PercAllocated.Aug%;background-color:#FF931E;" class="error"></span></div>';
                }
                else if (i == 9) {
                    strMonthHTML += '<span class="title source-sans-proregular">SEP</span>';
                    if ('@PercAllocated.Sep' <= 100)
                        strMonthHTML += '<div title="@PercAllocated.Sep%"><span style="width:@PercAllocated.Sep%;"></span></div>';
                    else
                        strMonthHTML += '<div title="@PercAllocated.Sep%"><span style="width:@PercAllocated.Sep%;background-color:#FF931E;" class="error"></span></div>';
                }
                else if (i == 10) {
                    strMonthHTML += '<span class="title source-sans-proregular">OCT</span>';
                    if ('@PercAllocated.Oct' <= 100)
                        strMonthHTML += '<div title="@PercAllocated.Oct%"><span style="width:@PercAllocated.Oct%;"></span></div>';
                    else
                        strMonthHTML += '<div title="@PercAllocated.Oct%"><span style="width:@PercAllocated.Oct%;background-color:#FF931E;" class="error"></span></div>';
                }
                else if (i == 11) {
                    strMonthHTML += '<span class="title source-sans-proregular">NOV</span>';
                    if ('@PercAllocated.Nov' <= 100)
                        strMonthHTML += '<div title="@PercAllocated.Nov%"><span style="width:@PercAllocated.Nov%;"></span></div>';
                    else
                        strMonthHTML += '<div title="@PercAllocated.Nov%"><span style="width:@PercAllocated.Nov%;background-color:#FF931E;" class="error"></span></div>';
                }
                else if (i == 12) {
                    strMonthHTML += '<span class="title source-sans-proregular">DEC</span>';
                    if ('@PercAllocated.Dec' <= 100)
                        strMonthHTML += '<div title="@PercAllocated.Dec%"><span style="width:@PercAllocated.Dec%;"></span></div>';
                    else
                        strMonthHTML += '<div title="@PercAllocated.Dec%"><span style="width:@PercAllocated.Dec%;background-color:#FF931E;" class="error"></span></div>';
                }
                strMonthHTML += '</div>';
            }
        }
        else if ('@allocatedBy' == '@strQuarters') {
            for (var i = 1; i <= 4; i++) {
                strMonthHTML += '<div class="budgetMonth">';
                if (i == 1) {
                    strMonthHTML += '<span class="title source-sans-proregular">Q1</span>';
                    if ('@PercAllocated.Jan' <= 100)
                        strMonthHTML += '<div title="@PercAllocated.Jan%"><span style="width:@PercAllocated.Jan%;"></span></div>';
                    else
                        strMonthHTML += '<div title="@PercAllocated.Jan%"><span style="width:@PercAllocated.Jan%;background-color:#FF931E;" class="error"></span></div>';
                }
                else if (i == 2) {
                    strMonthHTML += '<span class="title source-sans-proregular">Q2</span>';
                    if ('@PercAllocated.Apr' <= 100)
                        strMonthHTML += '<div title="@PercAllocated.Apr%"><span style="width:@PercAllocated.Apr%;"></span></div>';
                    else
                        strMonthHTML += '<div title="@PercAllocated.Apr%"><span style="width:@PercAllocated.Apr%;background-color:#FF931E;" class="error"></span></div>';
                }
                else if (i == 3) {
                    strMonthHTML += '<span class="title source-sans-proregular">Q3</span>';
                    if ('@PercAllocated.Jul' <= 100)
                        strMonthHTML += '<div title="@PercAllocated.Jul%"><span style="width:@PercAllocated.Jul%;"></span></div>';
                    else
                        strMonthHTML += '<div title="@PercAllocated.Jul%"><span style="width:@PercAllocated.Jul%;background-color:#FF931E;" class="error"></span></div>';
                }
                else if (i == 4) {
                    strMonthHTML += '<span class="title source-sans-proregular">Q4</span>';
                    if ('@PercAllocated.Oct' <= 100)
                        strMonthHTML += '<div title="@PercAllocated.Oct%"><span style="width:@PercAllocated.Oct%;"></span></div>';
                    else
                        strMonthHTML += '<div title="@PercAllocated.Oct%"><span style="width:@PercAllocated.Oct%;background-color:#FF931E;" class="error"></span></div>';
                }

                strMonthHTML += '</div>';
            }
        }
        else {
            for (var i = 1; i <= 12; i++) {
                strMonthHTML += '<div class="budgetMonth">';
                if (i == 1) {
                    strMonthHTML += '<span class="title source-sans-proregular">JAN</span>';
                    strMonthHTML += '<div><span style="width:0%;"></span></div>';
                }
                else if (i == 2) {
                    strMonthHTML += '<span class="title source-sans-proregular">FEB</span>';
                    strMonthHTML += '<div><span style="width:0%;"></span></div>';
                }
                else if (i == 3) {
                    strMonthHTML += '<span class="title source-sans-proregular">MAR</span>';
                    strMonthHTML += '<div><span style="width:0%;"></span></div>';
                }
                else if (i == 4) {
                    strMonthHTML += '<span class="title source-sans-proregular">APR</span>';
                    strMonthHTML += '<div><span style="width:0%;"></span></div>';
                }
                else if (i == 5) {
                    strMonthHTML += '<span class="title source-sans-proregular">MAY</span>';
                    strMonthHTML += '<div><span style="width:0%;"></span></div>';
                }
                else if (i == 6) {
                    strMonthHTML += '<span class="title source-sans-proregular">JUN</span>';
                    strMonthHTML += '<div><span style="width:0%;"></span></div>';

                }
                else if (i == 7) {
                    strMonthHTML += '<span class="title source-sans-proregular">JUL</span>';
                    strMonthHTML += '<div><span style="width:0%;"></span></div>';

                }
                else if (i == 8) {
                    strMonthHTML += '<span class="title source-sans-proregular">AUG</span>';
                    strMonthHTML += '<div><span style="width:0%;"></span></div>';

                }
                else if (i == 9) {
                    strMonthHTML += '<span class="title source-sans-proregular">SEP</span>';
                    strMonthHTML += '<div><span style="width:0%;"></span></div>';

                }
                else if (i == 10) {
                    strMonthHTML += '<span class="title source-sans-proregular">OCT</span>';
                    strMonthHTML += '<div><span style="width:0%;"></span></div>';

                }
                else if (i == 11) {
                    strMonthHTML += '<span class="title source-sans-proregular">NOV</span>';
                    strMonthHTML += '<div><span style="width:0%;"></span></div>';

                }
                else if (i == 12) {
                    strMonthHTML += '<span class="title source-sans-proregular">DEC</span>';
                    strMonthHTML += '<div><span style="width:0%;"></span></div>';

                }
                strMonthHTML += '</div>';
            }
        }
        $('#monthContainer').html(strMonthHTML);

    }
</script>
<script type="text/javascript">
    $(document).ready(function () {

        $("#monthContainer").mCustomScrollbar({
            scrollButtons: {
                enable: true
            },
            horizontalScroll: true,
            advanced: { autoExpandHorizontalScroll: true, updateOnContentResize: true }
        });
    });
    var Assortment = 'Budgeting';
    @*$('#aPlanDetails').click(function (e) {
        var id = CurrentPlanId;
        ShowModel('@Enums.InspectPopupMode.ReadOnly.ToString()', "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Plan).ToLower()", id, "0", '@Enums.InspectPopupRequestedModules.Budgeting.ToString()');
    });*@

    // Modified by Arpita Soni for Ticket #2237 on 06/15/2016
    var timer = 0, prevent = false;
    function PreventDoubleClick() {
        clearTimeout(timer);
        prevent = true;
    }
    //Added By Maitri Gandhi on 19/5/2016 for #2197
    function OpenPlanInspectPopup() {
        var id = CurrentPlanId;
        // Modified by Arpita Soni for Ticket #2237 on 06/15/2016
        timer = setTimeout(function () {
            if (!prevent) {
                ShowModel('@Enums.InspectPopupMode.ReadOnly.ToString()', "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Plan).ToLower()", id, "0", '@Enums.InspectPopupRequestedModules.Budgeting.ToString()');
            }
            prevent = false;
        }, 200);
    }

    function AssignDefaultValue() {
        $('#slidepanel-container').find("input[type=text],textarea,select").each(function () {
            $(this).attr("myValue", $(this).val());
        });
    }

    @*    $("[linktype=campaign],[linktype=program],[linktype=tactic]").click(function (e) {
        var section = $(this).attr('linktype');
        var id = $(this).attr('id');
        ShowModel('@Enums.InspectPopupMode.ReadOnly.ToString()', section, id, "0", '@Enums.InspectPopupRequestedModules.Budgeting.ToString()');
    });*@

    //Added By Maitri Gandhi on 19/5/2016 for #2197
    function OpenOtherInspectPopup(id, section) {
        // Modified by Arpita Soni for Ticket #2237 on 06/15/2016
        var section = section;
        var id = id;//$(this).attr('id');
        timer = setTimeout(function () {
            if (!prevent) {
                ShowModel('@Enums.InspectPopupMode.ReadOnly.ToString()', section, id, "0", '@Enums.InspectPopupRequestedModules.Budgeting.ToString()');
            }
            prevent = false;
        }, 200);
        
    }

    $('#btnClueTip').click(function () {
        var entityId = $('#entityDetails').val();
        var section = $('#entityDetails').attr('section').toString();
        var month = $('#entityDetails').attr('mnth').toString();
        var isquarter = false;
        if ('@isquarter' == 'True') {
            isquarter = true;
        }
        var inputArr = [];
        $('.tooltip-field').find('input[type=text]').not('[disabled=disabled]').each(function () {
            inputArr.push({
                key: $(this).attr('id'),
                Value: $(this).val().replace(/,/g, "")
            });
        });
        var jsonInputs = JSON.stringify(inputArr);
        $.ajax({
            type: 'POST',
            url: '@Url.Content("~/Plan/SaveBudgetCell/")',
            dataType: "json",
            data: 'entityId=' + entityId + '&section=' + section + '&month=' + month + '&inputs=' + jsonInputs + '&isquarter=' + isquarter,
            success: function (data) {
                if (data.isSuccess == true) {
                    $("#hdnBudgetingExpandId").val(section.toLowerCase() + entityId);
                    $("#hdnBudgetingIsSave").val("true");
                    $('#aAllocated').trigger('click');
                }
                else {
                    alert('Error');
                }
            }
        });
    });
    $('.cluetip-outer').click(function (e) {
        e.stopPropagation();
    });
    $(document).click(function () {
        $('.cluetip').css('display', 'none');
    });
    $('.tooltip-field').on('keyup', '#BudgetMonth', function () {
        var oldBudget = parseFloat($(this).attr('ov').toString());

        var newBudget = 0;
        if (!isNaN(parseFloat($(this).val().replace(/,/g, "")))) {
            newBudget = parseFloat($(this).val().replace(/,/g, ""));
        }
        $(this).attr('ov', newBudget.toString());
        var remaingBudgetInput = $(this).parent().find('#remainingBudget');
        if (typeof remaingBudgetInput.val() != 'undefined') {
            var remainigBudget = parseFloat(remaingBudgetInput.val().replace(/,/g, ""));
            remaingBudgetInput.val(((remainigBudget - newBudget) + oldBudget).toString());
        }

    });
    $('.tooltip-field').on('focusout', '#BudgetMonth', function () {
        var newBudget = $(this).val().replace(/,/g, "");
        $(this).val(FormatCommasBudget(newBudget.toString(), false, false));
        var remaingBudgetInput = $(this).parent().find('#remainingBudget');
        if (typeof remaingBudgetInput.val() != 'undefined') {
            remaingBudgetInput.val(FormatCommasBudget(remaingBudgetInput.val().replace(/,/g, "")));
        }
    });
    $('.tooltip-field').on('keyup', '#BudgetYear', function () {

        var oldYearBudget = parseFloat($(this).attr('ov').toString());
        var newYearBudget = 0;
        if (!isNaN(parseFloat($(this).val().replace(/,/g, "")))) {
            newYearBudget = parseFloat($(this).val().replace(/,/g, ""));
        }
        $(this).attr('ov', newYearBudget.toString());
    });
    $('.tooltip-field').on('focusout', '#BudgetYear', function () {
        var newYearBudget = $(this).val().replace(/,/g, "");
        $(this).val(FormatCommasBudget(newYearBudget.toString(), false, false));
    });
    $('.tooltip-field').on('keydown', '#BudgetMonth,#BudgetYear', function (e) {
        // Allow: backspace, delete, tab, escape, enter and .
        if ($.inArray(e.keyCode, [8, 9, 27, 13, 46, 110]) !== -1 ||
            // Allow: Ctrl+A
            (e.keyCode == 65 && e.ctrlKey === true) ||
            // Allow: home, end, left, right
            (e.keyCode >= 35 && e.keyCode <= 39)) {
            // let it happen, don't do anything
            return;
        }
        // Ensure that it is a number and stop the keypress
        if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
            e.preventDefault();
        }
    });
    $('.tooltip-field').on('focus', '#BudgetYear,#BudgetMonth', function () {
        $(this).val($(this).val().replace(/,/g, ""));
    });
    $('.column2,.column1').scroll(function () {
        $('.cluetip').css('display', 'none');
    });

    // Added by Rushil Bhuptani on 26/05/2016 for #2197
    HomeGrid.attachEvent("onOpenEnd", function (id, state) {        
        var isquarter = false;
        if ('@isquarter' == 'True') {
            isquarter = true;
        }
        setTimeout(function () {
            var test = HomeGrid.saveOpenStates();
        }, 500);

        $('.clickmeAnchorProgram').each(function () {
            var selfClickMeAnchorProgram = $(this);
            if (!selfClickMeAnchorProgram.data('cluetip-initd')) {
                selfClickMeAnchorProgram.cluetip({
                    activation: 'click',
                    arrows: true,
                    dropShadow: false,
                    sticky: true,
                    mouseOutClose: false,
                    local: true,
                    isQuarter: isquarter,
                    positionBy: "mouse"
                }).data('cluetip-initd', true);
            }
        });

        $('.clickmeAnchorTactic').each(function () {
            var selfClickMeAnchorTactic = $(this);
            if (!selfClickMeAnchorTactic.data('cluetip-initd')) {
                selfClickMeAnchorTactic.cluetip({
                    activation: 'click',
                    arrows: true,
                    dropShadow: false,
                    sticky: true,
                    mouseOutClose: false,
                    local: true,
                    isQuarter: isquarter,
                    positionBy: "mouse"
                }).data('cluetip-initd', true);
            }
        });


        $('.clickmeAnchorLineItem').each(function () {
            var selfClickMeAnchorLineItem = $(this);
            if (!selfClickMeAnchorLineItem.data('cluetip-initd')) {
                selfClickMeAnchorLineItem.cluetip({
                    activation: 'click',
                    arrows: true,
                    dropShadow: false,
                    sticky: true,
                    mouseOutClose: false,
                    local: true,
                    isQuarter: isquarter,
                    positionBy: "mouse"
                }).data('cluetip-initd', true);
            }
        });

      

        var selfProgram = $('.clickmeprogram');

        if (!selfProgram.data('cluetip-initd')) {
            selfProgram.cluetip({
                activation: 'click',
                arrows: true,
                dropShadow: false,
                sticky: true,
                mouseOutClose: false,
                local: true,
                isQuarter: isquarter,
                positionBy: "mouse"
            }).data('cluetip-initd', true);
        }

        var selfTactic = $('.clickmetactic');

        if (!selfTactic.data('cluetip-initd')) {
            selfTactic.cluetip({
                activation: 'click',
                arrows: true,
                dropShadow: false,
                sticky: true,
                mouseOutClose: false,
                local: true,
                isQuarter: isquarter,
                positionBy: "mouse"
            }).data('cluetip-initd', true);
        }
    });

    @*Added by Rushil Bhuptani on 06/03/2016 for #2214*@
    function ExportToExcelBudget() {
      
        var JsonExportModel = '@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Grid))';

        var exportGrid = new dhtmlXGridObject('gridExport');

        var imgpath = '@Url.Content("~/codebase/imgs/")';
        exportGrid.setImagePath(imgpath);
        exportGrid.setImageSize(1, 1);
        exportGrid.setHeader('@Model.SetHeader');
        exportGrid.setColTypes('@Model.ColType');
        exportGrid.setInitWidths('@Model.Width');
        exportGrid.setColSorting('@Model.ColSorting');
        exportGrid.enableAutoHeight(true);
        exportGrid.enableAutoWidth(false);
        exportGrid.setEditable(false);
        exportGrid.init();

        setTimeout(function () {
            exportGrid.setSizes();
        }, 200);

        var mainGridData = JsonExportModel;
        mainGridData = $('<textarea/>').html(mainGridData.toString().replace(/[\\]/g, "\\\\")).text(); // Decode Html content.
        var GridDataHomeGrid = (mainGridData.toString().replace(/&amp;/g, '&'));

        exportGrid.parse(GridDataHomeGrid, "json");

        exportGrid.setColumnHidden(exportGrid.getColumnsNum() - 1, true);
        exportGrid.expandAll();

        exportGrid.toExcel("https://dhtmlxgrid.appspot.com/export/excel");
    }
</script>
