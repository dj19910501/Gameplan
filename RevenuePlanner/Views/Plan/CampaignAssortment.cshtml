@model RevenuePlanner.Models.Plan_CampaignModel
@using RevenuePlanner.Helpers

@{
    string ExtIntService = ViewBag.ExtIntService;
}

@*<div id="slidepanel-container">*@
<div class="head">
    <span class="close-form source-sans-proregular">» CLOSE MENU</span>
    <div class="cf">
        <h2 class="source-sans-prolight">Campaign Detail</h2>
        @* TFS Point 253,206 : Model/Plan - sidebars - integrate gear icon with feature to delete/duplicate tactic
    Added by Nirav Shah on 17 feb 2014
 *@
        @if (!(bool)ViewBag.IsCreated)
        {
            <div class="btn-group pull-right gear-dropdown">
                <span class="gear-sidebar dropdown-toggle" data-toggle="dropdown"></span>
                <ul class="dropdown-menu">
                    <li><a id="spanDuplicate">Duplicate Campaign</a></li>
                    @if ((bool)ViewBag.IsOwner && !(bool)ViewBag.IsCreated)
                    {
                        <li><a id="deleteCampaign">Delete Campaign</a></li>                        
                    }
                </ul>
            </div>
        
        }
    </div>
</div>
<!--end sidebar-head-->
<div id="errorMessage" class="alert alert-error hide message-position-small">
    <a class="close">×</a>
    <strong>Error!</strong> <span id="spanMessage"></span>
</div>
<div id="frm_campaigns" name="frm_campaigns">
    @using (Html.BeginForm(new { @id = "frmSaveCampaign" }))
    {    
        <script type="text/javascript">
            $(document).ready(function () {
                $(".verticalIdSelectBox select").selectbox();
            });
        </script>	
        <div class="content">
            @Html.HiddenFor(model => model.PlanCampaignId, new { id = "hdnPlanCampaignId" })
            @Html.HiddenFor(model => model.PStartDate, new { id = "hdnPStartDate" })
            @Html.HiddenFor(model => model.PEndDate, new { id = "hdnPEndDate" })
            @Html.HiddenFor(model => model.TStartDate, new { id = "hdnTStartDate" })
            @Html.HiddenFor(model => model.TEndDate, new { id = "hdnTEndDate" })
            @Html.HiddenFor(model => model.IsDeployedToIntegration, new { id = "hdnIsDeployedToIntegration" })

            <label class="t_title">Campaign Title</label>
            @Html.TextBoxFor(model => model.Title, new { placeholder = "Required", require = "true", maxlength = "255", id="txtTitle" }) @* Modified by :- Sohel Pathan on 24/04/2014 for internal review point to stop form posting on ENTERKEY press event *@

            <label>Description</label>
            @Html.TextAreaFor(model => model.Description, new { placeholder = "Optional", rows = "3", maxlength = "4000" })

            @if (ExtIntService!=string.Empty)
            {
                <label>Status</label>
                if (ViewBag.IsDeployedToIntegration)
                {
                     <input id="t_integration_status" name="t_status" type="text" class="icon-check-blue" placeholder="Sync to @ExtIntService" maxlength="18" readonly />
                }
                else
                {    
                     <input id="t_integration_status" name="t_status" type="text" class="icon-check-gray" placeholder="Not Sync to @ExtIntService" maxlength="18" readonly />
                }
            }


@*            <label>Vertical</label>
            <span class="verticalIdSelectBox">@Html.DropDownListFor(model => model.VerticalId, new SelectList((System.Collections.IEnumerable)ViewBag.Verticals, "VerticalId", "Title"), "Please Select", new { @class = "ddlStyle", require = "true" })</span>

            <label>Audience</label>
            <span class="verticalIdSelectBox">@Html.DropDownListFor(model => model.AudienceId, new SelectList((System.Collections.IEnumerable)ViewBag.Audience, "AudienceId", "Title"), "Please Select", new { @class = "ddlStyle", require = "true" })</span>

            <label>Geography</label>
            <span class="verticalIdSelectBox">@Html.DropDownListFor(model => model.GeographyId, new SelectList((System.Collections.IEnumerable)ViewBag.Geography, "GeographyId", "Title"), "Please Select", new { @class = "ddlStyle", require = "true" })</span>*@
            @Html.Hidden("hdnRedirect", (bool)ViewBag.RedirectType, new { id = "hdnRedirectType" })
            @if ((bool)ViewBag.RedirectType)
            {
                <div class="cf margin-top10 margin-left-4">
                    <div class="pull-left width50">
                        <label class="padding-left4">Start date</label>
                        <div class="dp datepicker input-append date without-margin calendar-width sidebar-datepicker" id="dp_start" data-date="@Model.StartDate.ToShortDateString()" data-date-format="@RevenuePlanner.Helpers.Common.dateFormat">
                            @Html.TextBoxFor(model => model.StartDate, new { @class = "span2 black-border-right font-size13", id = "t_startdate" })
                            <span class="add-on">
                                <img src="~/Content/images/gray-calendar-icon.png"></span>
                        </div>
                    </div>

                    <div class="pull-right width50">
                        <label class="padding-left4">End date</label>
                        <div class="dp datepicker input-append date without-margin calendar-width sidebar-datepicker" id="dp_end" data-date="@Model.EndDate.ToShortDateString()" data-date-format="@RevenuePlanner.Helpers.Common.dateFormat">
                            @Html.TextBoxFor(model => model.EndDate, new { @class = "span2 black-border-right font-size13", id = "t_enddate" })
                            <span class="add-on">
                                <img src="~/Content/images/gray-calendar-icon.png"></span>
                        </div>
                    </div>

                </div>
            }
        </div>
        <!--End content-->
			
        <div class="content dark inline-ellipsis">
            @if (!(bool)ViewBag.IsCreated)
            {
                <div class="cf width100">
                    <div class="width65px margin-right20 pull-left">
                        <label title="@Html.LabelForINQ("INQ")">@Html.LabelForINQ("INQ")</label>
                        @Html.TextBoxFor(model => model.INQs, new { placeholder = "0", id = "txtinq", @class = "priceValue", @readonly = "true", maxlength = @RevenuePlanner.Helpers.Common.maxLengthPriceValue })
                    </div>

                    <div class="width65px margin-right20 pull-left">
                        <label title="@Html.LabelForMQL("MQL")">@Html.LabelForMQL("MQL")</label>
                        @Html.TextBoxFor(model => model.MQLs, new { placeholder = "0", id = "txtmql", @class = "priceValue", @readonly = "true", maxlength = @RevenuePlanner.Helpers.Common.maxLengthPriceValue })
                    </div>

                    <div class="width65px pull-left">
                        <label title="Cost">Cost</label>
                        @Html.TextBoxFor(model => model.Cost, new { placeholder = "$0", id = "txtCost", @class = "currency_dollar", @readonly = "true", maxlength = @RevenuePlanner.Helpers.Common.maxLengthDollar })
                    </div>
                </div>
            }
            @if ((bool)ViewBag.IsCreated)
            {
                <div class="programs-part">
                    <label>Programs</label>
                    <div id="c_programs">

                        <!--inputs elements created dynamically-->
                    </div>
                    <span class="c-add-program link-blue">Add New Program</span>
                </div>					
            }
            @if ((bool)ViewBag.RedirectType)
            {
                <p class="font-size12 pull-left font-size13">Edit campaign details in </p>
                <label class="pull-left font-size12 padding-left3">@*@Html.ActionLink("Assortment Mix","Assortment")*@ <a href="#" id="lnkCampaigns">Campaigns</a>.</label>
            }
        </div>
        <!--end content dark-->
        if((bool)ViewBag.IsOwner)
        {
            <div class="wraper-btns cf">
                <div class="span6">
                    <button id="save_campaign" class="btn btn-blue text-shadow-blue source-sans-proregular" type="button">Save</button>
                </div>
                <div class="span6">
                    <button class="close-form btn-link source-sans-proregular" type="button">Cancel</button>
                </div>
            </div>
        }
        <!--End buttons-->
@* TFS Point 253,206 : Model/Plan - sidebars - integrate gear icon with feature to delete/duplicate tactic
    Added by Nirav Shah on 17 feb 2014
 *@
@*if ((bool)ViewBag.IsOwner && !(bool)ViewBag.IsCreated && !(bool)ViewBag.RedirectType)
            {
        <div class="content dark">
            <input id="deleteCampaign" class="btn-delete-campaign" type="button" value="DELETE CAMPAIGN" />
        </div>
        <!--End content dark-->
            }*@
    }
  
</div>
@*</div>*@
<script type="text/javascript">

    $(document).ready(function () {
        $('#slidepanel-container').slimScroll({ scrollTo: '0px' });
        var isredirect = "@ViewBag.RedirectType";
        var hdnYear = @ViewBag.Year
        $('.currency_dollar').priceFormat({ prefix: '$', centsSeparator: '', thousandsSeparator: ',', centsLimit: 0 });
        $('.priceValue').priceFormat({ prefix: '', centsSeparator: '', thousandsSeparator: ',', centsLimit: 0 });

        if (isredirect == 'True') {
            $("#t_startdate").val($("#t_startdate").val().split(' ')[0]);
            $("#t_enddate").val($("#t_enddate").val().split(' ')[0]);
        }

        //// Added by :- Sohel Pathan on 24/04/2014 for internal review point to stop form posting on ENTERKEY (Keycode = 13) press event for Title textBox
        $("#txtTitle").keypress(function (e) {
            if (e.keyCode == 13) {
                e.preventDefault();
                return false;
            }
        });

        if ($("#t_integration_status").val() == '') {
            if ($("#t_integration_status").hasClass("icon-check-blue")) {
                $("#hdnIsDeployedToIntegration").val(true);
            }
            else {
                $("#hdnIsDeployedToIntegration").val(false);
            }
        }

        $("#t_integration_status").click(function () {
            if (isOwner == 'True') {
                if ($(this).hasClass("icon-check-blue")) {
                    $(this).val("Not Sync to @ExtIntService");
                    $(this).addClass("icon-check-gray");
                    $(this).removeClass("icon-check-blue");
                    $("#hdnIsDeployedToIntegration").val(false);
                }
                else {
                    $(this).val("Sync to @ExtIntService");
                    $(this).addClass("icon-check-blue");
                    $(this).removeClass("icon-check-gray");
                    $("#hdnIsDeployedToIntegration").val(true);
                }
            }
        });

        $("span.tool-tip").tooltip();

        $(".alert").find(".close").on("click", function (e) {
            e.stopPropagation();
            e.preventDefault();
            $(this).closest(".alert").slideUp(400);
        });
        if (isredirect == 'True') {
            $('.datepicker.dropdown-menu').css("display", "none");
        }
        $('.close-form', this.$panel).click(function (e) {
            if (isredirect == 'True') {
                $('.datepicker.dropdown-menu').css("display", "none");
            }
            $("#slidepanel").css("display", "none");
            $("#slidepanel-container").empty();
        });

        $("#spanDuplicate").click(function () {
            var hdnPlanCampaignId = $("#hdnPlanCampaignId").val();
            var isAssortment = $("#hdnRedirectType").val();
            var arrClosedTaskString = null;
            if (typeof arrClosedTask != 'undefined') {
                arrClosedTaskString = arrClosedTask.toString();
            }

            $.ajax({
                type: 'POST',
                url: '@Url.Content("~/Plan/DuplicateCopyClone")',
                data:
                    {
                        id: hdnPlanCampaignId,
                        RedirectType: isAssortment,
                        CopyClone: 'Campaign',
                        closedTask: arrClosedTaskString
                    },
                success: function (data) {
                    if (data.redirect) {
                        window.location.href = data.redirect;
                        return;
                    }
                    if (data.errormsg) {
                        ShowError(data.errormsg);
                        return;
                    }

                }
            });
        });

        var isOwner = "@ViewBag.IsOwner";
        if (isOwner == 'False') {
            $('form').find(".sbSelector").each(function () {
                $(this).unbind("click");
                $(this).removeAttr("href");
                $(this).prev().unbind("click");
                $(this).prev().removeAttr("href");
            });
            $('form').find("input[type=text], textarea").each(function () {
                $(this).prop('readonly', true);
            });
            $('form').find(".add-on").each(function () {
                $(this).unbind("click");
            });
            return false;
        }


        $(".c-add-program").click(function () {
            $("#c_programs").append('<input class="delete-icon" type="text" require="true" placeholder="Program Title" maxlength="255" /><span class="delete-temp-program"></span>');
        });

        $('#c_programs').on('click', '.delete-temp-program', function () {
            $(this).prev().remove();
            $(this).remove();
        });
        $('form').find('input[type=text], textarea').each(function () {
            ValidationForTitle(this);
        });
        $('form').find('input[type=text], select, textarea').each(function () {
            $(this).change(function () {
                if ($(this).attr('require') == 'true') {
                    if ($(this).val().toString().trim() == '') {
                        $(this).addClass("error");
                    }
                    else {
                        $(this).removeClass("error");
                    }
                }
            });
        });

        $('form').find(".sbSelector").each(function () {
            $(this).next().find('li').click(function () {
                if ($(this).parent().parent().prev().attr('require') == 'true') {
                    if ($(this).parent().prev().text() == 'Please Select') {
                        $(this).parent().prev().addClass("error");
                        iserror = true;
                    }
                    else {
                        $(this).parent().prev().removeClass("error");
                    }
                }
            });
        });

        $("#save_campaign").click(function () {
            var iserror = false;
            $('form').find('input[type=text], select, textarea').each(function () {
                if ($(this).attr('require') == 'true') {
                    if ($(this).val().toString().trim() == '') {
                        $(this).addClass("error");
                        iserror = true;
                    }
                    else {
                        $(this).removeClass("error");
                    }
                }
            });

            //sbSelector
            $('form').find('.sbSelector').each(function () {
                if ($(this).parent().prev().attr('require') == 'true') {
                    if ($(this).text() == 'Please Select') {
                        $(this).addClass("error");
                        iserror = true;
                    }
                    else {
                        $(this).removeClass("error");
                    }
                }
            });

            if (iserror) {
                ShowError("@RevenuePlanner.Helpers.Common.objCached.ValidateForEmptyField");
                return false;
            }



            if (isredirect == 'True') {
                sdate = $('#t_startdate').val();
                edate = $('#t_enddate').val();
                var psdate = $('#hdnPStartDate').val();
                var pedate = $('#hdnPEndDate').val();
                var tsdate = $('#hdnTStartDate').val();
                var tedate = $('#hdnTEndDate').val();
                $('#t_enddate').removeClass("error");
                $('#t_startdate').removeClass("error");
                if (!isDate(sdate)) {
                    alert('please select valid start date.');
                    return false;
                }
                if (!isDate(edate)) {
                    alert('please select valid end date.');
                    return false;
                }
                if (!CheckDateYear(sdate, hdnYear, "@RevenuePlanner.Helpers.Common.objCached.StartDateCurrentYear")) return false;
                if (!CheckDateYear(edate, hdnYear, "@RevenuePlanner.Helpers.Common.objCached.EndDateCurrentYear")) return false;
                if (!validateDateCompare(sdate, edate, "@RevenuePlanner.Helpers.Common.objCached.DateComapreValidation")) {
                    // $('#t_enddate').addClass("error");
                    // $('#t_startdate').addClass("error");
                    return false;
                }
                if (!validateDateCompare(sdate, psdate, "@RevenuePlanner.Helpers.Common.objCached.ProgramStartDateCompareWithParentStartDate")) {
                    //  $('#t_startdate').addClass("error");
                    return false;
                }
                if (!validateDateCompare(pedate, edate, "@RevenuePlanner.Helpers.Common.objCached.ProgramEndDateCompareWithParentEndDate")) {
                    //  $('#t_enddate').addClass("error");
                    return false;
                }
                if (!validateDateCompare(sdate, tsdate, "@RevenuePlanner.Helpers.Common.objCached.TacticStartDateCompareWithParentStartDate")) {
                    // $('#t_startdate').addClass("error");
                    return false;
                }
                if (!validateDateCompare(tedate, edate, "@RevenuePlanner.Helpers.Common.objCached.TacticEndDateCompareWithParentEndDate")) {
                    //  $('#t_enddate').addClass("error");
                    return false;
                }

            }

            var arProgram = [];
            var _programs = $("#frm_campaigns #c_programs input");
            for (var l = 0; l < _programs.length; l++) {
                var ptitle = $(_programs[l]).val();
                arProgram[l] = ptitle;
            }
            var isAssortment = $("#hdnRedirectType").val();
            var arrClosedTaskString = null;
            if (typeof arrClosedTask != 'undefined') {
                arrClosedTaskString = arrClosedTask.toString();
            }

            $.ajax({
                type: 'POST',
                url: '@Url.Content("~/Plan/SaveCampaign")',
                data: $("form").serialize() + '&programs=' + arProgram + '&RedirectType=' + isAssortment + '&closedTask=' + arrClosedTaskString,
                success: function (data) {
                    if (data.redirect) {
                        window.location.href = data.redirect;
                        return;
                    }
                    if (data.errormsg) {
                        ShowError(data.errormsg);
                        return;
                    }

                }
            });
        });



                @* TFS Point 253,206 : Model/Plan - sidebars - integrate gear icon with feature to delete/duplicate tactic
    Added by Nirav Shah on 17 feb 2014
 *@
        $("#deleteCampaign").click(function () {
            if (confirm('Are you sure you want to delete this campaign?')) {
                var campaignId = $("#hdnPlanCampaignId").val();
                var isAssortment = $("#hdnRedirectType").val();
                var arrClosedTaskString = null;
                if (typeof arrClosedTask != 'undefined') {
                    arrClosedTaskString = arrClosedTask.toString();
                }

                $.ajax({
                    type: 'POST',
                    url: '@Url.Content("~/Plan/DeleteCampaign")',
                    data: {
                        ID: campaignId,
                        RedirectType: isAssortment,
                        closedTask: arrClosedTaskString
                    },
                    success: function (data) {
                        if (data.redirect) {
                            window.location.href = data.redirect;
                            return;
                        }
                        if (data.errormsg) {
                            ShowError(data.errormsg);
                            return;
                        }

                    }
                });
            }

        });

        function ShowError(value) {
            $("#errorMessage").slideDown(400);
            $("#spanMessage").empty();
            $("#spanMessage").text(value);
        }

        $('.dp').datepicker({
            format: "@RevenuePlanner.Helpers.Common.dateFormat",
            autoclose: true,
        }).on('changeDate', function (ev) {
            $(this).datepicker('hide');
        });;


        /*hide the other datepicker in input onclick*/

        $('#dp_start .add-on').click(function () {
            $('#dp_start').datepicker('show');
            $('#dp_end').datepicker('hide');

        })
        $('#dp_end .add-on').click(function () {
            $('#dp_start').datepicker('hide');
            $('#dp_end').datepicker('show');

        })

        $('#t_startdate').click(function () {
            $('#dp_end').datepicker('hide');
        })

        $('#t_enddate').click(function () {
            $('#dp_start').datepicker('hide');
        })

    });
</script>
