@model RevenuePlanner.Models.Plan_Campaign_Program_TacticModel
@using RevenuePlanner.Helpers
@*<script type="text/javascript" src="~/Scripts/js/Mask.js"></script>*@

@{
    bool ExtIntService = (bool)ViewBag.ExtIntService;

    //Start by Kalpesh Sharma #605: Cost allocation for Tactic
    string AllocatedBy = Model.AllocatedBy;
    //Start by Kalpesh Sharma #605: Cost allocation for Tactic 07/30/2014
    bool IsBudgetAllocated = false;
    if (AllocatedBy.ToLower() != Enums.PlanAllocatedByList[Enums.PlanAllocatedBy.defaults.ToString()].ToString().ToLower())
    {
        IsBudgetAllocated = true;
    }
    string CalledFromBudget = ViewBag.CalledFromBudget;
    string strTacticCost = Model.TacticCost.ToString();     //// Added by Sohel Pathan on 12/08/2014 for PL ticket #605

    string planRemainingBudget = Convert.ToString(ViewBag.planRemainingBudget);

}
<style type="text/css">
    #c_tactics .verticalIdSelectBox .sbHolder {
        width: 90%;
    }
</style>

<div class="head">
    <span class="close-form source-sans-proregular">» CLOSE MENU</span>
    <div class="cf">
        <h2 class="source-sans-prolight">Tactic Detail</h2>
        @* TFS Point 253,206 : Model/Plan - sidebars - integrate gear icon with feature to delete/duplicate tactic
    Added by Nirav Shah on 17 feb 2014
 *@
        @if (!(bool)ViewBag.IsCreated && (bool)ViewBag.IsAllowCustomRestriction)
        {
            <div class="btn-group pull-left margin-left20 gear-dropdown">
                <span class="gear-sidebar dropdown-toggle" data-toggle="dropdown"></span>
                <ul class="dropdown-menu">
                    @*<li><a id="spanDuplicate">Duplicate Tactic</a></li>*@
                    <li><a id="tacticClone">Duplicate Tactic</a></li>
                    @if ((bool)ViewBag.IsOwner && !(bool)ViewBag.IsCreated)
                    {
                        <li><a id="deleteTactic">Delete Tactic</a></li>                        
                    }
                </ul>
            </div>
        }
    </div>
</div>
<!--end sidebar-head-->
<div id="errorMessage" class="alert alert-error hide message-position-small">
    <a class="close">×</a>
    <strong>Error!</strong> <span id="spanMessage"></span>
</div>
<div id="frm_campaigns" name="frm_campaigns">
    @using (Html.BeginForm(new { @id = "frmSaveTactic" }))
    {
        <script type="text/javascript">
            $(document).ready(function () {
                $(".verticalIdSelectBox select").selectbox();
            });
        </script>
        <div class="top-title">
            <p>Campaign</p>
            <span title="@ViewBag.Campaign" class="displaytitle">@ViewBag.Campaign</span>
        </div>// uday PL Ticket #550 3-7-2014
        <div class="top-title">
            <p>Program</p>
            <span title="@ViewBag.Program" class="displaytitle">@ViewBag.Program</span>@*uday*@
        </div>// uday PL Ticket #550 3-7-2014
        <div class="content">
            @Html.HiddenFor(model => model.PlanProgramId, new { id = "hdnPlanProgramId" })
            @Html.HiddenFor(model => model.PlanTacticId, new { id = "hdnPlanTacticId" })
            @Html.HiddenFor(model => model.PStartDate, new { id = "hdnPStartDate" })
            @Html.HiddenFor(model => model.PEndDate, new { id = "hdnPEndDate" })
            @Html.HiddenFor(model => model.CStartDate, new { id = "hdnCStartDate" })
            @Html.HiddenFor(model => model.CEndDate, new { id = "hdnCEndDate" })
            @Html.HiddenFor(model => model.IsDeployedToIntegration, new { id = "hdnIsDeployedToIntegration" })
            @Html.HiddenFor(model => model.StageId, new { id = "hdnStageId" })
            @Html.Hidden("hdnOldTacticBudget", strTacticCost, new { id = "hdnOldTacticBudget" })    @* Modified by Sohel Pathan on 12/08/2014 for PL ticket #605 *@
            @Html.Hidden("hdnIsBudgetAllocated", IsBudgetAllocated)


            <label class="t_title">Tactic Title</label>
            @Html.TextBoxFor(model => model.Title, new { placeholder = "Required", require = "true", maxlength = "255" })

            <label style="margin-top: 6px;">Description</label>
            @Html.TextAreaFor(model => model.Description, new { placeholder = "Optional", rows = "3", maxlength = "4000" })

            @if ((bool)ViewBag.RedirectType)
            {
                if (string.IsNullOrEmpty(CalledFromBudget))
                {
                <label>Parent Campaign</label>
                @Html.TextBox("txtCampaign", (string)ViewBag.Campaign, new { @readonly = "true" });
                <label>Parent Program</label>
                @Html.TextBox("txtProgram", (string)ViewBag.Program, new { @readonly = "true" });
                }
            }

            <div class="content-row">
                <label>Tactic Type</label>
                <span class="verticalIdSelectBox" style="margin-left: -2px;">@Html.DropDownListFor(model => model.TacticTypeId, new SelectList((System.Collections.IEnumerable)ViewBag.Tactics, "TacticTypeId", "Title"), "Please Select", new { @class = "ddlStyle", require = "true", Id = "ddlTacticType" })</span>
            </div>
            <div class="content-row alternate">
                <label>Vertical</label>
                <span class="verticalIdSelectBox" style="margin-left: -2px;">@Html.DropDownListFor(model => model.VerticalId, new SelectList((System.Collections.IEnumerable)ViewBag.Verticals, "VerticalId", "Title"), "Please Select", new { @class = "ddlStyle", require = "true" })</span>
            </div>
            <div class="content-row margin-bottom10">
                <label style="margin-top: 6px;">Audience</label>
                <span class="verticalIdSelectBox" style="margin-left: -2px;">@Html.DropDownListFor(model => model.AudienceId, new SelectList((System.Collections.IEnumerable)ViewBag.Audience, "AudienceId", "Title"), "Please Select", new { @class = "ddlStyle", require = "true" })</span>
            </div>
            <div class="content-row alternate margin-bottom10">
                <label style="margin-top: 6px;">Geography</label>
                <span class="verticalIdSelectBox" style="margin-left: -2px;">@Html.DropDownListFor(model => model.GeographyId, new SelectList((System.Collections.IEnumerable)ViewBag.Geography, "GeographyId", "Title"), "Please Select", new { @class = "ddlStyle", require = "true" })</span>
            </div>

            @if (ExtIntService)
            {

                if (Model.IsDeployedToIntegration)
                {
                <label style="margin-top: 6px;">Status</label>
                <input id="t_integration_status" name="t_status" type="text" class="icon-check-blue" placeholder="Sync to integration" value="Sync to integration" maxlength="18" readonly />   // Modified by Sohel Pathan on 18/08/2014 for Internal Review Points
                }
                else
                {
                <label style="margin-top: 6px;">Status</label>
                <input id="t_integration_status" name="t_status" type="text" class="icon-check-gray" placeholder="Not Sync to integration" value="Not Sync to integration" maxlength="18" readonly />   // Modified by Sohel Pathan on 18/08/2014 for Internal Review Points
                }
            }

            @Html.Hidden("hdnRedirect", (bool)ViewBag.RedirectType, new { id = "hdnRedirectType" })
            @*@if ((bool)ViewBag.RedirectType)  // Commented by Sohel Pathan on 08/07/2014 for PL ticket #549 to add Start and End date field in Campaign. Program and Tactic screen
            {
                *@<div class="cf margin-left-4">
                    <div class="pull-left width50">
                        <label class="padding-left4">Start Date</label>
                        <div class="dp datepicker input-append date without-margin calendar-width sidebar-datepicker" id="dp_start" data-date="@Model.StartDate.ToShortDateString()" data-date-format="@RevenuePlanner.Helpers.Common.dateFormat">
                            @Html.TextBoxFor(model => model.StartDate, new { @class = "span2 black-border-right font-size13", id = "t_startdate" })
                            <span class="add-on">
                                <img src="~/Content/images/gray-calendar-icon.png"></span>
                        </div>
                    </div>

                    <div class="pull-right width50">
                        <label class="padding-left4">End Date</label>
                        <div class="dp datepicker input-append date without-margin calendar-width sidebar-datepicker" id="dp_end" data-date="@Model.EndDate.ToShortDateString()" data-date-format="@RevenuePlanner.Helpers.Common.dateFormat">
                            @Html.TextBoxFor(model => model.EndDate, new { @class = "span2 black-border-right font-size13", id = "t_enddate" })
                            <span class="add-on">
                                <img src="~/Content/images/gray-calendar-icon.png"></span>
                        </div>
                    </div>

                </div>
            @*}*@


            <div class="content-row ">
                <label class="padding-left4" title="Tactic Planned Cost">Tactic Planned Cost</label>
                @Html.TextBoxFor(model => model.TacticCost, new { @class = "currency_dollar margin-top3px", placeholder = "Required", require = "true", maxlength = @RevenuePlanner.Helpers.Common.maxLengthDollar })   @* Modified by Sohel Pathan on 12/08/2014 for PL ticket #605 *@
            </div>
            <div class="content-row alternate">
                <label class="padding-left4" title="Remaining Program Budget">Remaining Program Budget</label>
                @*<input id="txtCost" class="currency_dollar margin-top3px"  type="text" value="1,500,000" placeholder="$1,500,000" name="Cost" maxlength="13" data-val-required="The Cost field is required." data-val-number="The field Cost must be a number." data-val="true" readonly myvalue="$1,500,000" title="$1,500,000">                      *@
                @Html.TextBox("txtRemainingBudget", planRemainingBudget, new { @class = "margin-top3px", id = "txtRemainingBudget", @readonly = "true" })
            </div>
        </div>
        <!--End content-->
        
        <!-- Start by Kalpesh Sharma #605: Cost allocation for Tactic  -->
            if (AllocatedBy.ToLower() != Enums.PlanAllocatedByList[Enums.PlanAllocatedBy.defaults.ToString()].ToString().ToLower())
            {
        <div class="budget-section">
            <div class="budget-head clearfix">
                <p>Cost Allocation</p>
                <a href="javascript:void(0)">- Collapse</a>
            </div>
            <div class="budget-collapse">
                <div class="white-bg">
                    @HtmlHelpers.GenerateBudgetAllocationControl(AllocatedBy)

                    @*Added By : Kalpesh Sharma : PL #605 : 07/29/2014*@
                    <div class="budget-month">
                        <span class="month">@Common.UnallocatedBudgetLabelText</span>   @* Modified by Sohel Pathan on 04/08/2014 *@
                        <span class="unallocated-span">
                            <input id="lblUnallocatedBudget" class="unallocated-text" readonly="true" /></span>
                    </div>

                </div>
                <div class="budget-result source-sans-prolight">
                    <p>
                        Remaining @(AllocatedBy.ToLower() == Enums.PlanAllocatedByList[Enums.PlanAllocatedBy.months.ToString()].ToString().ToLower() ? "Monthly" : "Quarter") Cost: 
                                    	<span id="lblRemainingMonthlyBudget" class="source-sans-proregular"></span>
                    </p>
                    <p>
                        Allocated Line Item Cost (this  @(AllocatedBy.ToLower() == Enums.PlanAllocatedByList[Enums.PlanAllocatedBy.months.ToString()].ToString().ToLower() ? "Month" : "Quarter")): 
                            <span id="lblAllocatedProgramsBudget" class="source-sans-proregular"></span>
                    </p>
                    <p>
                        Total Allocated:
                            <span id="lblTotalAllocated" class="source-sans-proregular"></span>
                    </p>
                    <p>
                        Total Planned Cost:
                          <span id="lblTotalBudget" class="source-sans-proregular">@Model.TacticCost </span>
                    </p>
                    @* <p>
                            Unallocated Cost:
                         <span id="lblUnallocatedBudget" class="source-sans-proregular"></span>
                        </p>*@
                </div>
            </div>
            <!--End content-->
        </div>
            }
        <!-- End by Kalpesh Sharma #605: Cost allocation for Tactic-->
        
        <div class="content dark inline-ellipsis cf">
            <div class="cf width100">
                <div class="width65px margin-right20 pull-left">
                    @*<label title="@Html.LabelForINQ("INQ")">@Html.LabelForINQ("INQ")</label>*@

                    <label id="lblStageTitle" title="@Model.StageTitle">@Model.StageTitle &nbsp;
                          @if (ViewBag.IsDiffrentStageType == true)
                          {
                              <span>
                                  <img id="diffrentStageIcon" src="~/Content/images/flag-icon.png" title="Please note that the stage information at plan level is different than that at the model level" /></span>
                              
                          }</label>
                    @*@Html.TextBoxFor(model => model.INQs, new { placeholder = "0", id = "txtinq", @class = "priceValue", maxlength = @RevenuePlanner.Helpers.Common.maxLengthPriceValue })*@
                    @Html.TextBoxFor(model => model.ProjectedStageValue, new { placeholder = "0", id = "txtProjectedStageValue", @class = "priceValue", maxlength = @RevenuePlanner.Helpers.Common.maxLengthPriceValue })
                </div>

                <div class="width65px margin-right20 pull-left">
                    <label title="@Html.LabelForMQL("MQL")">@Html.LabelForMQL("MQL")</label>
                    @*@Html.TextBoxFor(model => model.MQLs, new { placeholder = "0", id = "txtmql", @class = "priceValue", maxlength = @RevenuePlanner.Helpers.Common.maxLengthPriceValue, @readonly = "true" })*@
                    <input type="text" value="@Model.MQLs" readonly="true" id = "txtmql" />
                </div>

                @*  <div class="width65px margin-right20 pull-left">
                    <label title="Cost">Cost</label>
                    @Html.TextBoxFor(model => model.Cost, new { placeholder = "$0", id = "txtCost", @class = "currency_dollar", maxlength = @RevenuePlanner.Helpers.Common.maxLengthDollar })
                </div>*@

                <div class="width65px pull-left">
                    <label title="Revenue">Revenue</label>
                    @Html.TextBoxFor(model => model.Revenue, new { placeholder = "$0", id = "txtRevenue", @class = "currency_dollar", @readonly = "true", maxlength = @RevenuePlanner.Helpers.Common.maxLengthDollar })
                </div>

            </div>

            @if ((bool)ViewBag.IsCreated)
            {
                <div class="tactics-part">
                    <label>Line Items</label>
                    <div id="c_tactics">
                        <!--selects elements created dynamically-->
                    </div>
                    <div id="divAddNewTactics">
                        <span class="c-add-lineitem link-blue " style="margin-top: 3px;">Add New Line Items</span>
                    </div>
                </div>	
            }

            @if ((bool)ViewBag.RedirectType)
            {
                if (string.IsNullOrEmpty(CalledFromBudget))
                {
                <p class="font-size12 pull-left font-size13">Edit tactic details in </p>
                <label class="pull-left font-size12 padding-left3">@*@Html.ActionLink("Assortment Mix","Assortment")*@ <a href="#" id="lnkCampaigns">Campaigns</a>.</label>
                }
            }
        </div>
        <!--end content dark-->
            if ((bool)ViewBag.IsOwner && (bool)ViewBag.IsAllowCustomRestriction)
            {
        <div class="wraper-btns cf">

            <div id="divBudgetError" class="alert alert-error hide error-msg">
                <a class="close">×</a>
                <p id="BudgetErrorMessage" class="source-sans-probold">You cannot allocate more than budgeted for Jan and May .</p>
            </div>

            <div class="span2 btn-save">
                <button id="save_campaign_tactic" class="btn btn-blue text-shadow-blue source-sans-proregular" type="button">Save</button>
            </div>
            <div class="span2">
                <button class="close-form btn-link source-sans-proregular" type="button">Cancel</button>
            </div>
        </div>
            }
        <!--End buttons-->
    }

</div>
@* Start - Added by Sohel Pathan on 12/08/2014 for PL ticket #605 *@
<div style="display: none;">
    <input type="hidden" id="hdnPrevTacticTypeId" />
    <input type="hidden" id="hdnTotalPlanBudget" value="0" />
</div>
@* End - Added by Sohel Pathan on 12/08/2014 for PL ticket #605 *@
<script type="text/javascript">

    //Added By : Kalpesh Sharma : Functional Review Points #693
    function FormatRemainingBudget() {
        if (parseInt(ReplaceCC($("#txtRemainingBudget").val())) < 0) {
            $("#txtRemainingBudget").addClass('error-text');
        }
        else {
            $("#txtRemainingBudget").removeClass('error-text');
        }
    }

    $(document).ready(function () {

        //Added By : Kalpesh Sharma : Functional Review Points #693
        $("#txtRemainingBudget").val(FormatCommasBudget($("#txtRemainingBudget").val(), false, true));
        FormatRemainingBudget();

        //Added By : Kalpesh Sharma :: Formatted the currency and minus sign in string  
        $("#lblRemainingMonthlyBudget").html(FormatCommasBudget("0", false, true));

        /*Added by Mitesh Vaishnav on 13/06/2014 to address #498 Customized Target Stage - Publish model */
        ImageTipsy('#diffrentStageIcon');

        //$.ajaxSetup({ cache: false });
        $('#slidepanel-container').slimScroll({ scrollTo: '0px' });

        //Start by Kalpesh Sharma #605: Cost allocation for Tactic
        $(".budget-head a").click(function () {
            $('.budget-collapse').slideToggle();
            $('.budget-head a').html($('.budget-head a').text() == '- Collapse' ? '+ Expand' : '- Collapse');
        });
        var SaveCampaignFlag = true;

        //Added By : Kalpesh Sharma : PL #605 : 07/29/2014
        if ($("#hdnIsBudgetAllocated").val() == "True") {
            $("#lblTotalBudget").html(FormatCommasBudget($("#lblTotalBudget").html(), false, true));
        }

        var isredirect = "@ViewBag.RedirectType";
        var isAssortment = $("#hdnRedirectType").val();
        var hdnYear = @ViewBag.Year
        $('.currency_dollar').priceFormat({ prefix: '$', centsSeparator: '', thousandsSeparator: ',', centsLimit: 0 });

        if ('@TempData["TacticMQL"]' == "N/A") {
            $("#txtmql").removeClass("priceValue");
            $("#txtmql").val("N/A");
        }
        else {
            $("#txtmql").val(FormatCommas($("#txtmql").val(), false));
        }

        $('.priceValue').priceFormat({ prefix: '', centsSeparator: '', thousandsSeparator: ',', centsLimit: 0 });

        //if (isredirect == 'True') {   // Commented by Sohel Pathan on 08/07/2014 for PL ticket #549 to add Start and End date field in Campaign. Program and Tactic screen
        $("#t_startdate").val($("#t_startdate").val().split(' ')[0]);
        $("#t_enddate").val($("#t_enddate").val().split(' ')[0]);
        //}
        $("span.tool-tip").tooltip();

        $(".alert").find(".close").on("click", function (e) {

            e.stopPropagation();
            e.preventDefault();
            $(this).closest(".alert").slideUp(400);
        });
        //if (isredirect == 'True') {   // Commented by Sohel Pathan on 08/07/2014 for PL ticket #549 to add Start and End date field in Campaign. Program and Tactic screen
        $('.datepicker.dropdown-menu').css("display", "none");
        //}
        $('.close-form', this.$panel).click(function (e) {
            //if (isredirect == 'True') {   // Commented by Sohel Pathan on 08/07/2014 for PL ticket #549 to add Start and End date field in Campaign. Program and Tactic screen
            $('.datepicker.dropdown-menu').css("display", "none");
            //}
            $("#slidepanel").css("display", "none");
            $("#slidepanel-container").empty();
        });

        var lineItemType;
        $.ajax({
            type: 'POST',
            url: '@Url.Content("~/Plan/GetLineItemType/")',
            data: {
            },
            success: function (r) {
                lineItemType = r;
                myApp.hidePleaseWait();
            }
        });

        $(".c-add-lineitem").click(function () {
            var lineitemString;
            if (typeof lineItemType != 'undefined') {
                for (i in lineItemType) {
                    lineitemString = lineitemString + '<option value="' + lineItemType[i].LineItemTypeId + '">' + lineItemType[i].Title + '</option>';
                }
            }

            $("#c_tactics").append('<div  style="margin-bottom: 5px;width: 50% !important;float:left;"><span class="verticalIdSelectBox"><select id="LineItemTypeId" class="ddlStyle" require="true" name="lineitemTypeId" data-val-required="The LineItemTypeId field is required." data-val-number="The field LineItemTypeId must be a number." data-val="true">' +
               //'<option value="">Please Select</option>' + lineitemString +
                //Added By : Kalpesh Sharma PL#697
                lineitemString +
               '</select></span>' +
          '<span class="delete-tactic"></span></div>');
            $(".verticalIdSelectBox select").selectbox();
        });

        $('#c_tactics').on('click', '.delete-tactic', function () {
            //Added By : Kalpesh Sharma
            $(this).parent().remove();
            $(this).remove();
        });

        //Added : By Kalpesh Sharma Ticket #648 Cloning icon for tactics with allocation
        $("#tacticClone").click(function () {
            var idPlanTactic = $("#hdnPlanTacticId").val();
            $.ajax({
                type: 'POST',
                url: '@Url.Content("~/Plan/Clone")',
                data: {
                    CloneType: '@Enums.DuplicationModule.Tactic',
                    Id: idPlanTactic,
                    title: '@Model.Title',
                    CalledFromBudget: '@CalledFromBudget'
                },
                success: function (data) {
                    if (data.returnURL != 'undefined' && data.returnURL == '#') {
                        window.location = '@Url.Content("~/Login/Index")';
                    }
                    else {
                        if (data.redirect) {
                            window.location.href = data.redirect;
                            return;
                        }
                        if (data.errormsg) {
                            alert(data.errormsg);
                            return;
                        }
                    }
                }
            });
        });


        $("#spanDuplicate").click(function () {
            CheckUserSession("#spanDuplicate", true);
            if (reason == 'user') {
                return false;
            }
            var hdnPlanTacticId = $("#hdnPlanTacticId").val();
            var isAssortment = $("#hdnRedirectType").val();
            var arrClosedTaskString = null;
            if (typeof arrClosedTask != 'undefined') {
                arrClosedTaskString = arrClosedTask.toString();
            }

            $.ajax({
                type: 'POST',
                url: '@Url.Content("~/Plan/DuplicateCopyClone")',
                data:
                    {
                        id: hdnPlanTacticId,
                        RedirectType: isAssortment,
                        CopyClone: 'Tactic',
                        closedTask: arrClosedTaskString,
                        CalledFromBudget: '@CalledFromBudget'
                    },
                success: function (data) {
                    if (data.redirect) {
                        window.location.href = data.redirect;
                        return;
                    }
                    if (data.errormsg) {
                        ShowError(data.errormsg);
                        return;
                    }

                }
            });
        });


        $("#t_integration_status").click(function () {
            if ($(this).hasClass("icon-check-blue")) {
                $(this).val("Not Sync to integration");
                $(this).addClass("icon-check-gray");
                $(this).removeClass("icon-check-blue");
                $("#hdnIsDeployedToIntegration").val(false);
            }
            else {
                $(this).val("Sync to integration");
                $(this).addClass("icon-check-blue");
                $(this).removeClass("icon-check-gray");
                $("#hdnIsDeployedToIntegration").val(true);
            }
        });

        var isOwner = "@ViewBag.IsOwner";
        var isAllowRestriction = "@ViewBag.IsAllowCustomRestriction";
        if (isOwner == 'False' || isAllowRestriction == 'False') {
            $('form').find(".sbSelector").each(function () {
                $(this).unbind("click");
                $(this).removeAttr("href");
                $(this).prev().unbind("click");
                $(this).prev().removeAttr("href");
            });
            $('form').find("input[type=text], textarea").each(function () {
                $(this).prop('readonly', true);
                $(this).unbind("focusout");
            });
            $('form').find(".add-on").each(function () {
                $(this).unbind("click");
            });
            return false;
        }
        $("#txtProjectedStageValue").focusout(function () {
            var projectedStageValue = ReplaceCC($("#txtProjectedStageValue").val());
            $("#txtProjectedStageValue").val(ReplaceCC($("#txtProjectedStageValue").val()));
            GetConversionRate(projectedStageValue, false);
            $("#txtProjectedStageValue").val(FormatCommas($("#txtProjectedStageValue").val(), false));
        });

        var mqlConversion = 0;
        function GetConversionRate(projectedStageValue, isTacticTypeChange) {
            if ($('#ddlTacticType').val() != '') {//added by uday for point 68
                $.ajax({
                    type: 'POST',
                    url: '@Url.Content("~/Plan/CalculateMQL")',
                    data: $("form").serialize() + '&projectedStageValue=' + projectedStageValue + '&RedirectType=' + isAssortment + '&isTacticTypeChange=' + isTacticTypeChange,
                    success: function (data) {
                        if (data.mql == 'N/A') {
                            $("#txtmql").val(data.mql);
                            $("#txtmql").removeClass('priceValue');
                        }
                        else {
                            mqlConversion = data.mql;
                            $("#txtmql").val(FormatCommas(mqlConversion.toString(), false));
                        }
                    }
                });
            }
        }
        $('form').find('input[type=text], select, textarea').each(function () {
            $(this).change(function () {
                if ($(this).attr('require') == 'true') {
                    if ($(this).val() == '') {
                        $(this).addClass("error");
                    }
                    else {
                        $(this).removeClass("error");
                    }
                }
            });
        });

        $('form').find(".sbSelector").each(function () {
            $(this).next().find('li').click(function () {
                if ($(this).parent().parent().prev().attr('require') == 'true') {
                    if ($(this).parent().prev().text() == 'Please Select') {
                        $(this).parent().prev().addClass("error");
                        iserror = true;
                    }
                    else {
                        $(this).parent().prev().removeClass("error");
                    }
                }
            });
        });



        $("#save_campaign_tactic").mousedown(function () {
            //CheckUserSession("#save_campaign_tactic", true);
            //if (reason == 'user') {
            //    return false;
            //}
            saveTactic();
        });
        $("#save_campaign_tactic").click(function () {
            //CheckUserSession("#save_campaign_tactic", true);
            //if (reason == 'user') {
            //    return false;
            //}
            saveTactic();
        });

        function saveTactic() {
            var iserror = false;
            $('form').find('input[type=text], select, textarea').each(function () {
                if ($(this).attr('require') == 'true') {
                    if ($(this).val() == '') {
                        $(this).addClass("error");
                        iserror = true;
                    }
                    else {
                        $(this).removeClass("error");
                    }
                }
            });

            //sbSelector
            $('form').find('.sbSelector').each(function () {
                if ($(this).parent().prev().attr('require') == 'true') {
                    if ($(this).text() == 'Please Select') {
                        $(this).addClass("error");
                        iserror = true;
                    }
                    else {
                        $(this).removeClass("error");
                    }
                }
            });

            if (iserror) {
                ShowError("@RevenuePlanner.Helpers.Common.objCached.ValidateForEmptyField");
                return false;
            }
            //if (isredirect == 'True') {   // Commented by Sohel Pathan on 08/07/2014 for PL ticket #549 to add Start and End date field in Campaign. Program and Tactic screen
            var sdate = $('#t_startdate').val();
            var edate = $('#t_enddate').val();
            if (!isDate(sdate)) {
                alert('@Common.objCached.ValidateStartDate');
                return false;
            }
            if (!isDate(edate)) {
                alert('@Common.objCached.ValidateEndDate');
                return false;
            }
            if (!CheckDateYear(sdate, hdnYear, "@RevenuePlanner.Helpers.Common.objCached.StartDateCurrentYear")) return false;
            if (!CheckDateYear(edate, hdnYear, "@RevenuePlanner.Helpers.Common.objCached.EndDateCurrentYear")) return false;
            //var psdate = $('#hdnPStartDate').val();
            //var pedate = $('#hdnPEndDate').val();
            //var csdate = $('#hdnCStartDate').val();
            //var cedate = $('#hdnCEndDate').val();
            if (!validateDateCompare(sdate, edate, "@RevenuePlanner.Helpers.Common.objCached.DateComapreValidation")) return false;
            //if (!validateDateCompare(psdate, sdate, "Program Start Date")) return false;
            //if (!validateDateCompare(csdate, sdate, "Campaign Start Date")) return false;
            //if (!validateDateCompare(edate, pedate, "Program End Date")) return false;
            //if (!validateDateCompare(edate, cedate, "Campaign End Date")) return false;


            //}
            if ($("#hdnIsBudgetAllocated").val() == "True") {
                //Start by Kalpesh Sharma #605: Cost allocation for Tactic
                @*                var lstAllocInputs = $(".budget-section input.error-text").not('.unallocated-text');
                if (lstAllocInputs.length > 0) {
                    var errorMsg = "@RevenuePlanner.Helpers.Common.objCached.CannotAllocateMorehanBudgeted for ";
                    var inputLength = lstAllocInputs.length;
                    var removeLength = 0;
                    for (var i = 0; i < lstAllocInputs.length; i++) {

                        if (inputLength == 1) {
                            errorMsg += ($(lstAllocInputs[i]).parent().prev().html());
                        }
                        else if (inputLength == 2) {
                            errorMsg += ($(lstAllocInputs[i]).parent().prev().html() + ' and ');
                            removeLength = 4;
                        }
                        else if (inputLength > 2) {
                            if (i == inputLength - 2) {
                                errorMsg += ($(lstAllocInputs[i]).parent().prev().html() + ' and ');
                                removeLength = 4;
                            }
                            else {
                                errorMsg += ($(lstAllocInputs[i]).parent().prev().html() + ', ');
                                removeLength = 2;
                            }
                        }

                    }

                    errorMsg = errorMsg.substring(0, errorMsg.length - removeLength);
                    errorMsg += '.';

                    ShowBudgetError(errorMsg);
                    return false;
                }*@

                @*if ($("#txtRemainingBudget").hasClass('error-text')) {
                    //Added By : Kalpesh Sharma :: Formatted the currency and minus sign in string  
                    ShowBudgetError("@RevenuePlanner.Helpers.Common.objCached.AllocateMoreThanRemainingBudgeted");
                    return false;
                }*@

              @*  if (parseInt(ReplaceCC($("#lblUnallocatedBudget").val())) < 0) {
                    //Added By : Kalpesh Sharma :: Formatted the currency and minus sign in string  
                    ShowBudgetError("@RevenuePlanner.Helpers.Common.objCached.BudgetLessThanAllocated");
                    return false;
                }

                if ($("#lblTotalAllocated").hasClass('error-text')) {
                    //Added By : Kalpesh Sharma :: Formatted the currency and minus sign in string  
                    ShowBudgetError("@RevenuePlanner.Helpers.Common.objCached.AllocateMoreThanBudgeted");
                    return false;
                }*@

            }

            $("#txtProjectedStageValue").val(ReplaceCC($("#txtProjectedStageValue").val()));
            if ($("#txtmql").val() == 'N/A') {
                $("#txtmql").val(0);
            }
            else {
                $("#txtmql").val(ReplaceCC($("#txtmql").val()));
            }

            $("#TacticCost").val(ReplaceCC($("#TacticCost").val()));    // Modified by Sohel Pathan on 12/08/2014 for PL ticket #605
            var arrClosedTaskString = null;
            if (typeof arrClosedTask != 'undefined') {
                arrClosedTaskString = arrClosedTask.toString();
            }

            //Start by Kalpesh Sharma #605: Cost allocation for Tactic
            var allocationValue = [];
            var lstAllocInputs = $(".budget-section input").not('.unallocated-text');
            for (var i = 0; i < lstAllocInputs.length; i++) {
                allocationValue.push(ReplaceCC($(lstAllocInputs[i]).val()));
            }

            //$("#txtTacticPlannedCost").val(ReplaceCC($("#txtTacticPlannedCost").val()));

            var arLineitem = [];
            var _Lineitems = $("#frm_campaigns #c_tactics select");
            for (var l = 0; l < _Lineitems.length; l++) {
                var typeid = $(_Lineitems[l]).val();
                arLineitem[l] = typeid;
            }

            document.getElementById("Title").value = htmlEncode($('#Title').val());////Added by Mitesh Vaishnav on 07/07/2014 for PL ticket #584
            document.getElementById("Description").value = htmlEncode($('#Description').val());////Added by Mitesh Vaishnav on 07/07/2014 for PL ticket #584
            var uId = $(window).attr('name');
            $.ajax({
                type: 'POST',
                url: '@Url.Content("~/Plan/SaveTactic")',
                data: $("form").serialize() + '&lineitems=' + arLineitem + '&RedirectType=' + isAssortment + '&closedTask=' + arrClosedTaskString + '&BudgetInputValues=' + allocationValue.toString() + '&UserId=' + uId + '&CalledFromBudget=' + '@CalledFromBudget',
                success: function (data) {
                    if (data.returnURL != 'undefined' && data.returnURL == '#') {
                        window.location = '@Url.Content("~/Login/Index")';
                    }
                    else {
                        if (data.redirect) {
                            window.location.href = data.redirect;
                            return;
                        }
                        if (data.errormsg) {
                            document.getElementById("Title").value = htmlDecode($('#Title').val());////Added by Mitesh Vaishnav on 07/07/2014 for PL ticket #584
                            document.getElementById("Description").value = htmlDecode($('#Description').val());////Added by Mitesh Vaishnav on 07/07/2014 for PL ticket #584
                            ShowError(data.errormsg);
                            //Added By : Kalpesh Sharma Functional and Review Points 07/31/2014
                            $("#divBudgetError").slideUp(30);
                            return;
                        }
                    }
                }
            });
        }

        $('#ddlTacticType').change(function () {
            var tacticTypeId = $(this).val();
            //var pinq = 0;
            var pmql = 0;
            var pcost = 0;
            var projectedStageValue = 0;
            //alert(tacticTypeId);
            if (tacticTypeId != '') {
                if (parseInt($('#hdnPrevTacticTypeId').val()) != parseInt($('#ddlTacticType').val())) {     // Added by Sohel Pathan on 12/08/2014 for PL ticket #605
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Content("~/Plan/LoadTacticTypeValue")',
                        data: { tacticTypeId: tacticTypeId },
                        success: function (data) {
                            //pinq = data.inq;
                            //pmql = data.mql;
                            pcost = data.revenue;
                            projectedStageValue = data.projectedStageValue;
                            $("#lblStageTitle").text(data.stageTitle);
                            $("#hdnStageId").val(data.stageId);
                            $("#txtProjectedStageValue").val(projectedStageValue);
                            GetConversionRate(projectedStageValue, true); //GetConversionRate(pinq);
                            // $("#txtmql").val(FormatCommas(Math.round(mqlConversion * pinq).toString(), false));
                            //$("#txtCost").val(pcost);
                            //Start by Kalpesh Sharma #605: Cost allocation for Tactic 07/30/2014
                            $("#TacticCost").val(pcost);    // Modified by Sohel Pathan on 12/08/2014 for PL ticket #605

                            $('.currency_dollar').priceFormat({ prefix: '$', centsSeparator: '', thousandsSeparator: ',', centsLimit: 0 });
                            $('.priceValue').priceFormat({ prefix: '', centsSeparator: '', thousandsSeparator: ',', centsLimit: 0 });

                            //Added By : Kalpesh Sharma Reintilaize the Remaining Budget Value 08/04/2014
                            // Start - Modified by Sohel Pathan on 12/08/2014 for PL ticket #605
                            var ProgramBudgetValue = ReplaceCC($("#TacticCost").val());
                            //var OldProgramBudgetValue = ReplaceCC($("#hdnOldTacticBudget").val());
                            //var differenceVal = parseInt(OldProgramBudgetValue) - parseInt(ProgramBudgetValue);
                            //var newRemainingBudget = parseInt(ReplaceCC($("#txtRemainingBudget").val())) + differenceVal;
                            var newRemainingBudget = parseInt($("#hdnTotalPlanBudget").val()) - ProgramBudgetValue; // + differenceVal;
                            // End - Modified by Sohel Pathan on 12/08/2014 for PL ticket #605
                            $("#txtRemainingBudget").val(FormatCommasBudget(newRemainingBudget.toString(), false, true));
                            $("#txtRemainingBudget").attr('title', $("#txtRemainingBudget").val());

                            if (data.IsDeployedToIntegration) {
                                $("#t_integration_status").val("Sync to integration");
                                $("#t_integration_status").addClass("icon-check-blue");
                                $("#t_integration_status").removeClass("icon-check-gray");
                                $("#hdnIsDeployedToIntegration").val(true);
                            }
                            else {
                                $("#t_integration_status").val("Not Sync to integration");
                                $("#t_integration_status").addClass("icon-check-gray");
                                $("#t_integration_status").removeClass("icon-check-blue");
                                $("#hdnIsDeployedToIntegration").val(false);
                            }
                            $('#hdnPrevTacticTypeId').val($('#ddlTacticType').val());   // Added by Sohel Pathan on 12/08/2014 for PL ticket #605
                        }
                    });
                }
            }
            else {
                $("#txtProjectedStageValue").val(projectedStageValue);
                $("#txtmql").val(pmql);
                //$("#txtCost").val(pcost);
                //Start by Kalpesh Sharma #605: Cost allocation for Tactic 07/30/2014
                $("#TacticCost").val('0');  // Modified by Sohel Pathan on 12/08/2014 for PL ticket #605
                $('.currency_dollar').priceFormat({ prefix: '$', centsSeparator: '', thousandsSeparator: ',', centsLimit: 0 });
                $('.priceValue').priceFormat({ prefix: '', centsSeparator: '', thousandsSeparator: ',', centsLimit: 0 });
                $("#lblStageTitle").text("Stage");
                $("#hdnStageId").val("0");
                // Start - Added by Sohel Pathan on 12/08/2014 for PL ticket #605
                var newRemainingBudget = parseInt($("#hdnTotalPlanBudget").val());
                $("#txtRemainingBudget").val(FormatCommasBudget(newRemainingBudget.toString(), false, true));
                $('#hdnPrevTacticTypeId').val('0');
                // End - Added by Sohel Pathan on 12/08/2014 for PL ticket #605
            }
            
            $('#ddlTacticType').next().find('.sbSelector').focus(); // Added by Sohel Pathan on 13/08/2014 for PL ticket #605
        });

@* TFS Point 253,206 : Model/Plan - sidebars - integrate gear icon with feature to delete/duplicate tactic
    Added by Nirav Shah on 17 feb 2014
 *@
        $("#deleteTactic").click(function () {
            //CheckUserSession("#deleteTactic", true);
            //if (reason == 'user') {
            //    return false;
            //}
            var uId = $(window).attr('name');
            if (confirm('@Common.objCached.ConfirmationForDeleteTactic')) {
                var idTactic = $("#hdnPlanTacticId").val();
                var isAssortment = $("#hdnRedirectType").val();
                var arrClosedTaskString = null;
                if (typeof arrClosedTask != 'undefined') {
                    arrClosedTaskString = arrClosedTask.toString();
                }

                $.ajax({
                    type: 'POST',
                    url: '@Url.Content("~/Plan/DeleteTactic")',
                    data: {
                        ID: idTactic,
                        RedirectType: isAssortment,
                        closedTask: arrClosedTaskString,
                        UserId: uId,
                        CalledFromBudget: '@CalledFromBudget'
                    },
                    success: function (data) {
                        if (data.returnURL != 'undefined' && data.returnURL == '#') {
                            window.location = '@Url.Content("~/Login/Index")';
                        }
                        else {
                            if (data.redirect) {
                                window.location.href = data.redirect;
                                return;
                            }
                            if (data.errormsg) {
                                alert(data.errormsg);
                                return;
                            }
                        }

                    }
                });
            }
            else {
                return false;
            }
        });
        function ShowError(value) {
            $("#errorMessage").slideDown(400);
            $("#spanMessage").empty();
            $("#spanMessage").text(value);
        }

        $('.dp').datepicker({
            format: "@RevenuePlanner.Helpers.Common.dateFormat",
            autoclose: true,
        }).on('changeDate', function (ev) {
            //var projectedStageValue = ReplaceCC($("#txtProjectedStageValue").val());
            //if ($('#ddlTacticType').val() != '') {      // Added by Sohel Pathan on 11/07/2014 for PL ticket #549
            //    GetConversionRate(projectedStageValue, false);//commented by uday for internal point 68 17-7-2014
            //}
            $(this).datepicker('hide');
        });;

        /*hide the other datepicker in input onclick*/

        $('#t_startdate').click(function () {
            $('#dp_end').datepicker('hide');
        })

        $('#t_enddate').click(function () {
            $('#dp_start').datepicker('hide');
        })



        //hide the other datepicker in add-on onclick
        $('#dp_start .add-on').click(function () {
            $('#dp_start').datepicker('show');
            $('#dp_end').datepicker('hide');

        })
        $('#dp_end .add-on').click(function () {
            $('#dp_start').datepicker('hide');
            $('#dp_end').datepicker('show');

        })
        NumberFormatterTipsyTitle(".displaytitle", 31);// uday PL Ticket #550 3-7-2014

        // Start - Added by Sohel Pathan on 12/08/2014 for PL ticket #605
        if (parseInt($('#hdnPlanTacticId').val()) > 0) {
            $('#hdnPrevTacticTypeId').val($('#ddlTacticType').val());
        }
        // End - Added by Sohel Pathan on 12/08/2014 for PL ticket #605
    });


    //Start by Kalpesh Sharma #605: Cost allocation for Tactic
    //if ($("#hdnIsBudgetAllocated").val() == "True") {
        fillBudgetAllocationData();
    //}

    $("#TacticCost").keyup(function () {    // Modified by Sohel Pathan on 12/08/2014 for PL ticket #605
        // Start - Modified by Sohel Pathan on 12/08/2014 for PL ticket #605
        var ProgramBudgetValue = ReplaceCC($("#TacticCost").val());
        //var OldProgramBudgetValue = ReplaceCC($("#hdnOldTacticBudget").val());
        //var differenceVal = parseInt(OldProgramBudgetValue) - parseInt(ProgramBudgetValue);
        //var newRemainingBudget = parseInt(ReplaceCC($("#txtRemainingBudget").val())) + differenceVal;
        var newRemainingBudget = parseInt($("#hdnTotalPlanBudget").val()) - ProgramBudgetValue; //+ differenceVal;
        // End - Modified by Sohel Pathan on 12/08/2014 for PL ticket #605

        $("#txtRemainingBudget").val(FormatCommasBudget(newRemainingBudget.toString(), false, true));
        $("#txtRemainingBudget").attr('title', $("#txtRemainingBudget").val());

        $("#hdnOldTacticBudget").val(ProgramBudgetValue);
        if (parseInt(ReplaceCC($("#txtRemainingBudget").val())) < 0) {
            $("#lblTotalBudget").addClass('error-text');
            $("#txtRemainingBudget").addClass('error-text');
        }
        else {
            $("#lblTotalBudget").removeClass('error-text');
            $("#txtRemainingBudget").removeClass('error-text');
        }

        $("#lblTotalBudget").html('$' + FormatCommas(ProgramBudgetValue, false));
        if ($("#hdnIsBudgetAllocated").val() == "True") {
            calculateUnallocatedBudget();
        }
    });


    $('.budget-section').find('input').not('.unallocated-text').each(function () {
        $(this).keyup(function () {
            if ($(this).val().trim() != '') {
                var currentValue = $(this).val().trim().replace(/,/g, '').replace('$', '');
                if (currentValue.match('^(0|[1-9][0-9]*)$')) {

                    var OldBudgetValue = parseInt($(this).attr("ov"));
                    var RemainingBudgetValue = parseInt($(this).attr("rmb"));
                    var differenceVal = OldBudgetValue - parseInt(currentValue);
                    var newRemainingBudgetValue = RemainingBudgetValue + differenceVal;
                    $(this).attr("rmb", newRemainingBudgetValue);
                    $(this).attr("ov", currentValue);
                    if (newRemainingBudgetValue < 0) {
                        $(this).addClass('error-text');
                        $("#lblRemainingMonthlyBudget").addClass('error-text');
                    }
                    else {
                        $(this).removeClass('error-text');
                        $("#lblRemainingMonthlyBudget").removeClass('error-text');
                    }

                    //Added By : Kalpesh Sharma :: Formatted the currency and minus sign in string  
                    $("#lblRemainingMonthlyBudget").html(FormatCommasBudget(newRemainingBudgetValue.toString(), false, true));

                    var ProgramBudgetValue = parseInt($(this).attr("pmb"));
                    if (parseInt(currentValue) < ProgramBudgetValue) {
                        $(this).addClass('low-budgeted');
                        $("#lblAllocatedProgramsBudget").addClass('error-text');
                    }
                    else {
                        $(this).removeClass('low-budgeted');
                        $("#lblAllocatedProgramsBudget").removeClass('error-text');
                    }

                    var TotalallocationValue = 0;
                    var lstAllocInputs = $(".budget-section input").not('.unallocated-text');
                    for (var i = 0; i < lstAllocInputs.length; i++) {
                        TotalallocationValue += parseInt($(lstAllocInputs[i]).val() == '' ? 0 : ReplaceCC($(lstAllocInputs[i]).val()));
                    }
                    $("#lblTotalAllocated").html(FormatCommasBudget(TotalallocationValue.toString(), false, true));
                    calculateUnallocatedBudget();
                }
            }
        });
    });

    //Added By : Kalpesh Sharma : PL #605 : 07/29/2014
    $('.budget-section').find('input').not('.unallocated-text').each(function () {
        $(this).focus(function () {
            $('.budget-section').find('input').not('.unallocated-text').parent().removeClass('border000000');
            $(this).parent().addClass('border000000');
            var remainingValue = parseInt($(this).attr("rmb"));
            var AllocatedProgramsBudget = parseInt($(this).attr("pmb"));
            if (remainingValue < 0) {
                $("#lblRemainingMonthlyBudget").addClass('error-text');
            }
            else {
                $("#lblRemainingMonthlyBudget").removeClass('error-text');
            }
            $("#lblRemainingMonthlyBudget").html(FormatCommasBudget(remainingValue.toString(), false, true));
            $("#lblAllocatedProgramsBudget").html(FormatCommasBudget(AllocatedProgramsBudget.toString(), false, true));

        });

        //$(this).focusout(function () {
        //    $(this).parent().removeClass('border000000');
        //});
    });



    //Start added by Kalpesh  #608: Budget allocation for Program
    function fillBudgetAllocationData() {
        $.ajax({
            type: 'POST',
            url: '@Url.Content("~/Plan/GetBudgetAllocationTactics/")',
            data: {
                PlanProgramId: '@Model.PlanProgramId', PlanTacticId: '@Model.PlanTacticId'
            },
            success: function (data) {
                var r = data.budgetData;
                if (typeof r != 'undefined') {
                    if (r.length) {
                        for (i in r) {
                            var remainingMonthlyBudget = r[i].remainingMonthlyBudget == '' ? '0' : r[i].remainingMonthlyBudget;
                            $("#" + r[i].periodTitle).val(FormatCommas(r[i].budgetValue, false));
                            $("#" + r[i].periodTitle).attr('ov', r[i].budgetValue == '' ? '0' : r[i].budgetValue);
                            $("#" + r[i].periodTitle).attr('rmb', remainingMonthlyBudget);
                            $("#" + r[i].periodTitle).attr('pmb', r[i].programMonthlyBudget);
                            $("#" + r[i].periodTitle).attr("myValue", $("#" + r[i].periodTitle).val()); // Added by Sohel Pathan on 18/08/2014 for Internal Review Points
                            if (parseInt(remainingMonthlyBudget) < 0) {
                                $("#" + r[i].periodTitle).addClass('error-text');
                            }
                        }
                    }
                }

                //Added By : Kalpesh Sharma : Functional Review Points #693
                $("#txtRemainingBudget").val(FormatCommasBudget(data.planRemainingBudget.toString(), false, true));
                FormatRemainingBudget();

                // Start - Added by Sohel Pathan on 12/08/2014 for PL ticket #605
                var TotalPlanBudget = parseInt(data.planRemainingBudget.toString()) + parseInt(ReplaceCC($('#TacticCost').val()));
                $("#hdnTotalPlanBudget").val(TotalPlanBudget);
                // End - Added by Sohel Pathan on 12/08/2014 for PL ticket #605
                $("#txtRemainingBudget").attr('title', $("#txtRemainingBudget").val());
                $("#txtRemainingBudget").attr('myvalue', $("#txtRemainingBudget").val());

                var TotalallocationValue = 0;
                var lstAllocInputs = $(".budget-section input");
                for (var i = 0; i < lstAllocInputs.length; i++) {
                    TotalallocationValue += parseInt($(lstAllocInputs[i]).val() == '' ? 0 : ReplaceCC($(lstAllocInputs[i]).val()));
                }
                $("#lblTotalAllocated").html('$' + TotalallocationValue);
                calculateUnallocatedBudget();
                $("#Y1").focus();
                $("#Title").focus();
            },
            error: function () {
                ShowError('');
                return false;
            }
        });
    }

    function calculateUnallocatedBudget() {
        if ($("#hdnIsBudgetAllocated").val() == "True") { // Added by Dharmraj, #699: Wrong Remaining Program Budget
            var CampaignBudgetValue = $("#TacticCost").val().trim().replace(/,/g, '').replace('$', '');     // Modified by Sohel Pathan on 12/08/2014 for PL ticket #605
            var CampaignAllocatedBudgetValue = $("#lblTotalAllocated").html().trim().replace(/,/g, '').replace('$', '');
            var unallocatedBudget = parseInt(CampaignBudgetValue) - parseInt(CampaignAllocatedBudgetValue);

            //Added By : Kalpesh Sharma :: Formatted the currency and minus sign in string  
            $("#lblUnallocatedBudget").val(FormatCommasBudget(unallocatedBudget.toString(), false, true));

            if (unallocatedBudget < 0) {
                $("#lblUnallocatedBudget").addClass('error-text');
                $("#lblTotalAllocated").addClass('error-text');

            }
            else {
                $("#lblUnallocatedBudget").removeClass('error-text');
                $("#lblTotalAllocated").removeClass('error-text');
            }
        }
    }

    function ShowBudgetError(value) {
        $("#divBudgetError").slideDown(400);
        $("#BudgetErrorMessage").empty();
        $("#BudgetErrorMessage").html(value);
    }

    // End by Kalpesh Sharma #605: Cost allocation for Tactic

</script>
