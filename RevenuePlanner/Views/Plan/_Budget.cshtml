@model RevenuePlanner.Models.BudgetDHTMLXGridModel

@using RevenuePlanner.Models
@using RevenuePlanner.Helpers
@*TODO :- Commented code by Rushil on 26/05/2016 after conversion of HTML grid to DHTMLX grid for #2191. Need to remove this code after testing.*@
@*@model List<BudgetModel>*@
@{
    @*TODO :- Commented code by Rushil on 26/05/2016 after conversion of HTML grid to DHTMLX grid for #2191. Need to remove this code after testing.*@
    //BudgetDHTMLXGridModel objBudgetDHTMLXGrid = (BudgetDHTMLXGridModel)Session["objBudgetDHTMLXGrid"];
  
    
    string AllocatedBy = ViewBag.AllocatedBy;
    @*TODO :- Commented code by Rushil on 26/05/2016 after conversion of HTML grid to DHTMLX grid for #2191. Need to remove this code after testing.*@
    //BudgetModel plan = Model.Where(p => p.ActivityType == ActivityType.ActivityPlan).SingleOrDefault();
    string strDefault = Enums.PlanAllocatedByList[Enums.PlanAllocatedBy.defaults.ToString()].ToString().ToLower();
    string strMonths = Enums.PlanAllocatedByList[Enums.PlanAllocatedBy.months.ToString()].ToString().ToLower();
    string strQuarters = Enums.PlanAllocatedByList[Enums.PlanAllocatedBy.quarters.ToString()].ToString().ToLower();
    string strViewBy = Convert.ToString(ViewBag.ViewBy).ToLower();
    BudgetMonth PercAllocated = ViewBag.PercAllocated;
    double planAllocation = 0;
    
    // Modified by Rushil Bhuptani on 26/05/2016 for #2191
    double sumMonth = ViewBag.SumMonth;
    planAllocation = ViewBag.PlanAllocation;
    double mainBudgeted = ViewBag.MainBudgeted;
    
    string strTab = Convert.ToString(ViewBag.Tab);
    bool isquarter = false;
    if (AllocatedBy.ToLower() == strQuarters)
    {
        isquarter = true;
    }
    bool isPlannedTab = ((int)Enums.BudgetTab.Planned).ToString() == strTab ? true : false;
    string columnBorderClass = isPlannedTab ? string.Empty : "columnBorder";
}

<link href="@Url.Content("~/Content/css/DHTMLX/dhtmlxtreegrid2_min.css")" rel="stylesheet" type="text/css" />
<script type="text/javascript" src="@Url.Content("~/Scripts/js/DHTMLX/dhtmlxtreegrid_min.js")"></script>

<script src="~/Scripts/jquery.cluetip.js"></script>
<style>
     div.gridbox_dhx_skyblue.gridbox table.hdr td div.hdrcell
    {
        text-align: center;
        padding-left: 0px !important;
    }

    div.gridbox_dhx_skyblue.gridbox div.xhdr table.hdr
    {
        width: 100% !important;
    }

        div.gridbox_dhx_skyblue.gridbox div.xhdr table.hdr tr
        {
            color: black;
        }

    div.gridbox_dhx_skyblue.gridbox div.objbox table.row20px
    {
        width: 100% !important;
    }

        div.gridbox_dhx_skyblue.gridbox div.objbox table.row20px tr
        {
            color: black;
        }

            div.gridbox_dhx_skyblue.gridbox div.objbox table.row20px tr td div.treegrid_cell
            {
                text-align: left !important;
            }

            div.gridbox_dhx_skyblue.gridbox div.objbox table.row20px tr td div
            {
                text-align: center;
            }

        div.gridbox_dhx_skyblue.gridbox div.objbox table.row20px .progressBar.budgetError
        {
            background: #ff1e26 none repeat scroll 0 0;
        }

        div.gridbox_dhx_skyblue.gridbox div.objbox table.row20px .progressBar
        {
            background: #3fa9f5 none repeat scroll 0 0;
            bottom: 0;
            height: 2px !important;
            left: 0;
            margin: 0;
            max-width: 100%;
            padding: 0;
            position: absolute;
        }

        div.gridbox_dhx_skyblue.gridbox div.objbox table.row20px tr td div.budgetError, span.budgetError
        {
            color: #ff1e26;
        }

    #gridbox.gridbox_dhx_skyblue.gridbox div.objbox table.row20px tr td
    {
        position: relative;
    }

    .dhxgrid_sort_asc, .dhxgrid_sort_desc
    {
        background-repeat: no-repeat;
        height: 26px;
        top: 44px !important;
        width: 15px;
    }

    /*Added by Rushil Bhuptani on 26/05/2016 for #2191*/
    .clickmeAnchor {
        color: #000 !important;
        cursor: pointer;
    }
</style>

<div id="errorMessageInspectPopup" class="alert hide alert-error message-position">
    <a class="close">×</a>
    <div id="cErrorInspectPopup"></div>
</div>
<div class="tab-content all-height cf">
        <div class="tab-pane active all-height" id="panel-656352">
            <div id="paln-populated-collaborators-panel-wrapper" class="pl20 cf">
                <div class="cf all-height lenght-div">
                    <div class="budget-table source-sans-proregular">
                       @*TODO :- Commented code by Rushil on 26/05/2016 after conversion of HTML grid to DHTMLX grid for #2191. Need to remove this code after testing.*@

                        @*<table cellpadding="0" cellspacing="0" border="0" class="budget-table">
                            <tbody class="column1 display-table-row @columnBorderClass">
                                <tr>
                                    <td>
                                        <div id="div2PlanDetails">&nbsp;</div>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="event-row">
                                        <div id="divPlanDetails"><a id="aPlanDetails">@plan.ActivityName</a></div>
                                    </td>
                                </tr>

                                @if (!string.IsNullOrEmpty(strViewBy) && strViewBy != "0")
                                {
                                    @Html.ActivityMainParent(ActivityType.ActivityCustomField, plan.ActivityId, Model, strTab, strViewBy)
                                }
                                else
                                {
                                    @Html.ActivityCampaign(ActivityType.ActivityCampaign, plan.ActivityId, Model, strTab)
                                }
                            </tbody>
                            @if (strTab == "1")
                            {
                                <tbody class="column4">
                                    <tr>
                                        <td>
                                            <div>Planned Cost</div>
                                        </td>
                                    </tr>
                                    @if (!string.IsNullOrEmpty(strViewBy) && strViewBy != "0")
                                    {
                                        @Html.ParentCostSummary(ActivityType.ActivityCustomField, plan.ActivityId, Model, AllocatedBy, strTab, strViewBy)
                                    }
                                    else
                                    {
                                        @Html.CampaignBudgetSummary(ActivityType.ActivityCampaign, plan.ActivityId, Model, AllocatedBy, strTab)
                                    }
                                </tbody>
                            }
                            <tbody class="column2" style="max-width:69%;">
                                @Html.PlanMonth(ActivityType.ActivityPlan, plan.ActivityId, plan.Month, plan.ParentMonth, plan.BudgetMonth, AllocatedBy, strTab)

                                @if (!string.IsNullOrEmpty(strViewBy) && strViewBy != "0")
                                {
                                    @Html.ParentMonth(ActivityType.ActivityCustomField, plan.ActivityId, Model, AllocatedBy, strTab, strViewBy)
                                }
                                else
                                {
                                    @Html.CampaignMonth(ActivityType.ActivityCampaign, plan.ActivityId, Model, AllocatedBy, strTab)
                                }
                            </tbody>
                            @if (strTab == "2")
                            {
                                <tbody class="column3">
                                    <tr>
                                        <td>
                                            <div>Total</div>
                                        </td>
                                    </tr>
                                    @if (!string.IsNullOrEmpty(strViewBy) && strViewBy != "0")
                                    {
                                        @Html.ParentCostSummary(ActivityType.ActivityCustomField, plan.ActivityId, Model, AllocatedBy, strTab, strViewBy)
                                    }
                                    else
                                    {
                                        @Html.CampaignBudgetSummary(ActivityType.ActivityCampaign, plan.ActivityId, Model, AllocatedBy, strTab)
                                    }
                                </tbody>
                            }
                        </table>*@
                        <div style="clear: both;"></div>
                    </div>
        <div id="gridbox" style="background-color: white; width: 100%;" class="financeReportGrid"></div>
                </div>
            </div>
        </div>
    </div>
<div id="loadme" class="loadme-true" style="display:none">
   	<h3 class="source-sans-proregular"></h3>
   	<div class="tooltip-field">
    </div>
    <p class="button-grp-tooltip"> <button class="btn btn-blue text-shadow-blue source-sans-proregular tooltip-button" id="btnClueTip">Save</button> </p>
   </div>
 <div class="container-fluid all-height" id="modalMainContainer">
    <div class="row-fluid calc-height">
        <div class="container-fluid">
            <div class="row-fluid ">
                <div class="span12">

  <div id="modal-container-186470" class="modal-inspect-review hide fade modal-full-view" role="dialog" aria-labelledby="myModalLabel" aria- hidden="true" style="display: none; position: fixed;overflow:hidden;">
      <div class="partial_wrapper">
                            <div id="successMessage" class="alert alert-success  messagewidth" >
                                <a class="close">×</a>
                                <strong>Success.</strong> <span id="spanMessageSuccess"></span>
                            </div>
                            <div id="errorMessage" class="alert alert-error hide  messagewidth" >
                                <a class="close">×</a>
                                <strong>Error!</strong> <span id="spanMessageError">@Common.objCached.ValidateForEmptyField</span>
                            </div>
          <div id="divPartial" class="partial_wrapper">
                            </div>
                        </div>
                    </div>
                    <div id="divResubmission">
                    </div>
                </div>
            </div>
        </div>
    </div>
                    </div>
<div id="gridbox" style="background-color: white; width: 100%;" class="financeReportGrid"></div>
<script type="text/javascript">
    var heights = $('.column1').find('div').map(function () {
        var intWidth = 0;
        if ($(this).css('display') == 'none') {
            intWidth = $(this).actual('width');
        }
        else {
            intWidth = $(this).width();
        }
        return $(this).width();
    }).get();

    $(document).ready(function () {

        // Added by Rushil Bhuptani for #2191 to bind DHTMLX grid for Plan and Actual tab.
        BindBudgetGrid();

        //The object CurrentTab is initiate in parent of this view
        var TacCustomTitle = "@Common.TacticCustomTitle";
        if (currentTab == "aPlanned" && $('#ddlViewBy').val().indexOf(TacCustomTitle) < 0) {
            $("#divCostBudget").removeAttr('style');
            if ($("#aonCost").hasClass('request-btn-active')) {
                $('.red-corner-budget').css('display', 'block');
            }
            else {
                $('.red-corner-budget').css('display', 'none');
            }
        }
        else {
            $("#aonCost").removeClass('request-btn-active');
            $("#aoffCost").addClass('request-btn-active');
            $("#divCostBudget").attr('style', 'display:none;')
        }
    
         SetHeader();
        //AddTipsy();
        $.fn.hasScrollBar = function () {
            return this.get(0).scrollWidth > this.width();
        }
        var isquarter = false;
        if ('@isquarter' == 'True') {
            isquarter = true;
        }
        $('.clickme').cluetip({ activation: 'click', arrows: true, dropShadow: false, sticky: true, mouseOutClose: false, local: true, isQuarter: isquarter, positionBy: "mouse" }); //
      


        // Budget Table
        var mainTableWidth = $('.budget-table').width();
        var columnWidth1 = $('.column1').width();
        var columnWidth3 = $('.column3').width();
        var columnWidth4 = $('.column4').width();
        $('.column2').width(mainTableWidth - columnWidth1 - columnWidth3 - columnWidth4 - 24);

        $('.accordionClick').on('click', function() {
            var accordionId = $(this).parent().attr('id');
            $('table').find(".sub[data-parent='" + accordionId + "']").fadeToggle(100);
            $(this).toggleClass('collapse');

            if ($(".sub[data-parent='" + accordionId + "']").show()) {
                $(".sub[data-parent='" + accordionId + "']").prev('#' + accordionId).toggleClass('open');
            }

            //Added By : Kalpesh Sharma : #739 Adding additional views to Budget Planning screen
            var data = $(".column1").get(0);
            $(".budget-table .column1 > tr").each(function() {
                $(this).width(data.scrollWidth);
            });
        });


        //in case of chrome browser it is creating design issue
        $.browser.chrome = /chrom(e|ium)/.test(navigator.userAgent.toLowerCase());
        if ($.browser.chrome) {
            //var maxHeight = Math.max.apply(Math, heights);
            //var column1Width = $('.column1 div').css('width');
            //column1Width = column1Width.replace('px', '');
            //modified by Rahul Shah on 25/09/2015 for PL #900.. remove try..catch for handle elmah log
            //try {
            $('.display-table-row').removeClass('display-table-row');
            //if (parseInt(column1Width) < maxHeight) {
            //    $('#divPlanDetails').css('width', parseInt(maxHeight) - 15);
            //    $('#div2PlanDetails').css('width', parseInt(maxHeight) + 15);
            //    if ($('.column1 .programLevel').length > 0)
            //        $('.column1 .programLevel').css('width', parseInt(maxHeight) - parseInt($(".programLevel").css("padding-left").replace("px", "")) - parseInt($(".programLevel").css("padding-right").replace("px", "")) + 15);
            //    if ($('.column1 .campaignLevel').length > 0)
            //        $('.column1 .campaignLevel').css('width', parseInt(maxHeight) - parseInt($(".campaignLevel").css("padding-left").replace("px", "")) - parseInt($(".campaignLevel").css("padding-right").replace("px", "")) + 15);
            //    if ($('.column1 .program-lvl').length > 0)
            //        $('.column1 .program-lvl').css('width', parseInt(maxHeight) + 15);

            //}
            //else {
            //    $('.display-table-row').removeClass('display-table-row');
            //}
            //} catch (e) {

            //}
        }

    });

    function BindBudgetGrid() {

        var JsonModel = '@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Grid))';
        @*TODO :- Commented code by Rushil on 26/05/2016 after conversion of HTML grid to DHTMLX grid for #2191. Need to remove this code after testing.*@
        @*var JsonModel = '@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(objBudgetDHTMLXGrid.Grid))';*@
        HomeGrid = new dhtmlXGridObject('gridbox');
        var imgpath = '@Url.Content("~/codebase/imgs/")';
        HomeGrid.setImagePath(imgpath);
        HomeGrid.setImageSize(1, 1);
        HomeGrid.setHeader('@Model.SetHeader');
        HomeGrid.setColTypes('@Model.ColType');
        HomeGrid.setInitWidths('@Model.Width');
        HomeGrid.setColSorting('@Model.ColSorting');

        @*TODO :- Commented code by Rushil on 26/05/2016 after conversion of HTML grid to DHTMLX grid for #2191. Need to remove this code after testing.*@
        @*HomeGrid.setHeader('@objBudgetDHTMLXGrid.SetHeader');
        HomeGrid.setColTypes('@objBudgetDHTMLXGrid.ColType');
        HomeGrid.setInitWidths('@objBudgetDHTMLXGrid.Width');
        HomeGrid.setColSorting('@objBudgetDHTMLXGrid.ColSorting');*@
        HomeGrid.enableAutoHeight(true);
        HomeGrid.enableAutoWidth(false);
        HomeGrid.setEditable(false);
        HomeGrid.init();
        setTimeout(function () {
            HomeGrid.setSizes();
        }, 200);

        var mainGridData = JsonModel;
        mainGridData = $('<textarea/>').html(mainGridData.toString().replace(/[\\]/g, "\\\\")).text(); // Decode Html content.
        var GridDataHomeGrid = (mainGridData.toString().replace(/&amp;/g, '&'));

        HomeGrid.parse(GridDataHomeGrid, "json");
        HomeGrid.setColumnHidden(0, true);
       
    }
    
    function SetHeader() {
        $('#divViewBy').show();
        if ('@AllocatedBy' != '@strDefault') {
            if (currentTab == 'aActuals')
                $('#planCostTitle').html('Total Actual Cost');
            else
                $('#planCostTitle').html('Total Planned Cost');

            var sumMonth = number_format('@sumMonth', 0, '.', ',');
            var allocated = number_format('@mainBudgeted', 0, '.', ',');
            $('#planCostValue').prop('title', '$' + sumMonth + '/' + '$' + allocated);
            $('#planCostValue').popover('destroy');
            bootstrapetitle($('#planCostValue'), '$' + sumMonth + '/' + '$' + allocated, "tipsy-innerWhite");

            sumMonth = FormatNumber('@sumMonth', false);
            allocated = FormatNumber('@mainBudgeted', false);
            $('#planCostValue').html(sumMonth + '/' + allocated);
            $('#divPlanProgress').css("width", "@planAllocation%");
            if ('@planAllocation' > 100) {
                $('#divPlanProgress').css("width", "100%");
                $('#divPlanProgress').css("background", "#ff1e26");
            }
            else {
                $('#divPlanProgress').css("background", "#3fa9f5");
            }
            if (currentTab == 'aActuals')
                $('#monthCompareTitle').html('Actuals vs Budget');
            else
                $('#monthCompareTitle').html('Planned Cost vs Budget');
            $('.progressPlanned').show();
        }
        else {
            if (currentTab == 'aActuals')
                $('#planCostTitle').html('Total Actual Cost');
            else
                $('#planCostTitle').html('Total Planned Cost');

            $('#planCostValue').html('');
            $('#divPlanProgress').css("width", "0%");
            if (currentTab == 'aActuals')
                $('#monthCompareTitle').html('Actuals vs Allocated');
            else
                $('#monthCompareTitle').html('Planned vs Allocated');
            $('.progressPlanned').show();
        }
        var strMonthHTML = '';
        if ('@AllocatedBy' == '@strMonths') {
            for (var i = 1; i <= 12; i++) {
                strMonthHTML += '<div class="budgetMonth">';
                if (i == 1) {
                    strMonthHTML += '<span class="title source-sans-proregular">JAN</span>';
                    if ('@PercAllocated.Jan' <= 100)
                        strMonthHTML += '<div title="@PercAllocated.Jan%"><span style="width:@PercAllocated.Jan%;"></span></div>';
                    else
                        strMonthHTML += '<div title="@PercAllocated.Jan%"><span style="width:@PercAllocated.Jan%;" class="error"></span></div>';
                }
                else if (i == 2) {
                    strMonthHTML += '<span class="title source-sans-proregular">FEB</span>';
                    if ('@PercAllocated.Feb' <= 100)
                        strMonthHTML += '<div title="@PercAllocated.Feb%"><span style="width:@PercAllocated.Feb%;"></span></div>';
                    else
                        strMonthHTML += '<div title="@PercAllocated.Feb%"><span style="width:@PercAllocated.Feb%;" class="error"></span></div>';
                }
                else if (i == 3) {
                    strMonthHTML += '<span class="title source-sans-proregular">MAR</span>';
                    if ('@PercAllocated.Mar' <= 100)
                        strMonthHTML += '<div title="@PercAllocated.Mar%"><span style="width:@PercAllocated.Mar%;"></span></div>';
                    else
                        strMonthHTML += '<div title="@PercAllocated.Mar%"><span style="width:@PercAllocated.Mar%;" class="error"></span></div>';
                }
                else if (i == 4) {
                    strMonthHTML += '<span class="title source-sans-proregular">APR</span>';
                    if ('@PercAllocated.Apr' <= 100)
                        strMonthHTML += '<div title="@PercAllocated.Apr%"><span style="width:@PercAllocated.Apr%;"></span></div>';
                    else
                        strMonthHTML += '<div title="@PercAllocated.Apr%"><span style="width:@PercAllocated.Apr%;" class="error"></span></div>';
                }
                else if (i == 5) {
                    strMonthHTML += '<span class="title source-sans-proregular">MAY</span>';
                    if ('@PercAllocated.May' <= 100)
                        strMonthHTML += '<div title="@PercAllocated.May%"><span style="width:@PercAllocated.May%;"></span></div>';
                    else
                        strMonthHTML += '<div title="@PercAllocated.May%"><span style="width:@PercAllocated.May%;" class="error"></span></div>';
                }
                else if (i == 6) {
                    strMonthHTML += '<span class="title source-sans-proregular">JUN</span>';
                    if ('@PercAllocated.Jun' <= 100)
                        strMonthHTML += '<div title="@PercAllocated.Jun%"><span style="width:@PercAllocated.Jun%;"></span></div>';
                    else
                        strMonthHTML += '<div title="@PercAllocated.Jun%"><span style="width:@PercAllocated.Jun%;" class="error"></span></div>';
                }
                else if (i == 7) {
                    strMonthHTML += '<span class="title source-sans-proregular">JUL</span>';
                    if ('@PercAllocated.Jul' <= 100)
                        strMonthHTML += '<div title="@PercAllocated.Jul%"><span style="width:@PercAllocated.Jul%;"></span></div>';
                    else
                        strMonthHTML += '<div title="@PercAllocated.Jul%"><span style="width:@PercAllocated.Jul%;" class="error"></span></div>';
                }
                else if (i == 8) {
                    strMonthHTML += '<span class="title source-sans-proregular">AUG</span>';
                    if ('@PercAllocated.Aug' <= 100)
                        strMonthHTML += '<div title="@PercAllocated.Aug%"><span style="width:@PercAllocated.Aug%;"></span></div>';
                    else
                        strMonthHTML += '<div title="@PercAllocated.Aug%"><span style="width:@PercAllocated.Aug%;" class="error"></span></div>';
                }
                else if (i == 9) {
                    strMonthHTML += '<span class="title source-sans-proregular">SEP</span>';
                    if ('@PercAllocated.Sep' <= 100)
                        strMonthHTML += '<div title="@PercAllocated.Sep%"><span style="width:@PercAllocated.Sep%;"></span></div>';
                    else
                        strMonthHTML += '<div title="@PercAllocated.Sep%"><span style="width:@PercAllocated.Sep%;" class="error"></span></div>';
                }
                else if (i == 10) {
                    strMonthHTML += '<span class="title source-sans-proregular">OCT</span>';
                    if ('@PercAllocated.Oct' <= 100)
                        strMonthHTML += '<div title="@PercAllocated.Oct%"><span style="width:@PercAllocated.Oct%;"></span></div>';
                    else
                        strMonthHTML += '<div title="@PercAllocated.Oct%"><span style="width:@PercAllocated.Oct%;" class="error"></span></div>';
                }
                else if (i == 11) {
                    strMonthHTML += '<span class="title source-sans-proregular">NOV</span>';
                    if ('@PercAllocated.Nov' <= 100)
                        strMonthHTML += '<div title="@PercAllocated.Nov%"><span style="width:@PercAllocated.Nov%;"></span></div>';
                    else
                        strMonthHTML += '<div title="@PercAllocated.Nov%"><span style="width:@PercAllocated.Nov%;" class="error"></span></div>';
                }
                else if (i == 12) {
                    strMonthHTML += '<span class="title source-sans-proregular">DEC</span>';
                    if ('@PercAllocated.Dec' <= 100)
                        strMonthHTML += '<div title="@PercAllocated.Dec%"><span style="width:@PercAllocated.Dec%;"></span></div>';
                    else
                        strMonthHTML += '<div title="@PercAllocated.Dec%"><span style="width:@PercAllocated.Dec%;" class="error"></span></div>';
                }
                strMonthHTML += '</div>';
            }
        }
        else if ('@AllocatedBy' == '@strQuarters') {
            for (var i = 1; i <= 4; i++) {
                strMonthHTML += '<div class="budgetMonth">';
                if (i == 1) {
                    strMonthHTML += '<span class="title source-sans-proregular">Q1</span>';
                    if ('@PercAllocated.Jan' <= 100)
                        strMonthHTML += '<div title="@PercAllocated.Jan%"><span style="width:@PercAllocated.Jan%;"></span></div>';
                    else
                        strMonthHTML += '<div title="@PercAllocated.Jan%"><span style="width:@PercAllocated.Jan%;" class="error"></span></div>';
                }
                else if (i == 2) {
                    strMonthHTML += '<span class="title source-sans-proregular">Q2</span>';
                    if ('@PercAllocated.Apr' <= 100)
                        strMonthHTML += '<div title="@PercAllocated.Apr%"><span style="width:@PercAllocated.Apr%;"></span></div>';
                    else
                        strMonthHTML += '<div title="@PercAllocated.Apr%"><span style="width:@PercAllocated.Apr%;" class="error"></span></div>';
                }
                else if (i == 3) {
                    strMonthHTML += '<span class="title source-sans-proregular">Q3</span>';
                    if ('@PercAllocated.Jul' <= 100)
                        strMonthHTML += '<div title="@PercAllocated.Jul%"><span style="width:@PercAllocated.Jul%;"></span></div>';
                    else
                        strMonthHTML += '<div title="@PercAllocated.Jul%"><span style="width:@PercAllocated.Jul%;" class="error"></span></div>';
                }
                else if (i == 4) {
                    strMonthHTML += '<span class="title source-sans-proregular">Q4</span>';
                    if ('@PercAllocated.Oct' <= 100)
                        strMonthHTML += '<div title="@PercAllocated.Oct%"><span style="width:@PercAllocated.Oct%;"></span></div>';
                    else
                        strMonthHTML += '<div title="@PercAllocated.Oct%"><span style="width:@PercAllocated.Oct%;" class="error"></span></div>';
                }
                strMonthHTML += '</div>';
            }
        }
        else {
            for (var i = 1; i <= 12; i++) {
                strMonthHTML += '<div class="budgetMonth">';
                if (i == 1) {
                    strMonthHTML += '<span class="title source-sans-proregular">JAN</span>';
                    strMonthHTML += '<div><span style="width:0%;"></span></div>';
                }
                else if (i == 2) {
                    strMonthHTML += '<span class="title source-sans-proregular">FEB</span>';
                    strMonthHTML += '<div><span style="width:0%;"></span></div>';
                }
                else if (i == 3) {
                    strMonthHTML += '<span class="title source-sans-proregular">MAR</span>';
                    strMonthHTML += '<div><span style="width:0%;"></span></div>';
                }
                else if (i == 4) {
                    strMonthHTML += '<span class="title source-sans-proregular">APR</span>';
                    strMonthHTML += '<div><span style="width:0%;"></span></div>';
                }
                else if (i == 5) {
                    strMonthHTML += '<span class="title source-sans-proregular">MAY</span>';
                    strMonthHTML += '<div><span style="width:0%;"></span></div>';
                }
                else if (i == 6) {
                    strMonthHTML += '<span class="title source-sans-proregular">JUN</span>';
                    strMonthHTML += '<div><span style="width:0%;"></span></div>';
                }
                else if (i == 7) {
                    strMonthHTML += '<span class="title source-sans-proregular">JUL</span>';
                    strMonthHTML += '<div><span style="width:0%;"></span></div>';
                }
                else if (i == 8) {
                    strMonthHTML += '<span class="title source-sans-proregular">AUG</span>';
                    strMonthHTML += '<div><span style="width:0%;"></span></div>';
                }
                else if (i == 9) {
                    strMonthHTML += '<span class="title source-sans-proregular">SEP</span>';
                    strMonthHTML += '<div><span style="width:0%;"></span></div>';
                }
                else if (i == 10) {
                    strMonthHTML += '<span class="title source-sans-proregular">OCT</span>';
                    strMonthHTML += '<div><span style="width:0%;"></span></div>';
                }
                else if (i == 11) {
                    strMonthHTML += '<span class="title source-sans-proregular">NOV</span>';
                    strMonthHTML += '<div><span style="width:0%;"></span></div>';
                }
                else if (i == 12) {
                    strMonthHTML += '<span class="title source-sans-proregular">DEC</span>';
                    strMonthHTML += '<div><span style="width:0%;"></span></div>';
                }
                strMonthHTML += '</div>';
            }
        }

        $('#monthContainer').html(strMonthHTML);

    }
  
    var Assortment = 'Budgeting';
    @*$('#aPlanDetails').click(function (e) {
        var id = CurrentPlanId;
        ShowModel('@Enums.InspectPopupMode.ReadOnly.ToString()', "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Plan).ToLower()", id, "0", '@Enums.InspectPopupRequestedModules.Budgeting.ToString()');
    });*@

    //Added By Rushil Bhuptani on 19/5/2016 for #2191 to open inspect popup for plan.
    function OpenPlanInspectPopup() {
        var id = CurrentPlanId;
        ShowModel('@Enums.InspectPopupMode.ReadOnly.ToString()', "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Plan).ToLower()", id, "0", '@Enums.InspectPopupRequestedModules.Budgeting.ToString()');
    }

    //Added By Rushil Bhuptani on 19/5/2016 for #2191 to open inspect popup other than plan.
    function OpenOtherInspectPopup(id, section) {

        var section = section;
        var id;//$(this).attr('id');

        id = id.split('_').pop();

        ShowModel('@Enums.InspectPopupMode.ReadOnly.ToString()', section, id, "0", '@Enums.InspectPopupRequestedModules.Budgeting.ToString()');
    }

    function AssignDefaultValue() {
        $('#slidepanel-container').find("input[type=text],textarea,select").each(function () {
            $(this).attr("myValue", $(this).val());
        });
    }
    @*$("[linktype=campaign]").click(function (e) {
        var id = $(this).attr('id');
        id = id.replace('c_', '');
        ShowModel('@Enums.InspectPopupMode.ReadOnly.ToString()', "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Campaign).ToLower()", id, "0", '@Enums.InspectPopupRequestedModules.Budgeting.ToString()');
    });

    $("[linktype=program]").click(function (e) {
        var id = $(this).attr('id');
        id = id.replace('cp_', '');
        ShowModel('@Enums.InspectPopupMode.ReadOnly.ToString()', "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Program).ToLower()", id, "0", '@Enums.InspectPopupRequestedModules.Budgeting.ToString()');
    });
    $("[linktype=tactic]").click(function (e) {
        var id = $(this).attr('id');
        id = id.replace('cpt_', '');
        ShowModel('@Enums.InspectPopupMode.ReadOnly.ToString()', "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Tactic).ToLower()", id, "0", '@Enums.InspectPopupRequestedModules.Budgeting.ToString()');
    });
    $("[linktype=lineitem]").click(function (e) {
        var id = $(this).attr('id');
        id = id.replace('cptl_', '');
        ShowModel("@Enums.InspectPopupMode.ReadOnly.ToString()", "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.LineItem).ToLower()", id, "0", '@Enums.InspectPopupRequestedModules.Budgeting.ToString()');
    });*@
</script>

<script type="text/javascript">
    $(document).ready(function () {
        $("#monthContainer").mCustomScrollbar({
            scrollButtons: {
                enable: true
            },
            horizontalScroll: true,
            advanced: { autoExpandHorizontalScroll: true, updateOnContentResize: true }
        });
        $('#errorMessageDuplicatePlan').slideUp(400);
    });


    $('.cluetip-outer').click(function (e) {
        e.stopPropagation();
    });
    $(document).click(function () {
        $('.cluetip').css('display', 'none');
    });
    $('.tooltip-field').on('focus', '#CostMonth', function () {
        $(this).val($(this).val().replace(/,/g, ""));
    });
    $('.tooltip-field').on('focus', '#CostYear', function () {
        $(this).val($(this).val().replace(/,/g, ""));
    });
    $('.tooltip-field').on('keyup', '#CostMonth', function () {
        var oldBudget = parseFloat($(this).attr('ov').toString());
        var newBudget = 0;
        if (!isNaN(parseFloat($(this).val().replace(/,/g, "")))) {
            newBudget = parseFloat($(this).val().replace(/,/g, ""));
            $(this).attr('ov', newBudget.toString());
        }
    });
    $('.tooltip-field').on('focusout', '#CostMonth', function () {
        var newcost = $(this).val().replace(/,/g, "");
        $(this).val(FormatCommasBudget(newcost.toString(), false, false));
    });

    $('.tooltip-field').on('keyup', '#CostYear', function () {
        var oldYearBudget = parseFloat($(this).attr('ov').toString());
        var newYearBudget = 0;
        if (!isNaN(parseFloat($(this).val().replace(/,/g, "")))) {
            newYearBudget = parseFloat($(this).val().replace(/,/g, ""));
        }
        var section = $('#entityDetails').attr('section').toString();
        $(this).attr('ov', newYearBudget.toString());
    });
    $('.tooltip-field').on('focusout', '#CostYear', function () {
        var newYearBudget = $(this).val().replace(/,/g, "");
        $(this).val(FormatCommasBudget(newYearBudget.toString(), false, false));
        var section = $('#entityDetails').attr('section').toString();
    });

    $('#btnClueTip').click(function () {

        var entityId = $('#entityDetails').val();
        var section = $('#entityDetails').attr('section').toString();
        var month = $('#entityDetails').attr('mnth').toString();
        //tab
        var tab = $('#entityDetails').attr('tab').toString();
        var isquarter = false;
        if ('@isquarter' == 'True') {
            isquarter = true;
        }
        var inputArr = [];
        $('.tooltip-field').find('input[type=text]').not('[disabled=disabled]').each(function () {
            inputArr.push({
                key: $(this).attr('id'),
                Value: $(this).val().replace(/,/g, "")
            });
        });
        var jsonInputs = JSON.stringify(inputArr);
        $.ajax({
            type: 'POST',
            url: '@Url.Content("~/Plan/SavePlannedCell/")',
            dataType: "json",
            data: 'entityId=' + entityId + '&section=' + section + '&month=' + month + '&inputs=' + jsonInputs + '&tab=' + tab + '&isquarter=' + isquarter,
            success: function (data) {
             
                if (data.isSuccess == true) {
                    section = section.toLowerCase();
                    $("#hdnBudgetingIsSave").val("true");
                    if (currentTab == 'aActuals') {
                        $("#hdnBudgetingExpandId").val(section + entityId);
                        $('#aActuals').trigger('click');
                    }
                    else {
                        var sectionIntializer = section == "tactic" ? "cpt" : section == "program" ? "cp" : section == "campaign" ? "c" : "";
                        $("#hdnBudgetingExpandId").val(section + sectionIntializer + '_' + entityId);
                        $('#aPlanned').trigger('click');
                    }
                    // updatePopupDetails(data, entityId, section, month);
                }
                else {
                    $('#cErrorDuplicatePlan').html('<strong>Error! </strong> ' + data.errormsg);
                    //$("#content_wraper").removeClass("span10 all-height").addClass("span10 padding-top40");
                    $('#errorMessageDuplicatePlan').slideDown(700);
                    
                }
            }
        });
    });
    $('.column2,.column1').scroll(function () {
        $('.cluetip').css('display', 'none');
    });
    //$(".tacticLevel").find('.red-corner-budget').bind('click', function (event) {
    //    $(this).parent().find('a').get(0).click();
    //    return false;
    //});

    // Added by Rushil Bhuptani for #2191 to show red corner triangle based on Cost vs Budget value.
    var onCostVsBudget = false;
    $("#aonCost").click(function () {
        onCostVsBudget = true;
        $("#aoffCost").removeClass('request-btn-active');
        $("#aonCost").addClass('request-btn-active');
        $('.red-corner-budget').css('display', 'block');
        $('.programLevel').find('.red-corner-budget').css('display', 'block');
        $('.tacticLevel').find('.red-corner-budget').css('display', 'block');

        var isquarter = false;
        if ('@isquarter' == 'True') {
            isquarter = true;
        }

        var selfProgram = $('.clickmeprogram');

        if (!selfProgram.data('cluetip-initd')) {
            selfProgram.cluetip({
                activation: 'click',
                arrows: true,
                dropShadow: false,
                sticky: true,
                mouseOutClose: false,
                local: true,
                isQuarter: isquarter,
                positionBy: "mouse"
            }).data('cluetip-initd', true);
        }

        var selfTactic = $('.clickmetactic');

        if (!selfTactic.data('cluetip-initd')) {
            selfTactic.cluetip({
                activation: 'click',
                arrows: true,
                dropShadow: false,
                sticky: true,
                mouseOutClose: false,
                local: true,
                isQuarter: isquarter,
                positionBy: "mouse"
            }).data('cluetip-initd', true);
        }
    });

    // Added by Rushil Bhuptani for #2191 to hide red corner triangle based on Cost vs Budget value.
    $("#aoffCost").click(function () {
        onCostVsBudget = false;
        $("#aonCost").removeClass('request-btn-active');
        $("#aoffCost").addClass('request-btn-active');
        $('.red-corner-budget').css('display', 'none');
        $('.programLevel').find('.red-corner-budget').css('display', 'none');
        $('.tacticLevel').find('.red-corner-budget').css('display', 'none');
    });

    // Added by Rushil Bhuptani for #2191 to display red triangle and initalize cluetip on expand collapse of row.
    HomeGrid.attachEvent("onOpenEnd", function (id, state) {

        var isquarter = false;
        if ('@isquarter' == 'True') {
            isquarter = true;
        }

        $('.clickmeAnchor').each(function () {
            var selfClickMe = $(this);
            if (!selfClickMe.data('cluetip-initd')) {

                selfClickMe.cluetip({
                    activation: 'click',
                    arrows: true,
                    dropShadow: false,
                    sticky: true,
                    mouseOutClose: false,
                    local: true,
                    isQuarter: isquarter,
                    positionBy: "mouse"
                }).data('cluetip-initd', true);
            }
        });

        $('.clickmeAnchorProgram').each(function () {
            var selfClickMeAnchorProgram = $(this);
            if (!selfClickMeAnchorProgram.data('cluetip-initd')) {
                selfClickMeAnchorProgram.cluetip({
                    activation: 'click',
                    arrows: true,
                    dropShadow: false,
                    sticky: true,
                    mouseOutClose: false,
                    local: true,
                    isQuarter: isquarter,
                    positionBy: "mouse"
                }).data('cluetip-initd', true);
            }
        });

        $('.clickmeAnchorTactic').each(function() {
            var selfClickMeAnchorTactic = $(this);
            if (!selfClickMeAnchorTactic.data('cluetip-initd')) {
                selfClickMeAnchorTactic.cluetip({
                    activation: 'click',
                    arrows: true,
                    dropShadow: false,
                    sticky: true,
                    mouseOutClose: false,
                    local: true,
                    isQuarter: isquarter,
                    positionBy: "mouse"
                }).data('cluetip-initd', true);
            }
        });
       

        $('.clickmeAnchorLineItem').each(function () {
        var selfClickMeAnchorLineItem = $(this);
        if (!selfClickMeAnchorLineItem.data('cluetip-initd')) {
            selfClickMeAnchorLineItem.cluetip({
                activation: 'click',
                arrows: true,
                dropShadow: false,
                sticky: true,
                mouseOutClose: false,
                local: true,
                isQuarter: isquarter,
                positionBy: "mouse"
            }).data('cluetip-initd', true);
        }
        });
        if (onCostVsBudget) {
            $('.red-corner-budget').css('display', 'block');
            var selfProgram = $('.clickmeprogram');

            if (!selfProgram.data('cluetip-initd')) {
                selfProgram.cluetip({
                    activation: 'click',
                    arrows: true,
                    dropShadow: false,
                    sticky: true,
                    mouseOutClose: false,
                    local: true,
                    isQuarter: isquarter,
                    positionBy: "mouse"
                }).data('cluetip-initd', true);
            }

            var selfTactic = $('.clickmetactic');

            if (!selfTactic.data('cluetip-initd')) {
                selfTactic.cluetip({
                    activation: 'click',
                    arrows: true,
                    dropShadow: false,
                    sticky: true,
                    mouseOutClose: false,
                    local: true,
                    isQuarter: isquarter,
                    positionBy: "mouse"
                }).data('cluetip-initd', true);
            }
            
        } else {
            $('.red-corner-budget').css('display', 'none');


          
        }
    });
    
</script>
