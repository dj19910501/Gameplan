@model RevenuePlanner.Models.PlanImprovementTactic
@using RevenuePlanner.Helpers
@*<script type="text/javascript" src="~/Scripts/js/Mask.js"></script>*@

@{
    bool ExtIntService = (bool)ViewBag.ExtIntService;
}

<div class="head">
    <span class="close-form source-sans-proregular">» CLOSE MENU</span>
    <div class="cf">
        <h2 class="source-sans-prolight">Tactic Detail</h2>
        @* TFS Point 253,206 : Model/Plan - sidebars - integrate gear icon with feature to delete/duplicate tactic
    Added by Nirav Shah on 17 feb 2014
 *@
        @if (!(bool)ViewBag.IsCreated)
        {
            <div class="btn-group pull-right gear-dropdown">
                <span class="gear-sidebar dropdown-toggle" data-toggle="dropdown"></span>
                    @if ((bool)ViewBag.IsOwner && !(bool)ViewBag.IsCreated)
                    {
                        <ul class="dropdown-menu">
                            <li><a id="deleteTactic">Delete Tactic</a></li>                        
                        </ul>
                    }
            </div>
        }
    </div>
</div>
<!--end sidebar-head-->
<div id="errorMessage" class="alert alert-error hide message-position-small">
    <a class="close">×</a>
    <strong>Error!</strong> <span id="spanMessage"></span>
</div>
<div id="frm_campaigns" name="frm_campaigns">
    @using (Html.BeginForm(new { @id = "frmSaveTactic" }))
    {
        <script type="text/javascript">
            $(document).ready(function () {
                $(".verticalIdSelectBox select").selectbox();
            });
        </script>
        <div class="content">
            @Html.HiddenFor(model => model.ImprovementPlanProgramId, new { id = "hdnPlanProgramId" })
            @Html.HiddenFor(model => model.ImprovementPlanTacticId, new { id = "hdnPlanTacticId" })
            @Html.HiddenFor(model => model.IsDeployedToIntegration, new { id = "hdnIsDeployedToIntegration" })

            <label class="t_title">Improvement Tactic Title</label>
            @Html.TextBoxFor(model => model.Title, new { placeholder = "Required", require = "true", maxlength = "255" })

            <label>Improvement Tactic Type</label>
            <span class="verticalIdSelectBox">@Html.DropDownListFor(model => model.ImprovementTacticTypeId, new SelectList((System.Collections.IEnumerable)ViewBag.Tactics, "ImprovementTacticTypeId", "Title"), "Please Select", new { @class = "ddlStyle", require = "true", Id = "ddlTacticType" })</span>

            <label>Description</label>
            @Html.TextAreaFor(model => model.Description, new { placeholder = "Optional", rows = "3", maxlength = "4000" })

           @Html.Hidden("hdnRedirect", (bool)ViewBag.RedirectType, new { id = "hdnRedirectType" })
           
                <div class="cf margin-top10 margin-left-4">
                    <div class="pull-left width50">
                        <label class="padding-left4">Effective Date</label>
                        <div class="dp datepicker input-append date without-margin calendar-width sidebar-datepicker" id="dp_start" data-date="@Model.EffectiveDate.ToShortDateString()" data-date-format="@RevenuePlanner.Helpers.Common.dateFormat">
                            @Html.TextBoxFor(model => model.EffectiveDate, new { @class = "span2 black-border-right font-size13", id = "t_startdate" })
                            <span class="add-on">
                                <img class="marginTop-5px" src="~/Content/images/gray-calendar-icon.png"></span>
                        </div>
                    </div>
                            <div class="width50 pull-left">
                                <div class="padding-left4">
                                <label class="padding-left4" title="Cost">Cost</label>
                                     @Html.TextBoxFor(model => model.Cost, new { placeholder = "$0", id = "txtCost", @class = "currency_dollar margin-top3px", maxlength = @RevenuePlanner.Helpers.Common.maxLengthDollar })
                                    </div>
                             </div>
                </div>
            <div>
                @if (ExtIntService)
            {
                
             if(Model.IsDeployedToIntegration)
             {
                 <label style="margin-top:6px;">Status</label>
                 <input id="t_integration_status" name="t_status" type="text" class="icon-check-blue" placeholder="Sync to integration" maxlength="18" readonly />
             }
             else
             {
                 <label style="margin-top:6px;">Status</label>
                 <input id="t_integration_status" name="t_status" type="text" class="icon-check-gray" placeholder="Not Sync to integration" maxlength="18" readonly />
             }
             }
            </div>
        <label>Improvement</label>
							<div class="accordion sidebar-accordion" id="Improvementaccordion">
							</div>
             </div>
        if((bool)ViewBag.IsOwner)
                {
        <div class="wraper-btns cf">
            <div class="span6">
                <button id="save_campaign_tactic" class="btn btn-blue text-shadow-blue source-sans-proregular" type="button">Save</button>
            </div>
            <div class="span6">
                <button class="close-form btn-link source-sans-proregular" type="button">Cancel</button>
            </div>
        </div>
            }
        <!--End buttons-->
    }

</div>

<div id="divBackgroundInnerSidebar" class="modal-backdrop fade in" style="display: none"></div>
<script type="text/javascript">
    var ImprovementStages = null;
    
    $(document).ready(function () {
        //$.ajaxSetup({ cache: false });
        $('#slidepanel-container').slimScroll({ scrollTo: '0px' });
        var isredirect = "@ViewBag.RedirectType";
        var isAssortment = $("#hdnRedirectType").val();
        var hdnYear = @ViewBag.Year
        $('.currency_dollar').priceFormat({ prefix: '$', centsSeparator: '', thousandsSeparator: ',', centsLimit: 0 });
        $("#t_startdate").val($("#t_startdate").val().split(' ')[0]);
        $("span.tool-tip").tooltip();

        $(".alert").find(".close").on("click", function (e) {
            e.stopPropagation();
            e.preventDefault();
            $(this).closest(".alert").slideUp(400);
        });
        $('.datepicker.dropdown-menu').css("display", "none");
        $('.close-form', this.$panel).click(function (e) {
            $('.datepicker.dropdown-menu').css("display", "none");
            $("#slidepanel").css("display", "none");
            $("#slidepanel-container").empty();
        });

        $("#t_integration_status").click(function () {
            if (isOwner == 'True') {
                if ($(this).hasClass("icon-check-blue")) {
                    $(this).val("Not Sync to integration");
                    $(this).addClass("icon-check-gray");
                    $(this).removeClass("icon-check-blue");
                    $("#hdnIsDeployedToIntegration").val(false);
                }
                else {
                    $(this).val("Sync to integration");
                    $(this).addClass("icon-check-blue");
                    $(this).removeClass("icon-check-gray");
                    $("#hdnIsDeployedToIntegration").val(true);
                }
            }
           });

        var ValueCost = 0;
        LoadImprovementTacticStages(false);
        function LoadImprovementTacticStages(isCostUpdate) {
            $.ajax({
                type: 'POST',
                url: '@Url.Content("~/Plan/LoadImprovementStages")',
                data: $("form").serialize(),
                success: function (data) {
                    ImprovementStages = data.data;
                    ValueCost = data.cost;
                    if (isCostUpdate) {
                        $("#txtCost").val(FormatCurrency((ValueCost).toString(), false));
                        
                        if (data.isDeployedToIntegration) {
                            $("#t_integration_status").val("Sync to integration");
                            $("#t_integration_status").addClass("icon-check-blue");
                            $("#t_integration_status").removeClass("icon-check-gray");
                            $("#hdnIsDeployedToIntegration").val(true);
                        }
                        else {
                            $("#t_integration_status").val("Not Sync to integration");
                            $("#t_integration_status").addClass("icon-check-gray");
                            $("#t_integration_status").removeClass("icon-check-blue");
                            $("#hdnIsDeployedToIntegration").val(false);
                        }

                    }
                    LoadImprovementData();
                }
            });

        }

        var isOwner = "@ViewBag.IsOwner";
        if (isOwner == 'False') {
            $('form').find(".sbSelector").each(function () {
                $(this).unbind("click");
                $(this).removeAttr("href");
                $(this).prev().unbind("click");
                $(this).prev().removeAttr("href");
            });
            $('form').find("input[type=text], textarea").each(function () {
                $(this).prop('readonly', true);
                $(this).unbind("focusout");
            });
            $('form').find(".add-on").each(function () {
                $(this).unbind("click");
            });
            return false;
        }

        $('form').find('input[type=text], select, textarea').each(function () {
            $(this).change(function () {
                if ($(this).attr('require') == 'true') {
                    if ($(this).val() == '') {
                        $(this).addClass("error");
                    }
                    else {
                        $(this).removeClass("error");
                    }
                }
            });
        });

        $('form').find(".sbSelector").each(function () {
            $(this).next().find('li').click(function () {
                if ($(this).parent().parent().prev().attr('require') == 'true') {
                    if ($(this).parent().prev().text() == 'Please Select') {
                        $(this).parent().prev().addClass("error");
                        iserror = true;
                    }
                    else {
                        $(this).parent().prev().removeClass("error");
                    }
                }
            });
        });

        $("#save_campaign_tactic").click(function () {
            var iserror = false;
            $('form').find('input[type=text], select, textarea').each(function () {
                if ($(this).attr('require') == 'true') {
                    if ($(this).val() == '') {
                        $(this).addClass("error");
                        iserror = true;
                    }
                    else {
                        $(this).removeClass("error");
                    }
                }
            });

            //sbSelector
            $('form').find('.sbSelector').each(function () {
                if ($(this).parent().prev().attr('require') == 'true') {
                    if ($(this).text() == 'Please Select') {
                        $(this).addClass("error");
                        iserror = true;
                    }
                    else {
                        $(this).removeClass("error");
                    }
                }
            });

            if (iserror) {
                ShowError("@RevenuePlanner.Helpers.Common.objCached.ValidateForEmptyField");
                return false;
            }
            var sdate = $('#t_startdate').val();
            if (!isDate(sdate)) {
                alert('@Common.objCached.ValidateEffectiveDate');
                return false;
            }
            if (!CheckDateYear(sdate, hdnYear, "@RevenuePlanner.Helpers.Common.objCached.StartDateCurrentYear")) return false;
            $("#txtCost").val(ReplaceCC($("#txtCost").val()));
            //CheckUserSession("#save_campaign_tactic", true);
            //if (reason == 'user') {
            //    return false;
            //}
            document.getElementById("Title").value = htmlEncode($('#Title').val());////Added by Mitesh Vaishnav on 07/07/2014 for PL ticket #584
            document.getElementById("Description").value = htmlEncode($('#Description').val());////Added by Mitesh Vaishnav on 07/07/2014 for PL ticket #584
            $.ajax({
                type: 'POST',
                url: '@Url.Content("~/Plan/SaveImprovementTactic")',
                data: $("form").serialize() + '&RedirectType=' + isAssortment,
                success: function (data) {
                    if (data.redirect) {
                        window.location.href = data.redirect;
                        return;
                    }
                    if (data.errormsg) {
                        document.getElementById("Title").value = htmlDecode($('#Title').val());////Added by Mitesh Vaishnav on 07/07/2014 for PL ticket #584
                        document.getElementById("Description").value = htmlDecode($('#Description').val());////Added by Mitesh Vaishnav on 07/07/2014 for PL ticket #584
                        ShowError(data.errormsg);
                        return;
                    }

                }
            });
        });
        
        $('#ddlTacticType').change(function () {
            var tacticTypeId = $(this).val();
            var pcost = 0;
            if (tacticTypeId != '') {
                LoadImprovementTacticStages(true);
            }
        });
		
            


        $("#deleteTactic").click(function () {
            var idTactic = $("#hdnPlanTacticId").val();
            $("#DivPartialViewForDeleteImpTactic").empty();
            var AssortmentType = false;
            $("#divBackgroundInnerSidebar").css("display", "block");
            var url = '@Url.Content("~/Plan/ShowDeleteImprovementTactic/")';
            $("#DivPartialViewForDeleteImpTactic").load(url + '?id=' + idTactic + '&AssortmentType=' + AssortmentType + '&RedirectType=' + isAssortment);
        });
        function ShowError(value) {
            $("#errorMessage").slideDown(400);
            $("#spanMessage").empty();
            $("#spanMessage").text(value);
        }

        $('.dp').datepicker({
            format: "@RevenuePlanner.Helpers.Common.dateFormat",
            autoclose: true,
        }).on('changeDate', function (ev) {
            $(this).datepicker('hide');
            var sdate = $('#t_startdate').val();
            if (!CheckDateYear(sdate, hdnYear, "@RevenuePlanner.Helpers.Common.objCached.StartDateCurrentYear")) return false;
            LoadImprovementTacticStages(false);
        });;

        
        //hide the other datepicker in add-on onclick
        $('#dp_start .add-on').click(function () {
            $('#dp_start').datepicker('show');
        })
        
        function LoadImprovementData() {
            var $html = '';
            $('#Improvementaccordion').empty();
            if (typeof ImprovementStages != 'undefined') {
                if (ImprovementStages.length) {
                    for (i in ImprovementStages) {
                        addRowImprovementStagesTactic(i, ImprovementStages[i].MetricCode, ImprovementStages[i].MetricName, ImprovementStages[i].MetricType, ImprovementStages[i].BaseLineRate, ImprovementStages[i].PlanWithoutTactic, ImprovementStages[i].PlanWithTactic);
                    }
                } else {
                    $html += '<div>No Stages are Associated with this improvement tactic type.</div>';
                    $('#Improvementaccordion').append($html);
                }
            }
            else {
                $html += '<div>No Stages are Associated with this improvement tactic type.</div>';
                $('#Improvementaccordion').append($html);
            }
        }

        function addRowImprovementStagesTactic(_index, _MetricCode, _MetricName, _MetricType, _BaseLineRate, _PlanWithoutTactic, _PlanWithTactic) {
            var $html = '';

            $html += '<div class="accordion-group">' +
						'<div class="accordion-heading">' +
            '<a class="accordion-toggle collapsed chevron-down-icon" data-toggle="collapse" href="#accordion-element-' + _index + '">';
            var classForIcon = 1;
            if (_MetricType == "@RevenuePlanner.Helpers.Enums.MetricType.CR.ToString()") {
                classForIcon = 1
            }
            else if (_MetricType == "@RevenuePlanner.Helpers.Enums.MetricType.SV.ToString()") {
                classForIcon = 2;
            }
            else if (_MetricType == "@RevenuePlanner.Helpers.Enums.MetricType.Size.ToString()") {
                classForIcon = 3;
            }
            else if (_MetricType == "@RevenuePlanner.Helpers.Enums.MetricType.Volume.ToString()") {
                classForIcon = 4;
            }

            var BRate = _BaseLineRate;
            var PWithoutTactic = _PlanWithoutTactic;
            var PWithTactic = _PlanWithTactic;

            BRate = FormatForBoostStagesValue(BRate, classForIcon);
            PWithoutTactic = FormatForBoostStagesValue(PWithoutTactic, classForIcon);
            PWithTactic = FormatForBoostStagesValue(PWithTactic, classForIcon);

            if (classForIcon == 1) {
                var arrText = _MetricName.split("->");
                $html += '<span class="filter-icon"></span>' + arrText[0] + '<span class="arrow-right-icon"></span>' + arrText[1] + '<span class="arrow-down-icon"></span>';
            }
            else if (classForIcon == 2) {
                $html += '<span class="meter-icon"></span>' + _MetricName + '<span class="arrow-down-icon"></span>';
            }
            else if (classForIcon == 3) {
                $html += '<span class="size-icon"></span>' + _MetricName + '<span class="arrow-down-icon"></span>';
            }
            else if (classForIcon == 4) {
                $html += '<span class="volume-icon"></span>' + _MetricName + '<span class="arrow-down-icon"></span>';
            }

            $html += '</a></div>' +
                    '<div id="accordion-element-' + _index + '" class="accordion-body collapse">' +
                    '<ul>' +
                    '<li><span class="source-sans-probold">' + BRate + '</span> Baseline Rate</li>' +
                    '<li><span class="source-sans-probold">' + PWithoutTactic + '</span> Plan Without Tactic</li>' +
                    '<li><span class="source-sans-probold">' + PWithTactic + '</span> Plan With Tactic</li>' +
                    '</ul>' +
                    '</div>' +
			        '<div style="clear:both;"></div>' +
			        '</div>';
            $('#Improvementaccordion').append($html);

        }

    });
</script>
