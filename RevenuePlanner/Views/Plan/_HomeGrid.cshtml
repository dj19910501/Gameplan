@model RevenuePlanner.Models.PlanMainDHTMLXGrid
@using RevenuePlanner.Models
@using RevenuePlanner.Helpers
@{
    var countrows = 0;
    if (Model != null && Model.rows!=null)
    { 
        countrows=Model.rows.Count;
    }
    bool IsFirstTimeLogin = Sessions.FirstTimeLogin;
    Sessions.FirstTimeLogin = false;
    //List<TacticTypeModel> lstTacticType = new List<TacticTypeModel>(ViewBag.TacticTypelist);   

}
<link href="@Url.Content("~/Content/css/DHTMLX/dhtmlxtreegrid2_min.css")" rel="stylesheet" type="text/css" />
<div id="gridbox" style="background-color:white;width:100%;"></div>
<div id="divTacticReqMsg" class="clue-tip-message-orange-grid" style="display:none;">This tactic needs to have all required fields filled out before submission for approval.</div>
<div class="row-fluid calc-height">
    <div class="span12">
        <div id="divMovetacticPopup" class="form-inspect-share hide fade height-auto popup-block margin_top0" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
            <div>
                <form>
                    <h2 class="primary-title source-sans-prosemibold resubmission_header">Moving a Tactic</h2>
                    <label style="text-align: center; width: 100%;" class="resubmission_content">You are about to move a tactic to </label>
                    <label id="lipname" style="text-align: center; width: 100%; font-weight:800;" class="resubmission_content"></label>
                    <label style="text-align: center; width: 100%;" class="resubmission_content">Do you want to proceed?</label>
                    <input type="hidden" id="hdnsourceid" />
                    <input type="hidden" id="hdndestid" />
                    <button class="form-inspect-share-button btn btn-large bottom-margin-popups" type="button" id="proceed-button_Movetactic">Proceed</button>
                    <button id="cancel-button_Movetactic" class="btn-link Cancel-button-center-popups" style="margin-left: 10.5%" type="button">Cancel</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    gridname = "home";
     
    var tacticTypefieldOptionList = JSON.parse('@Html.Raw(Json.Encode(@ViewBag.TacticTypelist))'); 
    var lineItemTypefieldOptionList = JSON.parse('@Html.Raw(Json.Encode(@ViewBag.LineItemTypelist))');
    var customfieldOptionList = JSON.parse('@Html.Raw(Json.Encode(@ViewBag.CustomAttributOption))'); // added by devanshi

    var IslineItemDelete = false;

    var colSplitId = 0;
    var GridHiddenId = 0;
    var ActivitypeHidden = 0;
    var MachineNameHidden = 0;
    var TaskNameColIndex = 0;
    var PlannedCostColIndex = 0;
    var AssetTypeColIndex = 0;
    var TypeColIndex = 0;
    var OwnerColIndex = 0;
    var TargetStageGoalColIndex = 0;
    var MQLColIndex = 0;
    var RevenueColIndex = 0;
    var StartDateColIndex = 0;
    var EndDateColIndex = 0;

    $(document).ready(function () {
        BindHomeGrid();
        $('.nav').addClass('no-bottom-border');
        $('.task-tbl div.gridbox').css('height', $(window).height() - 450);
        if ($('.honeycombbox-icon-gantt-Active').length == 0) {
            $(".honeycombbox").hide();
        }
        else {
            $("#totalEntity").text(ExportSelectedIds.TaskID.length);
            $(".honeycombbox").show();
        }
        HomeGrid.enableEditEvents(true, false, true);
        SetTooltip();
        $('#cancel-button_Movetactic').on("click", function () {
            $('#divMovetacticPopup').modal("hide");

        });
        $('#proceed-button_Movetactic').on("click", function () {
            SaveMoveTactic();
            $('#divMovetacticPopup').modal("hide");
        });
    });


    $(document).ajaxComplete(function () {
        HomeGrid.setSizes();
    });

    var GridDataHomeGrid;
    function BindHomeGrid() {
        var JsonModel = '@Newtonsoft.Json.JsonConvert.SerializeObject(Model)';
        HomeGrid = new dhtmlXGridObject('gridbox');
        var imgpath = '@Url.Content("~/codebase/imgs/")';
        HomeGrid.setImagePath(imgpath);
        HomeGrid.enableDragAndDrop(true);
        HomeGrid.enableAutoHeight(false);
        HomeGrid.enableAutoWidth(false);
        HomeGrid.setNumberFormat("" + CurrencySybmol + "0,000", 6, ".", ",");
        HomeGrid.attachEvent("onBeforeSorting", function (ind, grid) {
            if (IsManageviewClick) {
                IsManageviewClick = false;
                return false;
            }
            else if (IsManageDropdown)
            {
                IsManageviewClick = false;
                return false;
            }
            else
                return true;
        });
        HomeGrid.setImageSize(1, 1);
        HomeGrid.setCustomSorting(sort_Owner, OwnerColIndex);
        HomeGrid.setCustomSorting(sort_TacticType, TypeColIndex);
        HomeGrid.csvParser = HomeGrid.csvExtParser;
        HomeGrid.init();
        HomeGrid.attachEvent("onDistributedEnd", function () {
            LoadAfterParsing();
            if (HomeGrid.getRowId(state0) != undefined || HomeGrid.getRowId(state0) == '') {
                HomeGrid.showRow(HomeGrid.getRowId(state0));
               // HomeGrid.openItem(HomeGrid.getRowId(state0));
            }
            if (!IslineItemDelete) {
                if ($("#hdnPlanLineItemID").val() != '0' && $("#hdnPlanLineItemID").val() != undefined) {
                    HomeGrid.showRow(HomeGrid.findCell($("#hdnPlanLineItemID").val(), GridHiddenId)[0][0]);
                    HomeGrid.setSelectedRow(HomeGrid.findCell($("#hdnPlanLineItemID").val(), GridHiddenId)[0][0]);
                }
            }
         
                if (scrollstate != null && scrollstate != undefined ) {
                    HomeGrid.objBox.scrollTop = scrollstate.y ;
                    }
           
            
        });
        HomeGrid.attachEvent("onRowSelect", function (id, ind) {
            var idindex = HomeGrid.getColIndexById('id');
            isEditTacticHomeGrid = HomeGrid.cells(id, idindex).getValue();
        });
        HomeGrid.enableDistributedParsing(true, 10, 0.1);
        HomeGrid.enableColumnMove(true);
        var mainGridData = JsonModel;
        mainGridData = $('<div/>').html(mainGridData.toString().replace(/[\\]/g, "\\\\")).text();        
        GridDataHomeGrid = (mainGridData.toString().replace(/&amp;/g, '&'));
        HomeGrid.parse(GridDataHomeGrid, "json");
        GridHideColumn();  ///Calling Hide column function
      
        HomeGrid.setColumnMinWidth("300", TaskNameColIndex); ///to assign minimum width for task name column
        colSplitId = HomeGrid.getColIndexById(AddId);
        HomeGrid.splitAt(colSplitId + 1);        
        MoveColumn(); ///Calling Move column function       
        var firsttime = '@IsFirstTimeLogin';
        if (firsttime.toString().toLowerCase() == 'false') {
            HomeGrid.collapseAll();
            //  setTimeout(function () {
                HomeGrid.loadOpenStates("plangridState");
                    HomeGrid.objBox.scrollTop = scrollstate.y ;
                
          //  }, 200);
        }
        HomeGrid.enableAlterCss("uneven"); // Added for odd row bgcolor
        
        
        LoadAfterParsing();

        if (parseInt('@countrows') > 0) {
            $("#gridbox").show();
            $("#goalwrapper").show();
            $("#NodatawithfilterGrid").hide();

        } else {
            var noplan = '@Sessions.IsNoPlanCreated';
            if ($("#IsPlanEditable").val().toString().toLowerCase()=='true' && noplan.toLowerCase()=='true') {
                AddBlankRow();
                $("#gridbox").show();
                $("#goalwrapper").show();
                $("#NodatawithfilterGrid").hide();
            }
            else {
            $("#gridbox").hide();
            $("#goalwrapper").hide();
            $("#NodatawithfilterGrid").show();
        }
            $('#exp-serach').hide();
        }
        if ($('#txtGlobalSearch').val() != undefined && $('#txtGlobalSearch').val() != "" && $('#txtGlobalSearch').val() != null) {
            GlobalSearchonGrid($('#txtGlobalSearch').val(), $('#searchCriteria').val().replace(" ", ""));
        }
    }
    //added by devanshi to add blank row to plan grid when there is no plan for client #2587 30-9-2016
    function AddBlankRow() {
        var blankrawdata = [];
        blankrawdata.push("--");
        var id = "";
        var addcolindex = 0;
        var taskcolindex = 0;
        for (var i = 1; i < HomeGrid.getColumnCount() ; i++) {
            id = HomeGrid.getColumnId(i);
            if (id == '@Enums.HomeGrid_Default_Hidden_Columns.TaskName') {
                blankrawdata.push("Your plan goes here");
                taskcolindex = i;
            }
            else if (id == '@Enums.HomeGrid_Default_Hidden_Columns.Add') {
                blankrawdata.push("");
                addcolindex = i;
            }
            else if (id == '@Enums.HomeGrid_Default_Hidden_Columns.id') {
                blankrawdata.push("0");
            }
            else if (id == '@Enums.HomeGrid_Default_Hidden_Columns.ColourCode') {
                blankrawdata.push("");
            }
            else {
                blankrawdata.push("--");
            }
        }
        var rawdata = blankrawdata.join(',');
        HomeGrid.addRow("newRow_0", rawdata);
        HomeGrid.cells("newRow_0", addcolindex).setValue("<div class=grid_add onclick=javascript:DisplayPopUpMenu(this,event)  id='Plan' alt='000' per='true' title='Add'><i class='fa fa-plus-circle'></i></div>");
        HomeGrid.setCellTextStyle("newRow_0", taskcolindex, "color:gray;font-style: italic;");
        var colourCodeIndex = HomeGrid.getColIndexById("ColourCode");
        HomeGrid.setColumnHidden(colourCodeIndex, true);
    }
</script>