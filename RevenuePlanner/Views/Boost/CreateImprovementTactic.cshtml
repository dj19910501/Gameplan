@model RevenuePlanner.Models.BoostImprovementTacticModel
@using RevenuePlanner.Helpers
@{
    string MetricType_CR = Enums.MetricType.CR.ToString();
    string MetricType_SV = Enums.MetricType.SV.ToString();
    string MetricType_Size = Enums.MetricType.Size.ToString();
}
<div class="head" id="improvementTacticCloseMenu">
    <span class="close-form source-sans-proregular">» CLOSE MENU</span>
    <div class="cf">
        <h2 class="source-sans-prolight">@ViewBag.Title </h2>
        @* Start - Added By :- Sohel on 20/05/2014 for PL ticket #457 to delete a improvement tactic *@
        @if ((bool)ViewBag.IsCreated == false && (bool)ViewBag.CanDelete == true)
        {
            <div class="btn-group pull-right gear-dropdown">
                <span class="gear-sidebar dropdown-toggle" data-toggle="dropdown"></span>
                <ul class="dropdown-menu">
                    <li><a id="deleteImprovementTactic">Delete Tactic</a></li>
                </ul>
            </div>
        }
@* End - Added By :- Sohel on 20/05/2014 for PL ticket #457 to delete a improvement tactic *@
    </div>
</div>
<div id="errorMsg" class="alert alert-error hide message-position-small">
    <a class="close">×</a>
    <strong>Error!</strong> <span id="spanMessage"></span>
</div>
@using (Html.BeginForm(new { @id = "frmSaveTactic" }))
{
    <div id="frm_tactics" name="frm_tactics">
        <div class="content">
            @Html.HiddenFor(model => model.ImprovementTacticTypeId, new { id = "ImprovementTacticTypeId" })
            <label>Improvement Tactic Type</label>
            @Html.TextBoxFor(model => model.Title, new { placeholder = "Required", id = "hdntitle", require = "true", maxlength = "100" })
            <label>Description</label>
            @Html.TextAreaFor(model => model.Description, new { placeholder = "Optional", id = "hdndesc" })
            <table>
                <tr>
                    <td class="mid-input">
                        <label>Cost</label>
                        @Html.TextBoxFor(model => model.Cost, new { require = "true", id = "hdnCost", @class = "currency_dollar", maxlength = @RevenuePlanner.Helpers.Common.maxLengthDollar })
                    </td>
                    <td style="width: 15px;"></td>
                    <td class="mid-input">
                        <label>Status</label>
                        @Html.TextBoxFor(model => model.IsDeployed, new { @readonly = true, id = "t_status" })
                    </td>
                </tr>
                <tr>
                    <td colspan="3">
                        @if (Model.IsDeployedToIntegration)
                        {
                            <input id="t_integration_status" name="t_status" type="text" class="icon-check-blue margin-top10" placeholder="Deployed to Integration" maxlength="18" readonly />
                        }
                        else
                        {
                            <input id="t_integration_status" name="t_status" type="text" class="icon-check-gray margin-top10" placeholder="Not Deployed to Integration" maxlength="18" readonly />
                        }
                    </td>
                </tr>
            </table>
            <label>Improvement Weight(1-5)</label>
            <div class="accordion sidebar-accordion" id="accordion-1">
                <table id="tblCR_SV">
                    <thead>
                        <tr>
                            <th></th>
                            <th style="width: 24px;"></th>
                            <th title="Conversion" style="font-weight: normal;">Conversion
                            </th>
                            <th style="width: 15px;"></th>
                            <th title="Velocity" style="font-weight: normal;">Velocity</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.listMetrics.Where(m => m.MetricType == MetricType_CR || m.MetricType == MetricType_SV))
                        {
                            <tr>
                                @* Start -- Modified By :- Sohel on 21/04/2014 for PL ticket #160 to display unwrapped text. *@
                                <td title="@item.MetricName" style="width:82px;">
                                    <span class="truncate" title="@item.MetricName">
                                        @Html.DisplayFor(model => item.MetricName)
                                    </span>
                                </td>
                                <td style="width: 10px;"></td>
                                @* End -- Modified By :- Sohel on 21/04/2014 for PL ticket #160 to display unwrapped text. *@
                                <td class="small-input">
                                    @Html.TextBoxFor(model => item.ConversionValue, new { placeholder = "Required", require = "true", @class = "priceValue", maxlength = "1", id = @item.MetricID_CR })
                                </td>
                                <td style="width: 15px;"></td>
                                <td class="small-input">
                                    @Html.TextBoxFor(model => item.VelocityValue, new { placeholder = "Required", @class = "priceValue", require = "true", maxlength = "1", id = @item.MetricID_SV })

                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <table id="tblSize">
                    <thead>
                        <tr>
                            <th title=""></th>
                            <th title="Improvement" style="font-weight: normal; width: 150px;">Improvement
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.listMetricssize.Where(m => m.MetricType == MetricType_Size))
                        {
                            <tr>
                                <td title="@item.MetricName" style="width:92px;">@* Modified By :- Sohel Pathan on 28/04/2014 for Internal Review Points #9 *@
                                    @* Start -- Modified By :- Sohel on 21/04/2014 for PL ticket #160 to display unwrapped text. *@
                                    <span class="truncate" title="@item.MetricName">
                                        @Html.DisplayFor(model => item.MetricName)
                                    </span>
                                    @* End -- Modified By :- Sohel on 21/04/2014 for PL ticket #160 to display unwrapped text. *@
                                </td>
                                <td style="width: 150px;">
                                    @Html.TextBoxFor(model => item.ConversionValue, new { placeholder = "Required", @class = "priceValue", require = "true", maxlength = "1", id = @item.MetricID_Size, @value = "0" })
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="wraper-btns cf">
            <div class="span6">
                <button id="save_tactic" class="btn btn-blue text-shadow-blue source-sans-proregular" type="button">Save</button>
            </div>
            <div class="span6">
                <button class="close-form btn-link source-sans-proregular" type="button">Cancel</button>
            </div>
        </div>
    </div>
}
<script type="text/javascript">
    $(document).ready(function () {
        /* Added By :- Mitesh Vaishnav on 30/05/2014 for ticket #492 Difficulty entering weight values when creating an improvement tactic*/
        $(".priceValue").keydown(function (e) { priceFormatKeydown(e); });
        $(".priceValue").change(function (e) { priceFormatChange(e) });
        /*End By :- Mitesh Vaishnav on 30/05/2014 for ticket #492 Difficulty entering weight values when creating an improvement tactic*/

        //$('#hdntitle').focus();
        $('#slidepanel-container').slimScroll({ scrollTo: '0px' });
        $('.currency_dollar').priceFormat({ prefix: '$', centsSeparator: '', thousandsSeparator: ',', centsLimit: 0 });

        $('.close-form', this.$panel).click(function (e) {
            $("#slidepanel").css("display", "none");
            $("#slidepanel-container").empty();
        });

        $("#frm_tactics #t_integration_status").click(function () {
            if ($(this).hasClass("icon-check-blue")) {
                $(this).val("Not Deployed to Integration");
                $(this).addClass("icon-check-gray");
                $(this).removeClass("icon-check-blue");
            }
            else {
                $(this).val("Deployed to Integration");
                $(this).addClass("icon-check-blue");
                $(this).removeClass("icon-check-gray");
            }
        });

        var status = $("#frm_tactics #t_status").val();
        if (status != "True") {
            $("#frm_tactics #t_status").val("Not Active");
            $("#frm_tactics #t_status").addClass("icon-check-gray");
        }
        else {
            $("#frm_tactics #t_status").val("Active");
            $("#frm_tactics #t_status").addClass("icon-check-blue");
        }
        $('.close').click(function () {
            $("#errorMsg").css("display", "none");
        });
        $("#frm_tactics #t_status").click(function () {
            if ($(this).hasClass("icon-check-blue")) {
                $(this).val("Not Active");
                $(this).addClass("icon-check-gray");
                $(this).removeClass("icon-check-blue");
            } else {
                $(this).val("Active");
                $(this).addClass("icon-check-blue");
                $(this).removeClass("icon-check-gray");
            }
        });

        $('form').find('input[type=text], select, textarea').each(function () {
            var iserror = false;
            $(this).change(function () {
                if ($(this).attr('require') == 'true') {
                    if ($(this).val() == '') {
                        $(this).addClass("error");
                        iserror = true;
                    }
                    else {
                        $(this).removeClass("error");
                    }
                }
            });
            if (iserror) {
                ShowError('@Common.objCached.ValidateForEmptyField');
                return false;
            }
        });

        $("#save_tactic").click(function () {
            //CheckUserSession("#save_tactic", true);
            //if (reason == 'user') {
            //    return false;
            //}
            var iserror = false;
            var val = 0;
            var cntFill = 0;
            var cntNotFill = 0;
            var wrongval = 0
            if ($("#hdntitle").val() == '') {
                $("#hdntitle").addClass("error");
                $('#accordion-1 input[type=text]').each(function () {
                    var val = $(this).val();
                    if (val > 0) {
                        cntFill = cntFill + 1;
                        if (val > 5) {
                            wrongval = wrongval + 1;
                            $(this).addClass("error");
                        }
                    }
                    else {
                        cntNotFill = cntNotFill + 1;
                    }
                });
                if (cntFill < 1) {
                    $('#accordion-1 input[type=text]').each(function () {
                        $(this).addClass("error");
                    });
                }
                ShowError("@Common.objCached.ValidateForEmptyField");
                iserror = true;
                return false;
            }
            var id = $("#ImprovementTacticTypeId").val();
            val = 0;
            cntFill = 0;
            cntNotFill = 0;
            wrongval = 0
            $('#accordion-1 input[type=text]').each(function () {
                var val = $(this).val();
                if (val > 0) {
                    cntFill = cntFill + 1;
                    if (val > 5) {
                        wrongval = wrongval + 1;
                        $(this).addClass("error");
                    }
                }
                else {
                    cntNotFill = cntNotFill + 1;
                }
            });
            if (cntFill < 1) {
                ShowError("@Common.objCached.ValidateForEmptyImprovementWeight");
                $('#accordion-1 input[type=text]').each(function () {
                    $(this).addClass("error");
                });
                iserror = true;
                return false;
            }
            if (wrongval != 0) {
                ShowError("@Common.objCached.ValidateForNumericDigitOneToFive");
                iserror = true;
                return false;
            }
            var status = false;
            if ($("#t_status").hasClass("icon-check-blue")) {
                status = true;
            }
            if (iserror) {
                return false;
            }
            /*Modified by Mitesh Vaishnav on 03/06/2014 for ticket #500 Customized Target stage - Boost Improvement Tactic  */
            var ids = '[';
            $('#tblCR_SV input[type=text]').each(function () {
                var val = $(this).val();
                var id = $(this).attr('id');
                var name = $(this).attr('name');
                console.log(name);
                var Stagetype = '';
                if (name == "item.ConversionValue") {
                    Stagetype = '@MetricType_CR';
                } else if (name == "item.VelocityValue") {
                    Stagetype = '@MetricType_SV';
                }
                if (val > 0) {
                    ids += '{"StageId":"' + id + '","StageType":"' + Stagetype + '","Value":"' + val + '"},';
                }
            });
            $('#tblSize input[type=text]').each(function () {
                var val = $(this).val();
                var id = $(this).attr('id');
                var Stagetype = '@MetricType_Size';
                if (val > 0) {
                    ids += '{"StageId":"' + id + '","StageType":"' + Stagetype + '","Value":"' + val + '"},';
                }
            });
            var isDeployedToIntegration = false;
            if ($("#t_integration_status").hasClass("icon-check-blue")) {
                isDeployedToIntegration = true;
            }
            var title = htmlEncode($("#hdntitle").val());/*Added by Mitesh Vaishnav on 07/07/2014 for PL ticket #584*/
            var description = htmlEncode($("#hdndesc").val());/*Added by Mitesh Vaishnav on 07/07/2014 for PL ticket #584*/
            $.ajax({
                type: 'post',
                url: '@Url.Content("~/Boost/saveImprovementTacticData")',
                data: 'improvementId=' + $("#ImprovementTacticTypeId").val() + '&improvementDetails=' + ids.substr(0, ids.length - 1) + ']' + '&status=' + status + '&cost=' + ReplaceCC($("#hdnCost").val()) + '&desc=' + escape(description)
                       + '&title=' + escape(title) + '&deployToIntegrationStatus=' + isDeployedToIntegration,
                success: function (data) {
                    if (data.returnURL != 'undefined' && data.returnURL == '#') {
                        window.location = '@Url.Content("~/Login/Index")';
                    }
                    else {
                        if (data.redirect) {
                            $("#slidepanel").css("display", "none");
                            $("#slidepanel-container").empty();
                            window.location.href = data.redirect;
                            return;
                        }
                        if (data.errormsg) {
                            ShowError(data.errormsg);
                            return false;
                        }
                    }
                }
            });
        });
        function ShowError(value) {
            $("#errorMsg").slideDown(400);
            $("#spanMessage").empty();
            $("#spanMessage").text(value);
            return false;
        }
        TruncateMetricName();    @* Added By :- Sohel on 21/04/2014 for PL ticket #160 to display unwrapped text. *@
    });

    @* Added By :- Sohel on 21/04/2014 for PL ticket #160 to display unwrapped text. *@
    function TruncateMetricName() {
        $("#tblCR_SV").find('.truncate').each(function () {
            var title = $(this).text().trim();
            var mainText = title;
            if (title.length >= 11) {
                title = title.substring(0, 11) + "...";
                $(this).prop('title', mainText);
            }
            $(this).text(title);
        });

        $("#tblSize").find('.truncate').each(function () {
            var title = $(this).text().trim();
            var mainText = title;
            if (title.length >= 11) {
                title = title.substring(0, 11) + "...";
                $(this).prop('title', mainText);
            }
            $(this).text(title);
        });
    }

    @* Added By :- Sohel on 20/05/2014 for PL ticket #457 to delete a improvement tactic *@
    $("#deleteImprovementTactic").click(function () {
        if (confirm('Are you sure you want to delete this improvement tactic type?')) {
            var idTactic = $("#ImprovementTacticTypeId").val();
            $.ajax({
                type: 'POST',
                cache: false,
                url: '@Url.Content("~/Boost/deleteImprovementTactic")',
                data: { improvementId: idTactic },
                success: function (data) {
                    if (data != null) {
                        if (typeof data.status != undefined && data.status != 'undefined') {
                            if (parseInt(data.status) == 0) {
                                $('.close-form', this.$panel).click();
                                window.location.reload(true);
                            }
                            else {
                                ShowError(data.errormsg);
                            }
                        }
                    }
                }
            });
        }
        else {
            return false;
        }
    });

    @* Added By :- Sohel on 20/05/2014 for PL ticket #457 to delete a improvement tactic *@
    function ShowError(value) {
        $("#errorMsg").slideDown(400);
        $("#spanMessage").empty();
        $("#spanMessage").text(value);
    }
</script>
