@using RevenuePlanner.Models
@using RevenuePlanner.Helpers
@model RevenuePlanner.Models.ReportParameters

@{
    //string reportTableId = "ReportTableAll" + Model.DashboardContentId.ToString();
    //string TotalTableId = "ReporttotlaTableAll" + Model.DashboardContentId.ToString();
    string formId = "Export_ViewAll_" + Model.Id;

    <div id="tbltoCSVdata_@Model.Id"></div>
    <div class="container-fluid all-height">
        <div class="row-fluid calc-height">
            <div class="span12">
                <div id="DivViewAll" class="form-ViewAllReportPopUp fade in report-table" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="display: block">
                    <div class="login-wrapper">
                        @using (Html.BeginForm("Export", null, FormMethod.Post, new { id = @formId, @class = "ViewAllReportPopUp" }))
                        {
                            @Html.HiddenFor(x => x.DisplayName)
                            <div id="ViewAllDataModule">
                                <div class="tab-head">@Model.DisplayName<a class="close-popup-btn">Close</a>
                                @*<img src="@Url.Content("~/content/images/help-icon.png")" alt="help" style="float:right; height:15px; width:15px; margin:13px;" title="Use shift key to allow sorting on multiple columns" />*@
                                </div>
                                <div class="home-chart-header  col-xs-12">
                                    <div class="row date-value-wrapper">
                                        <div class="col-xs-5">
                                            <div class="datetitle">Date Range</div>
                                            <span class="lblheader">From: </span><span class="lblvalue">@Sessions.StartDate </span>
                                            <span class="lblheader">To: </span><span class="lblvalue">@Sessions.EndDate</span>
                                        </div>

                                    </div>
                                </div>
                                <div class="tab-content-wrap tab-content-scroll">
                                    <div class="tab-content">
                                        <div class="table1-responsive" style="overflow: auto">
                                            <div id="divViewChartTable_@Model.Id" class="table-popup">
                                            </div>
                                        </div>
                                     </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="DivBackground" class="modal-backdrop fade in" style="opacity:0.2"></div>
    }

<script type="text/javascript">

    $(function () {

        $('.close-popup-btn').click(function () {
            close_popup();
        });
        //Following is function to close pop up.
        function close_popup() {
            if (document.body.style.overflow == "hidden") {
                document.body.style.overflow = "visible";
            }
            $('#DivBackground').css("display", "none");
            $('#DivViewAll').css("display", "none");
            $('#DivBackground').remove();
            $('#DivViewAll').remove();
        }
        $(document).ready(function () {

            
            var model = @Html.Raw(Json.Encode(Model.SDV));
            var URL = '@Url.Content("~/MeasureDashboard/GetChart/")';
            //Prepare list of parameter to get report table.
            var params = {};
            params.Id = '@Model.Id';
            params.DbName = '@Enums.ApplicationCode.RPC.ToString()';
            params.Container = '@Model.Container';
            params.SDV = @Html.Raw(Json.Encode(Model.SDV));
            params.TopOnly = 'False';
            params.ViewBy = '@Model.ViewBy';
            params.StartDate ='@Model.StartDate';
            params.EndDate = '@Model.EndDate';
            params.IsViewData = 'True';


            $.ajax({
                url: URL,
                async: true,
                traditional: true,
                data: $.param(params, true),
                dataType: "json",
                success: function (data) {
                    LoadReportTable(params.Id, "divViewChartTable_", data.data,"ReportTable","_wrapper");

                    $("#ReportTable" + '@Model.Id' + " .border-r").click(function() {
                        var dimensionValueName = $(this).parent().find('.border-r:first').not('.border-r.tdGraphData').html();
                        var dimensionActualValueCount = $(this).attr('data-original-title');
                        var dimensionValueCount = $(this).clone().children().remove().end().text();
                        var dashboardContentId = '@Model.DashboardContentId';
                        var id = '@Model.Id';
                        var displayName = '@Model.DisplayName';
                        var HelpTextId = 0;
                        var dashboardId = '@Model.DashboardId';
                        var measureIndex = $(this).index();
                        var IsSortByValue = '@Model.IsSortByValue'
                        var SortOrder = '@Model.SortOrder';
                        var ChartType = '@Model.ChartType';
                        var measureName = '';
                        var childchartid = 0;
                        measureName = $(this).parent().parent().find('.border-r:nth-child(' + measureIndex + ')').html();
                        var cellid = $(this).attr('cellids');
                        var headerDimensionValue = $('#ReportTable' + '@Model.Id').find('.xhdr').find('table').find('tr:eq(1)').find("td:eq(" + $(this).index() + ")").find('.hdrcell').html();
                        if ($(this).index() != 0) {
                            if (dimensionValueCount != 0) {
                                ViewAllDrilDownData(id, displayName, dimensionValueName, dimensionValueCount, dimensionActualValueCount, headerDimensionValue, dashboardContentId, dashboardId, measureName, childchartid, '@Model.CustomQuery', HelpTextId,IsSortByValue,SortOrder, ChartType);
                            }
                            else {
                                $(this).css('cursor', 'default');
                            }
                        }
                        if ($(this).attr('class', 'cellselected')) {
                            $(this).css('cursor', 'default');
                        }
                    });
                },
                error: function (err) {
                    $("#divChart" + '@Model.Id').html("@RevenuePlanner.Helpers.Common.objCached.ErrorInWebApi");
                }
            });
            function ViewAllDrilDownData(id, displayName, dimensionValueName, dimensionValueCount, dimensionActualValueCount, headerDimensionValue, dashboardContentId, dashboardId, measureName, childchartid, CustomQuery, HelpTextId,IsSortByValue, SortOrder, ChartType) {
                measureName = '';
                $("#div_ViewAllReport").empty();
                var url = '@Url.Content("~/MeasureDashboard/LoadDrillDownData/")';
                $("#div_ViewAllReport").load(url, {
                    DbName: '@Enums.ApplicationCode.RPC.ToString()', Id: id, DisplayName: displayName, DimensionValueName: dimensionValueName, DimensionValueCount: dimensionValueCount,
                    DimensionActualValueCount: dimensionActualValueCount, HeaderDimensionValue: headerDimensionValue,
                    DashboardContentId: dashboardContentId, DashboardId: dashboardId, MeasureName: measureName,
                    childchartid: childchartid, CustomQuery: CustomQuery, HelpTextId: HelpTextId, IsSortByValue: IsSortByValue, SortOrder: SortOrder, ChartType: ChartType
                });
            }

        });
    });
</script>
