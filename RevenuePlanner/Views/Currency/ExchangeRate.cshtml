@using RevenuePlanner.Helpers;
@{
    //Layout = "~/Views/Shared/_Layout.cshtml";
    var countrows = 0;
    ViewBag.Title = "Conversion Rate";
    ViewBag.PageTitle = "ExchangeRates";//Added by Mitesh Vaishnav on 10-07-2014 for functional review point 49
    ViewBag.ModuleTitle = "Currency";
    bool Editpermission = true;
    if (AuthorizeUserAttribute.IsAuthorized(Enums.ApplicationActivity.MultiCurrencyEdit))
    {
        Editpermission = true;
    }
    else if (AuthorizeUserAttribute.IsAuthorized(Enums.ApplicationActivity.MultiCurrencyViewOnly))
    {
        Editpermission = false;
    }

    //string permission = Convert.ToString(ViewData["permission"]);
}
<style>
    .currency-tbl div.gridbox_dhx_skyblue.gridbox table.hdr td div.hdrcell {
        text-align: center;
        padding-left: 0px !important;
    }

    .currency-tbl div.gridbox_dhx_skyblue.gridbox div.xhdr table.hdr,
    .currency-tbl div.gridbox_dhx_skyblue.gridbox div.objbox table.row20px,
    div.gridbox {
        width: 100% !important;
    }

    .currency-tbl div.gridbox_dhx_skyblue.gridbox table.obj.row20px tr td {
        padding-left: 8px;
        padding-right: 8px;
        text-align: center;
    }

        .currency-tbl div.gridbox_dhx_skyblue.gridbox table.obj.row20px tr td:first-child {
            text-align: left;
        }

    .currency-tbl div.gridbox_dhx_skyblue.gridbox table.obj tr.ev_dhx_skyblue {
        background: #f0f0f0;
    }
    /*div.gridbox_dhx_skyblue.gridbox div.xhdr{background: #88cede; }
    div.gridbox_dhx_skyblue.gridbox table.hdr tr:nth-child(2) td {
         border-top: medium none;
     }
     div.gridbox_dhx_skyblue.gridbox table.hdr td div.hdrcell {color: #fff !important;}*/
</style>
@Html.Hidden("SuccMsg", TempData["SuccessMessage"])
@Html.Hidden("ErrMsg", TempData["ErrorMessage"])
@section Sidebar {
    @Html.Partial("~/Views/shared/_preferences.cshtml")
}

@using (Html.BeginForm())
{
    <div id="confirmMsg" class="alert hide alert-error ">

        <div id="errorMsg">

        </div>
    </div>


 <!--success message-->
    <div id="successMessage" class="alert hide alert-success ">
        <a class="close">×</a>
        <strong>Success.</strong>@Html.Raw(HttpUtility.HtmlDecode((string)TempData["SuccessMessage"]))
        <span id="divsuccessmsg"></span>
    </div>
    <!--success message-->
    <!--error message-->
    <div id="errorMessage" class="alert hide alert-error ">
        <a class="close">×</a>@Html.Raw(HttpUtility.HtmlDecode((string)TempData["ErrorMessage"]))
        <strong>Error ! </strong><span id="diverrormsg"></span>

    </div>
    <!--error message-->

    //changed by Bhumika for design #2492
    <div class="title-header source-sans-proregular margin-bottom25">
        <h2>
            Currency Exchange rate
        </h2>
    </div>

    <div class="padding-content  cf source-sans-proregular">
        <div class="row">
            @Html.Partial("~/Views/Currency/_currencyMenu.cshtml")
            <div class="span10 currency-content">
                <div class="selectyear">
                    <label>Select Year</label>
                    <span class="selectBox" id="select_year" style="width: 130px;">
                        @Html.DropDownList("drpYear", (IEnumerable<SelectListItem>)ViewBag.yearList)
                    </span>
                    @if (Editpermission == true)
                    {
                        <input type="button" value="Save" title="Save" id="btnSave" class="btn btn-blue btn-save pull-right margin-left20" />
                    }
                </div>


                <div id="PlanGrid" class="gridViewGrid currency-tbl margin-bottom36"></div>

                <div class="checkbox-wrap clearfix">
                    @if (Editpermission == true)
                    {
                        <div class="pull-right">
                            <input type="checkbox" id="chkSameasplanning" value=""> <span>Same as planning</span>
                        </div>
                    }
                </div>
                <div id="ReportGrid" class="gridViewGrid currency-tbl">

                </div>
            </div>
        </div>
    </div>
}
<div id="divClick"></div>
<link href="@Url.Content("~/Content/css/DHTMLX/dhtmlxtreegrid2_min.css")" rel="stylesheet" type="text/css" />


<script type="text/javascript">

    var planData = [];
    var reportData = [];
    $("#drpYear").change(function () {
        $('#chkSameasplanning').prop("checked", false);
        planData = [];
        reportData = [];
        var year = this.value;
        if (year != '') {
            LoadReportGrid(year);
            LoadPlanGrid(year);

        }
        $("#errorMessage").slideUp(400);
        $("#successMessage").slideUp(400);
    });
    $('#chkSameasplanning').change(function () {

        if ($(this).is(":checked")) {
            //Insertation Start #2492 Added alert box when check checkbox like same as plan.
            var r = confirm("Are you sure you want to change report currency rate to be same as plan rate?");
            if (r == true) {
                reportData = [];

                var year = $("#drpYear option:selected").text();
                PlanCurrencyGrid.forEachRow(function (id) {


                    PlanCurrencyGrid.forEachCell(id, function (cellObj, col_index) {


                        if (col_index > 0) {
                            var val = PlanCurrencyGrid.cells(id, col_index).getValue();
                            ReportCurrencyGrid.cells(id, col_index).setValue(val);
                            var monthValue = PlanCurrencyGrid.cells(id, col_index).getAttribute("actval");
                            reportData.push({ CurrencyCode: id, Component: '@Enums.CurrencyComponent.Report.ToString()', OldExchangeRate: val, NewExchangeRate: val, Year: year, Month: monthValue });
                        }
                    });

                });
            }
            else {
                $('#chkSameasplanning').prop("checked", false);
            }

        }
    });


    $('#btnSave').click(function () {
        var isvalidData = true;
        $('#divClick').click();

        if (CheckDataStatus() == true) {
            var exchangerateObj = JSON.stringify({ 'lstPlan': planData, sameAsPlan: false, 'lstReport': reportData });
            var url = "@Url.Content("~/Currency/SaveExchangeRateList")"
            $.ajax({
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                type: 'POST',
                url: url,
                async: false,
                data: exchangerateObj,
                success: function () {
                    // $('#result').html('"PassThings()" successfully called.');
                    planData = [];
                    reportData = [];
                    var year = $("#drpYear option:selected").text();
                    var url = '@Url.Content("~/Currency/ExchangeRate")';
                    window.location.replace(url + "?id=" + year);

                },
                failure: function (response) {
                    $('#result').html(response);
                }
            });
        }
        else {
            $('#diverrormsg').text(" Exchange rate can't be null or zero.");
            $("#errorMessage").slideDown(400);
            $("html, body").animate({ scrollTop: 0 }, 1000);
            $("#successMessage").slideUp(400);
            $("#confirmMsg").slideUp(400);

        }
        //isvalidData = true;
    });
    function CheckDataStatus() {
        var status = true;
        PlanCurrencyGrid.forEachRow(function (id) {

            PlanCurrencyGrid.forEachCell(id, function (cellObj, col_index) {
                var planstatus = true;
                if (col_index > 0) {
                    var val = PlanCurrencyGrid.cells(id, col_index).getValue();
                    if (parseFloat(val).toFixed(2) == "0.00") {
                        planstatus = false;
                    }
                    if (val == '') {

                        planstatus = false;

                    }
                    else {
                        if ($.isNumeric(val) == false) {
                            planstatus = false;
                        }
                    }
                    if (planstatus == false) {
                        status = false;
                        PlanCurrencyGrid.setCellTextStyle(id, col_index, "background-color: #f1dbde!important");
                    }
                }
            });
        });

        ReportCurrencyGrid.forEachRow(function (id) {

            ReportCurrencyGrid.forEachCell(id, function (cellObj, col_index) {
                var reportStatus = true;
                if (col_index > 0) {
                    var val = ReportCurrencyGrid.cells(id, col_index).getValue();
                    if (parseFloat(val).toFixed(2) == "0.00") {
                        reportStatus = false;
                    }
                    if (val == '') {

                        reportStatus = false;

                    }
                    else {
                        if ($.isNumeric(val) == false) {
                            reportStatus = false;
                        }
                    }
                    if (reportStatus == false) {
                        status = false;
                        ReportCurrencyGrid.setCellTextStyle(id, col_index, "background-color: #f1dbde!important");
                    }
                }
            });
        });

        return status;
    }
    $(document).ready(function () {

        $(".selectBox select").selectbox();

        $("#content_wraper").removeClass("all-height").addClass("padding-top40");
        $('.nav').addClass('no-bottom-border');
        var year = $("#drpYear option:selected").text();
        if (year != '') {

            LoadReportGrid(year);
            LoadPlanGrid(year);
        }
        $(".close").click(function (e) {
            e.stopPropagation();
            e.preventDefault();
            $(this).closest(".alert").slideUp(400);
            $("#confirmMsg").slideUp(400);
            //  $("#errorMsg").slideUp(1000);
        });

        $("#confirmClose").click(function (e) {
            alert('hello');
            $("#confirmMsg").slideUp(400);
        });
        //$(document).on("click", "#confirmClose, .confirmClose", function (e) {
        //    $("#errorMsg").slideUp(1000);
        //});
        if ($('#ErrMsg').val() == null || $('#ErrMsg').val() == '') {

            $("#errorMessage").slideUp(400);
        }
        else {
            $("#errorMessage").slideDown(400);
            $("html, body").animate({ scrollTop: 0 }, 1000);
        }
        if ($('#SuccMsg').val() == null || $('#SuccMsg').val() == '') {

            $("#successMessage").slideUp(400);
        }
        else {
            $("#errorMessage").slideUp(400);
            $("#successMessage").slideDown(1200);
        }

    });
    function LoadPlanGrid(yearValue) {

        var url = '@Url.Content("~/Currency/PlanGrid/")';

        $("#PlanGrid").load(url + '?year=' + yearValue, function (response, status, xhr) {

        });
    }
    function SaveExchangeRate(code, oldValue, newValue, component, monthValue, cellInd) {

        var url = '@Url.Content("~/Currency/SaveExchangeRate/")';
        var compo = '';
        var year = $("#drpYear option:selected").text();
        if (component == 'plan') {
            compo = '@Enums.CurrencyComponent.Plan.ToString()';
            planData.push({ CurrencyCode: code, Component: component, OldExchangeRate: oldValue, NewExchangeRate: newValue, Year: year, Month: monthValue });
            if ($('#chkSameasplanning').is(":checked")) {
                ReportCurrencyGrid.cells(code, cellInd).setValue(newValue);
                reportData.push({ CurrencyCode: code, Component: '@Enums.CurrencyComponent.Report.ToString()', OldExchangeRate: newValue, NewExchangeRate: newValue, Year: year, Month: monthValue });
            }

        }
        else if (component == 'report') {
            compo = '@Enums.CurrencyComponent.Report.ToString()';
            reportData.push({ CurrencyCode: code, Component: component, OldExchangeRate: oldValue, NewExchangeRate: newValue, Year: year, Month: monthValue });
        }


    }
    function LoadReportGrid(yearValue) {
        var url = '@Url.Content("~/Currency/ReportGrid/")';
        $("#ReportGrid").load(url + '?year=' + yearValue, function (response, status, xhr) {
        });
    }
    $("#header a").not("#ContactSupport").click(function () {

        sidebarlink = $(this).attr('id');
        if (reportData.length > 0 || planData.length > 0) {
            displayConfirmBox($(this).attr('href'), sidebarlink);
            return false;
        }
        else {
            return true;
        }
    });
    var sidebarlink = '';
    function displayConfirmBox(strURL, id) {
        $('#confirmMsg').html("<strong>Error! </strong> <span id='spanMsgError'>You have unsaved changes. Do you wish to leave this page and lose your work?&nbsp;&nbsp;&nbsp;&nbsp;<a style='color:gray;' id='" + id + "' href='" + strURL + "' class='btn-gray' onclick='CallUrl(this);'>Continue</a>&nbsp;&nbsp;<a style='color:gray;' id='confirmClose' href='#' onclick='closeMsg(this);' class='underline'>Cancel</a></span><a id='aclose' onclick='closeMsg(this);' class='close confirmClose'>×</a>");
        $("#confirmMsg").slideDown(400);
        $("#successMessage").slideUp(400);
        $("#errorMessage").slideUp(400);

    }
    function closeMsg() {
        $("#confirmMsg").slideUp(400);
    }
    function CallUrl(alink) {
        $("#" + alink.id).attr("isDataUpdated", "false");
        $("#" + alink.id).click();
    }
    $("#sidebar a").click(function (event) {
        sidebarlink = $(this).attr('id');
        if (reportData.length > 0 || planData.length > 0) {
            displayConfirmBox($(this).attr('href'), sidebarlink);
            if ($("#" + sidebarlink).attr("isDataUpdated") != 'false')
                $("#" + sidebarlink).attr("isDataUpdated", "true")
            event.preventDefault();
            event.stopPropagation();
            return false;
        }
        else {
            return true;
        }
    });
    $("#divCurrencyMenu a").click(function (event) {
        sidebarlink = $(this).attr('id');
        if (reportData.length > 0 || planData.length > 0) {
            displayConfirmBox($(this).attr('href'), sidebarlink);
            if ($("#" + sidebarlink).attr("isDataUpdated") != 'false')
                $("#" + sidebarlink).attr("isDataUpdated", "true")
            event.preventDefault();
            event.stopPropagation();
            return false;
        }
        else {
            return true;
        }
    });
    function GridPriceFormatCurrencyKeydown(e) {
        // Allow: backspace, delete, tab, escape, enter and .
        if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
            // Allow: Ctrl+A
            (e.keyCode == 65 && e.ctrlKey === true) ||
            // Allow: home, end, left, right
            (e.keyCode >= 35 && e.keyCode <= 39)) {
            // let it happen, don't do anything
            return;
        }
        // Ensure that it is a number and stop the keypress
        if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
            e.preventDefault();
        }

    };
</script>