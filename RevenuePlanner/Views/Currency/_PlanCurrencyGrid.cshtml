@using RevenuePlanner.Helpers;
@model RevenuePlanner.Models.Plangrid
@{
    Layout = "";
    var countrows = 0;
    if (Model.PlanDHTMLXGrid != null)
    {
        countrows = Model.PlanDHTMLXGrid.rows != null ? Model.PlanDHTMLXGrid.rows.Count : 0;
    }

    var errorUnarchive = "";

    if (ViewBag.ErrorUnarchived != null)
    {
        errorUnarchive = Convert.ToString(ViewBag.ErrorUnarchived);
    }
}



    <h3 class="sideline"><span>Planning</span></h3>
    <div id="PlanCurrencyGrid" class="gridViewGrid"></div> @*inline style remvoed by Bhumika #2492*@  



@Html.Hidden("hdnErrorUnarchive", errorUnarchive, new { id = "hdnErrorUnarchive" })

<script type="text/javascript">

    $(document).ready(function () {
        $('.nav').addClass('no-bottom-border');
        if (parseInt(@countrows) > 0) {
            BindPlanGrid();
            $(document).ajaxComplete(function () {
                PlanCurrencyGrid.setSizes();
            });
            //Enable single click to trigger edit - zz
            PlanCurrencyGrid.enableEditEvents(true, true, true);
        }
    });

    function BindPlanGrid() {
        var JsonModel = '@Newtonsoft.Json.JsonConvert.SerializeObject(Model.PlanDHTMLXGrid)';
        var mainGridData = JsonModel;
        mainGridData = $('<div/>').html(mainGridData.toString().replace(/[\\]/g, "\\\\")).text(); // Decode Html content.
        GridDataHomeGrid = (mainGridData.toString().replace(/&amp;/g, '&'));

        PlanCurrencyGrid = new dhtmlXGridObject('PlanCurrencyGrid');
        var imgpath = '@Url.Content("~/codebase/imgs/")';
        PlanCurrencyGrid.attachEvent("onEditCell", doOnEditCell);
        PlanCurrencyGrid.setImagePath(imgpath);
        PlanCurrencyGrid.enableAutoHeight(true);
        PlanCurrencyGrid.init();
        PlanCurrencyGrid.parse(GridDataHomeGrid, "json");
    }

    function doOnEditCell(stage, rowId, cellInd, nValue, oValue) {
        PlanCurrencyGrid.setCellTextStyle(rowId, cellInd, "border-color: none;background-color: none");
        var isValid = true;
        $('#diverrormsg').text('');
        $("#errorMessage").slideUp(400);
        if (stage == 1) {
            $(".dhx_combo_edit").off("keydown");

            $(".dhx_combo_edit").on('keydown', (function (e) { GridPriceFormatCurrencyKeydown(e); }));
           
        }
        if (stage == 2) {
          
            if (parseFloat(nValue).toFixed(2) == "0.00") {
                isValid = false;
            }
            if (nValue == '') {
               
                isValid = false;
              
            }
            else
            {
                if($.isNumeric(nValue)==false)
                {
                    isValid = false;
                }
            }
            if (isValid == true)
            {
                var monthValue = PlanCurrencyGrid.cells(rowId, cellInd).getAttribute("actval");
                if (nValue != oValue)
                    SaveExchangeRate(rowId, oValue, nValue, "plan", monthValue, cellInd);
            }      
        }

        return true;
    }
</script>