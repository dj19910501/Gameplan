@model RevenuePlanner.Models.InspectModel
@using RevenuePlanner.Helpers;

@{
    RevenuePlanner.Models.InspectModel lineitemMaster = null;
    if(Model != null)
    {
        lineitemMaster = Model;
    }

    var popupvalue = string.Empty;
    var RedirectType = (string)lineitemMaster.RedirectType;
    var inspectMode = string.Empty;
    var RedirectTypeMode = (bool)(!string.IsNullOrEmpty(RedirectType) ? (RedirectType == RevenuePlanner.Helpers.Enums.InspectPopupRequestedModules.ApplyToCalendar.ToString() ? true : false) : false);
    bool isIndex = (bool)(!string.IsNullOrEmpty(RedirectType) ? (RedirectType == RevenuePlanner.Helpers.Enums.InspectPopupRequestedModules.Index.ToString() ? true : false) : true);
    var CalledFromBudget = (!string.IsNullOrEmpty(RedirectType) ? (RedirectType == RevenuePlanner.Helpers.Enums.InspectPopupRequestedModules.Budgeting.ToString() ? "Budegting" : "") : "");
    //// Flag to indicate unavailability of web service.
    //// Added By: Maninder Singh Wadhva on 11/24/2014.
    //// Ticket: 942 Exception handeling in Gameplan.
    bool isServiceUnavailable = Convert.ToBoolean(ViewBag.IsServiceUnavailable);
    string tacticId = Convert.ToString(lineitemMaster.PlanTacticId);
    var campaignId = string.Empty;
    var planProgrameId = string.Empty;
    bool IsPlanEditable = false;
    var planLineItemId = 0;
    bool IsPlanCreateAll = false;
    string lineitemTitle = "";
    if(lineitemMaster != null)
    {
        popupvalue = lineitemMaster.InspectPopup;
        inspectMode = lineitemMaster.InspectMode;
        campaignId = Convert.ToString(lineitemMaster.PlanCampaignId);
        planProgrameId = Convert.ToString(lineitemMaster.PlanProgramId);
        IsPlanEditable = (bool)lineitemMaster.IsPlanEditable;
        planLineItemId = lineitemMaster.PlanLineitemId;
        lineitemTitle = lineitemMaster.Title;
        IsPlanCreateAll = (bool)lineitemMaster.IsPlanCreateAll;
    }

    string colorCode = "C6EBF3";
    bool IsOtherLineItem = false;
    if (ViewBag.IsOtherLineItem != null)
    {
        IsOtherLineItem = (bool)ViewBag.IsOtherLineItem;
    }
    string LineitemOpt = "";
    if (inspectMode == Enums.InspectPopupMode.ReadOnly.ToString())
    {
        LineitemOpt = "View";
    }
    else
    {
        LineitemOpt = "Edit";
    }
    bool IsTacticActualsAddEditAuthorized = (bool)ViewBag.IsTacticActualsAddEditAuthorized;
}
@Html.Hidden("hdnPopup", popupvalue, new { id = "hdnInspectPopup" })
@Html.Hidden("hdnPlanLineItemID", planLineItemId, new { id = "hdnPlanLineItemID" })
@Html.Hidden("hdnLineitemOpt", LineitemOpt, new { id = "hdnLineitemOpt" })
@Html.Hidden("hdnRedirectType", RedirectType, new { id = "hdnRedirectType" })
<style type="text/css">
    #successMessageViewCampaign, #errorMessageEditCampaign
    {
        margin-bottom: 15px !important;
    }
</style>

<div id="successMessageViewLineItem" class="alert hide alert-success messagewidth">
    <a class="close">×</a>
    <span id="spanSuccessMessageViewLineitem"></span>
</div>

<div id="errorMessageEditLineitem" class="alert alert-error hide messagewidth">
    <a class="close">×</a>
    <strong>Error!</strong>
    <span id="spanMessageEditLineitem"></span>
</div>

<div class="headerfix-wraper">
    @*Modified for Design changes ticket #1318*@
    <div class="headefix">

        <h2 class="title-simple source-sans-prolight">
            @if (!string.IsNullOrEmpty(lineitemTitle)) //#2725 changed by komal
            {
                <span>
                    @if (IsPlanEditable)
                    {
                        if (!IsOtherLineItem)
                        {
                            <div class="delete-btn-tab" style="float: right;" id="divDeleteProgram">
                                <button class="delete-btn-gray" id="deleteLineItem" type="button">Delete</button>
                            </div>
                        }
                    }

                    @if (IsPlanCreateAll)
                    {
                        <div style="float: right; position: relative;">
                            <span class="add-icon-white btn-blue btn-large" style="display: block; cursor: pointer; margin-right: 10px;" id="AddForm"></span>
                            <div class="btn-dropdwn" style="display: none; position: absolute; top: 40px; z-index: 1;" id="popupLineitem">
                                <ul style="margin: 0;">
                                    <li class="new-prog" id="NewLineItem">New Line Item</li>
                                    @if (!IsOtherLineItem)
                                    {
                                        <li class="copy-camp" id="CloneLineItem">Copy Line Item</li>
                                    }
                                </ul>
                            </div>
                        </div>
                    }

                    @if (IsPlanEditable)
                    {
                        <span class="edit-icon-white btn-blue btn-large SpanDisable" href="#" id="btnEditlineItem" style="margin-right: 15px; cursor: pointer;"></span>
                    }
                </span>
            }

            @if (string.IsNullOrEmpty(lineitemTitle))
            {
                <span class="Save-icon-white btn-blue btn-large SpanDisable" href="#" id="btnEditlineItem" style="margin-right: 15px; cursor: pointer;"></span>

            }

            <button class="close-x-big-icon" data-dismiss="modal" aria-hidden="true"></button> @*Modified by Bhumika #2003 from "buttom" to "button"  *@

        </h2>

    </div>
</div>
<div class="pop-body-wraper">
    <div class="PopupDiv">
        <form>
            <div class="modal-popup-title">
                <span class="icon-flag bg-purple" style="background-color:#@colorCode !important;"></span>
                <h2 class="title-simple source-sans-prolight">
                    <span>
                        <span id="lblLineitemTitle" class="tipsyclassTitle" title="@Html.Raw(lineitemTitle)">@Html.Raw(lineitemTitle)</span>
                    </span>
                    @Html.TextBox("txtTitle", HttpUtility.HtmlDecode(lineitemTitle), new { placeholder = "Line Item name goes here", require = "true", maxlength = "255", @class = "span12 input-small light-blue-background", @style = "width: 95%; height: 28px;display:none;font-family:'source_sans_prolight', Arial, 'sans-serif';font-size:27px;color:#4d4d4d;line-height: normal;", title = lineitemTitle, id = "txtTitle" })
                    @Html.TextBox("txtTitle1", "", new { @style = "display:none", id = "txtTitle" })
                </h2>
            </div>
        </form>

        <div>
            <ul class="nav nav-tabs new-margin no-position SpanDisable" id="InspectTab">
                <li class="active pull-left" id="liSetup">
                    <a>Setup</a>
                </li>

                @if (IsTacticActualsAddEditAuthorized)
                {
                    <li class="pull-left" id="liActuals">
                        <a>Actuals</a>
                    </li>
                }
                // Commented by Arpita Soni for Ticket #2236 on 06/20/2016
                @*@if (!IsOtherLineItem)
                {
                    if (!Sessions.IsBudgetShow)
                    {
                        <li class="pull-left" id="liBudget">
                            <a>Budget</a>
                        </li>
                    }
                }*@
            </ul>
            <div id="divTab">
            </div>

        </div>
    </div>
</div>

<script type="text/javascript">

    var divPartial = "#divPartial";
    var TabSetup = "Setup";
    // Commented by Arpita Soni for Ticket #2236 on 06/20/2016
    //var TabBudget = "Budget";
    var divTab = "#divTab";
    var TabActual = "Actuals";
    var tabtext = "";
    var inspectMode = '@inspectMode';
    var PlanLineItemId = $("#hdnPlanLineItemID").val();
    //// Function to redirect to login page on unavailability of web service.
    //// Added By: Maninder Singh Wadhva on 11/24/2014.
    //// Ticket: 942 Exception handeling in Gameplan.
    function redirectOnServiceUnavailibility() {
        if ('@Html.Raw(Json.Encode(isServiceUnavailable))' == 'true') {
            window.location = '@Url.Content(RevenuePlanner.Helpers.Common.RedirectOnServiceUnavailibilityPage)';
        }
    }
    //Added By Komal Rawal
    function SaveAllData(activeTab) {
        var LineitemOpt = $("#hdnLineitemOpt").val();
        $('.btn-dropdwn').hide();
        if (LineitemOpt == '@Enums.InspectPopupMode.Edit.ToString()') {
            if (activeTab == TabSetup) {
                var ReturnParameter = SetupSaveLineitem();
                if (ReturnParameter == false) {
                    $('#InspectTab').removeClass('SpanDisable');
                    return false;
                }
            }
            // Commented by Arpita Soni for Ticket #2236 on 06/20/2016
            //else if (activeTab == TabBudget) {
            //    var ReturnParameter = SaveLineitemBudget();
            //    if (ReturnParameter == false) {
            //        $('#InspectTab').removeClass('SpanDisable');
            //        return false;
            //    }
            //}
            else if (activeTab == TabActual) {
                //var ReturnParameter = SaveLineitemActual();
                //if (ReturnParameter == false) {
                //    return false;
                //}
                var hdnTacticStatus = $("#hdnParentTacticStatus").val();
                var Approvedstatus = "@RevenuePlanner.Helpers.Enums.TacticStatusValues[RevenuePlanner.Helpers.Enums.TacticStatus.Approved.ToString()].ToString()";
                var Completestatus = "@RevenuePlanner.Helpers.Enums.TacticStatusValues[RevenuePlanner.Helpers.Enums.TacticStatus.Complete.ToString()].ToString()";
                var InProgressstatus = "@RevenuePlanner.Helpers.Enums.TacticStatusValues[RevenuePlanner.Helpers.Enums.TacticStatus.InProgress.ToString()].ToString()";
                if (typeof hdnTacticStatus != 'undefined' && (hdnTacticStatus == Approvedstatus || hdnTacticStatus == InProgressstatus || hdnTacticStatus == Completestatus)) {
                    var ReturnParameter = SaveLineitemActual();

                }
                else {
                    var ReturnParameter = SaveTitle();
                }
                if (ReturnParameter == false) {
                    $('#InspectTab').removeClass('SpanDisable');
                    return false;
                }
            }


        }

        return true;
    }





    //<--- End Document.ready event --->





    function RemoveTabClass() {
        $('#InspectTab').children().each(function () {
            if ($(this).hasClass('active pull-left')) {
                $(this).removeClass("active pull-left");
                $(this).addClass("pull-left");
            }
        });
    }

    function loadReview(id, tabValue) {

        $("#hdnInspectPopup").val(tabValue);
        $.ajaxSetup({ cache: false });
        var url;

        var LineitemOpt = $("#hdnLineitemOpt").val();
        if (tabValue == TabSetup) {
            if (LineitemOpt == "Edit") {
                $('#txtTitle').css('display', 'block');
                $('#lblLineitemTitle').css('display', 'none');
                url = '@Url.Content("~/Inspect/LoadEditSetupLineitem/")';
            }
            else {
                url = '@Url.Content("~/Inspect/LoadSetupLineitem/")';
            }
        }
        // Commented by Arpita Soni for Ticket #2236 on 06/20/2016
        @*if (tabValue == TabBudget) {
            if (LineitemOpt == "Edit") {
                $('#txtTitle').css('display', 'block');
                $('#lblLineitemTitle').css('display', 'none');
            }
            url = '@Url.Content("~/Inspect/LoadLineItemBudgetAllocation/")';
        }*@
        if (tabValue == TabActual) {
            if (LineitemOpt == "Edit") {
                $('#txtTitle').css('display', 'block');
                $('#lblLineitemTitle').css('display', 'none');
            }
            url = '@Url.Content("~/Inspect/LoadActualsLineItem/")';
        }

        RemoveTabClass();
        $("#li" + tabValue).removeClass("pull-left");
        $("#li" + tabValue).addClass("active pull-left");
        $('#div' + tabValue).css({ display: "block" });
        $("#divTab").empty();
        $("#divTab").load(url + '?id=' + id, function (response, status, xhr) {
            if (response == '{"serviceUnavailable":"~/Login/ServiceUnavailable"}') {
                //// Call function to redirect on service unavailibility.
                //// Added By: Maninder Singh Wadhva on 11/24/2014.
                //// Ticket: 942 Exception handeling in Gameplan.
                window.location = '@Url.Content(Common.RedirectOnServiceUnavailibilityPage)';
            }
            $('#InspectTab').removeClass('SpanDisable');
        });
        $('#txtTitle').focus();
        var txtLineTitle = $('#txtTitle').val();
        $('#txtTitle').val('');
        $('#txtTitle').val(txtLineTitle);
    }
    // Close event for Error Message & Success Message Close button
    $(".alert").find(".close").on("click", function (e) {
        e.stopPropagation();
        e.preventDefault();
        $(this).closest(".alert").css("display", "none");
    });



    function SaveMessageOnParent(value) {
        $("#modal-container-186470").modal('hide');
        $("#errorMessageDuplicatePlan").slideUp(50);
        $("#successMessageDuplicatePlan").slideDown(400);
        $("#cSuccessDuplicatePlan").empty();
        $("#cSuccessDuplicatePlan").text(htmlDecode(value));
        $("#successMessageDuplicatePlan").removeClass("message-position");
        $("#successMessageDuplicatePlan").addClass("successMessage-InspectPopUpSections");

    }


    function loadAddSetup() {
        $("#errorMessage").css("display", "none");
        $("#successMessage").css("display", "none");
        $("#hdnLineitemOpt").val("Edit");
        var InspectValue = $("#hdnInspectPopup").val();
        var tabtext = ($("#li" + InspectValue).children('a').text());
        var tacticId = '@tacticId';
        if (tabtext == "Setup") {
            url = '@Url.Content("~/Inspect/createLineitem/")';
            $("#divTab").empty();
            $("#divTab").load(url + '?id=' + tacticId);
        }
        //$("#btnEditlineItem").css("display", "none");
        $("#AddForm").css("display", "none");
        $('#txtTitle').css('display', 'block');
        $('#txtTitle').text('');
        $('#txtTitle').focus();
        $('#lblLineitemTitle').css('display', 'none');
        return false;
    }

    $(document).ready(
     function () {

         //Bhumika - #2236 For equal width of li
         var evenWidth = ($("#InspectTab").width() / $("#InspectTab li").length) - 2;
         $("#InspectTab li").css("width", evenWidth);
         evenWidth = 0;
         //// Call function to redirect on service unavailibility.
         //// Added By: Maninder Singh Wadhva on 11/24/2014.
         //// Ticket: 942 Exception handeling in Gameplan.
         var modelHeight = $(window).height();
         var headerHeight = $('.headerfix-wraper').height();
         var bodyWrapperMaxHeight = modelHeight - headerHeight - 100;
         //$('.pop-body-wraper').css('height', '92%');
         redirectOnServiceUnavailibility();
         CloseIconClick();
         $("#btnEditlineItem").css("display", "block");
         $("#AddForm").css("display", "block");
         $("#divDeleteProgram").css("display", "block");
         NumberFormatterTipsyTitle(".tipsyclassTitle", 40);
         var InspectValue = $("#hdnInspectPopup").val();

         if (('@IsOtherLineItem'.toLowerCase().toString() == "true") && (InspectValue == "Budget")) {
             InspectValue = "Setup";
         }

         var planLineitemId = $("#hdnPlanLineItemID").val();

         // Call Remove Tabclass which will handle style of tabs
         RemoveTabClass();

         $("#li" + InspectValue).removeClass("pull-left");
         $("#li" + InspectValue).addClass("active pull-left");
         // Modified by Arpita Soni for Ticket #2237 on 06/13/2016
         tabtext = ($("#li" + InspectValue).children('a').text().replace(" ","_"));
         $('#div' + tabtext).css({ display: "block" });
         $("#liSetup,#liReview,#liActuals").on("click", function () {
             // Modified by Komal Rawal for #2165 clicking on tabs or button before loading gets complete gives elmah error.
             if ($('#InspectTab').hasClass('SpanDisable') == false) {

                 $('#btnEditlineItem').removeClass('SpanDisable');
                 $('#InspectTab').addClass('SpanDisable');
                 var activeTab = $("#InspectTab li.active a").text();
                 tabtext = ($(this).children('a').text());
                 // If condition added by bhavesh, if same tab click then don't require to save data. Date : 10-jan-2015.Ticket: #1823
                 var returnpara = true;
                 if (tabtext != activeTab) {
                     var returnpara = SaveAllData(activeTab);   //Added By Komal Rawal
                 }

                 PlanLineItemId = $("#hdnPlanLineItemID").val();
                 if (PlanLineItemId != 0 || tabtext != activeTab) {
                     if (returnpara) {
                         $("#successMessageViewCampaign").slideUp(50);
                         $("#errorMessageEditCampaign").slideUp(50);
                         RemoveTabClass();
                         $(this).removeClass("pull-left");
                         $(this).addClass("active pull-left");
                         $("#errorMessage").css("display", "none");
                         $("#successMessage").css("display", "none");
                         loadReview(PlanLineItemId, tabtext);
                     }
                 }
                 else {
                     loadAddSetup();
                 }
             }
         });

         //End
         if (planLineitemId != '0') {
             loadReview(planLineitemId, tabtext);
         }
         else {
             // $("#liActuals ,#liBudget,#liSetup").unbind('click');
             loadAddSetup();
         }
       
         if ($('#btnEditlineItem').hasClass('edit-icon-white') && planLineitemId != '0') { //#2725 changed by komal
             $('#btnEditlineItem').removeClass('edit-icon-white');//Modified for #1318
             $('#btnEditlineItem').addClass('Save-icon-white');
             //$("#errorMessage").css("display", "none");
             //$("#successMessage").css("display", "none");
             $("#txtTitle").removeClass("error");
             $('#hdnLineitemOpt').val('Edit');
             $('#txtTitle').css('display', 'block');
             $('#lblLineitemTitle').css('display', 'none');
         }

         $("#NewLineItem").on("click", function () {
             var returnpara = true;
             var activeTab = $("#InspectTab li.active a").text();
             if (activeTab != null && activeTab != undefined && activeTab != '') {
                 returnpara = SaveAllData(activeTab);
             }
             if (returnpara) {
                 loadInspectPopup(0, "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.LineItem).ToLower()", "Setup", "@Enums.InspectPopupMode.Add.ToString()", '@tacticId', '@RedirectType');
             }
         });

         $('#CloneLineItem').click(function () {
             var activeTab = $("#InspectTab li.active a").text();
             var returnpara = true;
             if (activeTab != null && activeTab != undefined && activeTab != '') {
                 returnpara = SaveAllData(activeTab);
             }
             if (returnpara) {
                 isDataModified = true;
                 var idPlanProgram = $("#hdnPlanLineItemID").val();
                 var Title = $("#lblLineitemTitle").html();
                 $.ajax({
                     type: 'POST',
                     url: '@Url.Content("~/Inspect/Clone")',
                     data: {
                         CloneType: '@Enums.DuplicationModule.LineItem',
                         Id: idPlanProgram,
                         title: Title,
                         CalledFromBudget: '@CalledFromBudget',
                         RequsetedModule: '@RedirectType'
                     },
                     success: function (data) {
                         if (data.IsSuccess != 'undefined' && data.IsSuccess == '#') {
                             window.location = '@Url.Content("~/Login/Index")';
                         }
                         else if (data.IsSuccess) {

                             var currentTab = "Setup";
                             // Commented by Arpita Soni for Ticket #2236 on 06/20/2016
                            @* if ('@RedirectType' == "@Enums.InspectPopupRequestedModules.Budgeting.ToString()") {
                                 currentTab = "Budget";
                             }*@

                             var lineItemId = data.Id;
                             var expandplanLineItemId = data.expand;
                             var planCampaignId = '@campaignId';
                             var planProgramId = '@planProgrameId';
                             var planTacticId = '@tacticId';
                             loadInspectPopup(lineItemId, "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.LineItem).ToLower()", currentTab, "@Enums.InspectPopupMode.ReadOnly.ToString()", 0, '@RedirectType');

                             if ("@Enums.InspectPopupRequestedModules.Budgeting.ToString()" == '@RedirectType') {
                                 $("#hdnBudgetingExpandId").val(expandplanLineItemId);
                                 $("#hdnBudgetingIsSave").val("true");
                             }

                             $("#successMessage").css("display", "block");
                             $("#spanMessageSuccess").empty();
                             $("#spanMessageSuccess").text(data.msg);
                             $("#errorMessage").css("display", "none");
                             return;
                         }
                         else {
                             $("#successMessageViewProgram").slideUp(50);
                             $("#errorMessageEditProgram").slideDown(400);
                             $("#spanMessageEditProgram").empty();
                             $("#spanMessageEditProgram").val(data.msg);
                             return false;
                         }
                     }
                 });
             }
         });

         $("#btnEditlineItem").on("click", function () {
             // Modified by Komal Rawal for #2165 clicking on tabs or button before loading gets complete gives elmah error.
             if ($(this).hasClass('SpanDisable') == false) {
                 isDataModified = true;
                 var activeTab = $("#InspectTab li.active a").text();
                 if ($('#btnEditlineItem').hasClass('edit-icon-white')) {
                     $('#btnEditlineItem').removeClass('edit-icon-white');//Modified for #1318 by Komal Rawal
                     $('#btnEditlineItem').addClass('Save-icon-white');
                     $("#errorMessage").css("display", "none");
                     $("#successMessage").css("display", "none");
                     $("#hdnLineitemOpt").val("Edit");
                     var InspectValue = $("#hdnInspectPopup").val();
                     var tabtext = ($("#li" + InspectValue).children('a').text());
                     if (tabtext == "Setup") {
                         url = '@Url.Content("~/Inspect/LoadEditSetupLineitem/")';
                         $("#divTab").empty();
                         $("#divTab").load(url + '?id=' + PlanLineItemId, function (response, status, xhr) {
                             if (response == '{"serviceUnavailable":"~/Login/ServiceUnavailable"}') {
                                 //// Call function to redirect on service unavailibility.
                                 //// Added By: Maninder Singh Wadhva on 11/24/2014.
                                 //// Ticket: 942 Exception handeling in Gameplan.
                                 window.location = '@Url.Content(Common.RedirectOnServiceUnavailibilityPage)';
                             }
                         });
                     }
                    @* else if (tabtext == "Budget") {
                         url = '@Url.Content("~/Inspect/LoadLineItemBudgetAllocation/")';
                         $("#divTab").empty();
                         $("#divTab").load(url + '?id=' + PlanLineItemId);
                     }*@
                     else if (tabtext == "Actuals") {
                         //// Modified By: Arpita Soni on 1/17/2015.
                         //// Ticket: 1067
                         var hdnTacticStatus = $("#hdnParentTacticStatus").val();
                         var Approvedstatus = "@RevenuePlanner.Helpers.Enums.TacticStatusValues[RevenuePlanner.Helpers.Enums.TacticStatus.Approved.ToString()].ToString()";
                         var Completestatus = "@RevenuePlanner.Helpers.Enums.TacticStatusValues[RevenuePlanner.Helpers.Enums.TacticStatus.Complete.ToString()].ToString()";
                         var InProgressstatus = "@RevenuePlanner.Helpers.Enums.TacticStatusValues[RevenuePlanner.Helpers.Enums.TacticStatus.InProgress.ToString()].ToString()";
                         if ((hdnTacticStatus == null || hdnTacticStatus == '') || (hdnTacticStatus != Approvedstatus && hdnTacticStatus != InProgressstatus && hdnTacticStatus != Completestatus)) {
                             loadReview(PlanLineItemId, TabSetup);
                         }
                         else {
                             loadReview(PlanLineItemId, TabActual);
                         }
                     }

                     //  $("#btnEditlineItem").css("display", "none");
                     $('#txtTitle').css('display', 'block');
                     $('#lblLineitemTitle').css('display', 'none');
                     $("#txtTitle").prop('readonly', false);
                     //  $("#AddForm").css("display", "none");
                     //  $("#divDeleteProgram").css("display", "none");
                     $("#txtTitle").removeClass('error');
                     return false;
                 }
                 else {
                     if (activeTab == TabSetup) {
                         var ReturnParameter = SetupSaveLineitem();
                         if (ReturnParameter == false) {
                             return false;
                         }
                         else {
                             ReloadSavedLineItem();

                         }
                     }

                     else if (activeTab == TabActual) {
                         var hdnTacticStatus = $("#hdnParentTacticStatus").val();
                         var Approvedstatus = "@RevenuePlanner.Helpers.Enums.TacticStatusValues[RevenuePlanner.Helpers.Enums.TacticStatus.Approved.ToString()].ToString()";
                         var Completestatus = "@RevenuePlanner.Helpers.Enums.TacticStatusValues[RevenuePlanner.Helpers.Enums.TacticStatus.Complete.ToString()].ToString()";
                         var InProgressstatus = "@RevenuePlanner.Helpers.Enums.TacticStatusValues[RevenuePlanner.Helpers.Enums.TacticStatus.InProgress.ToString()].ToString()";
                         if (hdnTacticStatus == Approvedstatus || hdnTacticStatus == InProgressstatus || hdnTacticStatus == Completestatus) {
                             var ReturnParameter = SaveLineitemActual();
                         }
                         else {
                             var ReturnParameter = SaveTitle();
                         }
                         if (ReturnParameter == false) {
                             return false;
                         }
                         else {
                             ReloadSavedLineItem();

                         }

                     }

                 }
             }
         });

         //
         //Reload line item for further editing/update zz
         //
         function ReloadSavedLineItem() {
             loadInspectPopup($("#hdnPlanLineItemID").val(), "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.LineItem).ToLower()", "Setup", "@Enums.InspectPopupMode.Add.ToString()", '@tacticId', '@RedirectType');
         }

         $('#AddForm').click(function () {
             if ($('#popupLineitem').css('display') == 'none') {
                 $('#popupLineitem').css('display', 'block')
             }
             else {
                 $('#popupLineitem').css('display', 'none')
             }
         });

         $(document).mouseup(function (e) {
             var popup = $('#popupLineitem');
             var button = $('#AddForm');
             if (!popup.is(e.target) && popup.has(e.target).length === 0 && popup.css('display') == 'block' && !button.is(e.target) && button.has(e.target).length === 0) {
                 $('#popupLineitem').css('display', 'none');
             }
         });

         $("#deleteLineItem").click(function () {

             if (confirm('@Common.objCached.ConfirmationForDeleteLineItem')) {
                 isDataModified = true;
                 var ProgramId = $("#hdnPlanLineItemID").val();
                 var uId = '@Sessions.User.UserId';
                 var arrClosedTaskString = null;
                 if (typeof arrClosedTask != 'undefined') {
                     arrClosedTaskString = arrClosedTask.toString();
                 }
                 $.ajax({
                     type: 'POST',
                     url: '@Url.Content("~/Inspect/DeleteSection")',
                     data: {
                         id: ProgramId
                         , deleteType: '@Enums.DuplicationModule.LineItem'
                              , userGuid: uId
                              , closedTask: arrClosedTaskString
                              , calledFromBudget: '@CalledFromBudget'
                                 , isIndex: '@isIndex'
                                 , redirectType: '@RedirectTypeMode'
                     },
                     success: function (data) {
                         IslineItemDelete = true;  //Added By Maitri for #2040 Observation
                         if (data.returnURL != 'undefined' && data.returnURL == '#') {
                             window.location = '@Url.Content("~/Login/Index")';
                         }
                         else {
                             if (data.IsSuccess && data.opt != 'undefined') {
                                 if (data.opt == '@Enums.InspectPopupRequestedModules.Index.ToString()') {

                                     // Added by Arpita Soni for Ticket #2354 on 07/14/2016
                                     RemoveAllHoneyCombData();

                                     SaveMessageOnParent(data.msg);
                                     if ($('#IsGridView').val().toLowerCase() == "true") { //Modified by Komal Rawal for 2013 Home/Plan Layout changes
                                         LoadPlanGrid();
                                         gridSearchFlag = 0;
                                     }
                                     else {
                                         RefreshCurrentTab();
                                     }
                                     addDefaultModalPopupBackgroungColor();
                                     $("#modal-container-186470").addClass("transition-close");
                                     $("#modal-container-186470").removeClass("transition_y");
                                     $('body').removeClass('bodyOverflow');
                                 }
                                 else {
                                     if ("@Enums.InspectPopupRequestedModules.Budgeting.ToString()" == data.opt) {
                                         $("#hdnBudgetingExpandId").val(data.expand);
                                         $("#hdnBudgetingIsSave").val("true");
                                         $("#hdnBudgetingIsDelete").val("true");
                                         $(".close-x-big-icon").trigger("click");
                                     }
                                     else {
                                         window.location.href = data.redirect;
                                     }

                                     return;
                                 }
                             }
                             else {
                                 $("#successMessageViewProgram").slideUp(50);
                                 $("#errorMessageEditProgram").slideDown(400);
                                 $("#spanMessageEditProgram").empty();
                                 $("#spanMessageEditProgram").val(data.msg);
                                 return false;
                             }
                         }
                     }
                 });
             }
         });
     });



    //Added By komal rawal for saving the Tactictitle in actual tab of Edit Mode
    function SaveTitle() {
        var returnparameter = false;
        var planLineitemId = $("#hdnPlanLineItemID").val();
        var _lineitemtitle = htmlEncode($('#txtTitle').val());
        //  var isotherlineitem = $("#hdnIsOtherLineItem").val();
        @* if (isotherlineitem.toLowerCase() == 'false') {
              if ($('#txtTitle').val().toString().toLowerCase().trim() == '@Common.DefaultLineItemTitle.ToLower()' && $('#lblLineitemTitle').css('display') != 'block') {
                  var errorMsg = "You can't use 'Other' as title.";
                  ShowError(errorMsg);
                  return false;
              }
          }*@
        var iserror = false;

        if (_lineitemtitle == '') {
            $('#txtTitle').addClass("error");
            iserror = true;
        }
        else {
            $('#txtTitle').removeClass("error");
        }

        if (iserror) {
            ShowError("@RevenuePlanner.Helpers.Common.objCached.ValidateForEmptyField");
            $('#InspectTab').removeClass('SpanDisable');
            return false;
        }
        $.ajax({
            async: false,
            type: 'POST',
            url: '@Url.Content("~/Inspect/SaveTitle/")',
            data: { title: _lineitemtitle, Id: planLineitemId, ActivePopup: "LineItem" },
            success: function (data) {
                if (!data.IsDuplicate) {
                    var requestedModule = $("#hdnRedirectType").val();
                    $('#lblLineitemTitle').text(_lineitemtitle);
                    $("#successMessage").css("display", "block");
                    $("#spanMessageSuccess").empty();
                    $("#spanMessageSuccess").text(data.msg);
                    $("#errorMessage").css("display", "none");
                    //Comment By Bhavesh Date: 6-jan-2015, Ticket #1793
                    //RefreshCurrentTab(requestedModule, data.planCampaignID, data.planProgramID, data.planTacticID, 0, 0);
                    returnparameter = true
                }
                else {
                    ShowError(data.errormsg);
                    returnparameter = false;
                }
            }
        });
        return returnparameter;
    }
    //End





</script>

