@model RevenuePlanner.Models.Plan_Campaign_Program_Tactic_LineItemModel
@using RevenuePlanner.Helpers
@{

    string campaignTitle = Convert.ToString(ViewBag.CampaignTitle);
    string programTitle = Convert.ToString(ViewBag.ProgramTitle);
    string tacticTitle = Convert.ToString(ViewBag.TacticTitle);
    string owner = Convert.ToString(ViewBag.Owner);
    bool isOtherLineitem = false;
    if (Model != null)
    {
        isOtherLineitem = Model.IsOtherLineItem;
    }

    //// Flag to indicate unavailability of web service.
    //// Added By: Maninder Singh Wadhva on 11/24/2014.
    //// Ticket: 942 Exception handeling in Gameplan.
    bool isServiceUnavailable = Convert.ToBoolean(ViewBag.IsServiceUnavailable);
}
<link href="@Url.Content("~/Content/css/DHTMLX/dhtmlxtreegrid2_min.css")" rel="stylesheet" type="text/css" />
<script type="text/javascript" src="@Url.Content("~/Scripts/js/DHTMLX/dhtmlxTreeGrid.js")">
</script>
<script src="~/Scripts/js/bootstrap-datepicker.js"></script>
<style type="text/css">
    #btnCancel {
        color: gray;
        margin-top: 6px;
    }
    #divPartial .simpleSelectBox .sbHolder {
            background: url(@Url.Content("~/Content/images/button-arrow.png")) no-repeat scroll right 8px center #dff0f8 !important;
            box-shadow: 1px -8px 13px #dff0f8 inset, 0 1px 2px #ededed;
            margin-bottom: 0;
            z-index: auto;
    }
    #divPartial .ui-multiselect {
         background: none repeat scroll 0 0 #dff0f8 !important;
     }
    #divPartial .sbToggle {
        border-top: 4px solid #6d6d6d !important;
    }
    #divPartial .sbHolder {
        background-color: #dff0f8 !important;
        background-image:none;
    }
     #multipleselect_LineItemTypeId {
        left: 0 !important;
        top: 20px !important;
        min-width:205px;
    }

    .finance_mapping div.gridbox_dhx_skyblue.gridbox table.obj tr.odd_dhx_skyblue
    {
    background: #fff !important;
    border:none !important  ;
    }
    .finance_mapping div.gridbox_dhx_skyblue.gridbox table.obj tr td.cellselected, div.gridbox_dhx_skyblue.gridbox table.obj tr.rowselected {
     background: #fff !important;
    }
  .finance_mapping div.gridbox_dhx_skyblue.gridbox table.obj tr.rowselected td {
     background: #fff !important;
    }
   
   .finance_mapping div.gridbox {
        height : 100% ! important;
    }


    #CustomHtmlHelperfieldforMapping table {
    border-collapse: inherit !important ;
}
    /*by bheru 19-10-2015*/
    .finance_mapping  div.gridbox_dhx_skyblue.gridbox
    {
    border-top:1px solid #e7e7e7 !important;
    border-left:1px solid #e7e7e7 !important;
    border-right:1px solid #eeeeee !important;
    border-radius:4px!important ;
    }
  .finance_mapping  div.gridbox_dhx_skyblue.gridbox table.obj tr td
    {
      border-bottom: 1px solid #dfdfdf;
     border-left: 0 none;
     border-top:none;
     border-right: 0 none;
    font-family: source_sans_prolight,Arial,sans-serif;
    color:#000;
    font-size:14px;
    padding-left: 20px;
    height: 36px;
    }
    .finance_mapping   .treegrid_cell > span {
  padding-left: 7px;
  vertical-align: middle;
}
   .finance_mapping div.gridbox_dhx_skyblue.gridbox table.obj tr td input[type="text"] {
    background-color: #f2f2f2;
    border: 1px solid #d1d1d1;
    color: #6D6D6D;
    box-shadow: none;
    min-height: auto !important;
    width: 38px;
    text-align: center;
    margin-right: 12px;
    padding: 0;
    margin: 0 !important;
    height: 23px;
}
   .finance_mapping div.gridbox_dhx_skyblue.gridbox .ftr, div.gridbox_dhx_skyblue.gridbox .xhdr, div.gridbox_dhx_skyblue table.hdr tr td {

  color: #000000;
  font-family: source_sans_prosemibold,Arial,sans-serif;
  font-size: 14px;
  overflow: visible;
  padding-left: 40px;
}
   div.gridbox_dhx_skyblue.gridbox .xhdr
    {
    padding-left:0px;
    height:auto !important;
    }
   .finance_mapping  div.gridbox_dhx_skyblue table.hdr tr td:last-child
    {
        padding-left:0;

    }
    div.gridbox_dhx_skyblue table.hdr tr td
    {
    border-bottom: 1px solid #dfdfdf;
     border-left: 0 none;
     border-top:none;
     border-right: 0 none;
    }
  .finance_mapping  div.gridbox_dhx_skyblue.gridbox table.hdr td div.hdrcell
    {
     color:#000000;
    padding-left: 8px !important;
   text-align: left;
    font-weight: normal;
}
    .finance_mapping
    {
    border-bottom: medium none;
    }
    div.gridbox.gridbox_dhx_skyblue table.hdr td
    {
         border-bottom: 1px solid #dfdfdf;
     border-left: 0 none;
     border-top:none;
     border-right: 0 none;

    }
    .finance_mapping div.gridbox_dhx_skyblue table.hdr tr td
    {
    height:25px;
    vertical-align: middle;
    }
    .finance_mapping div.gridbox.gridbox_dhx_skyblue table.obj tr td .treegrid_cell img:nth-child(2)
    {
    display:none\9;
    }
   _:-ms-input-placeholder, :root   .finance_mapping div.gridbox.gridbox_dhx_skyblue table.obj tr td .treegrid_cell img:nth-child(2)
    {
      display:none  ;
    }
    .finance_mapping div.gridbox.gridbox_dhx_skyblue table.obj tr td span input
    {
     background-color: transparent\9;
         border: none\9;
    }
   _:-ms-input-placeholder, :root .finance_mapping div.gridbox.gridbox_dhx_skyblue table.obj tr td span input
    {
        background-color: transparent;
         border: none;
    }
    .finance_mapping div.gridbox_dhx_skyblue.gridbox table.hdr td div.hdrcell
    {
    padding-left:0px; 
    font-weight: 600;
    }

  .finance_mapping  div.gridbox_dhx_skyblue.gridbox table.obj tr.odd_dhx_skyblue.rowselected td, div.gridbox_dhx_skyblue.gridbox table.obj tr.rowselected td
    {
    border-top:none !important;
     border-right: none !important;
    }
    /*by bheru 19-10-2015*/
   
</style>
@using (Html.BeginForm())
{

    @Html.HiddenFor(model => model.PlanLineItemId, new { id = "PlanLineItemId" })
    @Html.HiddenFor(model => model.PlanTacticId, new { id = "PlanTacticId" })
    @Html.HiddenFor(model => model.IsOtherLineItem, new { id = "hdnIsOtherLineItem" })
    @Html.HiddenFor(model => model.Description, new { id = "hdnDescription" })
    <div class="inspect-column-parent source-sans-proregular remove-bottom-border inspect-column-parent-reformatting inspect_attribute_parent" style="margin-bottom:0px;">

        <div class="span6" id="inspect-modal-left-column1">
            <p>@Html.Raw("Parent Campaign")</p>
            @Html.TextBox("txtCamapignTitle", HttpUtility.HtmlDecode(campaignTitle), new { @class = "input-small truncate", style = "background:#F2F2F2;", @readonly = "true", title = campaignTitle })
            <p>@Html.Raw("Parent Program")</p>
            @Html.TextBox("txtProgramTitle", HttpUtility.HtmlDecode(programTitle), new { @class = "input-small truncate", style = "background:#F2F2F2;", @readonly = "true", title = programTitle })

            <p>@Html.Raw("Description")</p>
            @Html.TextArea("Description", Model.Description, new { id = "txtDescription", @class = "span12 text-area-size input-setup", style = "height:92px;" })     @*Modified by Viral Kadiya on 11/15/2014 to resolve issue for PL ticket #794*@
            <div style="clear: both; width: 250%;">
                <label style="color: #808080" id="last-synced" class="pull-left">@ViewBag.LastSync</label>
            </div>
        </div>
        <div class="span3 no_margin_top" id="inspect-modal-left-column2" style="margin-left: 10px;">
            <p>@Html.Raw("Parent Tactic")</p>
            @Html.TextBox("txtTacticTitle", HttpUtility.HtmlDecode(tacticTitle), new { @class = "input-small truncate", style = "background:#F2F2F2;", @readonly = "true", title = tacticTitle })
            @if (!isOtherLineitem)
            {
                <p id="lblType">Type <span class="required-asterisk">*</span></p>
                <span style="min-width: 100%; position: relative;display:block;">
                    @Html.DropDownListFor(model => model.LineItemTypeId, new SelectList((System.Collections.IEnumerable)ViewBag.lineItemTypes, "LineItemTypeId", "Title"), "Please Select", new { @class = "ddlStyle resubmission hide", require = "true", label = "Type" })
                </span>
            }


        </div>
        <div class="span3 review_no_padding" id="inspect-modal-left-column3">
            <p>@Html.Raw("Owner")</p>
            @Html.TextBox("txtOwner", owner, new { @class = "span12 input-small truncate", style = "background:#F2F2F2;", @readonly = "true" })
            
            
            @if (!isOtherLineitem)
            {
                <p>@Html.Raw("Line Item Cost")</p>
                @Html.TextBoxFor(model => model.Cost, new { @class = "span12 input-small currency_dollar truncate input-setup", id = "txtLineItemCost" });
            }
            else
            {
                <p>@Html.Raw("Line Item Cost")</p>
                @Html.TextBoxFor(model => model.Cost, new { @class = "span12 input-small currency_dollar truncate", id = "txtLineItemCost", @readonly = "true" });
            }
        </div>
    </div>
    
    <ul id="CustomAttributeheading" class="nav nav-tabs new-margin padding-bottom10 clear border-bottom-div">
        <li class="pull-left">
            <h3 class="modal-popup-innertitle source-sans-proregular">Attributes</h3>
        </li>
    </ul>

    <div id="CustomHtmlHelperfield" class="inspect-column-parent source-sans-proregular remove-bottom-border margin-bottom0 inspect_attribute_parent margin-left">
        @HtmlHelpers.GenerateCustomFieldsForInspectPopup(Model.PlanLineItemId, Enums.EntityType.Lineitem.ToString().ToLower(), 0, Enums.InspectPopupMode.Edit.ToString())
    </div>


    <ul id="FinanceMappingHeading" class="nav nav-tabs new-margin padding-bottom10 clear border-bottom-div">
        <li class="pull-left">
            <h3 class="modal-popup-innertitle source-sans-proregular">Finance Mapping</h3>
        </li>
    </ul>

    <div id="CustomHtmlHelperfieldforMapping" class="inspect-column-parent source-sans-proregular remove-bottom-border margin-bottom0 inspect_attribute_parent finance_mapping margin-left">
        @HtmlHelpers.GenerateMappingFieldsForInspectPopup(Model.PlanLineItemId, Enums.InspectPopupMode.Edit.ToString())
    </div>
    @*<div style="width: 100%; clear: both" class="wraper-btns cf border-top-div ">
            <div class="span2 btn-save" style="width: 80px;">
                <button id="save_LineItem" class="btn btn-blue text-shadow-blue source-sans-proregular margin-top23 popup_button_save" type="button">Save </button>
            </div>
            <div class="span2">
                <button id="btnCancel" class="close-form btn-link source-sans-proregular popup_button_cancel" style="float: left; margin-top: 30px !important" type="button">Cancel</button>
            </div>
        </div>*@

}
<script type="text/javascript">
    var TreeViewDdl;
    var ListOfItmeCheck= {
        Ids: [],
        values:[]
    };

    var Weights= {
        ChkId: [],
        txtId: [],
        values:[]
    };
    var totalWeightage = 0;
    var ValueChanged = false;
    //// Function to redirect to login page on unavailability of web service.
    //// Added By: Maninder Singh Wadhva on 11/24/2014.
    //// Ticket: 942 Exception handeling in Gameplan.
    function redirectOnServiceUnavailibility() {
        if ('@Html.Raw(Json.Encode(isServiceUnavailable))' == 'true') {
            window.location = '@Url.Content(Common.RedirectOnServiceUnavailibilityPage)';
        }
    }
   
    //Added BY Komal Rawal for #1617
    $('#dropdown_new_btn_FieldMapping').click(function () {
        if($(this).next().css("display") == "none")
        {
            //$(this).next().css("width","auto");
            //  $(this).next().addClass('dropdownAddborder');
            var dropdown_field_top1 = $('#dropdown_new_btn_FieldMapping').offset().top;
            var windownheight = $(window).height();
            if (dropdown_field_top1 >= (windownheight - 200)) { $('#treeviewddl').addClass('fieldmapping-dropdown');}
            
            $(this).next().css("display","block");
            //LoadBudgetDropdown();
        }
        else
        {
            //$(this).next().css("width","0px");
            $(this).next().css("display","none");
        }
        
    });
    //var DropdownTop = 0;
    //$(".pop-body-wraper").scroll(function () {

    //    var DropdownToPos = $(this).scrollTop();
    //    if (DropdownToPos > DropdownTop) {
    //        $('#treeviewddl').removeClass('fieldmapping-dropdown');
    //    } else {
    //        $('#treeviewddl').addClass('fieldmapping-dropdown')
    //    }
    //    DropdownTop = DropdownToPos;
    //});
    function LoadBudgetDropdown()
    {
        var GridData;
        TreeViewDdl = new dhtmlXGridObject('treeviewddl');
        $.ajax({
            dataType: 'json',
            url: '@Url.Content("~/Inspect/LoadBudgetDropdown/")',
            data: {
                PlanLineItemID : @Model.PlanLineItemId,
            },
            async:false,
            success: function (data) {
                GridData=data.data;
                var imgpath = '@Url.Content("~/codebase/imgs/")';
                TreeViewDdl.setImagePath(imgpath);
                TreeViewDdl.setHeader("Item Name,Weight%");
                TreeViewDdl.enableAutoHeight(true,400,true);
                TreeViewDdl.enableAutoWidth(true);
                TreeViewDdl.enableTreeCellEdit(false)
                TreeViewDdl.setImageSize(1, 1);
                TreeViewDdl.setColTypes("tree,ro");
                TreeViewDdl.setInitWidths("200,100");
                TreeViewDdl.init();
             
             //  TreeViewDdl.insertColumn(1, '', 'ro');
                //TreeViewDdl.setSkin("");
                TreeViewDdl.parse(GridData, "json");
                TreeViewDdl.attachEvent("onOpenEnd", function (id,state) {
                    TreeViewDdl.adjustColumnSize(0);
                    var SubItems = {
                        values:[]
                    };

                    var items = TreeViewDdl.getSubItems(id).split(',');
                    SubItems.values = items ;
                    for(i= 0; i< SubItems.values.length-1;i++)
                    {
                        var cell = TreeViewDdl.cells(SubItems.values[i],0);
                        var hascheckbox = cell.getInput();
                        //alert(hascheckbox);
                        if(hascheckbox != undefined)
                        {


                            TreeViewDdl.forEachCell(SubItems.values[i],function(cellobj,ind){
                                TreeViewDdl.setCellTextStyle(SubItems.values[i],ind,"border:none;");
                            });
                        }
                    }


                    for(var i=0;i<ListOfItmeCheck.Ids.length;i++)
                    {
                     
                        $('#'+Weights.txtId[i]).val(Weights.values[i]);
                        var optionId = ListOfItmeCheck.Ids[i];
                        if (totalWeightage != 100) {
                            $('#'+ 'wt_'+ ListOfItmeCheck.Ids[i]).addClass('error');
                        }
                        else {
                            if ($('#'+ 'wt_'+ ListOfItmeCheck.Ids[i]).hasClass('error')) {
                                $('#'+ 'wt_'+ ListOfItmeCheck.Ids[i]).removeClass('error')
                            }
                        }
                    }

                });

            }
        });

        TreeViewDdl.expandAll();

        if(@Model.PlanLineItemId != 0 && !ValueChanged)
        {
            ListOfItmeCheck= {
                Ids: [],
                values:[]
            };
            Weights= {
                ChkId: [],
                txtId: [],
                values:[]
            };
            totalWeightage = 0;
            $('#treeviewddl').find('input:checkbox:checked').each(function () {
                ListOfItmeCheck.Ids.push($(this).attr('id'));
                ListOfItmeCheck.values.push($(this).attr('title'));
                totalWeightage += parseInt($('#'+ 'wt_'+ $(this).attr('id')).val());
                Weights.values.push($('#'+ 'wt_'+ $(this).attr('id')).val());
                Weights.ChkId.push($(this).attr('id'));
                Weights.txtId.push('wt_'+ $(this).attr('id'));
                $('#'+ 'wt_'+ $(this).attr('id')).addClass('mappingtextboxblue');
                $('#'+$(this).attr('id')).addClass('Spancheck');
            });
            if(totalWeightage != 100)
            {
                DivideEqualInputValueForMapping();
            }

        }
        for(var i=0;i<Weights.txtId.length;i++)
        {
            $("#"+Weights.txtId[i]).val(Weights.values[i]);
            $("#"+Weights.ChkId[i]).attr('checked','checked');
        }

        $('#treeviewddl').find('span').on("click", function (e) {
            var id = $(this).find('input').attr('id');
        ValueChanged = true;
        $('.span3').find('#dropdown_new_btn_FieldMapping p:first').text("");

            if($('#'+id).hasClass('Spancheck'))
            {
                $(this).find('input').removeAttr('checked');
                $('#'+id).removeClass('Spancheck');
            }
            else
            {
                $('#'+id).addClass('Spancheck');
                $(this).find('input').attr('checked','checked');

            }

            if($('#'+id).attr('checked')=='checked')
            {
                ListOfItmeCheck.Ids.push(id);
                ListOfItmeCheck.values.push($('#'+id).attr('title'));
            DivideEqualInputValueForMapping();
                $('#'+ 'wt_'+ id).addClass('mappingtextboxblue');

        }
        else{

                var index = ListOfItmeCheck.Ids.indexOf(id);
            if (index >= 0) {
                ListOfItmeCheck.Ids.splice( index, 1 );
                ListOfItmeCheck.values.splice( index, 1 );
                    $('#'+ 'wt_'+ id).val("");
                    if ($('#'+ 'wt_'+ id).hasClass('error')) {
                        $('#'+ 'wt_'+ id).removeClass('error')
                    }
                    if ($('#'+ 'wt_'+ id).hasClass('mappingtextboxblue')) {
                        $('#'+ 'wt_'+ id).removeClass('mappingtextboxblue')
                }
                DivideEqualInputValueForMapping();
            }
        }
        var Selectedvalue = "";
        for(var i=0;i<ListOfItmeCheck.Ids.length;i++)
        {
            Selectedvalue += ListOfItmeCheck.values[i]+', ';
        }

        if (Selectedvalue.indexOf(',') > 0) {
            Selectedvalue = Selectedvalue.slice(0, -2);
            $('.span3').find('#dropdown_new_btn_FieldMapping p:first').text(Selectedvalue);
            $('.span3').find('#dropdown_new_btn_FieldMapping p:first').attr('title', Selectedvalue);
        }
        else {
            $('.span3').find('#dropdown_new_btn_FieldMapping p:first').text('Please Select');
        }

        });

        TreeViewDdl.collapseAll();

        for(var i=0;i<ListOfItmeCheck.Ids.length;i++)
        {
            var optionId = ListOfItmeCheck.Ids[i];
            var ParentID =  TreeViewDdl.getParentId(optionId);
            TreeViewDdl.openItem(ParentID)
        }


    }


    //function ddlcheckboxclick(items)
    //{
    //    ValueChanged = true;
    //    $('.span3').find('#dropdown_new_btn_FieldMapping p:first').text("");
    //    if(items.checked)
    //    {
    //        ListOfItmeCheck.Ids.push(items.id);
    //        ListOfItmeCheck.values.push(items.title);
    //        DivideEqualInputValueForMapping();
    //        $('#'+ 'wt_'+ items.id).addClass('mappingtextboxblue');
    //    }
    //    else{
    //        var index = ListOfItmeCheck.Ids.indexOf(items.id);
    //        if (index >= 0) {
    //            ListOfItmeCheck.Ids.splice( index, 1 );
    //            ListOfItmeCheck.values.splice( index, 1 );
    //            $('#'+ 'wt_'+ items.id).val("");
    //            if ($('#'+ 'wt_'+ items.id).hasClass('error')) {
    //                $('#'+ 'wt_'+ items.id).removeClass('error')
    //            }
    //            if ($('#'+ 'wt_'+ items.id).hasClass('mappingtextboxblue')) {
    //                $('#'+ 'wt_'+ items.id).removeClass('mappingtextboxblue')
    //            }
    //            DivideEqualInputValueForMapping();
    //        }
    //    }
    //    var Selectedvalue = "";
    //    for(var i=0;i<ListOfItmeCheck.Ids.length;i++)
    //    {
    //        Selectedvalue += ListOfItmeCheck.values[i]+', ';
    //    }

    //    if (Selectedvalue.indexOf(',') > 0) {
    //        Selectedvalue = Selectedvalue.slice(0, -2);
    //        $('.span3').find('#dropdown_new_btn_FieldMapping p:first').text(Selectedvalue);
    //        $('.span3').find('#dropdown_new_btn_FieldMapping p:first').attr('title', Selectedvalue);
    //    }
    //    else {
    //        $('.span3').find('#dropdown_new_btn_FieldMapping p:first').text('Please Select');
    //    }

    //}

    $('#treeviewddl').find('input[type=text]').live('keydown', function (e) {
        // Allow: backspace, delete, tab, escape, enter and .
        if ($.inArray(e.keyCode, [8, 9, 27, 13, 46]) !== -1 ||
            // Allow: Ctrl+A
            (e.keyCode == 65 && e.ctrlKey === true) ||
            // Allow: home, end, left, right
            (e.keyCode >= 35 && e.keyCode <= 39)) {
            // let it happen, don't do anything
            return;
        }
        // Ensure that it is a number and stop the keypress
        if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
            e.preventDefault();
        }
    });
    $('#treeviewddl').find('input[type=text]').live('change', function (e) {
        // Allow: backspace, delete, tab, escape, enter and .
        if ($.inArray(e.keyCode, [8, 9, 27, 13, 46]) !== -1 ||
            // Allow: Ctrl+A
            (e.keyCode == 65 && e.ctrlKey === true) ||
            // Allow: home, end, left, right
            (e.keyCode >= 35 && e.keyCode <= 39)) {
            // let it happen, don't do anything
            return;
        }
        // Ensure that it is a number and stop the keypress
        if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
            e.preventDefault();
        }
    });

    $('#treeviewddl').find('input[type=text]').live("keyup", function(event) {
        ValueChanged = true;
        totalWeightage=0;
        var inputText = $(this);
        var Code = inputText.attr('id').toString().split('_')[1].toString();
        var isAllColumnInputBlank = true;

        for(var i=0;i<ListOfItmeCheck.Ids.length;i++)
        {
            var optionId = ListOfItmeCheck.Ids[i];
            isAllColumnInputBlank = false;
            var index=Weights.ChkId.indexOf(Code);
            if(index>=0)
            {
                Weights.values[index]= parseFloat(inputText.val());
            }

            totalWeightage += parseFloat(Weights.values[i]);
        }

        for(var i=0;i<ListOfItmeCheck.Ids.length;i++)
        {
            var optionId = ListOfItmeCheck.Ids[i];
            if (totalWeightage != 100 && !isAllColumnInputBlank) {
                $('#'+ 'wt_'+ ListOfItmeCheck.Ids[i]).addClass('error');
            }
            else {
                if ($('#'+ 'wt_'+ ListOfItmeCheck.Ids[i]).hasClass('error')) {
                    $('#'+ 'wt_'+ ListOfItmeCheck.Ids[i]).removeClass('error')
                }
            }
        }

    });

    function DivideEqualInputValueForMapping() {
        ValueChanged = true;
        Weights= {
            ChkId: [],
            txtId: [],
            values:[]
        };
        totalWeightage=0;
        var checkedCheckbox = ListOfItmeCheck.Ids.length;
        var inputValues = parseInt(100 / checkedCheckbox);
        var residual = parseInt(100 % checkedCheckbox);
        var checkedResidualDiff = checkedCheckbox - residual;
        var res_counter = 0;
        for(var i=0;i<ListOfItmeCheck.Ids.length;i++)
        {
            res_counter += 1;
            var index = ListOfItmeCheck.Ids.indexOf(ListOfItmeCheck.Ids[i]);
            if (index >= 0) {
                Weights.ChkId.push(ListOfItmeCheck.Ids[i]);
                Weights.txtId.push('wt_'+ ListOfItmeCheck.Ids[i]);
                if (res_counter <= checkedResidualDiff) {
                    Weights.values[i]=(inputValues.toString());
                    $("#"+Weights.txtId[i]).val((inputValues.toString()));
                    $("#"+Weights.txtId[i]).removeClass('error');
                }else{
                    Weights.values[i]=((inputValues + 1).toString());
                    $("#"+Weights.txtId[i]).val(((inputValues + 1).toString()));
                    $("#"+Weights.txtId[i]).removeClass('error');
                }
            }
            else{
                Weights.ChkId.splice( index, 1 );
                Weights.txtId.splice( index, 1 );
                Weights.values.splice( index, 1 );
            }
            totalWeightage += parseFloat(Weights.values[i]);
        };

    }



    //End

    $(document).ready(function () {
        LoadBudgetDropdown();
        $(document).click(function(){
            $("#treeviewddl").css("display","none");
        });
        $('#dropdown_new_btn_FieldMapping').on('click', function (e) {
            e.stopPropagation();
        });
        //// Call function to redirect on service unavailibility.
        //// Added By: Maninder Singh Wadhva on 11/24/2014.
        //// Ticket: 942 Exception handeling in Gameplan.
        redirectOnServiceUnavailibility();

        $("#successMessageViewLineItem").slideUp(50);
        $("#errorMessageEditLineitem").slideUp(50);
        $('.currency_dollar').priceFormat({ prefix: '$', centsSeparator: '', thousandsSeparator: ',', centsLimit: 0 });
        //$(".simpleSelectBox select").selectbox();
        $('#LineItemTypeId').multiselect({
            multiple: false,
            noneSelectedText: "Please Select",
            selectedList: 1,
            CustomName: '@Common.CustomTitle'
        }).multiselectfilter();

        $('.dropdown_new_btn').each(function () {
            $(this).multiselectWeight(
            );
            var dropdowntop = $('.dropdown_new_btn').offset().top;
            var windownheight = $(window).height();
            if (dropdowntop >= (windownheight - 300)) { $('.dropdown-wrapper').addClass('dropup') }
        });


        var DropdownTop = 0;
        $( ".pop-body-wraper" ).scroll(function() {

            //var DropdownToPos = $(this).scrollTop();
            //if (DropdownToPos > DropdownTop) {
            //    $('.dropdown-wrapper').removeClass('dropup');
            //} else {
            //    $('.dropdown-wrapper').addClass('dropup')
            //}
            //DropdownTop = DropdownToPos;
            var scrollTop = $(this).scrollTop();
            $('.dropdown_new_btn').click(function () {
                //$(this).each(function () {
                // alert('hi3');
                // get the top offset of the dropdown (distance from top of the page)
                var dropdown_div = $(this).next('.dropdown-wrapper');
                //dropdown_div.css('cssText', 'display: block !important');
                //var dropdown_height = dropdown_div.height();
                var topOffset = dropdown_div.offset().top;
                // calculate the dropdown offset relative to window position
                var relativeOffset = topOffset - scrollTop;
                // get the window height
                var windowHeight = $('.pop-body-wraper').height();
                // if the relative offset is greater than half the window height,
                // reverse the dropdown.
                if (relativeOffset > windowHeight / 2) {
                    //alert('5');
                    dropdown_div.addClass("dropup");
                }
                else {
                    //alert('6');
                    dropdown_div.removeClass("dropup");
                }
            });
            //===== For Design Purpouse ======
            //if(dropdowntop >= (windownheight - 200)) { 
            //    $('.dropdown-wrapper').removeClass('dropup');
            //}
            //elseif (dropdowntop >= (windownheight - 300)) {
            //    $('.dropdown-wrapper').addClass('dropup')
            //}
            //var dropdowntop = $('.dropdown_new_btn').offset().top;
            //var windownheight = $(window).height();
            //if (dropdowntop >= (windownheight - 186)) {
            //    alert('test1');
            //    $('.dropdown-wrapper').removeClass('dropup');
            //} else if (dropdowntop >= (windownheight - 300)) {
            //    alert('test2');
            //    $('.dropdown-wrapper').addClass('dropup')
            //} 
            
        });

      

        $('#LineItemTypeId').next().css('width', '95%');
        $('#LineItemTypeId').next().css('min-height', '30px');

        var spanLineItemType = $('#multipleselect_LineItemTypeId');
        $('#btnMultiselect_LineItemTypeId').after(spanLineItemType);

        if ('@isOtherLineitem.ToString().ToLower()' == 'true') {
            $("#lblType").css("display", "none");
            $("#ddlTypeArea").css("display", "none");
            //$('#txtLineItemCost').attr("readonly", "true");
        //    $("#lblLineitemTitle").css('display', 'block');
        //    $("#txtTitle").css('display', 'none');
        }
        //Start - Added by Viral Kadiya on 17/11/2014 to resolve PL ticket #947.
        $('.input-setup').addClass('light-blue-background');
        $('.ddlStyle .ui-multiselect.ui-widget.ui-state-default.ui-corner-all').addClass('light-blue-background');
        //End - Added by Viral Kadiya on 17/11/2014 to resolve PL ticket #947.
        // LoadBudgetDropdown();
        //$('.dropdown_new_btn').click();
        //$("#treeviewddl").css("width","0px");
        //$("#treeviewddl").css("display","none");

    });


    //<--- End Document.ready event  --->

    $("#btnCancel").click(function () {
        if ($('#PlanLineItemId').val() != '0') {
            CancelEvent();
            $("#successMessageViewLineItem").slideUp(50);
            $("#errorMessageEditLineitem").slideUp(50);
            $('#txtTitle').val($('#lblLineitemTitle').text());
        }
        else {
            $('.close-x-big-icon').trigger('click');
        }
    });

    function CancelEvent() {
        $("#hdnLineitemOpt").val("View");
        loadReview('@Model.PlanLineItemId', "Setup");
        $("#btnEditlineItem").css("display", "block");
        $("#AddForm").css("display", "block");
        $("#divDeleteProgram").css("display", "block");
        $('#txtTitle').css('display', 'none');
        $('#lblLineitemTitle').css('display', 'block');
        $("#lblLineitemTitle").removeAttr("style");
    }
    $(".alert").find(".close").on("click", function (e) {
        e.stopPropagation();
        e.preventDefault();
        $(this).closest(".alert").slideUp(300);/*SlideUp value change 400 to 300 by Mitesh Vaishnav on 04 july 2014*/
    });
    function ShowError(value) {
      
        $("#modal-container-186470").scrollTop(0);
        $("#successMessageViewLineItem").slideUp(400);
        $("#spanSuccessMessageViewLineitem").empty();
        $("#errorMessageEditLineitem").slideDown(400);
        $("#spanMessageEditLineitem").empty();
        $("#spanMessageEditLineitem").html(value);
    }
    $("#txtLineItemCost").keyup(function () {
        var LineItemBudgetValue = ReplaceCC($("#txtLineItemCost").val());
        if (LineItemBudgetValue == '' || typeof LineItemBudgetValue == 'undefined') {
            $("#txtLineItemCost").val('$0')
        }
    });
    function SetupSaveLineitem() {

        var returnparameter = false;
        //  $("#save_LineItem").click(function () {
        var iserror = false;
        var lineItemTitle = htmlEncode($('#txtTitle').val());

      @*  //#1642 Added By Bhavesh 09-Oct-2015
      if ($('#txtTitle').val().toString().toLowerCase().trim() == '@Common.DefaultLineItemTitle.ToLower()' && $('#lblLineitemTitle').css('display') != 'block') {
            var errorMsg = "You can't use 'Other' as title.";
            ShowError(errorMsg);
            return false;
        }*@
        // //#1642 Added By Bhavesh 09-Oct-2015    
        //if ($('#txtTitle').val().toString().toLowerCase().trim() != 'Common.DefaultLineItemTitle.ToLower()') {
            $('form').find('input[type=text], select, textarea').each(function () {
                if ($(this).attr('require') == 'true') {
                    if ($(this).val() == '') {
                        $(this).addClass("error");
                        iserror = true;
                    }
                    else {
                        $(this).removeClass("error");
                    }
                }
            });

            //$('form').find('.sbSelector').each(function () {
            //    if ($(this).parent().prev().attr('require') == 'true') {
            //        if ($(this).text() == 'Please Select') {
            //            $(this).addClass("error");
            //            iserror = true;
            //        }
            //        else {
            //            $(this).removeClass("error");
            //        }
            //    }
            //});
            if (!($("#hdnInspectMode").val() == '@Enums.InspectPopupMode.Add.ToString()')) {
                var LineItemTypeValue = $('#LineItemTypeId').val();
                if (LineItemTypeValue == "") {
                    $('#btnMultiselect_LineItemTypeId').addClass("error");
                }
                else {
                    $('#btnMultiselect_LineItemTypeId').removeClass("error");
                }
            }
   //     }

        if (iserror) {
            ShowError("@RevenuePlanner.Helpers.Common.objCached.ValidateForEmptyField");
            return false;
        }

        //Added BY Komal Rawal for #1617
        
        _FieldMappingValues = [];
        if(ListOfItmeCheck.Ids.length != 0)
        {
            for(var i=0;i<ListOfItmeCheck.Ids.length;i++)
            {
                _FieldMappingValues.push({
                    Id: ListOfItmeCheck.Ids[i],
                    Name: ListOfItmeCheck.values[i],
                    Weightage: Weights.values[i] != '' ?  Weights.values[i] : '100',
                });
                //   var IsWeightError = $('#'+ Weights.txtId[i]).hasClass('error');
            }

            if(totalWeightage != 100)
            {
                ShowError('@Common.objCached.ValidateAttributeWeightSum'.replace('{0}', "Budget Account"));
                return false;
            }
        }
        _FieldMappingValues = JSON.stringify(_FieldMappingValues);
        //End

        var _customFieldValues = [];
        $('form').find('input[type=text],input:checked, select').each(function () {
            if ($(this).attr('cf_id') != '' && typeof $(this).attr('cf_id') != 'undefined' && $(this).val() != '') {
                _customFieldValues.push({
                    Key: $(this).attr('cf_id').toString(),
                    Value: htmlEncode($(this).val().toString())
                });
            }
        });
        _customFieldValues = JSON.stringify(_customFieldValues);

        var regex = /(>|<)/m;

        var descriptionvalue = $("#txtDescription").val();
        if (descriptionvalue.search(regex) >= 0) {
            ShowError("@RevenuePlanner.Helpers.Common.objCached.InvalidCharacterofDescription");
            $("#txtDescription").addClass("error");
            return false;
        }

        $("#txtLineItemCost").val(ReplaceCC($("#txtLineItemCost").val()));
        document.getElementById("txtDescription").value = htmlEncode($('#txtDescription').val());
        var uId = $(window).attr('name');

        document.getElementById("hdnDescription").value = htmlEncode($('#txtDescription').val());
        $.ajax({
            type: 'POST',
            async: false,
            url: '@Url.Content("~/Inspect/SaveLineitem")',
            data: $("form").serialize() + '&title='+escape(lineItemTitle)+ '&FieldMappingValues=' + escape(_FieldMappingValues) + '&customFieldInputs=' + escape(_customFieldValues) + '&tacticId=@Model.PlanTacticId'+'&UserId='+uId,
            success: function (data) {
                if (data.returnURL != 'undefined' && data.returnURL == '#') {
                    window.location = '@Url.Content("~/Login/Index")';
                }
                else {
                    if (data.isSaved) {
                        var activeTab = $("#InspectTab li.active a").text()
                        var planLineItemId = $("#PlanLineItemId").val();
                        $("#successMessage").css("display", "block");
                        $("#spanMessageSuccess").empty();
                        $("#spanMessageSuccess").text(data.msg);
                        $("#errorMessageEditLineitem").css("display", "none");
                        var requestedModule = $("#hdnRedirectType").val();
                        var plancampaignId = 0;
                        var planProgramId = 0;
                        var planTacticId = 0;
                        $("#liActuals,#liBudget,#liSetup").bind('click');
                        if (planLineItemId == '0') {
                            planLineItemId = data.planLineitemID;
                        }
                        plancampaignId = data.planCampaignID;
                        planProgramId = data.planProgramID;
                        planTacticId = data.planTacticID;
                        $('#lblLineitemTitle').text(lineItemTitle);
                        // Comment By Bhavesh Date: 6-jan-2015, Ticket #1793
                       @* if (inspectMode == '@Enums.InspectPopupMode.Add.ToString()') {
                            var ChangedTab = "Setup";
                            if (tabtext != "") {
                                ChangedTab = tabtext;
                            }
                            var inspectPopupMode = '@Enums.InspectPopupMode.Edit.ToString()';
                            if (ChangedTab == "Setup") {
                                inspectPopupMode = '@Enums.InspectPopupMode.ReadOnly.ToString()';
                            }
                            loadInspectPopup(planLineItemId, "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.LineItem).ToLower()", ChangedTab, inspectPopupMode, 0, requestedModule);
                            //RefreshCurrentTab(requestedModule, plancampaignId, planProgramId, planTacticId);
                        }*@
                       // else{
                            //   loadInspectPopup(planLineItemId, "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.LineItem).ToLower()", activeTab, "@Enums.InspectPopupMode.ReadOnly.ToString()", 0, requestedModule);

                            if ("@Enums.InspectPopupRequestedModules.Budgeting.ToString()" == requestedModule) {
                                $("#hdnBudgetingExpandId").val("lineitem" + planLineItemId);
                                $("#hdnBudgetingIsSave").val("true");
                            }
                            else {
                                //RefreshCurrentTab(requestedModule, plancampaignId, planProgramId, planTacticId);    //// Added by Sohel Pathan on 29/10/2014 for Internal Review Points
                            }
                            returnparameter = true;
                        //}
                    }
                    else {
                       
                        ShowError(data.msg);
                        if(data.strmsg != "")
                        {
                          
                            ShowError(data.strmsg);
                        }
                        returnparameter = false;
                    }
                }
            }
        });
        //   });
        return returnparameter;
    }
    
    $(".table_drpdwn").each(function () {
        var chekcedCount = $(this).find('input:checked').length;
        if (chekcedCount > 1) {
            var menu = $(this).parents('.dropdown-wrapper');
            menu.toggleClass('dropdown-block minimum-width215');
            menu.find('.text_ellipsis').toggleClass('minmax-width200');
            menu.find(".first_hide,.revenue_header,.cost_header,.top_head_attribute,.value_header").toggle();
            menu.find('.advance_a').text("< Single-selection");
            menu.find('.advance_a').attr('mode', 'Multi');
            menu.find('input[type=checkbox]').toggle();
            menu.find('p').removeClass('single-p');
            menu.find('tr').removeClass('trdropdownhover setfocusTr');
            //added by Rahul Shah on 05/11/2015 - by default multi mode of Custom dropdown then hide the "Please Select"
            if ($(this).find('tbody').children(':first-child').find('p').text() == "Please Select") {
                $(this).find('tbody').children(':first-child').hide();
                $(this).find('tbody').children(':first-child').find('input[type=checkbox]').removeAttr('checked');
            }
        }
    });

    function isEmpty(el) {
        return !$.trim(el.html())
    }


    if (isEmpty($('#CustomHtmlHelperfield'))) {
        $('#CustomHtmlHelperfield').hide();
        $('#CustomAttributeheading').hide();
        $('#divTacticSaveCancel').removeClass('border-top-div');//Added by Mitesh Vaishnav for PL ticket 1196
    }
    else {
        $('#CustomHtmlHelperfield').show();
        $('#CustomAttributeheading').show();

    }

</script>
