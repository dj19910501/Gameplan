@model RevenuePlanner.Models.Inspect_Popup_Plan_Campaign_Program_TacticModel
@using RevenuePlanner.Helpers;
@using RevenuePlanner.Models;
@using System.Web.Script.Serialization;
@{
    var IsTackticAddEdit = Model.IsTackticAddEdit;
    var IsLinkedTactic = Model.IsLinkedTactic;
    //// Flag to indicate unavailability of web service.
    //// Added By: Maninder Singh Wadhva on 11/24/2014.
    //// Ticket: 942 Exception handeling in Gameplan.
    var isCreated = Model.IsCreated;
    var Allowresubmission = Model.IsOwner;//Modified By komal Rawal for #1235
    bool isServiceUnavailable = Convert.ToBoolean(ViewBag.IsServiceUnavailable);
    string customFieldWeightage = Model.customFieldWeightage;
    var lstTacticTypes = Model.Tactics.Select(tt=> new TacticTypeModel { TacticTypeId = tt.TacticTypeId, Title = tt.Title, AssetType = tt.AssetType });
    //Modified By komal Rawal for #1235
    var resubmission = "";
    if (Allowresubmission)
    {
        resubmission = " resubmission ";
    }
    string CurrencySymbol = Sessions.PlanCurrencySymbol; // Add By Rahul Shah #2511
}
<style type="text/css">    
    #btnCancel
    {
        color: gray;
    }
     .stage-title { 
         float: left;
        width: auto;
    }
    .inspect-column-parent .span3 .stage-title{/*Added for #2324 */
        max-width: 99px;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;   
     }
    #divTab .simpleSelectBox .sbHolder {
            background: url(@Url.Content("~/Content/images/button-arrow.png")) no-repeat scroll right 8px center #dff0f8 !important;
            box-shadow: 1px -8px 13px #dff0f8 inset, 0 1px 2px #ededed;
            margin-bottom: 0;
            z-index: auto;
    }
    #divTab .ui-multiselect {
         background: none repeat scroll 0 0 #dff0f8 !important;
     }
    #divTab .sbToggle {
        border-top: 4px solid #6d6d6d !important;
    }
    #divTab .sbHolder {
        background-color: #dff0f8 !important;
        background-image:none;
     }
    @* Start - Added by Sohel Pathan on 18/11/2014 for PL ticket #708 *@
    #multipleselect_ddlOwner {
     left: -3px !important;
    top: 29px !important;
     min-width:205px;
    }
      #multipleselect_ddlTacticType {
       left: -3px !important;
       top: 29px !important;
       min-width:205px;
    }
     #multipleselect_ddlcampaign {
        left: -3px !important;
        top: 53px !important;
        min-width:205px;
    }
     #multipleselect_ddlProgram {
        left: -3px  !important;
        top: 36px !important;
        min-width:205px;
       right:0;
    margin:0 auto;
    }
    @* End - Added by Sohel Pathan on 18/11/2014 for PL ticket #708 *@

     .inspect-column-parent input, .inspect-column-parent textarea {
    min-height: 22px !important;
    width: calc(100% - 12px) !important;
}
    .calendar-width {
    width: calc(100% - 30px) !important;
}
    .datepicker {
        padding:0px !important;
        margin-bottom:10px !important;
    }
     .margin-top-10{
     margin-top: 10px;
     }
</style>

@using (Html.BeginForm())
{
    @*<script src="~/Scripts/js/bootstrap-datepicker.js"></script>*@
    <script src="~/Scripts/moment.min.js"></script>
    <script src="~/Scripts/bootstrap-datetimepicker.js"></script>
    <link href="~/Content/css/bootstrap-datetimepicker.css" rel="stylesheet" />   
    bool ExtIntService = Model.ExtIntService;
    @Html.HiddenFor(model => model.PlanTacticId, new { id = "hdnPlanTacticId" })
    @Html.HiddenFor(model => model.PStartDate, new { id = "hdnPStartDate" })
    @Html.HiddenFor(model => model.PEndDate, new { id = "hdnPEndDate" })
    @Html.HiddenFor(model => model.CStartDate, new { id = "hdnCStartDate" })
    @Html.HiddenFor(model => model.CEndDate, new { id = "hdnCEndDate" })
    @Html.HiddenFor(model => model.IsDeployedToIntegration, new { id = "hdnIsDeployedToIntegration" })
    @Html.HiddenFor(model => model.StageId, new { id = "hdnStageId" })
    @Html.HiddenFor(model => model.TacticTitle, new { id = "hdnPlanTacticTitle" })
    @Html.HiddenFor(model => model.Description, new { id = "hdnDescription" })

<div id="TacticMainDiv" class="inspect-column-parent source-sans-proregular remove-bottom-border inspect_attribute_parent" style="margin-bottom: 0px;">
        <div class="span6" id="inspect-modal-left-column1">
            <div class="cf width100">
                <div style="width: 47%; position: relative;" class="margin-right10 pull-left">
                    <p class="stage-title inspect-bolder-label" title="SUS">Parent Campaign &nbsp;</p>
                    @if (IsTackticAddEdit && !isCreated)
                    {
                        @Html.DropDownListFor(model => model.PlanCampaignId, new SelectList((System.Collections.IEnumerable)Model.PlanCampaignList, "Id", "Title"), "Please Select", new { @class = "ddlStyle" + resubmission + "editable-dropdown hide", require = "true", Id = "ddlcampaign", label = "Parent Campaign" })
                    }
                    else
                    {
                        @Html.TextBoxFor(model => model.CampaignTitle, new { @class = "span12 input-small truncate", id = "ddlcampaign", @readonly = "true", style = "background:#F2F2F2;" })
                    }
                </div>

                <div style="width: 47%; position: relative" class="pull-right-assortment reports-button-group pull-left">
                    <p class="inspect-bolder-label" title="Qualified Leads">Parent Program</p>
                    @if (IsTackticAddEdit && !isCreated)
                    {
                        <span style="min-width: 100%; position: relative; display: block;">
                            @Html.DropDownListFor(model => model.PlanProgramId, new SelectList((System.Collections.IEnumerable)Model.CampaignProgramList, "Id", "Title"), "Please Select", new { @class = "ddlStyle" + resubmission + "editable-dropdown hide", require = "true", Id = "ddlProgram", label = "Parent Program" })
                        </span>
                    }
                    else
                    {
                        @Html.TextBoxFor(model => model.ProgramTitle, new { @class = "span12 input-small truncate", id = "ddlProgram", @readonly = "true", style = "background:#F2F2F2;" })
                        @Html.HiddenFor(model => model.PlanProgramId, new { id = "hdnPlanProgramId" })
                    }
                </div>
            </div>
            <p>Description</p>
            @Html.TextArea("Description", Model.Description, new { placeholder = "Optional", @class = "span12 text-area-size input-setup", id = "Description" })   @*Modified by Viral Kadiya on 11/15/2014 to resolve issue for PL ticket #794*@
        </div>
        <div class="span3 no_margin_top calendar_div" id="inspect-modal-left-column2" style="padding-left: 2%;">  @*Added By Maitri Gandhi for #2109*@
            <p>Tactic Type <span class="required-asterisk">*</span></p>
            <span style="min-width: 100%; position: relative; display: block;">
                @Html.DropDownListFor(model => model.TacticTypeId, new SelectList((System.Collections.IEnumerable)Model.Tactics, "TacticTypeId", "Title"), "Please Select", new { @class = "ddlStyle" + resubmission + "editable-dropdown hide", require = "true", Id = "ddlTacticType", label = "Tactic_Type" })
            </span>
            <p>Tactic Planned Cost 
            @if (IsTackticAddEdit && !isCreated)
            {
                <a href="#" class="allocatecost" style="float:right;text-decoration:underline;">Allocate Cost</a>
            }
        </p>
            @Html.TextBoxFor(model => model.Cost, new { @class = "input-small truncate currency_dollar input-setup", id = "TacticCost", maxlength = @RevenuePlanner.Helpers.Common.maxLengthDollar })
            <p>Start Date</p>
            <span style="position: relative;">
                <div class="form-group">
                    <div class='input-group date' id='divStartDate'>
                        @Html.TextBoxFor(model => model.StartDate, new { @class = "form-control without-margin " + resubmission, id = "t_startdate", label = "Start_Date" })
                        <span class="input-group-addon">
                            <span class="fa fa-calendar"></span>
                        </span>
                </div>
                </div>
            </span>
            <p class="clear-section" style="margin-top: 2px;">End Date</p>
            <span style="position: relative;">
                 <div class='input-group date' id='divEndDate'>
                    @Html.TextBoxFor(model => model.EndDate, new { @class = "form-control without-margin "+ resubmission, id = "t_enddate", label = "End_Date" })                    
                    <span class="input-group-addon">
                        <span class="fa fa-calendar"></span>
                    </span>
                </div>
            </span>
        </div>
        <div class="span3 review_no_padding" id="inspect-modal-left-column3" style="width: 24%;"> @* #2324 - alignment issue *@
            <p>Owner <span class="required-asterisk">*</span></p>
            @if (IsTackticAddEdit)
            {
                <span style="min-width: 100%; position: relative; display: block;">
                    @Html.DropDownListFor(model => model.OwnerId, new SelectList((System.Collections.IEnumerable)Model.OwnerList, "Id", "Name"), "Please Select", new { @class = "ddlStyle resubmission editable-dropdown hide", require = "true", Id = "ddlOwner", label = "Owner" })
                </span>
            }
            else
            {
                @Html.TextBoxFor(model => model.Owner, new { @class = "span12 input-small truncate", style = "background:#F2F2F2;", @readonly = "true", title = Model.Owner })
            }
            <div class="cf width100">
                <div class="margin-right10 pull-left" style="width: 47.5%">
                    <p id="lblStageTitle" title="@Model.StageTitle" class="stage-title inspect-bolder-label">@Model.StageTitle &nbsp;</p> @* <label> coverted into <p> = for #2324*@ 

                    @if (Model.IsDiffrentStageType == true)
                    {
                        <span style="float: right;">
                            <img id="diffrentStageIcon" src="~/Content/images/flag-icon.png" title="Please note that the stage information at plan level is different than that at the model level" />
                        </span>

                    }
                    @Html.TextBoxFor(model => model.ProjectedStageValue, new { placeholder = "0", id = "txtProjectedStageValue", @class = "priceValue input-setup", label = @Model.StageTitle, maxlength = @RevenuePlanner.Helpers.Common.maxLengthPriceValue })
                </div>

                <div class="pull-left" style="width: 47.5%">
                    <p title="@Html.LabelForMQL("MQL")" class="inspect-bolder-label">@Html.LabelForMQL("MQL")</p>
                    <input type="text" value="@Model.MQLs" readonly="true" id="txtmql" />
                </div>

                <div class="pull-left" style="width: 47.5%">
                    <p title="Revenue" class="inspect-bolder-label">Revenue</p>
                    @Html.TextBoxFor(model => model.Revenue, new { placeholder = CurrencySymbol + "0", id = "txtRevenue", @readonly = "true", maxlength = @RevenuePlanner.Helpers.Common.maxLengthDollar })
                </div>
            </div>
        </div>
    </div>

    <ul id="CustomAttributeheading" class="nav nav-tabs new-margin padding-bottom10 clear border-bottom-div">
        <li class="pull-left">
            <h3 class="modal-popup-innertitle source-sans-proregular">Attributes</h3>
        </li>
    </ul>

    <div id="CustomHtmlHelperfield" class="inspect-column-parent source-sans-proregular remove-bottom-border margin-bottom0 inspect_attribute_parent margin-left">
        @HtmlHelpers.GenerateCustomFieldsForInspectPopup(Model.PlanTacticId, Enums.EntityType.Tactic.ToString().ToLower(),Model.Status, 0, Enums.InspectPopupMode.Edit.ToString())
    </div>
    <!-- Added by Arpita Soni for Ticket #2212 on 05/24/2016 -->
    if (Sessions.AppMenus.Where(x => x.Code.ToLower() == Enums.ActiveMenu.MarketingBudget.ToString().ToLower()).Any())
    {
        <a href="@Url.Action("Index","Finance")" class="gotoLink" onclick="onGoToMarketingBudgetClick(); return true;">Go to Marketing Budget <i class="fa fa-long-arrow-right" aria-hidden="true"></i> </a>
    }
}

<script type="text/javascript">
    var selectbox_keys = '';
    var $prevtext = '';
    var $nextdata = -1;
    var $_prevdata = -1;
    var IsLinkedTactic = "@IsLinkedTactic";
    var isRequiredTacticfield = false;
    $('.dropdown_new_btn').click(function () {
        $('.trdropdownhover').removeClass('setfocusTr');
        $('.dropdown_new_btn').focus();
        $('.dropdown_new_btn').removeAttr("id", "dropdown_btn");
        $('#dropdown_Table').removeAttr("id", "dropdown_Table");
        $(this).parent().attr("id", "dropdown_Table");
        $(this).attr("id", "dropdown_btn");
        $nextdata = -1;
        $_prevdata = -1;
        $prevtext = '';
        KeyPressOnDropdown();
        var dropdowntop = $('.dropdown_new_btn').offset().top;
        var windownheight = $(window).height();
        if (dropdowntop >= (windownheight - 300)) { $('.dropdown-wrapper').addClass('dropup') }
    });

    var DropdownTop = 0;
    $(".pop-body-wraper").scroll(function () {
        var scrollTop = $(this).scrollTop();
        $('.dropdown_new_btn').click(function () {
            // get the top offset of the dropdown (distance from top of the page)
            var dropdown_div = $(this).next('.dropdown-wrapper');
            var topOffset = dropdown_div.offset().top;
            // calculate the dropdown offset relative to window position
            var relativeOffset = topOffset - scrollTop;
            // get the window height
            var windowHeight = $('.pop-body-wraper').height();
            // if the relative offset is greater than half the window height,
            // reverse the dropdown.
            if (relativeOffset > windowHeight / 2 || (relativeOffset + 100) > windowHeight  / 2) {
                dropdown_div.addClass("dropup");
            }
            else {
                dropdown_div.removeClass("dropup");
            }
        });
    });

    $(document).click(function () {
        $(document).unbind('keypress');
    });

    function KeyPressOnDropdown() {
        $(document).keypress(function (e) {
            var key = e.charCode ? e.charCode : e.keyCode ? e.keyCode : 0;
            var $this = $('#dropdown_Table').find('.top_spacing_geography');
            if ($('#dropdown_Table').find('.advance_a').attr('mode').toString() != "Multi") {
                var theChar = String.fromCharCode(key);
                var cur_check = '';
                cur_check = selectbox_keys + theChar.toLowerCase();
                var $select = $('#dropdown_Table');
                var lastElement = $select.find('tbody');
                $this.find(".trdropdownhover").each(function () {
                    var p = $(this).find('p');
                    var text = jQuery(p).text().toLowerCase();
                    var _checkdiv = $(this).css('display');
                    if ($prevtext == '' || cur_check.length > 1) {
                        if (text.indexOf(cur_check) == 0) {
                            if (_checkdiv == "none") {
                                return false;
                            }
                            $prevtext = text;
                            if ($_prevdata != null && $_prevdata != 'undefined' && $_prevdata != -1) {
                                $($_prevdata).removeClass('setfocusTr');
                            }
                            $_prevdata = jQuery(this);
                            $nextdata = jQuery(this);
                            $nextdata.addClass('setfocusTr');
                            selectbox_keys = cur_check;
                            $(p).closest('tr').focus();
                            $select.find('input:checkbox').removeAttr('checked');
                            var checkbx = $(this).find('input:checkbox');
                            $(checkbx).attr('checked', 'checked');
                            var scrollTo = $(this);
                            lastElement.animate({
                                scrollTop: scrollTo.offset().top - lastElement.offset().top + lastElement.scrollTop()
                            });
                            return false;
                        }
                    }
                    else {
                        /// find search_text from current li to downward direction in dropdown list.
                        var _nextdatas = '';
                        _nextdatas = $('.setfocusTr').nextAll();    // get next all "li" list from current "li".
                        var cntr = 0; //// counter to check that any "li" exist or not that has search_text. if it's 0 then compare search_text from start of the dropdown list.
                        _nextdatas.each(function (key, value) {
                            var _anchor = $(value).find('p');
                            var _atext = $(_anchor).text().toLowerCase();
                            //// Compare current "li" anchor text is with previous selected anchor text.
                            if (_atext != $prevtext && _atext.indexOf(cur_check) == 0) {
                                $prevtext = _atext; // set previous text variable with selected text.
                                $($_prevdata).removeClass('setfocusTr');   // remove class 'setFocusli' from previously selected list object.
                                $_prevdata = jQuery(this);
                                $nextdata = jQuery(this);
                                $($nextdata).addClass('setfocusTr');   // add class 'setFocusli' to currently selected list object.
                                selectbox_keys = cur_check;
                                $(this).closest('tr').focus();
                                cntr = cntr + 1;
                                $select.find('input:checkbox').removeAttr('checked');
                                var checkbx = $(this).find('input:checkbox');
                                $(checkbx).attr('checked', 'checked');
                                var scrollTo = $(this);
                                lastElement.animate({
                                    scrollTop: scrollTo.offset().top - lastElement.offset().top + lastElement.scrollTop()
                                });
                                return false;
                            }
                        });
                        /// find search_text from start of the dropdown list.
                        if (cntr == 0) {
                            _nextdatas = $('#dropdown_Table').find('.top_spacing_geography').find('tr');
                            $.each(_nextdatas, function (key, value) {
                                var _anchor = $(value).find('p');
                                var _atext = $(_anchor).text().toLowerCase();
                                //// Compare current "li" anchor text is with previous selected anchor text.
                                if (_atext != $prevtext && _atext.indexOf(cur_check) == 0) {
                                    $prevtext = _atext;
                                    $($_prevdata).removeClass('setfocusTr');   // remove class 'setFocusli' from previously selected list object.
                                    $_prevdata = jQuery(this);
                                    $nextdata = jQuery(this);
                                    $($nextdata).addClass('setfocusTr');   // add class 'setFocusli' to currently selected list object.
                                    selectbox_keys = cur_check;
                                    $(this).closest('tr').focus();

                                    $select.find('input:checkbox').removeAttr('checked');
                                    var checkbx = $(this).find('input:checkbox');
                                    $(checkbx).attr('checked', 'checked');
                                    var scrollTo = $(this);
                                    lastElement.animate({
                                        scrollTop: scrollTo.offset().top - lastElement.offset().top + lastElement.scrollTop()
                                    });
                                    return false;
                                }
                            });
                        }
                        if (cur_check.length <= 1) {
                            return false;
                        }
                    }
                });
                if ($nextdata != -1) {
                    $nextdata.removeClass('trdropdownhover');
                    $nextdata.addClass('trdropdownhover').focus();
                    $("#dropdown_btn p:first").text($nextdata.text());
                }
                clearTimeout(selectbox_keys_timeout);
                var selectbox_keys_timeout = setTimeout(function () {
                    selectbox_keys = "";
                }, 400);
                e.stopPropagation();
                return false;
            }
        }).delegate("p.text_ellipsis", "mouseover", function (e) {
            var menu = $(this).parents('.dropdown-wrapper');
            if (!menu.hasClass('dropdown-block')) {
                $(this).addClass('trdropdownhover');
            }
        }).delegate("p.text_ellipsis", "mouseout", function (e) {
            var menu = $(this).parents('.dropdown-wrapper');
            if (!menu.hasClass('dropdown-block')) {
                $(this).removeClass('trdropdownhover');
            }
        });
    }
    var hdnYear;  
    //// Function to redirect to login page on unavailability of web service.
    //// Added By: Maninder Singh Wadhva on 11/24/2014.
    //// Ticket: 942 Exception handeling in Gameplan.
    function redirectOnServiceUnavailibility() {
        if ('@Html.Raw(Json.Encode(isServiceUnavailable))' == 'true') {
            window.location = '@Url.Content(Common.RedirectOnServiceUnavailibilityPage)';
        }
    }

    var ddlcampaignValue = '';
    var ddlProgramValue = '';
    var txtTacticValue = '';
    var txtDescriptionValue = '';
    $(document).ready(
      function () {

          $('#EditForm').removeClass('SpanDisable');
          $('#InspectTab').removeClass('SpanDisable');
          //Datetime Picker Bhumika
          $('#divStartDate').datetimepicker({
              //debug: true,
              format: 'MM/DD/YYYY',
              useCurrent: false,
              keepOpen: false
          });
          $('#divEndDate').datetimepicker({
              format: 'MM/DD/YYYY',
              useCurrent: false
          });
          /*Added by Mitesh Vaishnav for PL ticket #1073
          Register events of new multiselect dropdown customfields*/
          $('.dropdown_new_btn').each(function () {
              $(this).multiselectWeight({
                  errorDivId: 'MultiSelectProcced',
                  pageErrorDivId: 'errorMessage'
              });
          });
          NumberFormatterTipsyTitle(".sus_header", 24);
          /*End Added by Mitesh Vaishnav for PL ticket #1073*/
          //// Call function to redirect on service unavailibility.
          //// Added By: Maninder Singh Wadhva on 11/24/2014.
          //// Ticket: 942 Exception handeling in Gameplan.
          redirectOnServiceUnavailibility();

          $(".datepicker.dropdown-menu").each(function () {
              $(this).remove();
          });
          ImageTipsy('#diffrentStageIcon'); // Added by Vira Kadiya on 11/18/2014 to resolve PL ticket #964.
          $(this).scrollTop(0);
          $('#txtTacticTitle').css('display', 'block');
          $('#lblTacticTitle').css('display', 'none');
          $('#divTacticSaveCancel').css('display', 'block');
          $('#EditForm').removeClass('edit-icon-white');//Modified for #1318 by Komal Rawal
          $('#EditForm').addClass('Save-icon-white');
          $('#txtCost').priceFormat({ prefix: CurrencySybmol, centsSeparator: '', thousandsSeparator: ',', centsLimit: 0 });
          $('#txtCost').attr("title", $('#txtCost').val());
          //// Assign default values to controls having classname = .resubmission
          assignDefaultValue(".resubmission");
          $("#txtRevenue").val(CurrencySybmol + number_format($("#txtRevenue").val().toString(), 0, 0, ','));

          //Modified By Preet Shah on 06/12/2016. For Allowed Negative values. PL #2850
          $('.currency_dollar').priceFormat({ prefix: CurrencySybmol, centsSeparator: '', thousandsSeparator: ',', centsLimit: 0, allowNegative: true });
          $('.priceValue').priceFormat({ prefix: '', centsSeparator: '', thousandsSeparator: ',', centsLimit: 0 });

          $("#liSetup,#liReview,#liBudget,#liActuals").removeClass('setdefultcursor');
          //Start - Added by Viral Kadiya on 17/11/2014 to resolve PL ticket #947.
          $('.input-setup').addClass('light-blue-background');
          //Added By Maitri Gandhi for #2109
          $('#t_enddate').addClass('light-blue-background');
          $('#t_startdate').addClass('light-blue-background');

          $('.ddlStyle .ui-multiselect.ui-widget.ui-state-default.ui-corner-all').addClass('light-blue-background');
          //End - Added by Viral Kadiya on 17/11/2014 to resolve PL ticket #947.
          /*hide the other datepicker in input onclick*/

          $("#t_integration_status").click(function () {
              if ($(this).hasClass("icon-check-blue")) {
                  $(this).val("Don't sync to integration");
                  $(this).attr('title', "Inactive");
                  $(this).addClass("icon-check-gray");
                  $(this).removeClass("icon-check-blue");
                  $("#hdnIsDeployedToIntegration").val(false);
              }
              else {
                  $(this).val("Sync to integration");
                  $(this).attr('title', "Active");
                  $(this).addClass("icon-check-blue");
                  $(this).removeClass("icon-check-gray");
                  $("#hdnIsDeployedToIntegration").val(true);
              }
          });

          if ('@TempData["TacticMQL"]' == "N/A") {
              $("#txtmql").removeClass("priceValue");
              $("#txtmql").val("N/A");
              $("#txtmql").attr('title', 'N/A');
          }
          else {
              var mqlValue = FormatCommas($("#txtmql").val(), false);
              $("#txtmql").val(mqlValue);
              $("#txtmql").attr('title', mqlValue);
          }
          
          var arLineitem = [];
          var arrClosedTaskString = null;
          var _customFieldValues = [];
          hdnYear = @Model.Year   
          $("#btnCancel").on("click", function (e) {
              // Modified by Arpita Soni for Ticket #2237 on 06/13/2016
              var activeTab = $("#InspectTab li.active a").text().replace(" ", "_");
              var planTacticId = $("#hdnPlanTacticId").val();
              $('#txtTacticTitle').css('display', 'none');
              $('#lblTacticTitle').css('display', 'block');
              $("#lblTacticTitle").removeAttr("style");
              $('#divDeleteTactic').css('display', 'block');
              $("#errorMessage").css("display", "none");
              $("#successMessage").css("display", "none");
              $('#MultiSelectProcced').css("display", "none");
              $('#divTacticSaveCancel').css('display', 'none');
              $('#EditForm').css('display', 'block');
              $("#hdnTacticBudgetAllocationOpt").val("View");
              $("#AddForm").css("display", "block");
              if (!($("#hdnInspectMode").val() == '@Enums.InspectPopupMode.Add.ToString()')) {
                  loadReview(planTacticId, activeTab);
              }
              else {
                  $('#modal-container-186470').modal("hide");
              }
              //Start- Added by Viral Kadiya on 11/10/2014 for PL ticket #941 to refresh gantt data on cancel button click.
              if (($("#hdnInspectMode").val() == '@Enums.InspectPopupMode.Add.ToString()')) // if current view is for Add then remove class bodyOverflow to resolve scroll issue.
                  $('body').removeClass('bodyOverflow');
              var hdnRefresh = $("#hdnRefresh").val();      // This hidden value set from ApplyToCalendar page, to check flag, whether this page called from ApplyTocalender or not.
              if (hdnRefresh != null && gantt != null) {
                  gantt.refreshData();
              }
              //End- Added by Viral Kadiya on 11/10/2014 for PL ticket #941 to refresh gantt data on cancel button click.
          });

          $('#ddlOwner,#ddlTacticType').multiselect({

              multiple: false,
              noneSelectedText: "Please Select",
              selectedList: 1,
              CustomName: '@Common.CustomTitle'
          }).multiselectfilter();

          $('#ddlOwner,#ddlTacticType').next().css('width', '95%');
          $('#ddlOwner,#ddlTacticType').next().css('min-height', '30px');

          var spanOwner = $('#multipleselect_ddlOwner');
          var spanTacticType = $('#multipleselect_ddlTacticType');

          $('#btnMultiselect_ddlOwner').after(spanOwner);
          $('#btnMultiselect_ddlTacticType').after(spanTacticType);
          $('#hdnOwner').val($('#ddlOwner').val());
          /*Modified by Mitesh Vaishnav for PL ticket #1165*/
          if ('@isCreated' != '@true') {
              $('#ddlcampaign,#ddlProgram').multiselect({
                  multiple: false,
                  noneSelectedText: "Please Select",
                  selectedList: 1,
                  CustomName: '@Common.CustomTitle'
              }).multiselectfilter();

              $('#ddlcampaign,#ddlProgram').next().css('width', '98%');
              $('#ddlcampaign,#ddlProgram').next().css('min-height', '30px');
              var spanCampaign = $('#multipleselect_ddlcampaign');
              var spanProgram = $('#multipleselect_ddlProgram');
              $('#btnMultiselect_ddlcampaign').after(spanCampaign);
              $('#btnMultiselect_ddlProgram').after(spanProgram);
          }

          var customFieldsValues = {};
          if ('@customFieldWeightage' != '') {
              customFieldsValues = JSON.parse('@Html.Raw(customFieldWeightage)');
          }

          for (var i = 0; i < customFieldsValues.length; i++) {
              $('#' + customFieldsValues[i].optionId + '_Cost').val(customFieldsValues[i].CostWeight);
              $('#' + customFieldsValues[i].optionId + '_cvr').val(customFieldsValues[i].Weight);
          }
          $(".table_drpdwn").each(function () {

              var chekcedCount = $(this).find('input:checked').length;
              if (chekcedCount > 1) {
                  var menu = $(this).parents('.dropdown-wrapper');
                  menu.toggleClass('dropdown-block minimum-width215');
                  menu.find('.text_ellipsis').toggleClass('minmax-width200');
                  menu.find(".first_hide,.revenue_header,.cost_header,.top_head_attribute,.value_header").toggle();
                  menu.find('.advance_a').text("< Single-selection");
                  menu.find('.advance_a').attr('mode', 'Multi');
                  menu.find('input[type=checkbox]').toggle();
                  //added by Rahul Shah on 05/11/2015 - by default multi mode of Custom dropdown then hide the "Please Select"
                  if ($(this).find('tbody').children(':first-child').find('p').text() == "Please Select") {
                      $(this).find('tbody').children(':first-child').hide();
                      $(this).find('tbody').children(':first-child').find('input[type=checkbox]').removeAttr('checked');
                  }
              }
          });

          @if (!IsTackticAddEdit)
          {
             @:loadtacticdata($('#ddlTacticType').val());

          }
          $('#ddlcampaign').bind('change', function () {
              var selectedOption = $(this).val();
              loadChildProgramList(selectedOption, "ddlProgram");
          });
          $("#ddlcampaign").val(htmlDecode($("#ddlcampaign").val())); // added by dashrath prajapati for pl#1916 Ampersand
          $("#ddlProgram").val(htmlDecode($("#ddlProgram").val()));  // added by dashrath prajapati for pl#1916 Ampersand
          //added by devanshi reg pl #2213
          $(".allocatecost").on("click", function (e) {
              RemoveTabClass();
              UpdateViewByForLineIitemsGrid('@Enums.PlanAllocatedBy.months');
          });
          // added by Rahul Shah for PL #2335 point 1. to set default focus on tactic inspect popup open.
          $('#txtTacticTitle').focus();
          var txtTactTitle = $('#txtTacticTitle').val();
          $('#txtTacticTitle').val('');
          $('#txtTacticTitle').val(txtTactTitle);          
      });
    function loadChildProgramList(parentOption, id) {
        $.ajax({
            type: 'POST',
            url: '@Url.Content("~/Inspect/LoadProgramList/")',
            data: {
                ParentId: parentOption
            },
            success: function (r) {
                var $dropdown = $("#" + id);
                $dropdown.empty();
                var $html = '<option value="">Please Select</option>';
                if (r.length > 0) {
                    $.each(r, function (index, objprogramList) {

                        $html += '<option value="' + objprogramList.PlanProgramId + '">' + objprogramList.Title + '</option>';

                    });
                }
                $dropdown.append($html);
                $("#multipleselect_" + id).find("input[type='search']").val('');
                $('#' + id).multiselect("refresh");
                $('#ddlProgram').next().css('width', '98%');
                $('#ddlProgram').next().css('min-height', '30px');
                var spanProgram = $('#multipleselect_ddlProgram');
                $('#btnMultiselect_ddlProgram').after(spanProgram);

            }
        });
    }

    var returnparameter = false;
    //Modified for #1213 by Komal Rawal - Function to save the data on Tab change called from inspect popup
    function SetupSavetactic() {    
        $('#MultiSelectProcced').css("display", "none");
        document.getElementById("ddlcampaign").value = htmlEncode($('#ddlcampaign').val());
        document.getElementById("ddlProgram").value = htmlEncode($('#ddlProgram').val());
        document.getElementById("hdnDescription").value = htmlEncode($('#Description').val());
        document.getElementById("hdnPlanTacticTitle").value = htmlEncode($('#txtTacticTitle').val());
        var isLowBudgeted = false;
        var errorMsgForLowBudget = "@RevenuePlanner.Helpers.Common.objCached.CannotAllocateLessThanPlanned for ";
        var lowBudgetedMonths = "";
        var removeLength = 0;
        var iserror = false;
        var isEmptyFieldError = false;
        if($('#status').text().toString() == "" || $('#status').text().toString().trim() == '@Enums.TacticStatus.Created.ToString()' || $('#status').text().toString().trim() == '@Enums.TacticStatusValues.FirstOrDefault(s => s.Key.Equals(Enums.TacticStatus.Decline.ToString())).Value.ToString().Trim()'){
            $('#TacticMainDiv').find('input[type=text], select, textarea').each(function () {
                if ($(this).attr('require') == 'true') {
                    if ($(this).val().toString().trim() == '' && $(this).parent().css("display") != "none") {
                        $(this).addClass("error");
                        iserror = true;
                    }
                    else {
                        $(this).removeClass("error");
                    }
                }
            });
            $('#TacticMainDiv').find('.dropdown_new_btn').each(function () {
                if (typeof $(this).attr('require') != 'undefined' && $(this).attr('require') == 'true' && $(this).find('p').text() == 'Please Select' && $(this).parent().parent().css("display") != "none") {
                    $(this).addClass("error");
                    iserror = true;
                }
                else {
                    $(this).removeClass("error");
                }
            });

            if($("#txtTacticTitle").val().toString().trim() == '') {                
                $("#txtTacticTitle").addClass("error");
                iserror = true;                
            }
            else{
                $("#txtTacticTitle").removeClass("error");
            }
            //var isrequired = false;
            $('#CustomHtmlHelperfield').find('input[type=text], select, textarea').each(function () {
                if ($(this).attr('require') == 'true') {
                    if ($(this).val().toString().trim() == '' && $(this).parent().css("display") != "none") {
                        isRequiredTacticfield = true;
                    }
                }
            });
            $('#CustomHtmlHelperfield').find('.dropdown_new_btn').each(function () {
                if (typeof $(this).attr('require') != 'undefined' && $(this).attr('require') == 'true' && $(this).find('p').text() == 'Please Select' && $(this).parent().parent().css("display") != "none") {
                    isRequiredTacticfield = true;
                }
            });
        }
        else {
        $('form').find('input[type=text], select, textarea').each(function () {
            if ($(this).attr('require') == 'true') {
                if ($(this).val().toString().trim() == '' && $(this).parent().css("display") != "none") {
                    $(this).addClass("error");
                    isEmptyFieldError = true;
                }
                else {
                    $(this).removeClass("error");
                }
            }
        });
        $('.dropdown_new_btn').each(function () {
            if (typeof $(this).attr('require') != 'undefined' && $(this).attr('require') == 'true' && $(this).find('p').text() == 'Please Select' && $(this).parent().parent().css("display") != "none") {
                $(this).addClass("error");
                isEmptyFieldError = true;
            }
            else {
                $(this).removeClass("error");
            }
        });
        }

        /* Start - Added by Sohel Pathan on 18/11/2014 for PL ticket #708 */
        //// RequireField validation for Owner Dropdown
        if (!($("#hdnInspectMode").val() == '@Enums.InspectPopupMode.Add.ToString()')) {
            var OwnerValue = $('#ddlOwner').val();
            if (OwnerValue == "") {
                $('#btnMultiselect_ddlOwner').addClass("error");
            }
            else {
                $('#btnMultiselect_ddlOwner').removeClass("error");
            }
        }

        var tacticTypeValue = $('#ddlTacticType').val();
        if (tacticTypeValue == "") {
            $('#btnMultiselect_ddlTacticType').addClass("error");
        }
        else {
            $('#btnMultiselect_ddlTacticType').removeClass("error");
        }
        if (!($("#hdnInspectMode").val() == '@Enums.InspectPopupMode.Add.ToString()')) {
            var ddlProgramValue = $('#ddlProgram').val();
            if (ddlProgramValue == "") {
                $('#btnMultiselect_ddlProgram').addClass("error");
            }
            else {
                $('#btnMultiselect_ddlProgram').removeClass("error");
            }
            var ddlCampaignValue = $('#ddlcampaign').val();
            if (ddlCampaignValue == "") {
                $('#btnMultiselect_ddlcampaign').addClass("error");
            }
            else {
                $('#btnMultiselect_ddlcampaign').removeClass("error");
            }
        }
        /* End - Added by Sohel Pathan on 18/11/2014 for PL ticket #708 */
        if (iserror) {
            ShowError("@RevenuePlanner.Helpers.Common.objCached.ValidateForEmptyField");
            $('#InspectTab').removeClass('SpanDisable');
            return false;
        }
        if (isEmptyFieldError) {
            ShowError('@RevenuePlanner.Helpers.Common.objCached.ValidateForEmptyField');
            $('#InspectTab').removeClass('SpanDisable');
            return false;
        }
        var regex = /(>|<)/m;
        var descriptionvalue = $("#Description").val();
        if (descriptionvalue.search(regex) >= 0) {
            var test = "@RevenuePlanner.Helpers.Common.objCached.InvalidCharacterofDescription";
            ShowError(test);
            $("#Description").addClass("error");
            $('#InspectTab').removeClass('SpanDisable');
            return false;
        }  
//added by devanshi for PL ticket #2276
        if (CheckHtmlTag($("#txtTacticTitle").val()) == false) {
            ShowError("@RevenuePlanner.Helpers.Common.objCached.TitleContainHTMLString");
            $("#txtTacticTitle").addClass("error");
            iserror = true;
            return false;

        }
        var sdate = $('#t_startdate').val();
        var edate = $('#t_enddate').val();
        if (!isDate(sdate)) {
            alert('@Common.objCached.ValidateStartDate');
            $('#InspectTab').removeClass('SpanDisable');
            return false;
        }
        if (!isDate(edate)) {
            alert('@Common.objCached.ValidateEndDate');
            $('#InspectTab').removeClass('SpanDisable');
            return false;
        }
        if (!CheckDateYear(sdate, hdnYear, "@RevenuePlanner.Helpers.Common.objCached.StartDateCurrentYear"))
        {
            $('#InspectTab').removeClass('SpanDisable');
            return false;
        };
        if (!CheckDateYear(edate, hdnYear, "@RevenuePlanner.Helpers.Common.objCached.EndDateCurrentYear")) {
            $('#InspectTab').removeClass('SpanDisable');
            return false;
        };
        if (!validateDateCompare(sdate, edate, "@RevenuePlanner.Helpers.Common.objCached.DateComapreValidation")) {
            $('#InspectTab').removeClass('SpanDisable');
            return false;
        };  //Added by Rahul Shah on 30/11/2015 for PL #1764.
        $("#txtProjectedStageValue").val(ReplaceCC($("#txtProjectedStageValue").val()));
        if ($("#txtmql").val() == 'N/A') {
            $("#txtmql").val(0);
            $("#txtmql").attr("title", "0");
        }
        else {
            var mqlValue = ReplaceCC($("#txtmql").val());
            $("#txtmql").val(mqlValue);
            $("#txtmql").attr("title", mqlValue);
        }

        $("#TacticCost").val(ReplaceCC($("#TacticCost").val()));

        arrClosedTaskString = null;
        if (typeof arrClosedTask != 'undefined') {
            arrClosedTaskString = arrClosedTask.toString();
        }

        arLineitem = [];
        var _Lineitems = $("#frm_campaigns #c_tactics select");
        for (var l = 0; l < _Lineitems.length; l++) {
            var typeid = $(_Lineitems[l]).val();
            arLineitem[l] = typeid;
        }
        var arrError = autoGeneratedmultiselectWaightage();
        if (arrError.length > 0) {
            var errorAttrbutes = arrError.join(',');
            ShowError('@Common.objCached.ValidateAttributeWeightSum'.replace('{0}', errorAttrbutes.toString()));
            $('#InspectTab').removeClass('SpanDisable');
            return false;
        }
        ////creating object which contains value of custom fields
        _customFieldValues = [];
        $('form').find('input[type=text], select').each(function () {
            if ($(this).attr('cf_id') != '' && typeof $(this).attr('cf_id') != 'undefined' && $(this).val() != '') {
                _customFieldValues.push({
                    customFieldId: $(this).attr('cf_id').toString(),
                    Value: htmlEncode($(this).val().toString()),
                    Weight: "100",
                    CostWeight: "100"
                });
            }
        });
        $('form').find('input:checkbox:checked').each(function () {
            if ($(this).attr('cf_id') != '' && typeof $(this).attr('cf_id') != 'undefined' && $(this).val() != '') {
                var customFieldId = $(this).attr('cf_id').toString();
                var optionId = $(this).val();
                if ($('#' + optionId + '_weight').parent().css('display') != 'none') {
                    _customFieldValues.push({
                        CustomFieldId: customFieldId,
                        Value: optionId,
                        Weight: $('#' + optionId + '_cvr').val() != '' ? $('#' + optionId + '_cvr').val() : '100',
                        CostWeight: $('#' + optionId + '_Cost').val() != '' ? $('#' + optionId + '_Cost').val() : '100'

                    });
                }
            }
        });
        _customFieldValues = JSON.stringify(_customFieldValues);
        var isAssortment = true;
        if (!isInspectWin && !isInspectNewLineItem && !isLoadcopied) {
            _resubmissionLabelValues = [];
           
                if ((checkChangeValue(".resubmission", true)) && ($("#hdnIsResubmitableStatus").val().toString().toLowerCase() == "true")) {
                    url = '@Url.Content("~/Inspect/LoadResubmission")';
                    $("#divResubmission").load(url + '?redirectionType=' + "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Tactic)" + '&labelValues=' + _resubmissionLabelValues);
                    // returnparameter = true;
                }
                else {
                    saveTactic();
                }     
        }
        else {            
            if (isInspectWin) { 
                saveTactic(isInspectWin);
            }
            if (isInspectNewLineItem) {
                saveTactic(isInspectNewLineItem);
            }
            if (isLoadcopied) {
                saveTactic(isLoadcopied);
            }
        }
        return returnparameter;
    }

    function saveTactic(resubmission) {
        returnparameter = false;
        resubmission = typeof resubmission !== 'undefined' ? resubmission : false;
        var ddlcampaignValue = $("#ddlcampaign").val();
        var ddlProgramValue = $("#ddlProgram").val();
        var txtTacticValue = $("#txtTacticTitle").val();
        var txtDescriptionValue = htmlEncode($("#Description").val());
        document.getElementById("ddlcampaign").value = htmlEncode($('#ddlcampaign').val());
        document.getElementById("ddlProgram").value = htmlEncode($('#ddlProgram').val());
        document.getElementById("hdnDescription").value = htmlEncode($('#Description').val());
        document.getElementById("hdnPlanTacticTitle").value = htmlEncode($('#txtTacticTitle').val());
        document.getElementById("Description").value = htmlEncode($('#Description').val());
        var uId = $(window).attr('name');
        var isUpdate = $("#hdnPlanTacticId").val();
        $.ajax({
            type: 'POST',
            url: '@Url.Content("~/Inspect/SetupSaveTactic")',
            async: false,
            data: $("form").serialize() + '&lineitems=' + arLineitem + '&closedTask=' + arrClosedTaskString + '&UserId=' + uId + '&customFieldInputs=' + escape(_customFieldValues) + '&resubmission=' + resubmission,
            success: function (data) {                
                if (data.returnURL != 'undefined' && data.returnURL == '#') {
                    window.location = '@Url.Content(Common.RedirectOnServiceUnavailibilityPage)';
                }
                else {
                    if (!data.IsDuplicate) {
                        // Added by Viral Kadiya for PL ticket #1970 - Show Error messaage when Tactic Planned Cost lesser than Total lineItems cost.
                        if (data.IsError) {
                            ShowError(data.errormsg);
                            $("#divBudgetError").slideUp(30);
                            returnparameter = false;
                            $('#InspectTab').removeClass('SpanDisable');
                            return false;
                        }
                        if (data.redirect) {
                            isDataModified = true;
                            // Modified by Arpita Soni for Ticket #2237 on 06/13/2016
                            var activeTab = $("#InspectTab li.active a").text().replace(" ", "_");
                            var planTacticId = data.planTacticId;
                            isCopyTactic = planTacticId;
                            var planCampaignId = data.planCampaignId;
                            var planProgramId = data.planProgramId;
                            var requestedModule = $("#hdnRequestedModule").val();
                            // Added by Viral regarding PL ticket #2434.
                            if (isUpdate == null || isUpdate == 'undefined' || isUpdate == '' || isUpdate.toString() == "0") {
                                logMixpanelTrack("New Tactic:" + escape($("#hdnPlanTacticTitle").val())); // log New Tactic created event to mixpanel.
                            }
                            $('#txtTacticTitle').css('display', 'none');
                            $('#lblTacticTitle').css('display', 'block');
                            $("#lblTacticTitle").removeAttr("style");
                            $('#divTacticSaveCancel').css('display', 'none');
                            $('#EditForm').css('display', 'block');
                            $("#successMessage").css("display", "block");
                            $("#spanMessageSuccess").empty();
                            $("#spanMessageSuccess").text(data.Msg);
                            $("#errorMessage").css("display", "none");
                            $('#hdnTacticStatus').val(data.tacticStatus);
                            //  loadInspectPopup(planTacticId, "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Tactic).ToLower()", tabtext, "@Enums.InspectPopupMode.Edit.ToString()", 0, requestedModule);
                            $("#liSetup,#liReview,#liBudget,#liActuals").bind("click");
                            if ("@Enums.InspectPopupRequestedModules.Budgeting.ToString()" == requestedModule) {
                                $("#hdnBudgetingExpandId").val("tactic" + planTacticId);
                                $("#hdnBudgetingIsSave").val("true");
                            }                          
                            if ("@Enums.InspectPopupRequestedModules.Index.ToString()" == requestedModule) {
                                RemoveAllHoneyCombData();
                            }

                            $("#ddlcampaign").val(ddlcampaignValue);
                            $("#ddlProgram").val(ddlProgramValue);
                            $("#txtTacticTitle").val(txtTacticValue);
                            $('#lblTacticTitle').text(txtTacticValue);
                            $("#Description").val(txtDescriptionValue);                            
                            //// if new record save then set Refresh flag to true.
                            var _planTacticId = $("#hdnPlanTacticId").val(data.planTacticId);                           
                            //Modified BY Komal for #2058 tactic not displayed                          
                            var PlanId = data.PlanId;
                            $("#ulTacticType li input[type=checkbox]").each(function () {
                                var chkid = $(this).attr("id");

                                if ($(this).attr('checked') != 'checked') {
                                    filters.tempTacticTypeIds.push(chkid.replace("CbTT", ""));
                                }
                            });
                            var setupplanids = [];
                            $('#ulSelectedPlans').find("input[type=checkbox]:checked").each(function () {
                                var chkid = $(this).attr("id");
                                if (chkid != undefined && chkid != 'undefined') {
                                    setupplanids.push(chkid);
                                }
                            });
                            if (activeMenu == '@Enums.ActiveMenu.Plan.ToString().ToLower()') {
                                setupplanids.push(PlanId);
                            }
                            GetTacticTypelist(setupplanids, false);
                                $("#ulSelectedOwner li input[type=checkbox]").each(function () {
                                    if ($(this).attr('checked') != 'checked') {
                                        filters.tempOwnerIds.push($(this).attr("id"));
                                    }
                                });
                                GetOwnerListForFilter(setupplanids, false);                          
                                SaveLastSetofViews();
                            // Add by Komal RAwal
                            // Desc ::  to resolve the owner filter issue
                                if (typeof filters != 'undefined') {
                                    filters.OwnerIds = [];
                                    $("#ulSelectedOwner li input:checkbox:checked").map(function () {
                                        filters.OwnerIds.push($(this).attr("id"));
                                    });
                                    // Add by Komal RAwal
                                    // Desc :: To resolve the 2058 filter issues
                                    filters.TacticTypeids = [];
                                    $("#ulTacticType li input:checkbox:checked").map(function () {
                                        filters.TacticTypeids.push($(this).attr("id").replace("CbTT", ""));
                                    });
                                }
                            //End
                            //Modified by Maitri Gandhi : modified condition to refresh the headers on the creation of tactic
                            if (_planTacticId == '' || _planTacticId == null || _planTacticId == '0' || _planTacticId == 'undefined' || ($("#hdnInspectMode").val() == '@Enums.InspectPopupMode.Add.ToString()')) {
                                $("#hdnIsCreate_Clone").val(true); //// Hidden value used in _plan.cshmtl page to check that page require to refresh or not.
                                if (requestedModule == '@Enums.InspectPopupRequestedModules.Index.ToString()' || requestedModule == '@Enums.InspectPopupRequestedModules.ApplyToCalendar.ToString()' || requestedModule == '@Enums.InspectPopupRequestedModules.Budgeting.ToString()') {
                                    RefershPlanHeaderCalc();
                                }
                            }                          
                            returnparameter = true;
                        }
                        returnparameter = true;
                        // Add By Nishant Sheth
                        // Desc :: #1812 refresh dropdown with change of date diffrence
                        if (!(data.EndDatediff == 0)) {
                            BindUpcomingActivites(data.PlanId);// Uncomment by bhavesh Ticket #1812,date 09-jan-2015
                        }
                        // End By Nishant Sheth
                    }
                    else {
                        ShowError(data.errormsg);
                        $("#divBudgetError").slideUp(30);
                        returnparameter = false;
                    }
                }
            }
        });
    }

    function ShowError(value) {
        $("#modal-container-186470").scrollTop(0);
        $("#errorMessage").css("display", "block");
        $("#errorMessage").slideDown(400);
        $("#spanMessageError").empty();
        $("#spanMessageError").html(value);
    }

    function assignDefaultValue(classname) {
        $('form').find(classname).not('a').each(function () {
            $(this).attr("oldValue", $(this).val());
        });
    }

    $("#TacticCost").focusout(function () {
        var tacticBudgetValue = ReplaceCC($("#TacticCost").val());
        if (tacticBudgetValue == '' || typeof tacticBudgetValue == 'undefined') {
            $("#TacticCost").val(CurrencySybmol + '0')
        }
    });

    //Added By Komal Rawal
    function loadtacticdata(tacticTypeId) {
        var pmql = 0;
        var pcost = 0;
        var projectedStageValue = 0;
        ddlcampaignValue = $("#ddlcampaign").val();
        ddlProgramValue = $("#ddlProgram").val();
        txtTacticValue = $("#txtTacticTitle").val();
        txtDescriptionValue = $("#Description").val();
        document.getElementById("ddlcampaign").value = htmlEncode($('#ddlcampaign').val());
        document.getElementById("ddlProgram").value = htmlEncode($('#ddlProgram').val());
        document.getElementById("hdnDescription").value = htmlEncode($('#Description').val());
        document.getElementById("hdnPlanTacticTitle").value = htmlEncode($('#txtTacticTitle').val());
        if (tacticTypeId != '') {
            if (parseInt($('#hdnPrevTacticTypeId').val()) != parseInt($('#ddlTacticType').val())) {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Content("~/Plan/LoadTacticTypeValue")',
                    data: { tacticTypeId: tacticTypeId },
                    success: function (data) {
                        pcost = data.revenue;
                        projectedStageValue = data.projectedStageValue;
                        $("#lblStageTitle").text(data.stageTitle);
                        $("#txtProjectedStageValue").attr("label", data.stageTitle)
                        $("#hdnStageId").val(data.stageId);
                        $("#txtProjectedStageValue").val(projectedStageValue);
                        GetConversionRatePopup(projectedStageValue, true);
                        $("#TacticCost").val(pcost);

                        //Modified By Preet Shah on 06/12/2016. For Allowed Negative values. PL #2850
                        $('.currency_dollar').priceFormat({ prefix: CurrencySybmol, centsSeparator: '', thousandsSeparator: ',', centsLimit: 0, allowNegative: true });
                        $('.priceValue').priceFormat({ prefix: '', centsSeparator: '', thousandsSeparator: ',', centsLimit: 0 });
                        if (data.IsDeployedToIntegration) {
                            $("#t_integration_status").val("Sync to integration");
                            $("#t_integration_status").attr('title', "Active");
                            $("#t_integration_status").addClass("icon-check-blue");
                            $("#t_integration_status").removeClass("icon-check-gray");
                            $("#hdnIsDeployedToIntegration").val(true);
                        }
                        else {
                            $("#t_integration_status").val("Don't sync to integration");
                            $("#t_integration_status").attr('title', "Inactive");
                            $("#t_integration_status").addClass("icon-check-gray");
                            $("#t_integration_status").removeClass("icon-check-blue");
                            $("#hdnIsDeployedToIntegration").val(false);
                        }
                        $('#hdnPrevTacticTypeId').val($('#ddlTacticType').val());
                        $("#ddlcampaign").val(ddlcampaignValue);
                        $("#ddlProgram").val(ddlProgramValue);
                        $("#txtTacticTitle").val(txtTacticValue);
                        $("#Description").val(txtDescriptionValue);
                    }
                });
            }
            $('#CustomHtmlHelperfield').find('.span3').each(function () {
                var maindiv = $(this);
                var InputType = $(this).find("input").attr('type');
                var Count = 0;
                if (InputType == "text") {
                    var ParentOptionID = $(this).find("input").parent().attr('parentoptionid');
                    if (ParentOptionID == tacticTypeId) {
                        maindiv.css("display", "inline-block");
                        $(this).css("display", "inline-block");
                        Count++;
                    }
                }
                else {
                    maindiv.find('tbody tr').each(function () {
                        var ParentOptionId = $(this).attr('parentid');
                        if (ParentOptionId == tacticTypeId) {
                            maindiv.css("display", "inline-block");
                            $(this).css("display", "block");
                            Count++;
                        }
                    });
                }
                if (Count == 0) {
                    if (maindiv.attr('parentfield') == "TacticType") {
                        maindiv.css("display", "none");
                    }
                }
            });
        }
        else {
            $("#txtProjectedStageValue").val(projectedStageValue);
            $("#txtmql").val(pmql);
            $("#txtRevenue").val('0');

            $("#TacticCost").val('0');
            //Modified By Preet Shah on 06/12/2016. For Allowed Negative values. PL #2850
            $('.currency_dollar').priceFormat({ prefix: CurrencySybmol, centsSeparator: '', thousandsSeparator: ',', centsLimit: 0, allowNegative: true });
            $('.priceValue').priceFormat({ prefix: '', centsSeparator: '', thousandsSeparator: ',', centsLimit: 0 });
            $("#lblStageTitle").text("Stage");
            $("#hdnStageId").val("0");
            var newRemainingBudget = parseInt($("#hdnTotalPlanBudget").val());
            $('#hdnPrevTacticTypeId').val('0');
        }

        $('#ddlTacticType').next().find('.sbSelector').focus();
    }
    $('#ddlTacticType').change(function (e) {
    	// Modified by Arpita Soni for Ticket #2354 on 07/19/2016
        var newTacticTypeId = $(this).val();
        var arrTacTypes = JSON.parse('@Html.Raw(Json.Encode(lstTacticTypes))');
        // Added by Arpita Soni for Ticket #2354
        // Get previous asset type
        var oldTacticTypeId = $(this).attr('oldvalue');
        var oldAssetType = "";
        oldAssetType = arrTacTypes.filter(function (v) {
            return v.TacticTypeId == oldTacticTypeId; // Filter to get asset type for selected tactic type
        });
        if (oldAssetType != null && oldAssetType.length > 0) {
            oldAssetType = oldAssetType[0].AssetType;
        }
        // Get new asset type
        var newAssetType = arrTacTypes.filter(function (v) {
            return v.TacticTypeId == newTacticTypeId; // Filter to get asset type for selected tactic type
        });
        if (newAssetType != null && newAssetType.length > 0) {
            newAssetType = newAssetType[0].AssetType;
        }
if ('@Model.IsPackagedTactic' != null && '@Convert.ToString(Model.IsPackagedTactic).ToLower()' == 'true') {

            // If user changes asset to promo then confirm to delete entire package.
            if (oldAssetType != null && oldAssetType != "" && oldAssetType != newAssetType && oldAssetType.toLowerCase() == '@Convert.ToString(Enums.AssetType.Asset).ToLower()') {
                var retValue = confirm('Package associated to this tactic will be deleted. Do you wish to continue?');
                if (!retValue) {
                    return false;
                }
            }
        }
            // If user changes promo to asset then confirm to delete all mediacode.
            if ('@isCreated.ToString().ToLower()'=='false' && '@Sessions.IsMediaCodePermission.ToString().ToLower()' == 'true' &&  newAssetType != null && newAssetType != "" && oldAssetType != newAssetType && newAssetType.toLowerCase() == '@Convert.ToString(Enums.AssetType.Asset).ToLower()') {
                var retValue = confirm('Media code associated to this tactic will be deleted. Do you wish to continue?');
                if (!retValue) {
                    return false;
                }
            }
            //end
        
        loadtacticdata(newTacticTypeId);
    });

    //End

    function FormatRemainingBudget() {
        if (parseInt(ReplaceCC($("#txtRemainingBudget").val())) < 0) {
            $("#txtRemainingBudget").addClass('error-text');
        }
        else {
            $("#txtRemainingBudget").removeClass('error-text');
        }
    }
    $("#txtProjectedStageValue").focusout(function () {
        ddlcampaignValue = $("#ddlcampaign").val();
        ddlProgramValue = $("#ddlProgram").val();
        txtTacticValue = $("#txtTacticTitle").val();
        txtDescriptionValue = $("#Description").val();

        document.getElementById("ddlcampaign").value = htmlEncode($('#ddlcampaign').val());
        document.getElementById("ddlProgram").value = htmlEncode($('#ddlProgram').val());
        document.getElementById("hdnDescription").value = htmlEncode($('#Description').val());
        document.getElementById("hdnPlanTacticTitle").value = htmlEncode($('#txtTacticTitle').val());
        var projectedStageValue = ReplaceCC($("#txtProjectedStageValue").val());
        $("#txtProjectedStageValue").val(ReplaceCC($("#txtProjectedStageValue").val()));
        GetConversionRatePopup(projectedStageValue, false);
        $("#txtProjectedStageValue").val(FormatCommas($("#txtProjectedStageValue").val(), false));
    });

    var isAssortment = true;
    var mqlConversion = 0;
    function GetConversionRatePopup(projectedStageValue, isTacticTypeChange) {
        if ($('#ddlTacticType').val() != '') {
            $.ajax({
                type: 'POST',
                url: '@Url.Content("~/Inspect/CalculateMQL")',
                data: $("form").serialize() + '&projectedStageValue=' + projectedStageValue + '&RedirectType=' + isAssortment + '&isTacticTypeChange=' + isTacticTypeChange,
                success: function (data) {
                    if (data.mql == 'N/A') {
                        $("#txtmql").val(data.mql);
                        $("#txtmql").attr("title", data.mql);
                        $("#txtmql").removeClass('priceValue');
                    }
                    else {
                        mqlConversion = data.mql;
                        var mqlValue = FormatCommas(mqlConversion.toString(), false);
                        $("#txtmql").val(mqlValue);
                        $("#txtmql").attr("title", mqlValue);
                    }

                    $("#txtRevenue").val(CurrencySybmol + number_format(data.revenue.toString(), 0, 0, ','));
                    $("#txtRevenue").attr("title", $("#txtRevenue").val());

                    $("#ddlcampaign").val(ddlcampaignValue);
                    $("#ddlProgram").val(ddlProgramValue);
                    $("#txtTacticTitle").val(txtTacticValue);
                    $("#Description").val(txtDescriptionValue);
                }
            });
        }
    }

    /* Start - Added by Sohel Pathan on 18/11/2014 for PL ticket #708 */
    var tacticId = $('#hdnPlanTacticId').val();
    /* End - Added by Sohel Pathan on 18/11/2014 for PL ticket #708 */
    function autoGeneratedmultiselectWaightage() {
        var isError = [];
        $(".table_drpdwn").each(function () {
            if ($(this).find('.advance_a:first').attr('mode') == 'Multi') {
                var arrStageCode = [];
                $(this).find('.revenue_header,.cost_header').each(function () {
                    arrStageCode.push({
                        s_code: $(this).attr('code').toString()
                    });
                });
                for (var i = 0; i < arrStageCode.length; i++) {
                    var stageCode = arrStageCode[i].s_code;
                    var waightage = 0;
                    $(this).find('input:checked').each(function () {
                        var optionId = $(this).val();
                        if (typeof $('#' + optionId + '_' + stageCode).val() != 'undefined' && $('#' + optionId + '_' + stageCode).val() != '') {
                            waightage += parseInt($('#' + optionId + '_' + stageCode).val());
                        }
                    });
                    if (waightage != 100 && waightage > 0) {
                        //Modified by Komal rawal for internal issue to handle undefined while checking weightage and give error if not sum up to 100
                        var labelTitle = $(this).parents(".dropdown-wrapper").parents().eq(1).find('.ellipsis-left').attr('title');
                        if (labelTitle == undefined){
                            labelTitle = $(this).parents(".dropdown-wrapper").parents().eq(1).find('.ellipsis').attr('title');
                        }
                        if (labelTitle != undefined) {
                            labelTitle = labelTitle.toString();
                            if (isError.indexOf(labelTitle) <= -1) {
                                isError.push(labelTitle);
                            }
                        }
                    }
                    else if (waightage == 0) {
                        var checkedCount = $(this).find('input:checked').length;
                        var residual = 100 % checkedCount;
                        var inputValue = 100 / checkedCount;
                        $(this).find('input:checked').each(function () {
                            var optionId = $(this).val();
                            $('#' + optionId + '_' + stageCode).val(parseInt(inputValue).toString());
                        });
                        if (residual != 0) {
                            $(this).find('input:checked:last').each(function () {
                                var optionId = $(this).val();
                                $('#' + optionId + '_' + stageCode).val(parseInt(inputValue + residual).toString());
                            });
                        }
                    }
                }
            }

        });
        return isError;
    };
    // Modified by Komal Rawal for ticket #1196
    function isEmpty(el) {
        return !$.trim(el.html())
    }

    if (isEmpty($('#CustomHtmlHelperfield'))) {
        $('#CustomHtmlHelperfield').hide();
        $('#CustomAttributeheading').hide();
        $('#divTacticSaveCancel').removeClass('border-top-div');//Added by Mitesh Vaishnav for PL ticket 1196
    }
    else {
        $('#CustomHtmlHelperfield').show();
        $('#CustomAttributeheading').show();

    }
    function onGoToMarketingBudgetClick() {
        logMixpanelTrack("Clicked on Go to Marketing Budget link under Tactic inspection window."); // log Go to Marketing Budget link event to mixpanel. Added by Viral regarding PL ticket #2434.
    }

</script>
