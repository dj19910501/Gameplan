@using RevenuePlanner.Helpers
@{
    var campaignReview = (RevenuePlanner.Models.InspectModel)ViewBag.CampaignDetail;
    var db = new RevenuePlanner.Models.MRPEntities();
    bool IsCampaignEditable = (bool)ViewBag.IsCampaignEditable;
    ////Added by Mitesh Vaishnav for PL ticket #690 Model Interface - Integration
    string IntegrationStatus = campaignReview.IsIntegrationInstanceExist;
    bool isInstanceSalesforce = (bool)ViewBag.IsInstanceSalesfore;
    var CampaignLastSync = (dynamic)null;
    if (isInstanceSalesforce)
    {
        CampaignLastSync = ViewBag.CampaignLastSync != null ? (DateTime)ViewBag.CampaignLastSync : (DateTime?)null;
    }
    if (campaignReview.IsIntegrationInstanceExist == "Yes" && !campaignReview.IsDeployedToIntegration)
    {
        IntegrationStatus = "No";
    }           
}
<div class="span5 width360" id="inspect-modal-right-div" style="width: 42% !important">

    <div class="cf source-sans-proregular padding-top32">
        <div class="chart-gray pull-left  size80x78 without-padding remove-box-shadow review-box">
            <div class="padding-top16"><span id="startDay-id" class="font_size30" style="line-height: 24px;">@campaignReview.StartDate.ToString("dd")</span></div>
            @* Modified By :- Sohel Pathan on 21/05/2014 for PL ticket #483. *@
            <span id="startMonth-id" class="font_size16">@campaignReview.StartDate.ToString("MMM")</span>
            <span id="startYear-id" class="font_size16">@campaignReview.StartDate.ToString("yyyy")</span> @*added by Rahul Shah on 24/11/2015 for PL #1764 to display year in review tab*@
            <div class="margin-top16" style="margin-top: 20px !important;">Start</div>
            @* Modified By :- Sohel Pathan on 21/05/2014 for PL ticket #483. *@
        </div>
        <div class="chart-gray pull-left  size80x78 without-padding remove-box-shadow review-box">
            <div class="padding-top16"><span id="endDay-id" class="font_size30" style="line-height: 24px;">@campaignReview.EndDate.ToString("dd")</span></div>
            @* Modified By :- Sohel Pathan on 21/05/2014 for PL ticket #483. *@
            <span id="endMonth-id" class="font_size16">@campaignReview.EndDate.ToString("MMM")</span>
            <span id="endYear-id" class="font_size16">@campaignReview.EndDate.ToString("yyyy")</span> @*added by Rahul Shah on 24/11/2015 for PL #1764 to display year in review tab*@
            <div class="margin-top16" style="margin-top: 20px !important;">End</div>
            @* Modified By :- Sohel Pathan on 21/05/2014 for PL ticket #483. *@
        </div>
        <div class="chart-gray pull-left  size80x78 without-padding remove-box-shadow review-box">
            <div class="padding-top16"><span id="mqls-id" class="font_size30 addFormatterActualNumber" style="line-height: 24px;">@campaignReview.MQLs</span></div>
            @* Modified By :- Sohel Pathan on 21/05/2014 for PL ticket #483. *@
            <span class="font_size16" title="@Html.LabelForMQL("MQL")">@Html.LabelForMQL("MQL")</span>
            <div class="margin-top16" style="margin-top: 20px !important;">Goal</div>
            @* Modified By :- Sohel Pathan on 21/05/2014 for PL ticket #483. *@
        </div>
    </div>
    <div class="cf margin-top40 textalign-mozcenter">
        <div class="pull-left size65x38">
            <div class="owner"></div>
            <div>Owner</div>
            <!-- remove bold class by kapil - 100614 - #509 -->
            <span id="owner-id" class="blue-text bold" title="@campaignReview.Owner">@campaignReview.Owner</span>
        </div>
        <div class="pull-left size65x38 margin-left20">
            <div class="integration-review"></div>
            <div>
                <label id="integration">Integration</label>
            </div>
            <!-- remove bold class by kapil - 100614 - #509 -->
            <span id="integration-id" class="blue-text bold" title="@IntegrationStatus">@IntegrationStatus</span>
        </div>
    </div>

    <div style="margin-bottom: 0px; width: 93%;margin-top:140px;">
        @if (CampaignLastSync != null)
        {
            <span style="font-family:'Helvetica Neue',Helvetica,Arial,sans-serif;font-size:11px;">Campaign last synced on @CampaignLastSync.ToString("MMM dd, yyyy ") at  @CampaignLastSync.ToString("hh:mm tt").ToLower()</span>
        }
</div>
</div>

<div class="span2 right-col-tab no_margin_top" id="inspect-modal-left-column2">
        <div class="inspect-bolder-label">Notes</div>
        <div id="divComment" class="chat-div" style="overflow: auto;height: 290px !important;">
            <div id="divInnerComment" class="comment-scroll-section all-height">
                @foreach (var item in ViewBag.ReviewModel)
                {
                    <div class="post-div" style="clear: both; width: 100%; border-bottom: solid 1px #A8A8A8;">
                        <div style="float: left; width: 10%;">
                            <img class="avatar-user" src="@Url.Action("LoadUserImage", "User", new { id = item.CreatedBy })" alt="User avatar" />
                        </div>
                        <div style="float: left; width: 90%;">
                            <span class="commentedby-color">@item.CommentedBy</span>
                            <span class="comment-color">@Html.Raw(item.Comment)</span><br />
                            <span class="font_size10" style="clear: both;">@item.CommentDate.ToString("MMM dd") at @item.CommentDate.ToString("hh:mmtt")</span>
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                                        
                }
            </div>
            <div></div>
        </div>
      @if ((bool)ViewBag.IsCommentsViewEditAuthorized)    //Modified By komal Rawal for #1158
    {
        <div class="padding-top10" id="commentsection">
            @Html.TextArea("txtAreaComment", new { id = "txtAreaComment", @class = "new-comment light-blue-background" })
            <img id="btnComment" src="~/Content/images/chat-button.png"  alt="" style="float: right;" />
        </div>
      }
      else
    {
    <div class="padding-top10" >
            @Html.TextArea("txtAreaComment", new { id = "txtAreaComment", @class = "new-comment light-gray-background" })
            <img  src="~/Content/images/chat-button-gray.png"  alt="" style="float: right;" />
        </div>
    }


</div>



<div class="border-top-div cf pull-left margin-top10 margin-bottom20" style="width: 100%;">


    @{
        
        string Submit = "Submit for Approval";
        string Approve = "Approve";
        string Reject = "Decline";
        List<string> aryStatus = new List<string>();
        bool isVisibleStatus = true;

        var countNotCreatedTactic = 0;
        var countNotCreatedProgram = 0;
        var countNotApprovedTactic = 0;
        var countNotSubmittedTactic = 0;
        var countNotApprovedProgram = 0;
        var countNotSubmittedProgram = 0;
        var countNotDeclineTactic = 0;
        var countNotDeclineProgram = 0;

        string statuscreate = RevenuePlanner.Helpers.Enums.TacticStatusValues[RevenuePlanner.Helpers.Enums.TacticStatus.Created.ToString()].ToString();
        string statussubmit = RevenuePlanner.Helpers.Enums.TacticStatusValues[RevenuePlanner.Helpers.Enums.TacticStatus.Submitted.ToString()].ToString();
        string statusapprve = RevenuePlanner.Helpers.Enums.TacticStatusValues[RevenuePlanner.Helpers.Enums.TacticStatus.Approved.ToString()].ToString();
        string statusinprogress = RevenuePlanner.Helpers.Enums.TacticStatusValues[RevenuePlanner.Helpers.Enums.TacticStatus.InProgress.ToString()].ToString();
        string statuscomplete = RevenuePlanner.Helpers.Enums.TacticStatusValues[RevenuePlanner.Helpers.Enums.TacticStatus.Complete.ToString()].ToString();
        string statusdecline = RevenuePlanner.Helpers.Enums.TacticStatusValues[RevenuePlanner.Helpers.Enums.TacticStatus.Decline.ToString()].ToString();

        var tacticList = db.Plan_Campaign_Program_Tactic.Where(p => p.Plan_Campaign_Program.PlanCampaignId == campaignReview.PlanCampaignId && p.IsDeleted == false).ToList();
        countNotCreatedTactic = tacticList.Where(p => !p.Status.Equals(statuscreate)).Count();
        countNotApprovedTactic = tacticList.Where(p => !p.Status.Equals(statusapprve) && !p.Status.Equals(statusinprogress) && !p.Status.Equals(statuscomplete)).Count();
        countNotSubmittedTactic = tacticList.Where(p => !p.Status.Equals(statussubmit)).Count();
        countNotDeclineTactic = tacticList.Where(p => !p.Status.Equals(statusdecline)).Count();

        countNotCreatedTactic = db.Plan_Campaign_Program_Tactic.Where(p => p.Plan_Campaign_Program.PlanCampaignId == campaignReview.PlanCampaignId && p.IsDeleted == false && !p.Status.Equals(statuscreate)).Count();
        countNotApprovedTactic = db.Plan_Campaign_Program_Tactic.Where(p => p.Plan_Campaign_Program.PlanCampaignId == campaignReview.PlanCampaignId && p.IsDeleted == false && (!p.Status.Equals(statusapprve) && !p.Status.Equals(statusinprogress) && !p.Status.Equals(statuscomplete))).Count();
        countNotSubmittedTactic = db.Plan_Campaign_Program_Tactic.Where(p => p.Plan_Campaign_Program.PlanCampaignId == campaignReview.PlanCampaignId && p.IsDeleted == false && !p.Status.Equals(statussubmit)).Count();
        countNotDeclineTactic = db.Plan_Campaign_Program_Tactic.Where(p => p.Plan_Campaign_Program.PlanCampaignId == campaignReview.PlanCampaignId && p.IsDeleted == false && !p.Status.Equals(statusdecline)).Count();

        var programList = db.Plan_Campaign_Program.Where(p => p.PlanCampaignId == campaignReview.PlanCampaignId && p.IsDeleted == false).ToList();
        countNotCreatedProgram = programList.Where(p => !p.Status.Equals(statuscreate)).Count();
        countNotApprovedProgram = programList.Where(p => !p.Status.Equals(statusapprve) && !p.Status.Equals(statusinprogress) && !p.Status.Equals(statuscomplete)).Count();
        countNotSubmittedProgram = programList.Where(p => !p.Status.Equals(statussubmit)).Count();
        countNotDeclineProgram = programList.Where(p => !p.Status.Equals(statusdecline)).Count();

        bool isVisibleSyncButton = false;   // Display sync button only when Tactic status from "Approved, In-Progress or Completed".
        if (campaignReview.Status.Equals(RevenuePlanner.Helpers.Enums.TacticStatusValues[RevenuePlanner.Helpers.Enums.TacticStatus.Created.ToString()].ToString()))
        {

            if ((bool)ViewBag.IsValidOwner)
            {

                if (countNotSubmittedTactic == 0 && countNotSubmittedProgram == 0)
                {
                    aryStatus.Add(Submit);
                }
                else if (countNotCreatedTactic == 0 && countNotCreatedProgram == 0)
                {
                    aryStatus.Add(Submit);
                }
            }
            else
            {
                isVisibleStatus = false;
            }
        }
        else if (campaignReview.Status.Equals(RevenuePlanner.Helpers.Enums.TacticStatusValues[RevenuePlanner.Helpers.Enums.TacticStatus.Submitted.ToString()].ToString()))
        {
            if ((bool)ViewBag.IsValidManagerUser)//if ((bool)ViewBag.isValidDirectorUser)
            {
                if (countNotApprovedTactic != 0 && countNotApprovedProgram != 0)
                {
                    aryStatus.Add(Approve);
                    aryStatus.Add(Reject);
                }
                else
                {
                    isVisibleStatus = false;
                }
            }
            else
            {
                isVisibleStatus = false;
            }
        }
        else if (campaignReview.Status.Equals(RevenuePlanner.Helpers.Enums.TacticStatusValues[RevenuePlanner.Helpers.Enums.TacticStatus.Approved.ToString()].ToString()))
        {
            if ((bool)ViewBag.IsValidManagerUser)
            {
                aryStatus.Add(Reject);
            }
            else
            {
                isVisibleStatus = false;
            }
            isVisibleSyncButton = true;
        }
        else if (campaignReview.Status.Equals(RevenuePlanner.Helpers.Enums.TacticStatusValues[RevenuePlanner.Helpers.Enums.TacticStatus.Decline.ToString()].ToString()))
        {
            if ((bool)ViewBag.IsValidManagerUser)
            {
                if ((bool)ViewBag.IsValidOwner)
                {
                    if (countNotDeclineProgram == 0 && countNotDeclineTactic == 0)
                    {
                        aryStatus.Add(Submit);
                    }
                }
                else
                {
                    if (countNotDeclineProgram == 0 && countNotDeclineTactic == 0)
                    {
                        aryStatus.Add(Approve);
                    }
                }
            }
            else
            {
                if ((bool)ViewBag.IsValidOwner)
                {
                    if (countNotDeclineProgram == 0 && countNotDeclineTactic == 0)
                    {
                        aryStatus.Add(Submit);
                    }
                }
                else
                {
                    isVisibleStatus = false;
                }
            }
        }
        else
        {
            if ((bool)ViewBag.IsValidManagerUser)
            {
                aryStatus.Add(Reject);
            }
            else
            {
                isVisibleStatus = false;
            }
            isVisibleSyncButton = true;
        }

        if (IsCampaignEditable)
        {
            // Show Sync button when Integration InstanceType is "Salesforce". Implement this by "isInstanceSalesfore" flag from controller.
            if ((bool)ViewBag.IsModelDeploy && (bool)campaignReview.IsDeployedToIntegration && isVisibleSyncButton && isInstanceSalesforce)
            {
        <div class="margin-top23 margin-right10" style="float: left;">
            <div id="btn_sync_status" class="btn-group dropup">
                <button id="btnSync" class="btn buttom-width resize-drop-button without-border-buttom displayinherit  btn-blue text-shadow-blue source-sans-proregular" style="width: 65px; border-radius: 4px;">
                                  <span class="flag-icon sync-icon-dropdown"></span>
                                  <span id="spanSyncStatus">Sync</span>
                              </button>
                    @*<button id="btnSync" class="btn buttom-width resize-drop-button without-border-buttom displayinherit  btn-blue text-shadow-blue source-sans-proregular" style="width: 65px;">
                    <span class="flag-icon sync-icon-dropdown"></span>
                    <span id="spanSyncStatus">
                        @if (campaignReview.IsDeployedToIntegration)
                        {
                            @Html.Raw("Sync")
                        }
                        else
                        {
                            @Html.Raw("Don't Sync") 
                        }

                    </span>
                </button>
                @if (campaignReview.IsDeployedToIntegration)
                {
                    @Html.Hidden("hdnSyncStatusValue", "Sync", new { id = "hdnSyncStatusValue" });
                }
                else
                {
                    @Html.Hidden("hdnSyncStatusValue", "Don't Sync", new { id = "hdnSyncStatusValue" });
                }
                <button data-toggle="dropdown" class="btn dropdown-toggle height25 btn-blue displayinherit">
                    <span class="caret "></span>
                </button>
                <ul class="dropdown-menu " id="uldivSync">
                    <li>
                        <a id="aSync">Sync</a>
                    </li>
                    <li>
                        <a id="aNotSync">Don't Sync</a>
                    </li>
                    </ul>*@

            </div>
        </div> 
            }
        }

        if (isVisibleStatus)
        {
            int len = aryStatus.Count;
            if (len > 0)
            {
                string firstStatus = aryStatus[0];
               
        <div class="margin-top23" style="float: left;">
            <div id="btn_change_status" class="btn-group dropup">
                <button id="btnApproved" class="btn buttom-width resize-drop-button without-border-buttom displayinherit  btn-blue text-shadow-blue source-sans-proregular" style="width: 125px;">
                    <span class="flag-icon approve-icon-dropdown"></span>
                    <span id="spanTactic">@firstStatus</span>
                </button>
                @Html.Hidden("hdnStatusValue", firstStatus, new { id = "hdnStatusValue" });
                    @if (len >= 2)
                    {   
                        <button data-toggle="dropdown" class="btn dropdown-toggle height25 btn-blue displayinherit">
                            <span class="caret "></span>
                        </button>
                                              
                        <ul class="dropdown-menu " id="uldiv">
                            @foreach (string s in aryStatus)
                            {
                                <li>
                                    <a>@s</a>
                                </li>
                            }
                        </ul>
                        
                        <script type="text/javascript">
                            $("#btnApproved").css("width", "90px");
                        </script>
                        
                    }
                    else
                    {
                        <script type="text/javascript">
                            $("#btnApproved").css("border-radius", "4px");
                        </script>
                    }

            </div>

        </div> 
            }
        }
    }

    <div style="float: left; margin-left: 10px;" class="margin-top23">
        <button class="btn btn-blue text-shadow-blue source-sans-proregular  button-inspect-result-modal pull-right  resize-button btn-blue share-tactic-icon" id="BtnShareTactic" type="button" style="width: 80px;"><span class="flag-icon"></span>Share </button>
    </div>

</div>

<div id="DivPartialShareTactic">
</div>
<script type="text/javascript">
    var strViewMode = 'View';
    $(document).ready(
      function () {

          //Added By : Kalpesh Sharma
          //PL #508 Set format for label in tool tip
          $('.addFormatterActualNumber').each(function () {
              SetPriceValue($(this));
          });

          //Added by Komal Rawal for ticket #1158
         
          if ($('#txtAreaComment').hasClass('light-gray-background'))
          {
              $('#txtAreaComment').attr("disabled", "disabled");
          }
          //End


          $("#BtnShareTactic").click(function () {
              $("#DivPartialShareTactic").empty();
              var url = '@Url.Content("~/Inspect/ShowShareTactic/")';
              $("#DivPartialShareTactic").load(url + '?planTacticId=' + $('#hdnPlanCampaignId').val() + '&section=campaign');
          });

          $("#uldiv li a").click(function () {
              $("#spanTactic").html($(this).text());
              $("#hdnStatusValue").val($(this).text());
          });

          $("#btnSync").click(function () {
              var IsDeployedToIntegration = false;
              IsDeployedToIntegration = '@campaignReview.IsDeployedToIntegration';
              //var spanSyncStatus = $("#hdnSyncStatusValue").val();
              //if (spanSyncStatus == 'Sync') {
              //    IsDeployedToIntegration = true;
              //}
              var PlanCampaignId = $('#hdnPlanCampaignId').val();

              $.ajax({
                  type: 'POST',
                  url: '@Url.Content("~/Inspect/SaveSyncToIntegration/")',
                  data: {
                      id: PlanCampaignId,
                      section: "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Campaign).ToLower()" //section parameter added to save tactic comment
                      //IsDeployedToIntegration: IsDeployedToIntegration
                  },
                  success: function (data) {
                      if (data.result) {
                          /*Added by Mitesh Vaishnav for PL ticket #690 
                        Change of sync to don’t sync or vice versa integration section update to 'Yes' and 'No'  */
                          if ('@campaignReview.IsIntegrationInstanceExist' == 'Yes') {
                              if (IsDeployedToIntegration) {
                                  $('#integration-id').html('Yes')
                              }
                              else {
                                  $('#integration-id').html('No')
                              }
                          }
                          /*End : Added by Mitesh Vaishnav for PL ticket #690 */

                          var inspectMode = '';
                          var IsEditable = $("#hdnCampaignOpt").val();
                          if (IsEditable == strViewMode.toString())
                              inspectMode = '@Enums.InspectPopupMode.ReadOnly.ToString()';
                          else
                              inspectMode = '@Enums.InspectPopupMode.Edit.ToString()';
                          var requestedModule = $("#hdnRedirectType").val();
                          loadReview($('#hdnPlanCampaignId').val(), TabReview);

                          $("#successMessage").css("display", "block");
                          $("#spanMessageSuccess").empty();
                          $("#spanMessageSuccess").text(data.msg);
                      }
                  },
                  error: function () {
                      $("#errorMessage").css("display", "block");
                      $("#spanMessageError").empty();
                      GoToLogin();
                      return false;
                  }
              });
          });

          //$("#uldivSync li a").click(function () {
          //    $("#spanSyncStatus").html($(this).text());
          //    $("#hdnSyncStatusValue").val($(this).text());

          //});


          var divheight = $("#divInnerComment").height();
          $("#divComment").scrollTop(divheight);

          // On Comment Button Save Commnet
         
          $("#btnComment").click(function () {
              $("#successMessage").css("display", "none");
              $("#errorMessage").css("display", "none");
              /*Changed by Nirav Shah for Inspect pop-up screen : CSS changes as per new HTML on 13 feb 2014*/
              var commentText = $('#txtAreaComment').val();
              if (commentText == '') {
                  var msgspan = "@Common.objCached.ValidateForEmptyFieldAndValid";
                  $("#errorMessage").css("display", "block");
                  /*end*/
                  $("#txtAreaComment").addClass("error");
                  $("#spanMessageError").text(msgspan);
                  return false;
              }
              else {
                  $("#txtAreaComment").removeClass("error");
              }

              var PlanTacticId = $('#hdnPlanCampaignId').val();
              $.ajax({
                  type: 'POST',
                  url: '@Url.Content("~/Inspect/SaveComment/")',
                  data: {
                      comment: commentText,
                      planTacticId: PlanTacticId,
                      section: "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Campaign).ToLower()"
                  },
                  success: function (data) {
                      if (data != 'undefined') {
                          if (data.serviceUnavailable != 'undefined' && data.serviceUnavailable == '#') {
                              window.location = '@Url.Content(Common.RedirectOnServiceUnavailibilityPage)';
                          } else {
                          if (data.id != 0) {
                              $("#successMessage").css("display", "block");
                              /*Changed by Nirav Shah for Inspect pop-up screen : CSS changes as per new HTML on 13 feb 2014*/
                              /*end*/
                              $("#spanMessageSuccess").empty();
                              $("#spanMessageSuccess").text(data.msg);
                              var inspectMode = '';
                              var IsEditable = $("#hdnCampaignOpt").val();
                              if (IsEditable == strViewMode.toString())
                                  inspectMode = '@Enums.InspectPopupMode.ReadOnly.ToString()';
                            else
                                inspectMode = '@Enums.InspectPopupMode.Edit.ToString()';
                              var requestedModule = $("#hdnRedirectType").val();
                              //loadInspectPopup(data.id, "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Campaign).ToLower()", data.TabValue, inspectMode, 0, requestedModule);
                              loadReview(data.id, TabReview);
                          }
                          else {
                              $("#errorMessage").css("display", "block");

                              $("#spanMessageError").empty();
                              $("#spanMessageError").text("@RevenuePlanner.Helpers.Common.objCached.InvalidError");
                              }
                          }
                      }
                  },
                  error: function () {
                      $("#errorMessage").css("display", "block");
                      /*Changed by Nirav Shah for Inspect pop-up screen : CSS changes as per new HTML on 13 feb 2014*/
                      /*end*/
                      $("#spanMessageError").empty();
                      GoToLogin();
                      return false;
                  }
              });
          });
          

          // Click on Approved Button Save Comment & Change Status
          $("#btnApproved").click(function () {
              $("#successMessage").css("display", "none");
              $("#errorMessage").css("display", "none");
              /*Changed by Nirav Shah for Inspect pop-up screen : CSS changes as per new HTML on 13 feb 2014*/
              statusValue = $("#hdnStatusValue").val();
              var PlanTacticId = $('#hdnPlanCampaignId').val();
              var stat = "@RevenuePlanner.Helpers.Enums.TacticStatusValues[RevenuePlanner.Helpers.Enums.TacticStatus.Approved.ToString()].ToString()";
              if (statusValue == "Submit for Approval") {
                  stat = "@RevenuePlanner.Helpers.Enums.TacticStatusValues[RevenuePlanner.Helpers.Enums.TacticStatus.Submitted.ToString()].ToString()";
              }
              else if (statusValue == "Approve") {
                  stat = "@RevenuePlanner.Helpers.Enums.TacticStatusValues[RevenuePlanner.Helpers.Enums.TacticStatus.Approved.ToString()].ToString()";
              }
              else if (statusValue == "Decline") {
                  stat = "@RevenuePlanner.Helpers.Enums.TacticStatusValues[RevenuePlanner.Helpers.Enums.TacticStatus.Decline.ToString()].ToString()";
              }

              var RedirectType = $("#hdnRedirectType").val();

              $.ajax({
                  type: 'POST',
                  url: '@Url.Content("~/Inspect/ApprovedTactic/")',
                  data: {
                      status: stat,
                      planTacticId: PlanTacticId,
                      section: "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Campaign).ToLower()"
                  },
                  success: function (data) {
                      if (data != 'undefined') {
                          if (data.serviceUnavailable != 'undefined' && data.serviceUnavailable == '#') {
                              window.location = '@Url.Content(Common.RedirectOnServiceUnavailibilityPage)';
                          }
                          else {
                          if (data.id != 0) {
                              $("#successMessage").css("display", "block");
                              /*Changed by Nirav Shah for Inspect pop-up screen : CSS changes as per new HTML on 13 feb 2014*/

                              $("#spanMessageSuccess").empty();
                              $("#spanMessageSuccess").text(data.msg);
                              var inspectMode = '';
                              var IsEditable = $("#hdnCampaignOpt").val();
                              if (IsEditable == strViewMode.toString())
                                  inspectMode = '@Enums.InspectPopupMode.ReadOnly.ToString()';
                              else
                                  inspectMode = '@Enums.InspectPopupMode.Edit.ToString()';
                              var requestedModule = $("#hdnRedirectType").val();
                              loadInspectPopup(data.id, "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Campaign).ToLower()", data.TabValue, inspectMode, 0, requestedModule);

                              //Added By : Kalpesh Sharma Internal review points 18/11/2014
                              if (RedirectType == "@Enums.InspectPopupRequestedModules.Index.ToString()") {
                                RefershPlanHeaderCalc();
                              }
                              else if (RedirectType == "@Enums.InspectPopupRequestedModules.ApplyToCalendar.ToString()") {
                                  var _planId = $('#PlanId').val();  //// Get PlanId value from ApplyToCalendar page.
                                  GetHealderData(_planId);    //// Called HeaderData function exist in ApplyToCalendar Page.
                                  GetNumberOfActivityPerMonByPlanId(_planId, ''); //// Called HeaderData function exist in ApplyToCalendar Page.
                            }

                          }
                          else {
                              $("#errorMessage").css("display", "block");
                              /*Changed by Nirav Shah for Inspect pop-up screen : CSS changes as per new HTML on 13 feb 2014*/

                              $("#spanMessageError").empty();
                              $("#spanMessageError").text("@RevenuePlanner.Helpers.Common.objCached.InvalidError");
                          }
                          }
                      }
                  },
                  error: function () {
                      $("#errorMessage").css("display", "block");
                      /*Changed by Nirav Shah for Inspect pop-up screen : CSS changes as per new HTML on 13 feb 2014*/

                      $("#spanMessageError").empty();
                      GoToLogin();
                      return false;
                  }
              });
          });

        //// Slim Scroll bar for comment div.
        var r = $('#content_wraper').height() - 170;
        $('.comment-scroll-section').css('height', r);
        $(function () {
            $('.comment-scroll-section').slimScroll();
        });
        function toggleChevron(e) {
            $(e.target)
            .prev('.accordion-heading')
            .find("i.indicator")
            .toggleClass('glyphicon-chevron-down glyphicon-chevron-up');
        }
        $('.accordion').on('hidden.bs.collapse', toggleChevron);
        $('.accordion').on('shown.bs.collapse', toggleChevron);

      });
</script>
