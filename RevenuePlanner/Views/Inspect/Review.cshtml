@using RevenuePlanner.Helpers
@{
    var tacticReview = (RevenuePlanner.Models.InspectModel)ViewBag.TacticDetail;
    bool ShowMQL = (bool)ViewBag.ShowMQL;
    bool IsDeployToIntegrationVisible = (bool)ViewBag.IsDeployToIntegrationVisible;
    ////Added by Mitesh Vaishnav for PL ticket #690 Model Interface - Integration
    string IntegrationStatus = tacticReview.IsIntegrationInstanceExist;
    if (tacticReview.IsIntegrationInstanceExist == "Yes" && !tacticReview.IsDeployedToIntegration)
    {
        IntegrationStatus = "No";
    }
    var INQLastSync = ViewBag.INQLastSync;
    var CWLastSync = ViewBag.CWLastSync;
    var MQLLastSync = ViewBag.MQLLastSync;
    var TacticLastSync = ViewBag.TacticLastSync;
    var tacticIntegrationInstance = ViewBag.TacticIntegrationInstance;
    var tacticIntegrationProjMgmtInstance = ViewBag.TacticIntegrationProjMgmtInstance;
    List<RevenuePlanner.Models.CustomFieldReviewTab> topThreeCustomFields = ViewBag.TopThreeCustomFields;
}

    <div class="span5 width360" id="inspect-modal-right-div" style="width: 42% !important">
        <div style="padding-bottom: 16px; margin-bottom: 24px;" class="span5 width96 border-bottom-div">
            <div style="float: left; width: 48%; border-right: 1px solid #b2afaf">
                <div class="source-sans-prosemibold">Parent Campaign</div>
                <div>
                    <div id="campaign-title1" class="sub-head" title="@Html.Raw(tacticReview.CampaignTitle)">@Html.Raw(tacticReview.CampaignTitle)</div>
                </div>
            </div>
            <div style="float: right; width: 47%;">
                <div class="source-sans-prosemibold">Parent Program</div>
                <div>
                    <div id="program-title1" class="sub-head" title="@Html.Raw(tacticReview.ProgramTitle)">@Html.Raw(tacticReview.ProgramTitle)</div>
                </div>
            </div>
        </div>
        <div class="cf source-sans-proregular padding-top32" style="padding-top: 26px !important;">
            <div class="chart-gray pull-left size80x78 without-padding remove-box-shadow review-box">
                <div class="padding-top16"><span id="startDay-id" class="font_size30" style="line-height: 24px;">@tacticReview.StartDate.ToString("dd")</span></div>
                @* Modified By :- Sohel Pathan on 21/05/2014 for PL ticket #483. *@
                <span id="startMonth-id" class="font_size16">@tacticReview.StartDate.ToString("MMM")</span>
                <div class="margin-top16" style="margin-top:20px !important;">Start</div>
                @* Modified By :- Sohel Pathan on 21/05/2014 for PL ticket #483. *@
            </div>
            <div class="chart-gray pull-left size80x78 without-padding remove-box-shadow review-box">
                <div class="padding-top16"><span id="endDay-id" class="font_size30" style="line-height: 24px;">@tacticReview.EndDate.ToString("dd")</span></div>
                @* Modified By :- Sohel Pathan on 21/05/2014 for PL ticket #483. *@
                <span id="endMonth-id" class="font_size16">@tacticReview.EndDate.ToString("MMM")</span>
                <div class="margin-top16" style="margin-top:20px !important;">End</div>
                @* Modified By :- Sohel Pathan on 21/05/2014 for PL ticket #483. *@
            </div>
            <div class="chart-gray pull-left size80x78 without-padding remove-box-shadow review-box">
                <div class="padding-top16"><span id="inq-id" class="font_size30 addFormatterActualNumber" style="line-height: 24px;">@tacticReview.ProjectedStageValue</span></div>
                @* Modified By :- Sohel Pathan on 21/05/2014 for PL ticket #483. *@
                <span class="font_size16" title="@tacticReview.StageTitle">@tacticReview.StageTitle</span>
                <div class="margin-top16" style="margin-top:20px !important;">
                    Goal
                    @if (ViewBag.IsDiffrentStageType == true)
                    {
                        <img id="diffrentStageIcon" src="~/Content/images/flag-icon.png" title="Please note that the stage information at plan level is different than that at the model level" />
                    
                    }
                </div>
                @* Modified By :- Sohel Pathan on 21/05/2014 for PL ticket #483. *@
            </div>
            @if (ShowMQL)
            {
                <div class="chart-gray pull-left size80x78 without-padding remove-box-shadow review-box review-box-last">
                    <div class="padding-top16"><span id="mqls-id" class="font_size30 addFormatterActualNumber" style="line-height: 24px;">@tacticReview.MQLs</span></div>
                    @* Modified By :- Sohel Pathan on 21/05/2014 for PL ticket #483. *@
                    <span class="font_size16" title="@Html.LabelForMQL("MQL")">@Html.LabelForMQL("MQL")</span>
                    <div class="margin-top16" style="margin-top:20px !important;">Goal</div>
                    @* Modified By :- Sohel Pathan on 21/05/2014 for PL ticket #483. *@
                </div>
            }
        </div>
        <div class="cf margin-top40 width96 textalign-mozcenter border-bottom-div" style="padding-bottom: 5px;">

            <div class="pull-left size65x38">
                <div class="owner"></div>
                <div>Owner</div>
                <span id="owner-id" class="blue-text bold" title="@tacticReview.Owner">@tacticReview.Owner</span>
            </div>
            <!--Moved Integration review to new div; Brad Gray PL#1462 8 Aug 2015-->
            @foreach (var item in topThreeCustomFields)
            {
                string marginLeft20 = "margin-left20";
                <div class="pull-left size65x38 @marginLeft20">
                    <div class="@item.Class"></div>
                    <span class="font14 customfield-review" title="@item.Name">@item.Name</span>
                    @if (item.Value != null)
                    {
                        <span class="blue-text bold" title="@item.Value">@item.Value</span>
                    }
                    else
                    {
                        <span class="blue-text bold" title="N/A">N/A</span>
                    }
                </div>
            }

        </div>


        <!--Begin PL#1462 07 Brad Gray, Aug 2015--> 
        
        <div class="cf margin-top20 width96 textalign-mozcenter" style="padding-bottom: 5px;">
            <div class="cf textalign-mozcenter" style="padding-bottom: 5px;">
                <div class="span3">
                    <div class="pull-left size65x38">
                        <div class="integration-review"></div>
                        <div>
                            <label class="integrration_label_align" id="integration">Integration</label>
                        </div>
                        <span id="integration-id" class="blue-text bold" title="@IntegrationStatus">@IntegrationStatus</span>
                    </div>
                </div>
                <div class="span9">
                    @{
                        foreach (var item in ViewBag.IntegrationTypeLinks)
                        {
                            <div class="pull-left margin-right10 integration-review-imglink">
                                <a href=@item.Value onclick="window.open(this.href); return false;">
                                    <div class="link_popup pull-right margin-bottom10"></div>
                                    @{
                                        if (item.Key == Enums.IntegrationType.Eloqua.ToString())
                                        {
                                                <div class="eloqua-img margin-top18"></div>
                                        }
                                        else if (item.Key == Enums.IntegrationType.Salesforce.ToString())
                                        {
                                            <div class="salesforce-img margin-top10"></div>
                                        }
                                        else if (item.Key == Enums.IntegrationType.WorkFront.ToString())
                                        {
                                            <div class="workfront-img margin-top23"></div>
                                        }
                                        }
                                 </a>
                              </div>
                           }
                     }
                </div>
            </div>
        </div>
        
        <!--End PL#1462 07 Brad Gray, Aug 2015--> 

            @*Start -Added by Mitesh Vaishnav for PL ticket #690 Model Interface - Integration*@
            <div style="margin-bottom: 0px; width: 93%;margin-top:33px;">
                @if (tacticIntegrationInstance != null || tacticIntegrationProjMgmtInstance !=null)
                {
                    if (INQLastSync != null)
                    {
                        <span style="font-family: 'Helvetica Neue',Helvetica,Arial,sans-serif; font-size: 11px;">@Html.LabelForINQ("INQ") synced on @INQLastSync.ToString("MMM dd, yyyy") at @INQLastSync.ToString("hh:mm tt").ToLower() </span>
                        <br />
                    }
                    if (MQLLastSync != null)
                    {
                        <span style="font-family:'Helvetica Neue',Helvetica,Arial,sans-serif;font-size:11px;">@Html.LabelForMQL("MQL") synced on @MQLLastSync.ToString("MMM dd, yyyy") at @MQLLastSync.ToString("hh:mm tt").ToLower()</span>
                        <br />
                    }
                    if (CWLastSync != null)
                    {
                        <span style="font-family:'Helvetica Neue',Helvetica,Arial,sans-serif;font-size:11px;">@Html.LabelForCW("CW") synced on @CWLastSync.ToString("MMM dd, yyyy ") at  @CWLastSync.ToString("hh:mm tt").ToLower()</span>
                        <br />
                    }
                    if (TacticLastSync != null)
                    {
                        <span style="font-family:'Helvetica Neue',Helvetica,Arial,sans-serif;font-size:11px;">Tactic last synced on @TacticLastSync.ToString("MMM dd, yyyy ") at  @TacticLastSync.ToString("hh:mm tt").ToLower()</span>
                    }
                }
                else
                {
                    <span style="font-family:'Helvetica Neue',Helvetica,Arial,sans-serif;font-size:11px;">Tactic not synced</span>
                }
                @*End -Added by Mitesh Vaishnav for PL ticket #690 Model Interface - Integration*@
            </div>
        </div>

    <div class="span2 right-col-tab no_margin_top" id="inspect-modal-left-column2">

        <div class="inspect-bolder-label">Notes</div>
     
        <div id="divComment" class="chat-div" style="overflow: auto;height: 350px !important;">
            <div id="divInnerComment" class="comment-scroll-section all-height90" >
                @foreach (var item in ViewBag.ReviewModel)
                {
                    <div class="post-div" style="clear: both; width: 100%; border-bottom: solid 1px #A8A8A8;">
                        <div style="float: left; width: 10%;">
                            <img class="avatar-user" src="@Url.Action("LoadUserImage", "User", new { id = item.CreatedBy })" alt="User avatar" />
                        </div>
                        <div style="float: left; width: 90%;">
                            <span class="commentedby-color">@item.CommentedBy</span>
                            <span class="comment-color">@Html.Raw(item.Comment)</span><br />
                            <span class="font_size10" style="clear: both;">@item.CommentDate.ToString("MMM dd") at @item.CommentDate.ToString("hh:mmtt")</span>
                        </div>
                        <div style="clear: both;"></div>
                    </div>
                                        
                }
            </div>
            <div></div>
        </div>

        @if ((bool)ViewBag.IsCommentsViewEditAuthorized)    //Modified By komal Rawal for #1158
        {
          <div class="padding-top10" id="commentsection">
                @Html.TextArea("txtAreaComment", new { id = "txtAreaComment", @class = "new-comment light-blue-background" })
                <img id="btnComment" src="~/Content/images/chat-button.png" alt="" style="float: right;" />
            </div>
        }
        else
        {
            <div class="padding-top10" >
                @Html.TextArea("txtAreaComment", new { id = "txtAreaComment", @class = "new-comment light-gray-background" })
                <img  src="~/Content/images/chat-button-gray.png" alt="" style="float: right;" />
        </div>
        }
   
    </div>



<div class="border-top-div cf pull-left margin-top10 margin-bottom20" style="width: 100%;">



            @{    
                //Modified By Komal Rawal for #1375
                string Submit = "Submit for Approval";
                string Approve = "Approve";
                string Reject = "Decline";
                List<string> aryStatus = new List<string>();
                bool isVisibleStatus = true;
                bool isVisibleSyncButton = false;   // Display sync button only when Tactic status from "Approved, In-Progress or Completed".
                if (tacticReview.Status.Equals(RevenuePlanner.Helpers.Enums.TacticStatusValues[RevenuePlanner.Helpers.Enums.TacticStatus.Created.ToString()].ToString()))
                {
                    if ((bool)ViewBag.IsEditable)
                    {
                        aryStatus.Add(Submit);
                    }
                    else
                    {
                        isVisibleStatus = false;
                    }
                }
                else if (tacticReview.Status.Equals(RevenuePlanner.Helpers.Enums.TacticStatusValues[RevenuePlanner.Helpers.Enums.TacticStatus.Submitted.ToString()].ToString()))
                {
                    if ((bool)ViewBag.IsValidManagerUser && ViewBag.IsEditable)
                    {
                        aryStatus.Add(Approve);
                        aryStatus.Add(Reject);
                    }
                    else
                    {
                        isVisibleStatus = false;
                    }
                }
                else if (tacticReview.Status.Equals(RevenuePlanner.Helpers.Enums.TacticStatusValues[RevenuePlanner.Helpers.Enums.TacticStatus.Approved.ToString()].ToString()))
                {
                    if ((bool)ViewBag.IsValidManagerUser && ViewBag.IsEditable)
                    {
                        aryStatus.Add(Reject);
                    }
                    else
                    {
                        isVisibleStatus = false;
                    }
                    isVisibleSyncButton = true;
                }
                else if (tacticReview.Status.Equals(RevenuePlanner.Helpers.Enums.TacticStatusValues[RevenuePlanner.Helpers.Enums.TacticStatus.Decline.ToString()].ToString()))
                {
                    if ((bool)ViewBag.IsValidManagerUser && ViewBag.IsEditable)
                    {
                        if ((bool)ViewBag.IsValidOwner)
                        {
                            
                            aryStatus.Add(Submit);
                        }
                        else
                        {
                            aryStatus.Add(Approve);
                        }
                    }
                    else
                    {
                        if ((bool)ViewBag.IsValidOwner && ViewBag.IsEditable)
                        {
                            aryStatus.Add(Submit);
                        }
                        else
                        {
                            isVisibleStatus = false;
                        }
                    }
                }
                else
                {
                    if ((bool)ViewBag.IsValidManagerUser && ViewBag.IsEditable)
                    {
                        aryStatus.Add(Reject);
                    }
                    else
                    {
                        isVisibleStatus = false;
                    }
                    isVisibleSyncButton = true;
                }

               /*
                 Begin PL#1462 07 Brad Gray, Aug 2015 * */


                /* --Remove Sync Button Brad Gray 07 Aug 2015 PL#1462
                * Left commented to be added back in after completion of PL#1468 */
                if (IsDeployToIntegrationVisible && isVisibleSyncButton && tacticReview.IsDeployedToIntegration)
                {
                    if ((bool)ViewBag.IsModelDeploy)
                    {
                <div id="divDeployToIntegration" class="margin-top23 margin-right10" style="float: left; display:none;">
                <div id="btn_sync_status" class="btn-group dropup">
                               <button id="btnSync" class="btn buttom-width resize-drop-button without-border-buttom displayinherit  btn-blue text-shadow-blue source-sans-proregular" style="width: 65px; border-radius: 4px;">
                                  <span class="flag-icon sync-icon-dropdown"></span>
                                  <span id="spanSyncStatus">Sync</span>
                              </button>

                               @*Below code commented by Viral kadiya to implement PL ticket #1468.*@
                              @* <button id="btnSync" class="btn buttom-width resize-drop-button without-border-buttom displayinherit  btn-blue text-shadow-blue source-sans-proregular" style="width: 65px;">
                        <span class="flag-icon sync-icon-dropdown"></span>
                        <span id="spanSyncStatus">
                            @if (tacticReview.IsDeployedToIntegration)
                            {
                                @Html.Raw("Sync")
                            }
                            else
                            {
                                @Html.Raw("Don't Sync") 
                            }

                        </span>
                    </button>
                               if (tacticReview.IsDeployedToIntegration)
                    {
                        @Html.Hidden("hdnSyncStatusValue", "Sync", new { id = "hdnSyncStatusValue" });
                    }
                    else
                    {
                        @Html.Hidden("hdnSyncStatusValue", "Don't Sync", new { id = "hdnSyncStatusValue" });
                    }
                    <button data-toggle="dropdown" class="btn dropdown-toggle height25 btn-blue displayinherit">
                        <span class="caret "></span>
                    </button>
                    <ul class="dropdown-menu " id="uldivSync">
                        <li>
                            <a id="aSync">Sync</a>
                        </li>
                        <li>
                            <a id="aNotSync">Don't Sync</a>
                        </li>
                               </ul>*@
                </div>
            </div> 
                    }
                }

                if (isVisibleStatus)
                {
                    int len = aryStatus.Count;
                    if (len > 0)
                    {
                        string firstStatus = aryStatus[0];
                
        <div class="margin-top23" style="float: left;">
            <div id="btn_change_status" class="btn-group dropup">
                <button id="btnApproved" class="btn buttom-width resize-drop-button without-border-buttom displayinherit  btn-blue text-shadow-blue source-sans-proregular" style="width: 125px;">
                    <span class="flag-icon approve-icon-dropdown"></span>
                    <span id="spanTactic">@firstStatus</span>
                </button>
                @Html.Hidden("hdnStatusValue", firstStatus, new { id = "hdnStatusValue" });
                    @if (len >= 2)
                    {
                        <button data-toggle="dropdown" class="btn dropdown-toggle height25 btn-blue displayinherit">
                            <span class="caret "></span>
                        </button>
                                              
                        <ul class="dropdown-menu " id="uldiv">
                            @foreach (string s in aryStatus)
                            {
                                <li>
                                    <a>@s</a>
                                </li>
                            }
                        </ul>
                        
                        <script type="text/javascript">
                            $("#btnApproved").css("width", "90px");
                        </script>
                    }
                    else
                    {
                        <script type="text/javascript">
                            $("#btnApproved").css("border-radius", "4px");
                        </script>
                    }

                </div>

            </div> 
                    }
                }
    }

    <div style="float: left; margin-left: 10px;" class="margin-top23">
        <button class="btn btn-blue text-shadow-blue source-sans-proregular  button-inspect-result-modal pull-right  resize-button btn-blue share-tactic-icon" id="BtnShareTactic" type="button" style="width: 80px;"><span class="flag-icon"></span>Share </button>
    </div>
</div>
<div id="DivPartialShareTactic">
</div>
<script type="text/javascript">
    var strViewMode = 'View';
    $(document).ready(function () {

        /*Added by Mitesh Vaishnav on 13/06/2014 to address #498 Customized Target Stage - Publish model */
        ImageTipsy('#diffrentStageIcon');
        /*NumberFormatterTipsyTitle(".tipsyclassTitle", 55);*/ //Commented by Arpita Soni on 02/01/15 for ticket #1082 
        //Added By : Pratik, Code review point changes 
        $('.addFormatterActualNumber').each(function () {
            SetPriceValue($(this));
        });

        //Added by Komal Rawal for ticket #1158
        if ($('#hdnIsPlanEditable').val().toString().toLowerCase() == 'true') {

        
            $('#divDeployToIntegration').css('display', 'block');

          }
          
		  if ($('#txtAreaComment').hasClass('light-gray-background')) {
            $('#txtAreaComment').attr("disabled", "disabled");
        }
        //End

        $("#BtnShareTactic").click(function () {
            $("#DivPartialShareTactic").empty();
            var url = '@Url.Content("~/Inspect/ShowShareTactic/")';
            $("#DivPartialShareTactic").load(url + '?planTacticId=' + $('#hdnPlanTacticId').val() + '&section=@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Tactic).ToLower()'); // section parameter added to open share tactic popup
        });

        $("#uldiv li a").click(function () {
            $("#spanTactic").html($(this).text());
            $("#hdnStatusValue").val($(this).text());
        });

        $("#btnSync").click(function () {

            var IsDeployedToIntegration = false;
            IsDeployedToIntegration = '@tacticReview.IsDeployedToIntegration';
            //var spanSyncStatus = $("#hdnSyncStatusValue").val();
            //if (spanSyncStatus == 'Sync') {
            //    IsDeployedToIntegration = true;
            //}
            var PlanTacticId = $('#hdnPlanTacticId').val();

            $.ajax({
                type: 'POST',
                url: '@Url.Content("~/Inspect/SaveSyncToIntegration/")',
                data: {
                    id: PlanTacticId,
                    section: "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Tactic).ToLower()" //section parameter added to save tactic comment
                    //IsDeployedToIntegration: IsDeployedToIntegration
                },
                success: function (data) {
                    if (data.result) {
                        /*Added by Mitesh Vaishnav for PL ticket #690 
                        Change of sync to don’t sync or vice versa integration section update to 'Yes' and 'No'  */
                        if ('@tacticReview.IsIntegrationInstanceExist' == 'Yes') {
                            if (IsDeployedToIntegration) {
                                $('#integration-id').html('Yes')
                            }
                            else {
                                $('#integration-id').html('No')
                            }
                        }
                        /*End : Added by Mitesh Vaishnav for PL ticket #690 */

                        var inspectMode = '';
                        var IsEditable = $("#hdnTacticBudgetAllocationOpt").val();
                        if (IsEditable == strViewMode.toString())
                            inspectMode = '@Enums.InspectPopupMode.ReadOnly.ToString()';
                        else
                            inspectMode = '@Enums.InspectPopupMode.Edit.ToString()';
                        var requestedModule = $("#hdnRequestedModule").val();
                        //alert("TacticID:" + $('#hdnPlanTacticId').val() + ", data.TabValue:" + TabReview + ", inspectMode:" + inspectMode + ", requestedModule:" + requestedModule);
                        loadInspectPopup($('#hdnPlanTacticId').val(), "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Tactic).ToLower()", TabReview, inspectMode, 0, requestedModule);
                        //loadReview($("#hdnPlanTacticId").val(), TabReview);

                        $("#successMessage").css("display", "block");
                        $("#spanMessageSuccess").empty();
                        $("#spanMessageSuccess").text(data.msg);
                    }
                },
                error: function () {
                    $("#errorMessage").css("display", "block");
                    $("#spanMessageError").empty();
                    GoToLogin();
                    return false;
                }
            });
        });

        //$("#uldivSync li a").click(function () {
        //    $("#spanSyncStatus").html($(this).text());
        //    $("#hdnSyncStatusValue").val($(this).text());
        //});

        var divheight = $("#divInnerComment").height();
        $("#divComment").scrollTop(divheight);

        // On Comment Button Save Commnet
       
        $("#btnComment").click(function () {
            $("#successMessage").css("display", "none");
            $("#errorMessage").css("display", "none");
            var commentText = htmlEncode($('#txtAreaComment').val());
            if (commentText == '') {
                var msgspan = "@Common.objCached.ValidateForEmptyFieldAndValid";
                $("#errorMessage").css("display", "block");
                /*Changed by Nirav Shah for Inspect pop-up screen : CSS changes as per new HTML on 13 feb 2014*/
                $("#txtAreaComment").addClass("error");
                $("#spanMessageError").text(msgspan);
                return false;
            }
            else {
                $("#txtAreaComment").removeClass("error");
            }

            var PlanTacticId = $('#hdnPlanTacticId').val();
            $.ajax({
                type: 'POST',
                url: '@Url.Content("~/Inspect/SaveComment/")',
                data: {
                    comment: commentText,
                    planTacticId: PlanTacticId,
                    section: "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Tactic).ToLower()" //section parameter added to save tactic comment
                },
                success: function (data) {
                    if (data != 'undefined') {
                        if (data.serviceUnavailable != 'undefined' && data.serviceUnavailable == '#') {
                            window.location = '@Url.Content(Common.RedirectOnServiceUnavailibilityPage)';
                        } else {
                        if (data.id != 0) {
                            $("#successMessage").css("display", "block");
                            /*Changed by Nirav Shah for Inspect pop-up screen : CSS changes as per new HTML on 13 feb 2014*/
                            $("#spanMessageSuccess").empty();
                            $("#spanMessageSuccess").text(data.msg);
                            var requestedModule = $("#hdnRequestedModule").val();
                            var IsEditable = $("#hdnTacticBudgetAllocationOpt").val();  
                            var inspectMode='';
                            if (IsEditable == strViewMode.toString())
                                inspectMode = '@Enums.InspectPopupMode.ReadOnly.ToString()';
                            else {
                                inspectMode = '@Enums.InspectPopupMode.Edit.ToString()';
                            }

                            // loadInspectPopup(data.id, "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Tactic).ToLower()", data.TabValue, inspectMode, 0, requestedModule);//section parameter passed to open tactic popup
                            loadReview($("#hdnPlanTacticId").val(), TabReview);
                        }
                        else {
                            $("#errorMessage").css("display", "block");
                            $("#spanMessageError").empty();
                            $("#spanMessageError").text("@RevenuePlanner.Helpers.Common.objCached.InvalidError");
                        }
                    }
                    }
                },
                error: function () {
                    $("#errorMessage").css("display", "block");
                    $("#spanMessageError").empty();
                    GoToLogin();
                    return false;
                }
            });
        });


        // Click on Approved Button Save Comment & Change Status
        $("#btnApproved").click(function () {
            $("#successMessage").css("display", "none");
            $("#errorMessage").css("display", "none");
            statusValue = $("#hdnStatusValue").val();
            var PlanTacticId = $('#hdnPlanTacticId').val();
            var stat = "@RevenuePlanner.Helpers.Enums.TacticStatusValues[RevenuePlanner.Helpers.Enums.TacticStatus.Approved.ToString()].ToString()";
            if (statusValue == "Submit for Approval") {
                stat = "@RevenuePlanner.Helpers.Enums.TacticStatusValues[RevenuePlanner.Helpers.Enums.TacticStatus.Submitted.ToString()].ToString()";
            }
            else if (statusValue == "Approve") {
                stat = "@RevenuePlanner.Helpers.Enums.TacticStatusValues[RevenuePlanner.Helpers.Enums.TacticStatus.Approved.ToString()].ToString()";
            }
            else if (statusValue == "Decline") {
                stat = "@RevenuePlanner.Helpers.Enums.TacticStatusValues[RevenuePlanner.Helpers.Enums.TacticStatus.Decline.ToString()].ToString()";
            }

            var RedirectType = $("#hdnRequestedModule").val();
            $.ajax({
                type: 'POST',
                url: '@Url.Content("~/Inspect/ApprovedTactic/")',
                data: {
                    status: stat,
                    planTacticId: PlanTacticId,
                    section: "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Tactic).ToLower()" //section parameter added to approve tactic
                },
                success: function (data) {
                    if (data != 'undefined') {
                        if (data.serviceUnavailable != 'undefined' && data.serviceUnavailable == '#') {
                            window.location = '@Url.Content(Common.RedirectOnServiceUnavailibilityPage)';
                        } else {
                        if (data.id != 0) {
                            $("#successMessage").css("display", "block");
                            $("#spanMessageSuccess").empty();
                            $("#spanMessageSuccess").text(data.msg);
                            var inspectMode = '';
                            var IsEditable = $("#hdnTacticBudgetAllocationOpt").val();
                                if (IsEditable == strViewMode.toString())
                                inspectMode = '@Enums.InspectPopupMode.ReadOnly.ToString()';
                            else
                                inspectMode = '@Enums.InspectPopupMode.Edit.ToString()';
                            var requestedModule = $("#hdnRequestedModule").val();
                            loadInspectPopup(data.id, "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Tactic).ToLower()", data.TabValue, inspectMode, 0, requestedModule);

                            //Added By : Kalpesh Sharma Internal review points 18/11/2014
                            
                            if (RedirectType == "@Enums.InspectPopupRequestedModules.Index.ToString()") {
                                RefershPlanHeaderCalc();
                                RefreshCurrentTab();//Added by Mitesh Vaishnav for PL ticket #1132
                                }
                            else if (RedirectType == "@Enums.InspectPopupRequestedModules.ApplyToCalendar.ToString()") {
                                    var _planId = $('#PlanId').val();  //// Get PlanId value from ApplyToCalendar page.
                                    GetHealderData(_planId);    //// Called HeaderData function exist in ApplyToCalendar Page.
                                    GetNumberOfActivityPerMonByPlanId(_planId, ''); //// Called HeaderData function exist in ApplyToCalendar Page.
                            }
                        }
                        else {
                            $("#errorMessage").css("display", "block");
                            $("#spanMessageError").empty();
                            $("#spanMessageError").text("@RevenuePlanner.Helpers.Common.objCached.InvalidError");
                        }
                        }
                    }
                },
                error: function () {
                    $("#errorMessage").css("display", "block");
                    $("#spanMessageError").empty();
                    GoToLogin();
                    return false;
                }
            });

        });

        //// Slim Scroll bar for comment div.
        var r = $('#content_wraper').height() - 170;
        $('.comment-scroll-section').css('height', r);
        $(function () {
            $('.comment-scroll-section').slimScroll();
        });
        function toggleChevron(e) {
            $(e.target)
            .prev('.accordion-heading')
            .find("i.indicator")
            .toggleClass('glyphicon-chevron-down glyphicon-chevron-up');
        }
        $('.accordion').on('hidden.bs.collapse', toggleChevron);
        $('.accordion').on('shown.bs.collapse', toggleChevron);

    });

</script>

<script>
    function GoToURL(url) {
        location.href=url;
    }
</script>