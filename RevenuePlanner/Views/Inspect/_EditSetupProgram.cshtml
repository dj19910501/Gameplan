@model RevenuePlanner.Models.Plan_Campaign_ProgramModel
@using RevenuePlanner.Helpers

@{
    var IsProgramEdit = ViewBag.IsProgramEdit != null ? (bool)ViewBag.IsProgramEdit : false;
    bool ExtIntService = (bool)ViewBag.ExtIntService;
    string CalledFromBudget = ViewBag.CalledFromBudget;
    string planRemainingBudget = Convert.ToString(ViewBag.planRemainingBudget);
    string CampaignTitle = ViewBag.CampaignTitle;
    string OwnerName = ViewBag.OwnerName;
    //// Flag to indicate unavailability of web service.
    //// Added By: Maninder Singh Wadhva on 11/24/2014.
    //// Ticket: 942 Exception handeling in Gameplan.
    bool isServiceUnavailable = Convert.ToBoolean(ViewBag.IsServiceUnavailable);
    string CurrencySymbol = Sessions.PlanCurrencySymbol; // Add By Rahul Shah #2511
}

@*<script src="~/Scripts/js/bootstrap-datepicker.js"></script>*@
<script src="~/Scripts/moment.min.js"></script>
<script src="~/Scripts/bootstrap-datetimepicker.js"></script>
<link href="~/Content/css/bootstrap-datetimepicker.css" rel="stylesheet" />
<style type="text/css">
    #dp_start,#dp_end    {
        padding-left:0px;
    }
    #divPartial .simpleSelectBox .sbHolder {
            background: url(@Url.Content("~/Content/images/button-arrow.png")) no-repeat scroll right 8px center #dff0f8 !important;
            box-shadow: 1px -8px 13px #dff0f8 inset, 0 1px 2px #ededed;
            margin-bottom: 0;
            z-index: auto;
    }
    #divPartial .ui-multiselect {
         background: none repeat scroll 0 0 #dff0f8 !important;
     }
    #divPartial .sbToggle {
        border-top: 4px solid #6d6d6d !important;
    }
    #divPartial .sbHolder {
        background-color: #dff0f8 !important;
        background-image:none;
    }
    @*start - Added by Viral Kadiya on 11/24/2014 for PL ticket #980.*@
    .inspect-column-parent input, .inspect-column-parent textarea {
    min-height: 22px !important;
    width: calc(100% - 12px) !important;
}
    .calendar-width {
    width: calc(100% - 30px) !important;
}
    .datepicker {
        padding:0px !important;
        margin-bottom:10px !important;
    }
    @*End - Added by Viral Kadiya on 11/24/2014 for PL ticket #980.*@
    @* Added by bhavesh #711 *@
     #multipleselect_ddlOwner {
        left: -3px !important;
        top: 29px !important;
        min-width:205px;
    }

</style>

<div id="frm_campaigns" name="frm_campaigns">

    @using (Html.BeginForm(new { id = "frmSaveProgram" }))
    {
        <script type="text/javascript">
            $(document).ready(function () {
                $(".selectBox select").selectbox();
            });
        </script>
        @Html.HiddenFor(model => model.PlanProgramId, new { id = "hdnPlanProgramId" })
        @Html.HiddenFor(model => model.PlanCampaignId, new { id = "hdnPlanCampaignId" })
        @Html.HiddenFor(model => model.CStartDate, new { id = "hdnCStartDate" })
        @Html.HiddenFor(model => model.CEndDate, new { id = "hdnCEndDate" })
        @Html.HiddenFor(model => model.TStartDate, new { id = "hdnTStartDate" })
        @Html.HiddenFor(model => model.TEndDate, new { id = "hdnTEndDate" })
        @Html.HiddenFor(model => model.IsDeployedToIntegration, new { id = "hdnIsDeployedToIntegration" })
        @Html.HiddenFor(model => model.ProgramBudget, new { id = "hdnOldProgramBudget" })
        @Html.Hidden("hdnRedirect", (bool)ViewBag.RedirectType, new { id = "hdnRedirectType" })
        @Html.HiddenFor(model => model.Description, new { id = "hdnDescription" })       @*Modified by Viral Kadiya on 11/15/2014 to resolve issue for PL ticket #794*@

        <div id="ProgramMainDiv" class="inspect-column-parent source-sans-proregular remove-bottom-border inspect-column-parent-reformatting inspect_attribute_parent" style="margin-bottom: 0px;">
            <div class="span6" id="inspect-modal-left-column1">
                <p>@Html.Raw("Parent Campaign")</p>
                @Html.TextBox("txtCampaign", HttpUtility.HtmlDecode(CampaignTitle), new { @class = "input-small truncate", style = "background:#F2F2F2;", @readonly = "true", title = CampaignTitle })

                <p>Description</p>
                @Html.TextArea("Description", Model.Description, new { id = "Description", @class = "span12 text-area-size input-setup", placeholder = "Optional", rows = "3" })  @*Modified by Viral Kadiya on 11/15/2014 to resolve issue for PL ticket #794*@
            </div>
            <div class="span3 no_margin_top calendar_div" id="inspect-modal-left-column2" style="padding-left: 1.9%;">
                @*Added By Maitri Gandhi foe #2109*@
                <p>@Html.Raw("Owner")<span class="required-asterisk">*</span></p>

                @if (IsProgramEdit)
                {
                    <span style="min-width: 100%; position: relative;display:block;">
                        @Html.DropDownListFor(model => model.OwnerId, new SelectList((System.Collections.IEnumerable)ViewBag.OwnerList, "UserId", "DisplayName"), "Please Select", new { @class = "ddlStyle resubmission editable-dropdown hide", require = "true", Id = "ddlOwner", label = "Owner" })
                    </span>
                }
                else
                {
                    @Html.TextBox("txtOwner", OwnerName, new { @class = "span12 input-small truncate", style = "background:#F2F2F2;", @readonly = "true" })
                }
                <p>Start Date</p>
                <span style="position: relative;">
                    <div class="form-group">
                        <div class='input-group date' id='divStartDate'>
                            @Html.TextBoxFor(model => model.StartDate, new { @class = "form-control without-margin ", id = "t_startdate" })
                            <span class="input-group-addon">
                                <span class="fa fa-calendar"></span>
                            </span>
                        </div>
                    </div>
                </span>
                <p class="clear-section">End Date</p>
                <span style="position: relative;">
                    <div class='input-group date' id='divEndDate'>
                        @Html.TextBoxFor(model => model.EndDate, new { @class = "form-control without-margin ", id = "t_enddate" })
                        <span class="input-group-addon">
                            <span class="fa fa-calendar"></span>
                        </span>
                    </div>
                </span>
                @if (ExtIntService)
                {
                    <p class="clear-section">Deployed to Integration</p>
                    if (Model.IsDeployedToIntegration)
                    {
                        <input id="t_integration_status" name="t_status" title="Active" type="text" class="icon-check-blue" placeholder="Sync to integration" maxlength="18" readonly />
                    }
                    else
                    {
                        <input id="t_integration_status" name="t_status" title="Inactive" type="text" class="icon-check-gray" placeholder="Don't sync to integration" maxlength="18" readonly />
                    }
                }

            </div>
            <div class="span3 review_no_padding" id="inspect-modal-left-column3" style="width:24%">
                <p>Program Budget</p>
                @Html.TextBoxFor(model => model.ProgramBudget, new { @class = "currency_dollar input-setup", placeholder = "Required", require = "true", id = "txtProgramBudget", maxlength = @RevenuePlanner.Helpers.Common.maxLengthDollar })
                <p>Remaining Campaign Budget</p>
                @Html.TextBox("txtRemainingBudget", planRemainingBudget, new { id = "txtRemainingBudget", @readonly = "true" })
                <div class="content dark inline-ellipsis">
                    @if (!(bool)ViewBag.IsCreated)
                    {
                        <div class="cf width100">
                            <div class="width65px margin-right10 pull-left" style="width: 48%;">
                                <p title="@Html.LabelForMQL("MQL")">@Html.LabelForMQL("MQL")</p>
                                @Html.TextBoxFor(model => model.MQLs, new { placeholder = "0", id = "txtmql", @class = "priceValue", @readonly = "true", maxlength = @RevenuePlanner.Helpers.Common.maxLengthPriceValue })
                            </div>

                            <div class="width65px pull-left" style="width: 48%;">
                                <p title="Cost">Cost</p>
                                @Html.TextBoxFor(model => model.Cost, new { placeholder = CurrencySymbol + "0", id = "txtCost", @class = "currency_dollar", @readonly = "true", maxlength = @RevenuePlanner.Helpers.Common.maxLengthDollar })
                            </div>
                        </div>
                        <div class="cf width100">
                            <div class="width65px pull-left" style="width: 48%;">
                                <p title="Revenue">Revenue</p>
                                @Html.TextBoxFor(model => model.Revenue, new { placeholder = CurrencySymbol + "0", id = "txtRevenue", @class = "currency_dollar", @readonly = "true", maxlength = @RevenuePlanner.Helpers.Common.maxLengthDollar })
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

        <ul id="CustomAttributeheading" class="nav nav-tabs new-margin padding-bottom10 clear border-bottom-div">
            <li class="pull-left">
                <h3 class="modal-popup-innertitle source-sans-proregular">Attributes</h3>
            </li>
        </ul>
        <div id="CustomHtmlHelperfield" class="inspect-column-parent source-sans-proregular remove-bottom-border margin-bottom0 inspect_attribute_parent margin-left">
            @HtmlHelpers.GenerateCustomFieldsForInspectPopup(Model.PlanProgramId, Enums.EntityType.Program.ToString().ToLower(), Model.Status, 0, Enums.InspectPopupMode.Edit.ToString())
        </div>
    }
</div>

<script type="text/javascript">
    var selectbox_keys = '';
    var $prevtext = '';
    var $nextdata = -1;
    var $_prevdata = -1;
    var isRequiredProgramfield = false;
    $('.dropdown_new_btn').click(function () {
        $('.trdropdownhover').removeClass('setfocusTr');
        $('.dropdown_new_btn').focus();
        $('.dropdown_new_btn').removeAttr("id", "dropdown_btn");
        $('#dropdown_Table').removeAttr("id", "dropdown_Table");
        $(this).parent().attr("id", "dropdown_Table");
        $(this).attr("id", "dropdown_btn");
        $nextdata = -1;
        $_prevdata = -1;
        $prevtext = '';
        KeyPressOnDropdown();
        var dropdowntop = $('.dropdown_new_btn').offset().top;
        var windownheight = $(window).height();
        if (dropdowntop >= (windownheight - 300)) { $('.dropdown-wrapper').addClass('dropup') }
    });
    var DropdownTop = 0;
    $(".pop-body-wraper").scroll(function () {
        var scrollTop = $(this).scrollTop();
        $('.dropdown_new_btn').click(function () {
            // get the top offset of the dropdown (distance from top of the page)
            var dropdown_div = $(this).next('.dropdown-wrapper');
            var topOffset = dropdown_div.offset().top;
            // calculate the dropdown offset relative to window position
            var relativeOffset = topOffset - scrollTop;
            // get the window height
            var windowHeight = $('.pop-body-wraper').height();
            // if the relative offset is greater than half the window height,
            // reverse the dropdown.
            if (relativeOffset > windowHeight / 2 || (relativeOffset + 100) > windowHeight / 2) {
                dropdown_div.addClass("dropup");
            }
            else {
                dropdown_div.removeClass("dropup");
            }
        });
    });
    $(document).click(function () {
        $(document).unbind('keypress');
    });

    function KeyPressOnDropdown() {
        $(document).keypress(function (e) {
            var key = e.charCode ? e.charCode : e.keyCode ? e.keyCode : 0;
            var $this = $('#dropdown_Table').find('.tbodycampaignprogram');
            if ($('#dropdown_Table').find('.advance_a').attr('mode').toString() != "Multi") {
                var theChar = String.fromCharCode(key);
                var cur_check = '';
                cur_check = selectbox_keys + theChar.toLowerCase();
                var $select = $('#dropdown_Table');
                var lastElement = $select.find('tbody');

                $this.find(".trdropdownhover").each(function () {
                    var p = $(this).find('p');
                    var text = jQuery(p).text().toLowerCase();
                    var _checkdiv = $(this).css('display');
                    if ($prevtext == '' || cur_check.length > 1) {
                        if (text.indexOf(cur_check) == 0) {
                            if (_checkdiv == "none") {
                                return false;
                            }
                            $prevtext = text;
                            if ($_prevdata != null && $_prevdata != 'undefined' && $_prevdata != -1) {
                                $($_prevdata).removeClass('setfocusTr');
                            }
                            $_prevdata = jQuery(this);
                            $nextdata = jQuery(this);
                            $nextdata.addClass('setfocusTr');
                            selectbox_keys = cur_check;
                            $(p).closest('tr').focus();
                            $select.find('input:checkbox').removeAttr('checked');
                            var checkbx = $(this).find('input:checkbox');
                            $(checkbx).attr('checked', 'checked');
                            var scrollTo = $(this);
                            lastElement.animate({
                                scrollTop: scrollTo.offset().top - lastElement.offset().top + lastElement.scrollTop()
                            });
                            return false;
                        }
                    }
                    else {
                        /// find search_text from current li to downward direction in dropdown list.
                        var _nextdatas = '';
                        _nextdatas = $('.setfocusTr').nextAll();    // get next all "li" list from current "li".
                        var cntr = 0; //// counter to check that any "li" exist or not that has search_text. if it's 0 then compare search_text from start of the dropdown list.
                        $.each(_nextdatas, function (key, value) {
                            var _anchor = $(value).find('p');
                            var _atext = $(_anchor).text().toLowerCase();
                            //// Compare current "li" anchor text is with previous selected anchor text.
                            if (_atext != $prevtext && _atext.indexOf(cur_check) == 0) {
                                $prevtext = _atext; // set previous text variable with selected text.
                                $($_prevdata).removeClass('setfocusTr');   // remove class 'setFocusli' from previously selected list object.
                                $_prevdata = jQuery(this);
                                $nextdata = jQuery(this);
                                $($nextdata).addClass('setfocusTr');   // add class 'setFocusli' to currently selected list object.
                                selectbox_keys = cur_check;
                                $(this).closest('tr').focus();
                                cntr = cntr + 1;
                                $select.find('input:checkbox').removeAttr('checked');
                                var checkbx = $(this).find('input:checkbox');
                                $(checkbx).attr('checked', 'checked');
                                var scrollTo = $(this);
                                lastElement.animate({
                                    scrollTop: scrollTo.offset().top - lastElement.offset().top + lastElement.scrollTop()
                                });
                                return false;
                            }
                        });
                        /// find search_text from start of the dropdown list.
                        if (cntr == 0) {
                            _nextdatas = $('#dropdown_Table').find('.tbodycampaignprogram').find('tr'); //$('.tbodycampaignprogram').nextAll('tr');
                            $.each(_nextdatas, function (key, value) {
                                var _anchor = $(value).find('p');
                                var _atext = $(_anchor).text().toLowerCase();
                                //// Compare current "li" anchor text is with previous selected anchor text.
                                if (_atext != $prevtext && _atext.indexOf(cur_check) == 0) {
                                    $prevtext = _atext;
                                    $($_prevdata).removeClass('setfocusTr');   // remove class 'setFocusli' from previously selected list object.
                                    $_prevdata = jQuery(this);
                                    $nextdata = jQuery(this);
                                    $($nextdata).addClass('setfocusTr');   // add class 'setFocusli' to currently selected list object.
                                    selectbox_keys = cur_check;
                                    $(this).closest('tr').focus();

                                    $select.find('input:checkbox').removeAttr('checked');
                                    var checkbx = $(this).find('input:checkbox');
                                    $(checkbx).attr('checked', 'checked');
                                    var scrollTo = $(this);
                                    lastElement.animate({
                                        scrollTop: scrollTo.offset().top - lastElement.offset().top + lastElement.scrollTop()
                                    });
                                    return false;
                                }
                            });
                        }
                        if (cur_check.length <= 1) {
                            return false;
                        }
                    }
                });
                if ($nextdata != -1) {
                    $nextdata.removeClass('trdropdownhover');
                    $nextdata.addClass('trdropdownhover').focus();
                    $("#dropdown_btn p:first").text($nextdata.text());
                }
                clearTimeout(selectbox_keys_timeout);
                var selectbox_keys_timeout = setTimeout(function () {
                    selectbox_keys = "";
                }, 400);
                e.stopPropagation();
                return false;
            }
        }).delegate("p", "mouseover", function (e) {
            var menu = $(this).parents('.dropdown-wrapper');
            if (!menu.hasClass('dropdown-block')) {
                $(this).addClass('trdropdownhover');
            }
        }).delegate("p", "mouseout", function (e) {
            var menu = $(this).parents('.dropdown-wrapper');
            if (!menu.hasClass('dropdown-block')) {
                $(this).removeClass('trdropdownhover');
            }
        });
    }

    function FormatRemainingBudget() {
        if (parseInt(ReplaceCC($("#txtRemainingBudget").val())) < 0) {
            $("#txtRemainingBudget").addClass('error-text');
        }
        else {
            $("#txtRemainingBudget").removeClass('error-text');
        }
    }
    //// Function to redirect to login page on unavailability of web service.
    //// Added By: Maninder Singh Wadhva on 11/24/2014.
    //// Ticket: 942 Exception handeling in Gameplan.
    function redirectOnServiceUnavailibility() {
        if ('@Html.Raw(Json.Encode(isServiceUnavailable))' == 'true') {
            window.location = '@Url.Content(Common.RedirectOnServiceUnavailibilityPage)';
        }
    }
    $(document).ready(function () {
        $('#EditProgram').removeClass('SpanDisable');
        $('#InspectTab').removeClass('SpanDisable');
        //Datetime Picker Bhumika
        $('#divStartDate').datetimepicker({
            format: 'MM/DD/YYYY',
            useCurrent: false,
            keepOpen: false
        });
        $('#divEndDate').datetimepicker({
            format: 'MM/DD/YYYY',
            useCurrent: false
        });
        $('#ddlOwner').multiselect({
            multiple: false,
            noneSelectedText: "Please Select",
            selectedList: 1,
            CustomName: '@Common.CustomTitle'
        }).multiselectfilter();
        $('#ddlOwner').next().css('width', '95%');
        $('#ddlOwner').next().css('min-height', '30px');
        var spanOwner = $('#multipleselect_ddlOwner');
        $('#btnMultiselect_ddlOwner').after(spanOwner);
        $('#hdnOwner').val($('#ddlOwner').val());
        /*Added by Mitesh Vaishnav for PL ticket #1136
       Register events of new multiselect dropdown customfields*/
        $('.dropdown_new_btn').each(function () {
            $(this).multiselectWeight(
            );
        });
        /*End Added by Mitesh Vaishnav for PL ticket #1136*/

        //// Call function to redirect on service unavailibility.
        //// Added By: Maninder Singh Wadhva on 11/24/2014.
        //// Ticket: 942 Exception handeling in Gameplan.
        redirectOnServiceUnavailibility();

        $(".datepicker.dropdown-menu").each(function () {
            $(this).remove();
        });
        $("#txtRemainingBudget").val(FormatCommasBudget($("#txtRemainingBudget").val(), false, true));
        FormatRemainingBudget();
        $('#slidepanel-container').slimScroll({ scrollTo: '0px' });
        $("#successMessageViewProgram").slideUp(50);
        $("#errorMessageEditProgram").slideUp(50);
        var SaveCampaignFlag = true;
        var isredirect = "@ViewBag.RedirectType";
        var hdnYear = @ViewBag.Year;
        //Modified By Preet Shah on 06/12/2016. For Allowed Negative values. PL #2850
        $('.currency_dollar').priceFormat({ prefix: CurrencySybmol, centsSeparator: '', thousandsSeparator: ',', centsLimit: 0, allowNegative: true });
        $('.priceValue').priceFormat({ prefix: '', centsSeparator: '', thousandsSeparator: ',', centsLimit: 0 });
        $('.priceValueAllowNull').priceFormat({ prefix: '', centsSeparator: '', thousandsSeparator: ',', centsLimit: 0, isAllowNull: true });
        //Start - Added by Viral Kadiya on 17/11/2014 to resolve PL ticket #947.
        $('.input-setup').addClass('light-blue-background');
        //Added By Maitri Gandhi foe #2109
        $('#t_enddate').addClass('light-blue-background');
        $('#t_startdate').addClass('light-blue-background');
        $('.ddlStyle .ui-multiselect.ui-widget.ui-state-default.ui-corner-all').addClass('light-blue-background');
        //End - Added by Viral Kadiya on 17/11/2014 to resolve PL ticket #947.
        $("#txtTitle").keypress(function (e) {
            if (e.keyCode == 13) {
                e.preventDefault();
                return false;
            }
        });

        $("#t_integration_status").click(function () {
            if ($(this).hasClass("icon-check-blue")) {
                $(this).val("Don't sync to integration");
                $(this).attr('title', "Inactive");
                $(this).addClass("icon-check-gray");
                $(this).removeClass("icon-check-blue");
                $("#hdnIsDeployedToIntegration").val(false);
            }
            else {
                $(this).val("Sync to integration");
                $(this).attr('title', "Active");
                $(this).addClass("icon-check-blue");
                $(this).removeClass("icon-check-gray");
                $("#hdnIsDeployedToIntegration").val(true);
            }
        });

        $("span.tool-tip").tooltip();
        $(".alert").find(".close").on("click", function (e) {
            e.stopPropagation();
            e.preventDefault();
            $(this).closest(".alert").slideUp(400);
        });

        $('form').find('input[type=text], select, textarea').each(function () {
            $(this).change(function () {
                if ($(this).attr('require') == 'true') {
                    if ($(this).val() == '') {
                        $(this).addClass("error");
                    }
                    else {
                        $(this).removeClass("error");
                    }
                }
            });
        });

        $('form').find(".sbSelector").each(function () {
            $(this).next().find('li').click(function () {
                if ($(this).parent().parent().prev().attr('require') == 'true') {
                    if ($(this).parent().prev().text() == 'Please Select') {
                        $(this).parent().prev().addClass("error");
                        iserror = true;
                    }
                    else {
                        $(this).parent().prev().removeClass("error");
                    }
                }
            });
        });
        NumberFormatterTipsyTitle(".displaytitle", 31);

    });

    function ShowError(value) {
        $("#modal-container-186470").scrollTop(0);
        $("#successMessageViewProgram").slideUp(50);
        $("#errorMessageEditProgram").slideDown(400);
        $("#spanMessageEditProgram").empty();
        $("#spanMessageEditProgram").html(value);
    }

    function SetupSaveProgram() {
        var returnparameter = false;
        $('#MultiSelectProcced').css("display", "none");
        var iserror = false;
        var isEmptyFieldError = false;
        var title = htmlEncode($('#txtProgramTitle').val().trim());
        if ($('#status').text().toString() == "" || $('#status').text().toString().trim() == '@Enums.TacticStatus.Created.ToString()' || $('#status').text().toString().trim() == '@Enums.TacticStatusValues.FirstOrDefault(s => s.Key.Equals(Enums.TacticStatus.Decline.ToString())).Value.ToString().Trim()') {
            $('#ProgramMainDiv').find('input[type=text], select, textarea').each(function () {
                if ($(this).attr('require') == 'true') {
                    if ($(this).val().toString().trim() == '' && $(this).parent().css("display") != "none") {
                        $(this).addClass("error");
                        iserror = true;
                    }
                    else {
                        $(this).removeClass("error");
                    }
                }
            });
            $('#CustomHtmlHelperfield').find('input[type=text], select, textarea').each(function () {
                if ($(this).attr('require') == 'true') {
                    if ($(this).val().toString().trim() == '' && $(this).parent().css("display") != "none") {
                        isRequiredProgramfield = true;
                    }
                }
            });
            $('.dropdown_new_btn').each(function () {
                if (typeof $(this).attr('require') != 'undefined' && $(this).attr('require') == 'true' && $(this).find('p').text() == 'Please Select' && $(this).parent().parent().css("display") != "none") {
                    isRequiredProgramfield = true;
                }
            });
        }
        else {
            $('form').find('input[type=text], select, textarea').each(function () {
                if ($(this).attr('require') == 'true') {
                    if ($(this).val().toString().trim() == '' && $(this).parent().css("display") != "none") {
                        $(this).addClass("error");
                        isEmptyFieldError = true;
                    }
                    else {
                        $(this).removeClass("error");
                    }
                }
            });
            $('form').find('.sbSelector').each(function () {

                if ($(this).parent().prev().attr('require') == 'true') {
                    if ($(this).text() == 'Please Select') {
                        $(this).addClass("error");
                        isEmptyFieldError = true;
                    }
                    else {
                        $(this).removeClass("error");
                    }
                }
            });
            $('.dropdown_new_btn').each(function () {
                if (typeof $(this).attr('require') != 'undefined' && $(this).attr('require') == 'true' && $(this).find('p').text() == 'Please Select' && $(this).parent().parent().css("display") != "none") {
                    $(this).addClass("error");
                    isEmptyFieldError = true;
                }
                else {
                    $(this).removeClass("error");
                }
            });
        }
        if (title == '') {
            $('#txtProgramTitle').addClass("error");
            iserror = true;
        }
        else {
            $('#txtProgramTitle').removeClass("error");
        }
        var OwnerValue = $('#ddlOwner').val();
        if (OwnerValue == "") {
            $('#btnMultiselect_ddlOwner').addClass("error");
        }
        else {
            $('#btnMultiselect_ddlOwner').removeClass("error");
        }
        /* End - Added by bhavesh on 10/03/2015 for PL ticket #711 */

        if (iserror) {
            ShowError("@RevenuePlanner.Helpers.Common.objCached.ValidateForEmptyField");
            $('#InspectTab').removeClass('SpanDisable');
            return false;
        }
        if (isEmptyFieldError) {
            ShowError('@RevenuePlanner.Helpers.Common.objCached.ValidateForEmptyField');
            $('#InspectTab').removeClass('SpanDisable');
            return false;
        }
        var regex = /(>|<)/m;
        var descriptionvalue = $("#Description").val();
        if (descriptionvalue.search(regex) >= 0) {
            ShowError("@RevenuePlanner.Helpers.Common.objCached.InvalidCharacterofDescription");
            $("#Description").addClass("error");
            $('#InspectTab').removeClass('SpanDisable');
            return false;
        }
        //added by devanshi for PL ticket #2276
        if (CheckHtmlTag($("#txtProgramTitle").val()) == false) {
            ShowError("@RevenuePlanner.Helpers.Common.objCached.TitleContainHTMLString");
            $("#txtProgramTitle").addClass("error");
            iserror = true;
            return false;
        }
        sdate = $('#t_startdate').val();
        edate = $('#t_enddate').val();
        var tsdate = $('#hdnTStartDate').val();
        var tedate = $('#hdnTEndDate').val();
        var hdnYear = "@ViewBag.Year";

        if (!isDate(sdate)) {
            alert('@Common.objCached.ValidateStartDate');
            $('#InspectTab').removeClass('SpanDisable');
            return false;
        }
        if (!isDate(edate)) {
            alert('@Common.objCached.ValidateEndDate');
            $('#InspectTab').removeClass('SpanDisable');
            return false;
        }

        if (!CheckDateYear(sdate, hdnYear, "@RevenuePlanner.Helpers.Common.objCached.StartDateCurrentYear")) {
            $('#InspectTab').removeClass('SpanDisable');
            return false;
        }
        if (!CheckDateYear(edate, hdnYear, "@RevenuePlanner.Helpers.Common.objCached.EndDateCurrentYear")) {
            $('#InspectTab').removeClass('SpanDisable');
            return false;
        }
        if (!validateDateCompare(sdate, edate, "@RevenuePlanner.Helpers.Common.objCached.DateComapreValidation")) {
            $('#InspectTab').removeClass('SpanDisable');
            return false;
        }
        if (!validateDateCompare(sdate, tsdate, "@RevenuePlanner.Helpers.Common.objCached.TacticStartDateCompareWithParentStartDate")) {
            $('#InspectTab').removeClass('SpanDisable');
            return false;
        }
        if (!validateDateCompare(tedate, edate, "@RevenuePlanner.Helpers.Common.objCached.TacticEndDateCompareWithParentEndDate")) {
            $('#InspectTab').removeClass('SpanDisable');
            return false;
        }

        $("#txtProgramBudget").val(ReplaceCC($("#txtProgramBudget").val()));
        $("#hdnDescription").val(htmlEncode($('#Description').val()));       // Added by Viral Kadiya on 11/15/2014 to resolve PL ticket #794.
        document.getElementById("Description").value = htmlEncode($('#Description').val());

        var _customFieldValues = [];
        $('form').find('input[type=text],input:checked, select').each(function () {
            if ($(this).attr('cf_id') != '' && typeof $(this).attr('cf_id') != 'undefined' && $(this).val() != '') {
                _customFieldValues.push({
                    Key: $(this).attr('cf_id').toString(),
                    Value: htmlEncode($(this).val().toString())
                });
            }
        });
        _customFieldValues = JSON.stringify(_customFieldValues);

        var uId = $(window).attr('name');
        var _planProgramId = $("#hdnPlanProgramId").val();
        $.ajax({
            type: 'POST',
            async: false,
            url: '@Url.Content("~/Inspect/SetupSaveProgram")',
            data: $("form").serialize() + '&customFieldInputs=' + escape(_customFieldValues) + '&UserId=' + uId + '&title=' + escape(title),
            success: function (data) {
                if (data.IsSaved) {
                    isDataModified = true;
                    var activeTab = $("#InspectTab li.active a").text()
                    var planProgramId = $("#hdnPlanProgramId").val();
                    if (planProgramId == '0') {
                        planProgramId = data.programID;
                        $("#hdnPlanProgramId").val(planProgramId);
                        isCopyTactic = planProgramId;
                    }
                    var campaignId = data.campaignID;
                    var requestedModule = $("#hdnRedirectType").val();
                    $('#lblProgramTitle').text(title);
                    $("#successMessage").css("display", "block");
                    $("#spanMessageSuccess").empty();
                    $("#spanMessageSuccess").text(data.Msg);
                    $("#errorMessageEditProgram").css("display", "none");

                    $("#liReview,#liBudget,#liSetup").bind('click');
                    //// if new record save then set Refresh flag to true.
                    if (_planProgramId == '' || _planProgramId == null || _planProgramId == '0' || _planProgramId == 'undefined') {
                        logMixpanelTrack("New Program:" + escape(title)); // log New Program created event to mixpanel. Added by Viral regarding PL ticket #2434.
                        $("#hdnIsCreate_Clone").val(true); //// Hidden value used in _plan.cshmtl page to check that page require to refresh or not.
                        if (requestedModule == '@Enums.InspectPopupRequestedModules.Index.ToString()' || requestedModule == '@Enums.InspectPopupRequestedModules.ApplyToCalendar.ToString()') {
                            RefershPlanHeaderCalc();
                        }
                    }
                    if ("@Enums.InspectPopupRequestedModules.Budgeting.ToString()" == requestedModule) {
                        $("#hdnBudgetingExpandId").val("program" + planProgramId);
                        $("#hdnBudgetingIsSave").val("true");
                    }
                    returnparameter = true;
                    // Add By Nishant Sheth
                    // Desc :: #1812 refresh dropdown with change of date diffrence
                    if (!(data.EndDatediff == 0)) {
                        BindUpcomingActivites(data.PlanId);// Uncomment by bhavesh Ticket #1812,date 09-jan-2015 //Modified By Komal Rawal for #2174 to get correct PlanId
                    }
                    // End By Nishant Sheth
                }
                else {
                    ShowError(data.errormsg);
                    returnparameter = false;
                }
            }
        });
        return returnparameter;
    }

    $("#cancelProgramEditSection").click(function () {
        if ($("#hdnPlanProgramId").val() != '0') {
            CancelEvent();
            $("#successMessageViewProgram").slideUp(50);
            $("#errorMessageEditProgram").slideUp(50);
            $("#txtProgramTitle").val($("#lblProgramTitle").text());
        }
        else {
            $('.close-x-big-icon').trigger('click');
        }
    });

    function CancelEvent() {
        $("#hdnProgramOpt").val("View");
        loadReview('@Model.PlanProgramId', "Setup");
        $("#EditProgram").css("display", "block");
        $("#DeleteForm").css("display", "block");
        $("#AddForm").css("display", "block");
        $('#txtProgramTitle').css('display', 'none');
        $('#lblProgramTitle').css('display', 'block');
        $("#lblProgramTitle").removeAttr("style");
        $('#divDeleteProgram').css('display', 'block');
    }

    $("#txtProgramBudget").keyup(function () {
        var ProgramBudgetValue = ReplaceCC($("#txtProgramBudget").val());
        //Modified by Preet Shah on 06/12/2016. removing/truncate leading zeroes. PL #2850
        ProgramBudgetValue = ProgramBudgetValue.replace(/^0+/, '');
        if (ProgramBudgetValue == '' || typeof ProgramBudgetValue == 'undefined') {
            ProgramBudgetValue = '0';
            $("#txtProgramBudget").val(CurrencySybmol + '0')
        }
        //Modified by Preet Shah on 06/12/2016. check for numeric. PL #2850
        if($.isNumeric(ProgramBudgetValue))
        {
            var OldProgramBudgetValue = ReplaceCC($("#hdnOldProgramBudget").val());
            var differenceVal = parseInt(OldProgramBudgetValue) - parseInt(ProgramBudgetValue);
            var newRemainingBudget = parseInt(ReplaceCC($("#txtRemainingBudget").val())) + differenceVal;

            $("#txtRemainingBudget").val(FormatCommasBudget(newRemainingBudget.toString(), false, true));
            $("#txtRemainingBudget").attr('title', $("#txtRemainingBudget").val());

            $("#hdnOldProgramBudget").val(ProgramBudgetValue);
            if (parseInt(ReplaceCC($("#txtRemainingBudget").val())) < 0) {
                $("#txtRemainingBudget").addClass('error-text');
            }
            else {
                $("#txtRemainingBudget").removeClass('error-text');
            }
        }
    });
    // Modified by Komal Rawal for ticket #1196
    function isEmpty(el) {
        return !$.trim(el.html())
    }

    if (isEmpty($('#CustomHtmlHelperfield'))) {
        $('#CustomHtmlHelperfield').hide();
        $('#CustomAttributeheading').hide();
        $('#divProgramSaveCancel').removeClass('border-top-div');//Added by Mitesh Vaishnav for PL ticket 1196
    }
    else {
        $('#CustomHtmlHelperfield').show();
        $('#CustomAttributeheading').show();

    }

    $(".table_drpdwn").each(function () {
        var chekcedCount = $(this).find('input:checked').length;
        if (chekcedCount > 1) {
            var menu = $(this).parents('.dropdown-wrapper');
            menu.toggleClass('dropdown-block minimum-width215');
            menu.find('.text_ellipsis').toggleClass('minmax-width200');
            menu.find(".first_hide,.revenue_header,.cost_header,.top_head_attribute,.value_header").toggle();
            menu.find('.advance_a').text("< Single-selection");
            menu.find('.advance_a').attr('mode', 'Multi');
            menu.find('input[type=checkbox]').toggle();
            menu.find('p').removeClass('single-p');
            //added by Rahul Shah on 05/11/2015 - by default multi mode of Custom dropdown then hide the "Please Select"
            if ($(this).find('tbody').children(':first-child').find('p').text() == "Please Select") {
                $(this).find('tbody').children(':first-child').hide();
                $(this).find('tbody').children(':first-child').find('input[type=checkbox]').removeAttr('checked');
            }
        }
    });
</script>
