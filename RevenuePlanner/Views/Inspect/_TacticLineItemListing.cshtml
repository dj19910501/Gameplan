@using RevenuePlanner.Helpers;
@model RevenuePlanner.Models.BudgetDHTMLXGridModel
@{
    var countrows = Model.Grid.rows.Count;
    var isQuarter = ViewBag.AllocatedBy;
}
<style>
    .tooltip {
        z-index: 9999 !important; /* Need this style on page level - Bhumika */
    }
</style>

<!-- Added by Arpita Soni for Ticket #2237 on 06/13/2016 -->
@if (countrows > 0)
{
    <div id="lineItemGrid" class="gridViewGrid"></div>
}
else
{
    <div>No records available.</div>
}

<div class="market-activity-main">
    <div class="btn-dropdwn" style="display: none; position: absolute; top: 40px; z-index: 11;" id="popupLineitemIP">
    </div>
</div>

<script type="text/javascript">
    var LineItemGrid;
    var tacticId = 0;
    var lineItemId = 0;
    $(document).ready(function () {
        $('#liLine_Items').removeClass("pull-left");
        $('#liLine_Items').addClass("active pull-left");
        
        $('.nav').addClass('no-bottom-border');
        // Added by Arpita Soni for Ticket #2237 on 06/13/2016
        if (@countrows > 0) {
            BindLineItemGrid();

            $(document).ajaxComplete(function () {
                LineItemGrid.setSizes();
            });
        }
        $("input[name='useless']").click(doIt);
        function doIt() {
            return true;
        }
        $("#useless").click();
        window.focus();

        pageIsScroll = false;
   
        $(".grid_Search").off("click");
        $(".grid_Search").click(function (e) {
            inspectCloseFocus = $(this).position().top;
            var id = $(this).parent().next().html();
            var type = $(this).attr('id');
            gridSearchFlag = 1;
            DisplayEditablePopup(id, type);
        });
        SetTooltip();
    });

    function SetTooltip() {
        $(".grid_Search").tooltip({
            'container': 'body',
            'placement': 'bottom'
        });
        $(".grid_add").tooltip({
            'container': 'body',
            'placement': 'bottom'
        });
        $(".honeycombbox-icon-gantt").tooltip({
            'container': 'body',
            'placement': 'bottom'
        });
    }
    var $doc = $(document);
    $doc.click(function () {
        $('#popupLineitemIP').css('display', 'none');
        $('#dhx_combo_select').css('display', 'none');
    });

    $(document).mouseup(function (e) {
        $('#popupLineitemIP').css("display", "none");
        $('#dhx_combo_select').css('display', 'none');
    });
    $(".grid_ver_scroll").scroll(function () {
        $('#popupLineitemIP').css('display', 'none');
    });
    
    $('#errorMessageInspectPopup .close').click(function () {
        $('#errorMessageInspectPopup').css("display", "none");
    });
    
    var GridDataLineItemGrid;
    var ActivityIdColIndex;
    var PlannedCostColIndex;
    var TypeColIndex;
    var arrDetailedGrids = [];

    var arrFullMonthNames = { 'JAN': 'January' ,
        'FEB': 'February' ,
        'MAR': 'March' ,
        'APR': 'April' ,
        'MAY': 'May' ,
        'JUN': 'June' ,
        'JUL': 'July' ,
        'AUG': 'August' ,
        'SEP': 'September' ,
        'OCT': 'October' ,
        'NOV': 'November' ,
        'DEC': 'December',
        'Q1': 'Quarter 1',
        'Q2': 'Quarter 2',
        'Q3': 'Quarter 3',
        'Q4': 'Quarter 4'
    }

    function BindLineItemGrid() {
        var JsonModel = '@Newtonsoft.Json.JsonConvert.SerializeObject(Model.Grid)';
        var mainGridData = JsonModel;
        mainGridData = $('<div/>').html(mainGridData.toString().replace(/[\\]/g, "\\\\")).text(); // Decode Html content.
        GridDataLineItemGrid = (mainGridData.toString().replace(/&amp;/g, '&'));
        
        LineItemGrid = new dhtmlXGridObject('lineItemGrid');
        var imgpath = '@Url.Content("~/codebase/imgs/")';
        LineItemGrid.setImagePath(imgpath);
        
        LineItemGrid.setImageSize(1, 1);
        LineItemGrid.attachEvent("onEditCell", doOnEditCell);
        LineItemGrid.setHeader('@Model.SetHeader');
        LineItemGrid.setColAlign('@Model.ColAlign');
        LineItemGrid.setColTypes('@Model.ColType');
        LineItemGrid.setInitWidths('@Model.Width');
        LineItemGrid.setColSorting('@Model.ColSorting');
        LineItemGrid.setColumnIds('@Model.ColumnIds');
        
        LineItemGrid.init();
        setTimeout(function () {
            LineItemGrid.loadOpenStates();
        }, 500);
        setTimeout(function () {
            LineItemGrid.setSizes();
        }, 200);
        LineItemGrid.enableAutoHeight(true);
        
        LineItemGrid.parse(GridDataLineItemGrid, "json");
        ActivityIdColIndex = LineItemGrid.getColIndexById("id");
        PlannedCostColIndex = LineItemGrid.getColIndexById("plannedcost");
    }
    
    function doOnEditCell(stage, rowId, cellInd, nValue, oValue) {
        var detailedGridData = LineItemGrid;
        if (stage == 0) {
            // Disable cells which has no permission to edit
            var locked = detailedGridData.cells(rowId, cellInd).getAttribute("locked");
            if ((locked != null && locked != "") && (locked == "1" || locked == "True"))
                return false;
        }
        if (stage == 1) {
            // Disable alphabets or special characters in input
            $(".dhx_combo_edit").on('keydown', (function (e) { GridPriceFormatKeydown(e); }));
            detailedGridData.editor.obj.onkeypress = function (e) {
                e = e || window.event;
                if ((e.keyCode >= 47) || (e.keyCode == 0)) {
                    var text = this.value;
                    if (text.length > 10) { //max length of the text
                        return false;
                    }
                }
            }
        }
        if (stage == 2) {
            if (nValue != null && nValue != "") {
                var entityId = detailedGridData.cells(rowId, 0).getValue();
                var section = "lineitem";
                var isTotalCost = false;
                var month = "";
                if(rowId.indexOf('tactic') > -1) {
                    section = "tactic";
                }
                if (cellInd == PlannedCostColIndex) {
                    isTotalCost = true;
                }
                else {
                    month = arrFullMonthNames[detailedGridData.getColLabel(cellInd)];
                }
                var monthlyplannedcost = detailedGridData.cells(rowId, cellInd).getValue();
                
                var tab = 'Planned';
                var isquarter = false;
                if('@isQuarter' == 'quarters') {
                    isquarter = true;
                }
        
                var inputArr = [];
                inputArr.push({
                    key: "CostMonth",
                    Value: SetValueByExchangeRate(monthlyplannedcost.replace(/,/g, ""))
                });
                var jsonInputs = JSON.stringify(inputArr);
                $.ajax({
                    type: 'POST',
                    url: '@Url.Content("~/Inspect/SaveLineItemCostAllocation/")',
                dataType: "json",
                data: 'entityId=' + entityId + '&section=' + section + '&month=' + month + '&inputs=' + jsonInputs + '&tab=' + tab + '&isquarter=' + isquarter + '&isTotalCost=' + isTotalCost,
                success: function (data) {
                    if (data.isSuccess == true) {
                        $("#liLine_Items").trigger("click");
                    }
                    else {
                        $('#cErrorDuplicatePlan').html('<strong>Error! </strong> ' + data.errormsg);
                        $('#errorMessageDuplicatePlan').slideDown(700);
                    }
                }
            });
        }
        else {
            return false;
        }
    }
    return true;
}
$(document).on('click.bs.toggle', 'div[data-toggle^=toggle]', function(e) {
    var $checkbox = $(this).find('input[type=checkbox]')
    $checkbox.bootstrapToggle('toggle')
    e.preventDefault()
});    
</script>
