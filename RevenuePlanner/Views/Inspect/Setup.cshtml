@model RevenuePlanner.Models.InspectModel
@using RevenuePlanner.Helpers;
@{
    var tactic = (RevenuePlanner.Models.InspectModel)ViewBag.TacticDetail;
    var deployStatus = Model.IsDeployedToIntegration == true ? "Yes" : "No";
    deployStatus = tactic.IsIntegrationInstanceExist == "N/A" ? "Plan not Integrated" : deployStatus;////Modified by Mitesh Vaishnav for PL ticket #690 Model Interface - Integration
    var _editdescription = Common.GenerateHTMLDescription(Model.Description);   // Added by Viral Kadiya on 11/21/2014 for PL ticket #794.
    string customFieldWeightage = ViewBag.customFieldWeightage;
    string TacticTypeTitle = HttpUtility.HtmlDecode(Model.TacticTypeTitle);
}

<style type="text/css">
    .inspect-column-parent input, .inspect-column-parent textarea {
    min-height: 22px !important;
    width: calc(100% - 12px) !important;
}
    .calendar-width {
    width: calc(100% - 30px) !important;
}
</style>

@using (Html.BeginForm())
{
    @Html.HiddenFor(model => model.PlanTacticId)
    
    <div class="inspect-column-parent source-sans-proregular remove-bottom-border" style="margin-bottom:0px;">
        <div class="span6" id="inspect-modal-left-column1">
            <p>Parent Campaign</p>
            @Html.TextBox("txtCampaign", HttpUtility.HtmlDecode(tactic.CampaignTitle), new { @class = "span12 input-small truncate", style = "background:#F2F2F2;", @readonly = "true", title = tactic.CampaignTitle })
            <p>Parent Program</p>
            @Html.TextBox("txtProgram", HttpUtility.HtmlDecode(tactic.ProgramTitle), new { @class = "span12 input-small truncate", style = "background:#F2F2F2;", @readonly = "true", title = tactic.ProgramTitle })
            <p>Description</p>
            @*Modified by Viral Kadiya on 11/15/2014 to resolve issue for PL ticket #794*@
            <div class="description-content">
                <div class="description-content-area">
                        @Html.Raw(HttpUtility.HtmlDecode(_editdescription))
                </div>
            </div>
        </div>
        <div class="span3" id="inspect-modal-left-column2" style="margin-left:10px;">
            <p>Tactic Type <span class="required-asterisk">*</span></p>
            @Html.TextBox("txtTacticTypeTitle", TacticTypeTitle, new { @class = "span12 input-small truncate", style = "background:#F2F2F2;", id = "txtTacticTypeTitle", @readonly = "true", @title=TacticTypeTitle })
            <p>Tactic Planned Cost</p>
            @Html.TextBoxFor(model => model.Cost, new { @class = "input-small truncate", id = "txtCost", @readonly = "true", })
            @*Modified by Dharmraj for custom label, #738 Custom label for audience tab *@
            <p>Start Date</p>
            @Html.TextBoxFor(model => model.StartDate, new { @class = "input-small", @readonly = "true", @Value = Model.StartDate.ToString(@RevenuePlanner.Helpers.Common.DateFormat) })
            <p>End Date</p>
            @Html.TextBoxFor(model => model.EndDate, new { @class = "input-small truncate", @readonly = "true", @Value = Model.EndDate.ToString(@RevenuePlanner.Helpers.Common.DateFormat)  })
        </div>
        <div class="span3" id="inspect-modal-left-column3">
            <p>Owner <span class="required-asterisk">*</span></p>
            @Html.TextBoxFor(model => model.Owner, new { @class = "span12 input-small truncate", style = "background:#F2F2F2;", @readonly = "true", title = tactic.Owner })
            <p style="width: 110%;">Deployed to Integration</p>
            @Html.TextBox("txtDeployStatus", deployStatus, new { @class = "span12 input-small truncate", style = "background:#F2F2F2;", id = "txtDeployStatus", @readonly = "true" })
            <div class="cf width100">
             <div class="margin-right10 pull-left" style="width: 47%">
                 <label id="lblStageTitle" title="@Model.StageTitle" class="inspect-bolder-label">@Model.StageTitle &nbsp;
                          @if (ViewBag.IsDiffrentStageType == true)
                          {
                              <span>
                                  <img id="diffrentStageIcon" src="~/Content/images/flag-icon.png" title="Please note that the stage information at plan level is different than that at the model level" /></span>
                              
                          }</label>
                <input type="text" value="@Model.ProjectedStageValue" readonly="true" id = "txtProjectedStageValue" class="priceValue" />
             </div>

             <div class="pull-left" style="width: 47%">
                 <label title="@Html.LabelForMQL("MQLs")" class="inspect-bolder-label">@Html.LabelForMQL("MQLs")</label>
                 <input type="text" value="@Model.MQLs" readonly="true" id = "txtmql" />
             </div>

             <div class="pull-left" style="width: 47%">
                 <label title="Revenue" class="inspect-bolder-label">Revenue</label>
                 @Html.TextBoxFor(model => model.Revenues, new { placeholder = "$0", id = "txtRevenue", @readonly = "true", maxlength = @RevenuePlanner.Helpers.Common.maxLengthDollar })
             </div>
         </div>
        </div>
    </div>
    <ul class="nav nav-tabs new-margin padding-bottom10 clear border-bottom-div">
        <li class="pull-left">
            <h3 class="modal-popup-innertitle source-sans-proregular">Attributes</h3>
        </li>
    </ul>
    <div class="inspect-column-parent source-sans-proregular remove-bottom-border">
        @HtmlHelpers.GenerateCustomFieldsForInspectPopup(tactic.PlanTacticId, Enums.EntityType.Tactic.ToString(),0)
    </div>
   
                                        
    <span class="flag-icon"></span>
    <input type="button" class="btn btn-blue text-shadow-blue source-sans-proregular gear-icon button-inspect-review-modal pull-right"
        id="button-review-tactic" name="button-save" value="Review Tactic" style="display: none;" />
}

<script type="text/javascript">
    $(document).ready(
      function () {
          $('.new_tag').each(function () {
              $(this).on('click', function (e) {
                  var dropdownMenu= $(this).parent().find('.dropdown-wrapper');
                  $('.dropdown-wrapper').not(dropdownMenu).fadeOut();
                  dropdownMenu.slideToggle("fast");
                  e.stopPropagation();
              });
              
          });
          $(document).click(function () {
              // all dropdowns
              $('.dropdown-wrapper').css('display', 'none');
          });
          $('.dropdown-wrapper').on('click', function (e) {
              e.stopPropagation();
          });
          $('.advance_a').click(function () {
              $('.dropdown-wrapper').css('display', 'none');
          });
	  $(this).scrollTop(0);
          $('#txtCost').priceFormat({ prefix: '$', centsSeparator: '', thousandsSeparator: ',', centsLimit: 0 });
          $('#txtCost').attr("title", $('#txtCost').val()); //added by uday for internal point to add title tooltip 2-7-2014
          $(".selectBox select").selectbox();
          $("#txtRevenue").val('$' + number_format($("#txtRevenue").val().toString(), 0, 0, ','));
          $('form').find(".sbSelector").each(function () {
              $(this).unbind("click");
              $(this).removeAttr("href");
              $(this).prev().unbind("click");
              $(this).prev().removeAttr("href");
          });

          $('.priceValue').priceFormat({ prefix: '', centsSeparator: '', thousandsSeparator: ',', centsLimit: 0 });

          if ('@TempData["TacticMQL"]' == "N/A") {
              $("#txtmql").removeClass("priceValue");
              $("#txtmql").val("N/A");
              $("#txtmql").attr('title', 'N/A');
          }
          else {
              var mqlValue = FormatCommas($("#txtmql").val(), false);
              $("#txtmql").val(mqlValue);
              $("#txtmql").attr('title', mqlValue);
          }

          
              /*Modified by Mitesh Vaishnav for PL ticket #1165*/
               var customFieldsValues = JSON.parse('@Html.Raw(customFieldWeightage)');
               var i = customFieldsValues.length;
               for (var i = 0; i < customFieldsValues.length; i++) {
                   $('#' + customFieldsValues[i].optionId + '_Cost').val(customFieldsValues[i].CostWeight);
                   $('#' + customFieldsValues[i].optionId + '_cvr').val(customFieldsValues[i].Weight);
               }
               $(".table_drpdwn").each(function () {
                           var menu = $(this).parents('.dropdown-wrapper');
                           menu.toggleClass('dropdown-block');
                       menu.find(".first_hide,.revenue_header,.cost_header,.top_head_attribute,.value_header").toggle();
                   });
          /*End - Modified by Mitesh Vaishnav for PL ticket #1165*/

      });
</script>
