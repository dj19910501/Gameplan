@using RevenuePlanner.Helpers;
@{
    var popupvalue = (string)ViewBag.InspectPopup;
    var RedirectType = (string)ViewBag.RedirectType;
    var RedirectTypeMode = (bool)(!string.IsNullOrEmpty(RedirectType) ? (RedirectType == Enums.InspectPopupRequestedModules.ApplyToCalendar.ToString() ? true : false) : false);
    bool isIndex = (bool)(!string.IsNullOrEmpty(RedirectType) ? (RedirectType == Enums.InspectPopupRequestedModules.Index.ToString() ? true : false) : true);
    var CalledFromBudget = (!string.IsNullOrEmpty(RedirectType) ? (RedirectType == Enums.InspectPopupRequestedModules.Budgeting.ToString() ? "Budegting" : "") : "");
}
@Html.Hidden("hdnPopup", popupvalue, new { id = "hdnInspectPopup" })
<buttom class="close-x-big-icon" data-dismiss="modal" aria-hidden="true"></buttom>
@{
    var planCampaignId = 0;
    var campaignStatus = "";
    string colorCode = "C6EBF3";
    string planId = Convert.ToString(ViewBag.PlanId);
    string campaignTitle = "";

    RevenuePlanner.Models.InspectModel campaignMaster = null;
    if (ViewBag.CampaignDetail != null)
    {
        campaignMaster = (RevenuePlanner.Models.InspectModel)ViewBag.CampaignDetail;
    }

    bool IsPlanEditable = false;
    if (ViewBag.IsPlanEditable != null)
    {
        IsPlanEditable = (bool)ViewBag.IsPlanEditable;
    }
    if (campaignMaster != null)
    {
        TempData["CampaignModel"] = campaignMaster;
        planCampaignId = campaignMaster.PlanCampaignId;
        campaignStatus = campaignMaster.Status;
        colorCode = campaignMaster.ColorCode;
        campaignTitle = campaignMaster.CampaignTitle;
    }
    
}

@Html.Hidden("hdnPlanCampaignId", planCampaignId, new { id = "hdnPlanCampaignId" })
@Html.Hidden("hdnCampaignStatus", campaignStatus, new { id = "hdnCampaignStatus" })
@Html.Hidden("hdnCampaignOpt", "View", new { id = "hdnCampaignOpt" })
@Html.Hidden("hdnCampaignTitle", HttpUtility.HtmlDecode(campaignTitle), new { id = "hdnCampaignTitle" })
@Html.Hidden("hdnRedirectType", RedirectType, new { id = "hdnRedirectType" })
@Html.Hidden("hdnIsPlanEditable", IsPlanEditable)

<style type="text/css">
    #successMessageViewCampaign, #errorMessageEditCampaign
    {
        margin-bottom: 15px !important;
    }
</style>

<div id="successMessageViewCampaign" class="alert hide alert-success message-position-small">
    <a class="close">×</a>
     <strong>Success.</strong>
    <span id="spanSuccessMessageViewCampaign"></span>
</div>

<div id="errorMessageEditCampaign" class="alert alert-error hide message-position-small">
    <a class="close">×</a>
    <strong>Error!</strong>
    <span id="spanMessageEditCampaign"></span>
</div>
 <div id="MultiSelectProcced" name="MultiSelectProcced" class="alert alert-error hide message-position-popup message-position-popup-border-color " proccedobject="#ATTRIBUTUTES#" style="display: none; margin: auto !important; max-width: 1000px !important;">
                                <a class="close multiselect-close-button-popup">×</a>
                                <span id="spanMultiSelectProcced" class="spanMultiSelectProcced-popup"><b>Data will be lost!</b> Switching <attributetext>#ATTRIBUTUTES#</attributetext> from Multi-selection to Single-selection will reset all selections.</span>
                                <button class="proceed_btn" type="button"> Proceed </button> <a class="cncl_btn multiselect-cancel-link-popup" href="#">Cancel</a>
                            </div>
<form>
    <div class="modal-popup-title">
        <span class="icon-flag bg-purple" style="background-color:#@colorCode !important;"></span>
        <h2 class="title-simple source-sans-prolight">
            @if (campaignMaster != null)
            {
                <span>
                    <span id="lblCampaignTitle" class="tipsyclassTitle ConcatTextlength" title="@HttpUtility.HtmlDecode(campaignTitle)" >@HttpUtility.HtmlDecode(campaignTitle)</span>
                    @if (campaignMaster.OwnerId == Sessions.User.UserId && IsPlanEditable)
                    {
                        <div class="delete-btn-tab" style="float: right;" id="divDeleteCampaign">
                            <button class="delete-btn-gray" id="deleteCampaign" type="button">Delete</button>
                        </div>
                    }

                    <div style="float: right; position: relative;">
                            <span class="add-icon-white btn-blue btn-large" style="display: block; cursor: pointer; margin-right: 10px;" id="AddForm"></span>
                            <div class="btn-dropdwn" style="display: none; position: absolute; top: 40px;" id="popupnewprogram">
                                <ul style="margin: 0;">
                                    <li class="new-prog" id="NewProgram">New Program</li>
                                    <li class="copy-camp" id="CloneCampaign">Copy Campaign</li>
                                </ul>
                            </div>                            
                        </div>

                    @if (IsPlanEditable)
                    {
                    <a class="edit-icon-white btn-blue btn-large" href="#" id="btnEditCampaign" style="margin-right: 15px;"></a>
                    }
                </span> 
            }
            @Html.TextBox("txtTitle", HttpUtility.HtmlDecode(campaignTitle), new { placeholder = "Campaign name goes here", require = "true", maxlength = "255", @class = "span12 input-small light-blue-background", @style = "width: 95%; height: 28px;display:none;font-family:'source_sans_prolight', Arial, 'sans-serif';font-size:27px;color:#4d4d4d;line-height: normal;", title = HttpUtility.HtmlDecode(campaignTitle), id = "txtTitle" })
            @Html.TextBox("txtTitle1", "", new { @style = "display:none", id = "txtTitle" })
        </h2>
    </div>
</form>
@if (campaignMaster != null)
{
    <div class="modal-popup-summary" id="campaignSummary">
        <div id="nl-form" class="nl-form nl-form-modal source-sans-prolight" style="margin-bottom:0px;">
        <p class="modal-status">
            Status: 
            @if (campaignMaster.Status == Enums.TacticStatusValues.Single(tacticStatus => tacticStatus.Key.Equals(Enums.TacticStatus.Submitted.ToString())).Value)
            {
                <span id="status" class="source-sans-prosemibold statussubmitted">@campaignMaster.Status</span>
            }
            else if (campaignMaster.Status == Enums.TacticStatusValues.Single(tacticStatus => tacticStatus.Key.Equals(Enums.TacticStatus.Decline.ToString())).Value)
            {
                <span id="status" class="source-sans-prosemibold statusrejected">@campaignMaster.Status</span>
            }
            else if (campaignMaster.Status == Enums.TacticStatusValues.Single(tacticStatus => tacticStatus.Key.Equals(Enums.TacticStatus.Complete.ToString())).Value ||
                     campaignMaster.Status == Enums.TacticStatusValues.Single(tacticStatus => tacticStatus.Key.Equals(Enums.TacticStatus.InProgress.ToString())).Value ||
                     campaignMaster.Status == Enums.TacticStatusValues.Single(tacticStatus => tacticStatus.Key.Equals(Enums.TacticStatus.Approved.ToString())).Value)
            {
                <span id="status" class="source-sans-prosemibold statusapproved">@campaignMaster.Status</span>
            }
            else if (campaignMaster.Status == Enums.TacticStatusValues.Single(tacticStatus => tacticStatus.Key.Equals(Enums.TacticStatus.Created.ToString())).Value)
            {
                <span id="status" class="source-sans-prosemibold statuscreated">@campaignMaster.Status</span>
            }
        </p>
        </div>
    </div>
}
<div>
    <ul class="nav nav-tabs new-margin" id="InspectTab">
        <li class="active pull-left" id="liSetup">
            <a>Setup</a>
        </li>
        <li class="pull-left" id="liReview">
            <a>Review</a>
        </li>
        <li class="pull-left" id="liBudget">
            <a>Budget</a>
        </li>
    </ul>
    <div id="divTab">
    </div>

</div>

<script type="text/javascript">

    var divPartial = "#divPartial";
    var TabSetup = "Setup";
    var TabReview = "Review";
    var TabBudget = "Budget";
    var divTab = "#divTab";

    $(document).ready(
      function () {
          CloseIconClick();
          $("#btnEditCampaign").css("display", "block");
          $("#AddForm").css("display", "block");
          NumberFormatterTipsyTitle(".tipsyclassTitle", 55);
          var InspectValue = $("#hdnInspectPopup").val();
          var planCampaignId = $("#hdnPlanCampaignId").val();
          // Call Remove Tabclass
          RemoveTabClass();

          $("#li" + InspectValue).removeClass("pull-left");
          $("#li" + InspectValue).addClass("active pull-left");
          var tabtext = ($("#li" + InspectValue).children('a').text());
          $('#div' + tabtext).css({ display: "block" });


          // Click on Tab Partialview Refresh Based On Selected Tab
          $("#liSetup,#liReview,#liBudget").on("click", function () {
              $("#successMessageViewCampaign").slideUp(50);
              $("#errorMessageEditCampaign").slideUp(50);
              RemoveTabClass();
              $(this).removeClass("pull-left");
              $(this).addClass("active pull-left");
              $("#errorMessage").css("display", "none");
              $("#successMessage").css("display", "none");
              /*Changed by Nirav Shah for Inspect pop-up screen : CSS changes as per new HTML on 13 feb 2014*/
              var tabtext = ($(this).children('a').text());
              var planTacticId = $("#hdnPlanTacticId").val();
              loadReview(planCampaignId, tabtext);

          });
          if (planCampaignId != '0') {
              loadReview(planCampaignId, tabtext);
          }
          else {

              $("#liReview ,#liBudget,#liSetup").unbind('click');
              loadAddSetup();
          }
          $("#btnEditCampaign").on("click", function () {
              $("#errorMessage").css("display", "none");
              $("#successMessage").css("display", "none");
              $("#hdnCampaignOpt").val("Edit");
              var InspectValue = $("#hdnInspectPopup").val();
              var tabtext = ($("#li" + InspectValue).children('a').text());

              if (tabtext == "Setup") {
                  url = '@Url.Content("~/Inspect/LoadEditSetupCampaign/")';
                  $("#divTab").empty();
                  $("#divTab").load(url + '?id=' + planCampaignId
, function (response, status, xhr) {
    if (response == '{"serviceUnavailable":"~/Login/ServiceUnavailable"}') {
        //// Call function to redirect on service unavailibility.
        //// Added By: Maninder Singh Wadhva on 11/24/2014.
        //// Ticket: 942 Exception handeling in Gameplan.
        window.location = '@Url.Content(Common.RedirectOnServiceUnavailibilityPage)';
    }
});

              }
              else if (tabtext == "Budget") {
                  url = '@Url.Content("~/Inspect/LoadCampaignBudgetAllocation/")';
                  $("#divTab").empty();
                  $("#divTab").load(url + '?id=' + planCampaignId);
              }
              else if (tabtext == "Review") {
                  url = '@Url.Content("~/Inspect/LoadEditSetupCampaign/")';
                      $("#divTab").empty();
                  $("#divTab").load(url + '?id=' + planCampaignId
, function (response, status, xhr) {
    if (response == '{"serviceUnavailable":"~/Login/ServiceUnavailable"}') {
        //// Call function to redirect on service unavailibility.
        //// Added By: Maninder Singh Wadhva on 11/24/2014.
        //// Ticket: 942 Exception handeling in Gameplan.
        window.location = '@Url.Content(Common.RedirectOnServiceUnavailibilityPage)';
    }
});

                      RemoveTabClass();
                      $("#liSetup").removeClass('pull-left');
                      $("#liSetup").addClass('active pull-left');

                  }

              $("#btnEditCampaign").css("display", "none");
              $("#AddForm").css("display", "none");
              $('#txtTitle').css('display', 'block');
              $('#lblCampaignTitle').css('display', 'none');
              $("#txtTitle").prop('readonly', false);
              $('#divDeleteCampaign').css('display', 'none');
              return false;
          });

          $("#btnAddCampaign").on("click", function () {
              loadInspectPopup('0', "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Program).ToLower()", "Setup", '@Enums.InspectPopupMode.Add.ToString()', '@planCampaignId', $("#hdnRedirectType").val());
          });
          $('#NewProgram').click(function () {

              loadInspectPopup('0', "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Program).ToLower()", "Setup", '@Enums.InspectPopupMode.Add.ToString()', $('#hdnPlanCampaignId').val(), $("#hdnRedirectType").val());
          });

          // Close event for Error Message & Success Message Close button 
          $(".alert").find(".close").on("click", function (e) {
              e.stopPropagation();
              e.preventDefault();
              $(this).closest(".alert").css("display", "none");
              /*Changed by Nirav Shah for Inspect pop-up screen : CSS changes as per new HTML on 13 feb 2014*/
          });

      });

      function RemoveTabClass() {
          $('#InspectTab').children().each(function () {
              if ($(this).hasClass('active pull-left')) {
                  $(this).removeClass("active pull-left");
                  $(this).addClass("pull-left");
              }
          });
      }

      function loadReview(id, tabValue) {

          $("#hdnInspectPopup").val(tabValue);
          $.ajaxSetup({ cache: false });
          var url;

          var CampaignOpt = $("#hdnCampaignOpt").val();
          if (tabValue == TabSetup) {
              if (CampaignOpt == "Edit") {
                  $('#txtTitle').css('display', 'block');
                  $('#lblCampaignTitle').css('display', 'none');
                  url = '@Url.Content("~/Inspect/LoadEditSetupCampaign/")';
              }
              else {
                  url = '@Url.Content("~/Inspect/LoadSetupCampaign/")';
              }
          }
          if (tabValue == TabReview) {
              if (CampaignOpt == "Edit") {
                  $('#txtTitle').css('display', 'none');
                  $('#lblCampaignTitle').css('display', 'block');
              }
              url = '@Url.Content("~/Inspect/LoadReviewCampaign/")';
        }

        if (tabValue == TabBudget) {
            if (CampaignOpt == "Edit") {
                $('#txtTitle').css('display', 'block');
                $('#lblCampaignTitle').css('display', 'none');
            }
            url = '@Url.Content("~/Inspect/LoadCampaignBudgetAllocation/")';
        }

        RemoveTabClass();
        $("#li" + tabValue).removeClass("pull-left");
        $("#li" + tabValue).addClass("active pull-left");
        $('#div' + tabValue).css({ display: "block" });

        $("#divTab").empty();

        $("#divTab").load(url + '?id=' + id, function (response, status, xhr) {
            if (response == '{"serviceUnavailable":"~/Login/ServiceUnavailable"}') {
                //// Call function to redirect on service unavailibility.
                //// Added By: Maninder Singh Wadhva on 11/24/2014.
                //// Ticket: 942 Exception handeling in Gameplan.
                window.location = '@Url.Content(Common.RedirectOnServiceUnavailibilityPage)';
                    }
        });
    }
    function loadAddSetup() {
        $("#errorMessage").css("display", "none");
        $("#successMessage").css("display", "none");
        $("#hdnCampaignOpt").val("Edit");
        var InspectValue = $("#hdnInspectPopup").val();
        var tabtext = ($("#li" + InspectValue).children('a').text());
        var planId = '@planId';
        if (tabtext == "Setup") {
            url = '@Url.Content("~/Inspect/CreateCampaign/")';
            $("#divTab").empty();
            $("#divTab").load(url + '?id=@planId');
        }
        $("#btnEditCampaign").css("display", "none");
        $("#AddForm").css("display", "none");
        //$(".btn-group").css("display", "none"); 
        $('#txtTitle').css('display', 'block');
        $('#txtTitle').text('');
        $('#lblCampaignTitle').css('display', 'none');
        return false;
    }
    $('#AddForm').click(function () {
        if ($('#popupnewprogram').css('display') == 'none') {
            $('#popupnewprogram').css('display', 'block')
        }
        else {
            $('#popupnewprogram').css('display', 'none')
        }
    });

    $(document).mouseup(function (e) {
        var popup = $('#popupnewprogram');
        var button = $('#AddForm');
        if (!popup.is(e.target) && popup.has(e.target).length === 0 && popup.css('display') == 'block' && !button.is(e.target) && button.has(e.target).length === 0) {
            $('#popupnewprogram').css("display", "none");
        }
    });

    $('#CloneCampaign').click(function () {
        var idPlanCamaign = $("#hdnPlanCampaignId").val();
        var Title = $("#lblCampaignTitle").html();
        $.ajax({
            type: 'POST',
            url: '@Url.Content("~/Inspect/Clone")',
            data: {
                CloneType: '@Enums.DuplicationModule.Campaign', 
                Id: idPlanCamaign,
                title: Title,
                CalledFromBudget: '@CalledFromBudget',
                RequsetedModule: '@RedirectType',
                planId : '@planId'
            },
            success: function (data) {
                if (data.IsSuccess != 'undefined' && data.IsSuccess == '#') {
                    window.location = '@Url.Content("~/Login/Index")';
                }
                else if (data.IsSuccess) {
               
                    var currentTab = "Setup";

                    if ('@RedirectType' == "@Enums.InspectPopupRequestedModules.Budgeting.ToString()") {
                        currentTab = "Budget";
                    }
                        var planCampaignId = data.Id;
                        var expandplanCampaignId = data.expand;
                        var planProgramId = "";

                        loadInspectPopup(planCampaignId, "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Campaign).ToLower()", currentTab, "@Enums.InspectPopupMode.ReadOnly.ToString()", 0, '@RedirectType');

                        if ("@Enums.InspectPopupRequestedModules.Budgeting.ToString()" == '@RedirectType') {
                            $("#hdnBudgetingExpandId").val(expandplanCampaignId);
                            $("#hdnBudgetingIsSave").val("true");
                        }
                        else {
                            RefreshCurrentTab('@RedirectType', 0, 0, 0);
                        }

                    $("#successMessage").css("display", "block");
                    $("#spanMessageSuccess").empty();
                    $("#spanMessageSuccess").text(data.msg);
                    $("#errorMessage").css("display", "none");
                    $("#hdnIsCreate_Clone").val(true); //// Hidden value used in _plan.cshmtl page to check that page require to refresh or not.
                        return; 

                    }
                    else {
                        $("#successMessageViewCampaign").slideUp(50);
                        $("#errorMessageEditCampaign").slideDown(400);
                        $("#spanMessageEditCampaign").empty();
                        $("#spanMessageEditCampaign").val(data.msg);
                        return false;
                    }
            }
        });
    });

    function SaveMessageOnParent(value) {
        $("#modal-container-186470").modal('hide');
        $("#errorMessageDuplicatePlan").slideUp(50);
        $("#successMessageDuplicatePlan").slideDown(400);
        $("#cSuccessDuplicatePlan").empty();
        $("#cSuccessDuplicatePlan").text(htmlDecode(value));
        $("#successMessageDuplicatePlan").removeClass("message-position");
        $("#successMessageDuplicatePlan").addClass("successMessage-InspectPopUpSections");
        RefreshCurrentTab();
    }

    $("#deleteCampaign").click(function () {
        if (confirm('@Common.objCached.ConfirmationForDeleteCampaign')) {
            var campaignId = $("#hdnPlanCampaignId").val();
            var uId = $(window).attr('name');
            var arrClosedTaskString = null;
            if (typeof arrClosedTask != 'undefined') {
                arrClosedTaskString = arrClosedTask.toString();
            }
            $.ajax({
                type: 'POST',
                url: '@Url.Content("~/Inspect/DeleteSection")',
                 data: {
                     ID: campaignId
                     , DeleteType: '@Enums.DuplicationModule.Campaign'
                     , UserId: uId
                     , closedTask: arrClosedTaskString
                     , CalledFromBudget: '@CalledFromBudget'
                        , IsIndex: '@isIndex'
                        , RedirectType: '@RedirectTypeMode'
                    },
                 success: function (data) {
                     if (data.returnURL != 'undefined' && data.returnURL == '#') {
                         window.location = '@Url.Content("~/Login/Index")';
                        }
                        else {
                         if (data.IsSuccess && data.opt != 'undefined') {
                             if (data.opt == '@Enums.InspectPopupRequestedModules.Index.ToString()') {
                                    SaveMessageOnParent(data.msg);
                                    //Added By : Kalpesh Sharma Internal review points 18/11/2014
                                    RefershPlanHeaderCalc();
                                    $('body').removeClass('bodyOverflow');
                                }
                                else {
                                    window.location.href = data.redirect;
                                    return;
                                }
                            }
                            else {
                                $("#successMessageViewCampaign").slideUp(50);
                                $("#errorMessageEditCampaign").slideDown(400);
                                $("#spanMessageEditCampaign").empty();
                                $("#spanMessageEditCampaign").val(data.msg);
                                return false;
                            }
                        }
                    }
             });
            }
    });
</script>
