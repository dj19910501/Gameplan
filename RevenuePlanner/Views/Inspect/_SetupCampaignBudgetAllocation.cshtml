@model RevenuePlanner.Models.Plan_CampaignModel
@using RevenuePlanner.Helpers;
@{
    string planRemainingBudget = Convert.ToString(ViewBag.planRemainingBudget);
    bool IsBudgetAllocated = false;
    if (Model.AllocatedBy.ToLower() != Enums.PlanAllocatedByList[Enums.PlanAllocatedBy.defaults.ToString()].ToString().ToLower())
    {
        IsBudgetAllocated = true;
    }
    var YearDiffrence = ViewBag.YearDiffrence;
    var StartYear = ViewBag.StartYear;
    var AllocatedBy = Model.AllocatedBy;

}

<style type="text/css">
    #cancelCampaignBudget {
        color: gray;
        margin-top: 6px;
    }

    .border-top-div-CampaignPopUp {
        border-top: 1px solid #a8a8a8;
        clear: both;
        padding-top: 30px;
    }

    .font-size16 {
        font-size: 16px;
    }

    #divTab {
        margin-top: 30px;
    }

    #txtRemainingBudget {
        margin-bottom: 40px;
    }

    .CampaignBudgetSection {
        width: 70%;
        float: left;
        margin-bottom: 50px;
    }
</style>

@using (Html.BeginForm(new { @id = "frmCampaignBudgetAllocation" }))
{
    @Html.HiddenFor(model => model.PlanCampaignId, new { id = "hdnPlanCampaignId" })
    @Html.HiddenFor(model => model.CampaignBudget, new { id = "hdnOldCampaignBudget" })
    @Html.Hidden("hdnIsBudgetAllocated", IsBudgetAllocated)
   
    <div style="width: 30%; float: left;">
        <label class="padding-left4 inspect-bolder-label" title="Campaign Budget">Campaign Budget</label>
        @Html.TextBoxFor(model => model.CampaignBudget, new { @class = "currency_dollar margin-top3px input-budget", placeholder = "Required", require = "true", id = "txtCampaignBudget", maxlength = @RevenuePlanner.Helpers.Common.maxLengthDollar })
        <div>
            <label title="Remaining Plan Budget" class="inspect-bolder-label">Remaining Plan Budget</label>
            @Html.TextBox("txtRemainingBudget", planRemainingBudget, new { @class = "margin-top3px", id = "txtRemainingBudget", @readonly = "true" })
        </div>
    </div>
    <div class="CampaignBudgetSection">
        @if (IsBudgetAllocated)
        {
            <div class="budget-section">
                <div class="budget-head clearfix">
                    <p class="inspect-bolder-label">Budget Allocation</p>
                </div>
                <div class="budget-collapse">
                    <div class="white-bg-edirProgram">
                        @HtmlHelpers.GenerateBudgetAllocationControl(@Model.AllocatedBy, @YearDiffrence, @StartYear)
                        <div class="budget-month">
                            <span class="month">@Common.UnallocatedBudgetLabelText</span>   @* Modified by Sohel Pathan on 04/08/2014 *@
                            <span class="unallocated-span">
                                <input id="lblUnallocatedBudget" class="unallocated-text-BudgetPopUp" style="color: #666666;" readonly="true" /></span>
                        </div>
                        <div class="SepraterStacticis"></div>
                        <div class="budget-result source-sans-prolight">
                            <p class="font-size16">
                                Remaining @(@Model.AllocatedBy.ToLower() == Enums.PlanAllocatedByList[Enums.PlanAllocatedBy.months.ToString()].ToString().ToLower() ? "Monthly" : "Quarter") Budget: 
                                    	<span id="lblRemainingMonthlyBudget" class="source-sans-proregular"></span>
                            </p>
                            <p class="font-size16">
                                Allocated Programs Budget (this @(@Model.AllocatedBy.ToLower() == Enums.PlanAllocatedByList[Enums.PlanAllocatedBy.months.ToString()].ToString().ToLower() ? "Month" : "Quarter")): 
                                    	<span id="lblAllocatedBudget" class="source-sans-proregular"></span>
                            </p>
                            <p class="font-size16">
                                Total Allocated:
                                    	<span id="lblTotalAllocated" class="source-sans-proregular"></span>
                            </p>
                            <p class="font-size16">
                                Total Budgeted:
                          <span id="lblTotalBudget" class="source-sans-proregular">@Model.CampaignBudget</span>
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="font20 alignCenter" id="divDefaultBudget">
                @Common.objCached.DefaultPlanAllocationMessage
            </div>
        }
    </div>
    
@*<div style="width: 100%; clear: both" class="wraper-btns cf border-top-div " id="SaveCampaignBudgetSection">
        <div class="span2 btn-save" style="width:80px;">
            <button id="save_campaign" class="btn btn-blue text-shadow-blue source-sans-proregular margin-top23 popup_button_save" type="button">Save </button>
        </div>
        <div class="span2">
            <button id="cancelCampaignBudget" class="close-form btn-link source-sans-proregular popup_button_cancel" style="float: left; margin-top: 30px !important" type="button">Cancel</button>
        </div>
    </div> *@  
    
}

<script type="text/javascript">

    var SaveCampaignFlag = true;

    function FormatRemainingBudget() {
        if (parseInt(ReplaceCC($("#txtRemainingBudget").val())) < 0) {
            $("#txtRemainingBudget").addClass('error-text');
        }
        else {
            $("#txtRemainingBudget").removeClass('error-text');
        }
    }

    $(document).ready(
    function () {
        var IsEditable = $("#hdnCampaignOpt").val();
        if (IsEditable == 'View') {
            $('form').find(".sbSelector").each(function () {
                $(this).unbind("click");
                $(this).removeAttr("href");
                $(this).prev().unbind("click");
                $(this).prev().removeAttr("href");
            });
            $('form').find("input[type=text], textarea").each(function () {
                $(this).prop('readonly', true);
            });
            $('form .budget-month').find("input").each(function () {
                $(this).parent().removeClass('light-blue-background');
                $(this).parent().addClass('unallocated-span');
                $(this).addClass('unallocated-text-BudgetPopUp');
                $(this).prop('readonly', true);
            });

            $('form').find(".add-on").each(function () {
                $(this).unbind("click");
            });

            $("#SaveCampaignBudgetSection").css("display", "none");

            $(".input-budget").removeClass('light-blue-background');
        }
        else {
            $("#SaveCampaignBudgetSection").css("display", "block");
            $("#txtTitle").prop('readonly', false);
            $(".input-budget").addClass('light-blue-background');
        }

        $("#txtRemainingBudget").val(FormatCommasBudget($("#txtRemainingBudget").val(), false, true));
        FormatRemainingBudget();
        $('.currency_dollar').priceFormat({ prefix: '$', centsSeparator: '', thousandsSeparator: ',', centsLimit: 0 });
        $('.priceValue').priceFormat({ prefix: '', centsSeparator: '', thousandsSeparator: ',', centsLimit: 0 });
        $('.priceValueAllowNull').priceFormat({ prefix: '', centsSeparator: '', thousandsSeparator: ',', centsLimit: 0, isAllowNull: true });

        if ($("#hdnIsBudgetAllocated").val() == "True") {
            $("#lblTotalBudget").html(FormatCommasBudget($("#lblTotalBudget").html(), false, true));
        }

        fillBudgetAllocationData();

        $('.budget-section').find('input').not('.unallocated-text-BudgetPopUp').each(function () {
            $(this).keyup(function () {
                //Modified By Kalpesh Sharma #761 CAMPAIGNS View: Campaign/Plan Budget field is clearing Remaining Budget/Remaining
                var GetCurrentvalue = $(this).val().trim();
                if (GetCurrentvalue == '') {
                    GetCurrentvalue = '0';
                }
                var currentValue = GetCurrentvalue.replace(/,/g, '').replace('$', '');
                if (currentValue.match('^(0|[1-9][0-9]*)$')) {

                    var OldBudgetValue = parseInt($(this).attr("ov"));
                    var RemainingBudgetValue = parseInt($(this).attr("rmb"));
                    var differenceVal = OldBudgetValue - parseInt(currentValue);
                    var newRemainingBudgetValue = RemainingBudgetValue + differenceVal;
                    $(this).attr("rmb", newRemainingBudgetValue);
                    $(this).attr("ov", currentValue);
                    if (newRemainingBudgetValue < 0) {
                        $(this).addClass('error-text');
                        $("#lblRemainingMonthlyBudget").addClass('error-text');
                    }
                    else {
                        $(this).removeClass('error-text');
                        $("#lblRemainingMonthlyBudget").removeClass('error-text');
                    }

                    //Added By : Kalpesh Sharma :: Formatted the currency and minus sign in string  
                    $("#lblRemainingMonthlyBudget").html(FormatCommasBudget(newRemainingBudgetValue.toString(), false, true));

                    var ProgramBudgetValue = parseInt($(this).attr("pmb"));
                    if (parseInt(currentValue) < ProgramBudgetValue) {
                        $(this).addClass('low-budgeted');
                        $("#lblAllocatedBudget").addClass('error-text');
                    }
                    else {
                        $(this).removeClass('low-budgeted');
                        $("#lblAllocatedBudget").removeClass('error-text');
                    }

                    var TotalallocationValue = 0;
                    var lstAllocInputs = $(".budget-section input").not('.unallocated-text-BudgetPopUp');
                    for (var i = 0; i < lstAllocInputs.length; i++) {
                        TotalallocationValue += parseInt($(lstAllocInputs[i]).val() == '' ? 0 : ReplaceCC($(lstAllocInputs[i]).val()));
                    }
                    $("#lblTotalAllocated").html(FormatCommasBudget(TotalallocationValue.toString(), false, true));
                    calculateUnallocatedBudget();
                }
            });
        });

    });

    $(".alert").find(".close").on("click", function (e) {
        e.stopPropagation();
        e.preventDefault();
        $(this).closest(".alert").slideUp(400);
    });

    function calculateUnallocatedBudget() {
        var CampaignBudgetValue = $("#txtCampaignBudget").val().trim().replace(/,/g, '').replace('$', '');
        var CampaignAllocatedBudgetValue = "0";
        if (typeof $("#lblTotalAllocated").html() != 'undefined') {
            CampaignAllocatedBudgetValue = $("#lblTotalAllocated").html().trim().replace(/,/g, '').replace('$', '');
        }
        var unallocatedBudget = parseInt(CampaignBudgetValue) - parseInt(CampaignAllocatedBudgetValue);

        //Added By : Kalpesh Sharma :: Formatted the currency and minus sign in string  
        $("#lblUnallocatedBudget").val(FormatCommasBudget(unallocatedBudget.toString(), false, true));

        if (unallocatedBudget < 0) {
            $("#lblUnallocatedBudget").addClass('error-text');
            $("#lblTotalAllocated").addClass('error-text');

        }
        else {
            $("#lblUnallocatedBudget").removeClass('error-text');
            $("#lblTotalAllocated").removeClass('error-text');
        }
    }

    function ShowBudgetError(value) {
        $("#successMessageEditCampaignBudget").slideUp(400);
        $("#divBudgetError").slideDown(400);
    }

    $("#txtCampaignBudget").keyup(function () {
        var ProgramBudgetValue = ReplaceCC($("#txtCampaignBudget").val());
        if (ProgramBudgetValue == '' || typeof ProgramBudgetValue == 'undefined') {
            ProgramBudgetValue = '0';
            $("#txtCampaignBudget").val('$0')
        }
        var OldProgramBudgetValue = ReplaceCC($("#hdnOldCampaignBudget").val());
        var differenceVal = parseInt(OldProgramBudgetValue) - parseInt(ProgramBudgetValue);
        var newRemainingBudget = parseInt(ReplaceCC($("#txtRemainingBudget").val())) + differenceVal;


        $("#txtRemainingBudget").val(FormatCommasBudget(newRemainingBudget.toString(), false, true));
        $("#txtRemainingBudget").attr('title', $("#txtRemainingBudget").val());

        $("#hdnOldCampaignBudget").val(ProgramBudgetValue);
        if (parseInt(ReplaceCC($("#txtRemainingBudget").val())) < 0) {
            $("#lblTotalBudget").addClass('error-text');
            $("#txtRemainingBudget").addClass('error-text');
            $("#lblUnallocatedBudget").addClass('error-text');
        }
        else {
            $("#lblTotalBudget").removeClass('error-text');
            $("#txtRemainingBudget").removeClass('error-text');
            $("#lblUnallocatedBudget").removeClass('error-text');
        }

        $("#lblTotalBudget").html(FormatCommasBudget(ProgramBudgetValue, false, true));
        if ($("#hdnIsBudgetAllocated").val() == "True") {
            calculateUnallocatedBudget();
        }

    });

    function fillBudgetAllocationData() {
        var hdnPlanCampaignId = $("#hdnPlanCampaignId").val();
        $.ajax({
            type: 'POST',
            url: '@Url.Content("~/Plan/GetBudgetAllocationCampaignData/")',
            data: {
                id: hdnPlanCampaignId
            },
            success: function (data) {
                var r = data.budgetData;
                if (typeof r != 'undefined') {
                    if (r.length) {
                        for (i in r) {
                            var remainingMonthlyBudget = r[i].remainingMonthlyBudget == '' ? '0' : r[i].remainingMonthlyBudget;
                            $("#" + r[i].periodTitle).val(FormatCommas(r[i].budgetValue.toString(), false));
                            $("#" + r[i].periodTitle).attr('ov', r[i].budgetValue == '' ? '0' : r[i].budgetValue);
                            $("#" + r[i].periodTitle).attr('rmb', remainingMonthlyBudget);
                            $("#" + r[i].periodTitle).attr('pmb', r[i].programMonthlyBudget);
                            $("#" + r[i].periodTitle).attr("myValue", $("#" + r[i].periodTitle).val()); // Added by Sohel Pathan on 18/08/2014 for Internal Review Points
                            if (parseInt(remainingMonthlyBudget) < 0) {
                                $("#" + r[i].periodTitle).addClass('error-text');
                            }

                            if (parseFloat($("#" + r[i].periodTitle).attr('ov')) < parseFloat(r[i].programMonthlyBudget)) {
                                $("#" + r[i].periodTitle).addClass('error-text');
                            }

                        }
                    }
                }

                $("#txtRemainingBudget").val(FormatCommasBudget(data.planRemainingBudget.toString(), false, true));
                //Added  By : Kalpesh Sharma #693 Allowing Program Budget more than Remaining Campaign Budget in None case
                if (parseInt(ReplaceCC($("#txtRemainingBudget").val())) < 0) {
                    $("#txtRemainingBudget").addClass('error-text');
                }
                else {
                    $("#txtRemainingBudget").removeClass('error-text');
                }

                $("#txtRemainingBudget").attr('title', $("#txtRemainingBudget").val());
                var TotalallocationValue = 0;
                var lstAllocInputs = $(".budget-section input").not('#lblUnallocatedBudget');
                for (var i = 0; i < lstAllocInputs.length; i++) {
                    TotalallocationValue += parseInt($(lstAllocInputs[i]).val() == '' ? 0 : ReplaceCC($(lstAllocInputs[i]).val()));
                }
                $("#lblTotalAllocated").html(FormatCommasBudget(TotalallocationValue.toString(), false, true));
                calculateUnallocatedBudget();
                $("#Y1").focus();
            },
            error: function () {
                ShowError('');
                return false;
            }
        });
    }


    $('.budget-section').find('input').not('#lblUnallocatedBudget').each(function () {
        $(this).focus(function () {
            $('.budget-section').find('input').not('#lblUnallocatedBudget').parent().removeClass('border000000');
            $(this).parent().addClass('border000000');
            var remainingValue = parseInt($(this).attr("rmb"));
            var AllocatedProgramsBudget = parseInt($(this).attr("pmb"));
            if (remainingValue < 0) {
                $("#lblRemainingMonthlyBudget").addClass('error-text');
            }
            else {
                $("#lblRemainingMonthlyBudget").removeClass('error-text');
            }
            $("#lblRemainingMonthlyBudget").html(FormatCommasBudget(remainingValue.toString(), false, true));

            if ($(this).val().trim() != '') {
                var currentValue = $(this).val().trim().replace(/,/g, '').replace('$', '');
                if (currentValue.match('^(0|[1-9][0-9]*)$')) {
                    if (parseInt(currentValue) < AllocatedProgramsBudget) {
                        $("#lblAllocatedBudget").addClass('error-text');
                    }
                    else {
                        $("#lblAllocatedBudget").removeClass('error-text');
                    }
                }
            }
            else {
                $("#lblAllocatedBudget").removeClass('error-text');
            }

            $("#lblAllocatedBudget").html(FormatCommasBudget(AllocatedProgramsBudget.toString(), false, true));

        });

    });


    $("#cancelCampaignBudget").click(function () {
        CancelEvent();
        $("#successMessageViewCampaign").slideUp(50);
        $("#errorMessageEditCampaign").slideUp(50);
    });

    function ShowError(value) {
        $("#successMessageViewCampaign").slideUp(50);
        $("#errorMessageEditCampaign").slideDown(400);
        $("#spanMessageEditCampaign").empty();
        $("#spanMessageEditCampaign").html(value);
    }

    function CancelEvent() {
        $("#hdnCampaignOpt").val("View");
        loadReview('@Model.PlanCampaignId', "Budget");
        $("#btnEditCampaign").css("display", "block");
        $("#AddForm").css("display", "block");
        $('#txtTitle').css('display', 'none');
        $('#lblCampaignTitle').css('display', 'block');
        $("#lblCampaignTitle").removeAttr("style");
        $('#divDeleteCampaign').css('display', 'block');
    }

    //Modified By Komal rawal for #1324
    function BudgetCampaignSave() {
        var returnparameter = false;
        // $("#save_campaign").click(function () {
        var iserror = false;

        var title = htmlEncode($('#txtTitle').val());

        $('#frmCampaignBudgetAllocation').find('input[type=text], select, textarea').each(function () {
            if ($(this).attr('require') == 'true') {
                if ($(this).val() == '') {
                    $(this).addClass("error");
                    iserror = true;
                }
                else {
                    $(this).removeClass("error");
                }
            }
        });

        $('#frmCampaignBudgetAllocation').find('.sbSelector').each(function () {
            if ($(this).parent().prev().attr('require') == 'true') {
                if ($(this).text() == 'Please Select') {
                    $(this).addClass("error");
                    iserror = true;
                }
                else {
                    $(this).removeClass("error");
                }
            }
        });

        if (title == '') {
            iserror = true;
        }

        if (iserror) {
            ShowError("@RevenuePlanner.Helpers.Common.objCached.ValidateForEmptyField");
            $('#InspectTab').removeClass('SpanDisable');
            return false;
        }
        if (SaveCampaignFlag) {
            var lstAllocInputs = $(".budget-section input.low-budgeted").not('.unallocated-text-BudgetPopUp');
            if (lstAllocInputs.length > 0) {
                var errorMsg = "@RevenuePlanner.Helpers.Common.objCached.CampaignBudgetIsLowerthanTotalAllocatedPrograms ";
                    // Added by Dharmraj 25-8-2014, for Internal review points
                    errorMsg = errorMsg.replace("month", "@(Model.AllocatedBy.ToLower() == Enums.PlanAllocatedByList[Enums.PlanAllocatedBy.months.ToString()].ToString().ToLower() ? "month" : "quarter")");

                    var removeLength = 0;
                    var inputLength = lstAllocInputs.length;
                    for (var i = 0; i < lstAllocInputs.length; i++) {
                        if (inputLength == 1) {
                            errorMsg += ($(lstAllocInputs[i]).parent().prev().html());
                        }
                        else if (inputLength == 2) {
                            errorMsg += ($(lstAllocInputs[i]).parent().prev().html() + ' and ');
                            removeLength = 4;
                        }
                        else if (inputLength > 2) {
                            if (i == inputLength - 2) {
                                errorMsg += ($(lstAllocInputs[i]).parent().prev().html() + ' and ');
                                removeLength = 4;
                            }
                            else {
                                errorMsg += ($(lstAllocInputs[i]).parent().prev().html() + ', ');
                                removeLength = 2;
                            }
                        }
                    }
                    errorMsg = errorMsg.substring(0, errorMsg.length - removeLength);
                    errorMsg += '. <br />If you want to continue, hit Save below.';
                    ShowError(errorMsg);
                    SaveCampaignFlag = false;
                    $('#InspectTab').removeClass('SpanDisable');
                    return false;
                }
            }

        ////Start added by Kalpesh  #608: Budget allocation for Program
        var allocationValue = [];
        var lstAllocInputs = $(".budget-section input").not('.unallocated-text-BudgetPopUp');
        for (var i = 0; i < lstAllocInputs.length; i++) {
            allocationValue.push(ReplaceCC($(lstAllocInputs[i]).val()));
        }

        $("#txtCampaignBudget").val(ReplaceCC($("#txtCampaignBudget").val()));
        $("#lblCampaignTitle").html(htmlEncode($('#txtTitle').val()));
        $("#hdnCampaignTitle").val(htmlDecode($('#txtTitle').val()));

        var uId = $(window).attr('name');

        $.ajax({

            type: 'POST',
            async: false,
            url: '@Url.Content("~/Inspect/SaveCampaignBudgetAllocation")',
            data: $("form").serialize() + '&BudgetInputValues=' + allocationValue.toString() + '&UserId=' + uId + '&title=' + escape(title) + '&AllocatedBy=' + '@AllocatedBy' + '&YearDiffrence=' + '@YearDiffrence',
                success: function (data) {

                    if (data.IsSaved) {
                        // CancelEvent();
                        var requestedModule = $("#hdnRedirectType").val();
                        $("#errorMessageEditCampaign").slideUp(50);
                        $("#successMessageViewCampaign").slideDown(400);
                        $("#spanSuccessMessageViewCampaign").empty();
                        $("#spanSuccessMessageViewCampaign").html(data.msg);

                        if ("@Enums.InspectPopupRequestedModules.Budgeting.ToString()" == requestedModule) {
                         $("#hdnBudgetingExpandId").val("campaign" + data.planCampaignId);
                         $("#hdnBudgetingIsSave").val("true");
                     }
                        else {
                            // Comment By Bhavesh Date: 6-jan-2015, Ticket #1793
                        // RefreshCurrentTab();
                     }
                     returnparameter = true;
                 }
                 else {
                     ShowError(data.msg);
                     returnparameter = false;
                 }

             }
        });
         return returnparameter;
     }

</script>
