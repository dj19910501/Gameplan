@model RevenuePlanner.Models.InspectModel
@using RevenuePlanner.Helpers;
@{
    RevenuePlanner.Models.InspectModel programMaster = null;
    if (Model != null)
    {
        programMaster = Model;
    }
    var RedirectType = (string)programMaster.RedirectType;
        var RedirectTypeMode = (bool)(!string.IsNullOrEmpty(RedirectType) ? (RedirectType == Enums.InspectPopupRequestedModules.ApplyToCalendar.ToString() ? true : false) : false);
        bool isIndex = (bool)(!string.IsNullOrEmpty(RedirectType) ? (RedirectType == Enums.InspectPopupRequestedModules.Index.ToString() ? true : false) : true);
        var CalledFromBudget = (!string.IsNullOrEmpty(RedirectType) ? (RedirectType == Enums.InspectPopupRequestedModules.Budgeting.ToString() ? "Budegting" : "") : "");

        var planProgramId = 0;
        var programStatus = "";
        string colorCode = "C6EBF3";
        string programTitle = "";
        var campaignId = Convert.ToString(programMaster.PlanCampaignId);
        var PlanId = 0;
        bool IsPlanEditable = false;
        bool IsPlanCreateAll = false;
        var popupvalue = string.Empty;
        string InspectMode = string.Empty;
        if (programMaster != null)
        {
            planProgramId = programMaster.PlanProgramId;
            programStatus = programMaster.Status;
            colorCode = programMaster.ColorCode;
            programTitle = programMaster.ProgramTitle;
            //TempData["ProgramModel"] = programMaster;
            IsPlanEditable = (bool)programMaster.IsPlanEditable;
            IsPlanCreateAll = (bool)programMaster.IsPlanCreateAll;
            popupvalue = (string)programMaster.InspectPopup;
            InspectMode = programMaster.InspectMode;
            PlanId = programMaster.PlanId;
        }
        var EntityId = PlanId + "_" + planProgramId;
        //Added By komal Rawal For #1325 - To maintain the mode on tab change after review
        string ProgramOpt = "";
        if (InspectMode == Enums.InspectPopupMode.ReadOnly.ToString())
        {
            ProgramOpt = "View";
        }
        else
        {
            ProgramOpt = "Edit";
        }
        //End

    }
@Html.Hidden("hdnPopup", popupvalue, new { id = "hdnInspectPopup" })
@Html.Hidden("hdnPlanProgramId", planProgramId, new { id = "hdnPlanProgramId" })
@Html.Hidden("hdnProgramStatus", programStatus, new { id = "hdnProgramStatus" })
@Html.Hidden("hdnProgramOpt", ProgramOpt, new { id = "hdnProgramOpt" })
@Html.Hidden("hdnRedirectType", RedirectType, new { id = "hdnRedirectType" })
@Html.Hidden("hdnIsPlanEditable", IsPlanEditable)
@Html.Hidden("hdnInspectMode", InspectMode, new { id = "hdnInspectMode" })
@Html.Hidden("hdnOwner", "", new { id = "hdnOwner" })

<style type="text/css">
    #successMessageViewProgram, #errorMessageEditProgram {
        margin-bottom: 15px !important;
    }

</style>

<div id="successMessageViewProgram" class="alert hide alert-success messagewidth">
    <a class="close">×</a>
      <strong>Success.</strong>
    <span id="spanSuccessMessageViewProgram"></span>
</div>

<div id="errorMessageEditProgram" class="alert alert-error hide messagewidth">
    <a class="close">×</a>
    <strong>Error!</strong>
    <span id="spanMessageEditProgram"></span>
</div>
<div class="headerfix-wraper">
    @*Modified for Design changes ticket #1318*@
    <div class="headefix">

        <h2 class="title-simple source-sans-prolight">
            @if (programMaster.PlanProgramId != 0)
            {
                
                <span>
                    @if (IsPlanEditable)
                    {
                       <div class="delete-btn-tab" style="float: right;" id="divDeleteProgram">
                            <button class="delete-btn-gray" id="deleteProgram" type="button">Delete</button>
                        </div>
                    }

                      @if (IsPlanCreateAll)
                      {
                    <div style="float: right; position: relative;">
                        <span class="add-icon-white btn-blue btn-large" style="display: block; cursor: pointer; margin-right: 10px;" id="AddForm"></span>
                        <div class="btn-dropdwn" style="display: none; position: absolute; top: 40px;z-index:1;" id="popupnewprogram">
                            <ul style="margin: 0;">
                                @*Modified by Rahul Shah on 12/04/2016 for PL #2038*@
                                <li class="new-prog" id="NewProgramfromPopup">New Program</li>
                                <li class="copy-camp" id="CloneProgram">Copy Program</li>
                                <li class="new-prog" id="NewTactic">New Tactic</li>                                
                                <li class="new-prog" entityid=@EntityId sectiontype="Program" id="copyToProgram" onclick="OpentCopyPopup(this)" popuptype="Copying" redirecttype=@RedirectType>Copy To</li>
                            </ul>
                        </div>
                    </div>
                      }
                    @if (IsPlanEditable)
                    {
                       <span class="edit-icon-white btn-blue btn-large SpanDisable" href="#" id="EditProgram" style="margin-right: 15px;cursor:pointer;"></span>
                        //  @Html.ActionLink(" ", "Assortment", "Plan", new { campaignId = programMaster.PlanCampaignId, programId = programMaster.PlanProgramId, tacticId = 0, EditObject = "Program", ismsg = "" }, new { @id = "EditProgram", @class = "edit-icon-white btn-blue btn-large",style="margin-right:10px;" })
                    }


                </span>
     
             
            }

            @if (programMaster.PlanProgramId == 0)
            {
                <span class="Save-icon-white btn-blue btn-large SpanDisable" href="#" id="EditProgram" style="margin-right: 15px; cursor:pointer;"></span>
               @* @Html.ActionLink(" ", "Assortment", "Plan", new { campaignId = programMaster.PlanCampaignId, programId = programMaster.PlanProgramId, tacticId = 0, EditObject = "Program", ismsg = "" }, new { @id = "EditProgram", @class = "Save-icon-white btn-blue btn-large",style="margin-right:10px;" })*@
            }

            <button class="close-x-big-icon" data-dismiss="modal" aria-hidden="true"></button> @*Modified by Bhumika #2003 from "buttom" to "button"  *@

        </h2>

    </div>
</div>
<div class="pop-body-wraper">
    <div class="PopupDiv">
        <form>
            <div class="modal-popup-title">
                <span class="icon-flag bg-purple" style="background-color:#@colorCode !important;"></span>
                <h2 class="title-simple source-sans-prolight">
                    <span>
                        <span id="lblProgramTitle"  class="tipsyclassTitle ConcatTextlength" title="@Html.Raw(programTitle)">@Html.Raw(programTitle)</span>
                    </span>
                    @Html.TextBox("txtProgramTitle", HttpUtility.HtmlDecode(programTitle), new { placeholder = "Program name goes here", require = "true", maxlength = "255", @class = "span12 input-small light-blue-background", @style = "width: 95%; height: 28px;display:none;font-family:'source_sans_prolight', Arial, 'sans-serif';font-size:27px;color:#4d4d4d;line-height: normal;", title = programTitle })
                    @Html.TextBox("txtTitle1", "", new { @style = "display:none", id = "txtTitle" })
                </h2>
            </div>
</form>
@if (programMaster.PlanProgramId != 0)
{
<div class="modal-popup-summary">
    <div id="nl-form" class="nl-form nl-form-modal source-sans-prolight" style="margin-bottom:0px;">
        <p class="modal-status">
            Status: 

            @if (programMaster.Status == Enums.TacticStatusValues.Single(tacticStatus => tacticStatus.Key.Equals(Enums.TacticStatus.Submitted.ToString())).Value)
            {
                <span id="status" class="source-sans-prosemibold statussubmitted">@programMaster.Status</span>
            }
            else if (programMaster.Status == Enums.TacticStatusValues.Single(tacticStatus => tacticStatus.Key.Equals(Enums.TacticStatus.Decline.ToString())).Value)
            {
                <span id="status" class="source-sans-prosemibold statusrejected">@programMaster.Status</span>
            }
            else if (programMaster.Status == Enums.TacticStatusValues.Single(tacticStatus => tacticStatus.Key.Equals(Enums.TacticStatus.Complete.ToString())).Value ||
                     programMaster.Status == Enums.TacticStatusValues.Single(tacticStatus => tacticStatus.Key.Equals(Enums.TacticStatus.InProgress.ToString())).Value ||
                     programMaster.Status == Enums.TacticStatusValues.Single(tacticStatus => tacticStatus.Key.Equals(Enums.TacticStatus.Approved.ToString())).Value)
            {
                <span id="status" class="source-sans-prosemibold statusapproved">@programMaster.Status</span>
            }
            else if (programMaster.Status == Enums.TacticStatusValues.Single(tacticStatus => tacticStatus.Key.Equals(Enums.TacticStatus.Created.ToString())).Value)
            {
                <span id="status" class="source-sans-prosemibold statuscreated">@programMaster.Status</span>
            }
        </p>
    </div>
</div>
}
<div>

    <ul class="nav nav-tabs new-margin no-position SpanDisable" id="InspectTab">
        <li class="active pull-left" id="liSetup">
            <a>Setup</a>
        </li>
        <li class="pull-left" id="liReview">
            <a>Review</a>
        </li>
	<!-- Commented by Arpita Soni for Ticket #2236 on 06/14/2016 -->
        @*@if (!Sessions.IsBudgetShow)
        {
            <li class="pull-left" id="liBudget">
                <a>Budget</a>
            </li>
        }*@
    </ul>

    <div id="divTab">
    </div>
</div>
    </div>
</div>

<script type="text/javascript">

    var divPartial = "#divPartial";
    var TabSetup = "Setup";
    var TabReview = "Review";
    // Commented by Arpita Soni for Ticket #2236 on 06/14/2016
    //var TabBudget = "Budget";

    var divTab = "#divTab";
    var tabtext = "";
    $(document).ready(
      function () {

          //Bhumika - #2236 For equal width of li
          var evenWidth = ($("#InspectTab").width() / $("#InspectTab li").length) - 2;
          $("#InspectTab li").css("width", evenWidth);
           evenWidth = 0;
          var modelHeight = $(window).height();
          var headerHeight = $('.headerfix-wraper').height();
          var bodyWrapperMaxHeight = modelHeight - headerHeight - 100;
          //$('.pop-body-wraper').css('height', '92%');
          CloseIconClick();
          NumberFormatterTipsyTitle(".tipsyclassTitle", 55);
          var InspectValue = $("#hdnInspectPopup").val();
          var planProgramId = $("#hdnPlanProgramId").val();
          // Call Remove Tabclass
          RemoveTabClass();

          $("#li" + InspectValue).removeClass("pull-left");
          $("#li" + InspectValue).addClass("active pull-left");
          tabtext = ($("#li" + InspectValue).children('a').text());
          $('#div' + tabtext).css({ display: "block" });

          // Click on Tab Partialview Refresh Based On Selected Tab
	  // Commented by Arpita Soni for Ticket #2236 on 06/14/2016
          //$("#liSetup,#liReview,#liBudget").on("click", function () {
              $("#liSetup,#liReview").on("click", function () {
              // Modified by Komal Rawal for #2165 clicking on tabs or button before loading gets complete gives elmah error.
              if($('#InspectTab').hasClass('SpanDisable') == false)
                      {
                      $('#EditProgram').removeClass('SpanDisable');
                      var activeTab = $("#InspectTab li.active a").text();
                      //   alert(activeTab);
                      tabtext = ($(this).children('a').text());


                      $('#InspectTab').addClass('SpanDisable');
                      // If condition added by bhavesh, if same tab click then don't require to save data. Date : 10-jan-2015.Ticket: #1823
                      var returnpara = true;
                      if (tabtext != activeTab) {
                          var returnpara = SaveAllData(activeTab);   //Added By Komal Rawal for #1325
                      }

                      var planProgramId = $("#hdnPlanProgramId").val();
                      if (planProgramId != 0 || tabtext != activeTab) {
                          if (returnpara) {
                              RemoveTabClass();
                              $(this).removeClass("pull-left");
                              $(this).addClass("active pull-left");
                              $("#successMessageViewProgram").css("display", "none");
                              $("#errorMessageEditProgram").css("display", "none");
                              $("#errorMessage").css("display", "none");
                              $("#successMessage").css("display", "none");
                              /*Changed by Nirav Shah for Inspect pop-up screen : CSS changes as per new HTML on 13 feb 2014*/
                              //var tabtext = ($(this).children('a').text());

                              loadReview(planProgramId, tabtext);
                          }
                      }
                      else
                      {
                          loadAddSetup();
                      }

                      }
          });

          //Added By Komal Rawal for #1325



          //End
          if ($("#hdnPlanProgramId").val() != '0') {
              if ($('#EditProgram').hasClass('edit-icon-white') && $("#hdnProgramOpt").val() == '@Enums.InspectPopupMode.Edit.ToString()') {
                  $('#EditProgram').removeClass('edit-icon-white');//Modified for #1318 by Komal Rawal
                  $('#EditProgram').addClass('Save-icon-white');
                  $("#successMessageViewProgram").css("display", "none");
                  $("#errorMessageEditProgram").css("display", "none");
                  $("#errorMessage").css("display", "none");
                  //$("#successMessage").css("display", "none");
                  $("#txtTitle").removeClass("error");
              }
              loadReview(planProgramId, tabtext);
          }
          else {

             // $("#liReview,#liBudget,#liSetup").unbind('click');
              loadAddSetup();
          }
          $("#EditProgram").on("click", function () {
              //added by devanshi for PL ticket #2276
              if (CheckHtmlTag($("#txtProgramTitle").val()) == false) {
                  ShowError("@RevenuePlanner.Helpers.Common.objCached.TitleContainHTMLString");
                  $("#txtProgramTitle").addClass("error");
                  return false;
              }
              //end
              // Modified by Komal Rawal for #2165 clicking on tabs or button before loading gets complete gives elmah error.
              if($(this).hasClass('SpanDisable') == false)
              {
                  isDataModified = true;
                  var activeTab = $("#InspectTab li.active a").text();
                  var planProgramId = $("#hdnPlanProgramId").val();
                  if ($('#EditProgram').hasClass('edit-icon-white')) {
                      $('#EditProgram').removeClass('edit-icon-white');//Modified for #1318 by Komal Rawal
                      $('#EditProgram').addClass('Save-icon-white');
                      var url;
                      $("#successMessageViewProgram").slideUp(50);
                      $("#errorMessageEditProgram").slideUp(50);
                      $("#successMessage").css("display", "none");
                      $("#txtProgramTitle").removeClass("error");
                      $("#hdnProgramOpt").val("Edit");
                      var InspectValue = $("#hdnInspectPopup").val();
                      var tabtext = ($("#li" + InspectValue).children('a').text());

                      if (tabtext == "Setup") {
                          url = '@Url.Content("~/Inspect/LoadSetupProgramEdit/")';
                          $("#divTab").empty();
                          $("#divTab").load(url + '?id=' + planProgramId);
                      }
		      // Commented by Arpita Soni for Ticket #2236 on 06/14/2016
                     @* else if (tabtext == "Budget") {
                          url = '@Url.Content("~/Inspect/LoadSetupProgramBudget/")';
                          $("#divTab").empty();
                          $("#divTab").load(url + '?id=' + planProgramId);
                      }*@
                      else if (tabtext == "Review") {
                          url = '@Url.Content("~/Inspect/LoadSetupProgramEdit/")';
                          $("#divTab").empty();
                          $("#divTab").load(url + '?id=' + planProgramId);
                          RemoveTabClass();
                          $("#liSetup").removeClass('pull-left');
                          $("#liSetup").addClass('active pull-left');
                      }

                      //  $("#EditProgram").css("display", "none");
                      //  $("#DeleteForm").css("display", "none");
                      //   $("#AddForm").css("display", "none");
                      $('#txtProgramTitle').css('display', 'block');
                      $('#lblProgramTitle').css('display', 'none');
                      $("#txtProgramTitle").prop('readonly', false);
                      // $('#divDeleteProgram').css('display', 'none');
                      return false;
                  }

                      //Added by komal Rawal for #1325 - To save the Active Tab on Save Button
                  else {
                      if (activeTab == TabSetup) {
                          var ReturnParameter = SetupSaveProgram();
                          if (ReturnParameter == false) {
                              return false;
                          }
                          else {
                              ReloadSavedProgram();
                          }
                      }

                      else if (activeTab == TabReview) {
                          var ReturnParameter = SaveTitle();
                          if (ReturnParameter == false) {
                              return false;
                          }
                          else {
                              ReloadSavedProgram();
                          }

                      }

                  }
              }
          });

          // Close event for Error Message & Success Message Close button
          $(".alert").find(".close").on("click", function (e) {
              e.stopPropagation();
              e.preventDefault();
              $(this).closest(".alert").css("display", "none");
              /*Changed by Nirav Shah for Inspect pop-up screen : CSS changes as per new HTML on 13 feb 2014*/
          });


          $(".edit-icon-white .btn-blue btn-large").on("click", function () {
              var tabtext = ($(this).children('a').text());
              var planTacticId = $("#hdnPlanTacticId").val();
              loadReview(planProgramId, tabtext);
              return false;
          });


          $("#NewTactic").on("click", function () {
              //Modified by Rahul Shah for PL #2031 on 22/03/2016
              var returnpara = true;
              var activeTab = $("#InspectTab li.active a").text();
              if (activeTab != null && activeTab != undefined && activeTab != '') {
                  returnpara = SaveAllData(activeTab);
              }
              $("#errorMessage").css("display", "none");
              $("#successMessage").css("display", "none");
              if(returnpara){
                  loadInspectPopup(0, "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Tactic).ToLower()", "Setup", '@Enums.InspectPopupMode.Add.ToString()', planProgramId, $("#hdnRedirectType").val());
              }
              return false;
          });
          $('#CloneProgram').click(function () {
              //Modified by Rahul Shah for PL #2031 on 22/03/2016
              var returnpara = true;
              var activeTab = $("#InspectTab li.active a").text();
              if (activeTab != null && activeTab != undefined && activeTab != '') {
                  returnpara = SaveAllData(activeTab);
              }
              if(returnpara){
                  isDataModified = true;
                  var idPlanProgram = $("#hdnPlanProgramId").val();
                  var Title = $("#lblProgramTitle").html();
                  $.ajax({
                      type: 'POST',
                      url: '@Url.Content("~/Inspect/Clone")',
                      data: {
                          CloneType: '@Enums.DuplicationModule.Program',
                          Id: idPlanProgram,
                          title: Title,
                          CalledFromBudget: '@CalledFromBudget',
                          RequsetedModule: '@RedirectType'
                      },
                      success: function (data) {
                          if (data.IsSuccess != 'undefined' && data.IsSuccess == '#') {
                              window.location = '@Url.Content("~/Login/Index")';
                          }
                          else if (data.IsSuccess) {

                              var currentTab = "Setup";
			      // Commented by Arpita Soni for Ticket #2236 on 06/14/2016

                             @* if ('@RedirectType' == "@Enums.InspectPopupRequestedModules.Budgeting.ToString()") {
                                  currentTab = "Budget";
                              }*@

                              var planProgramId = data.Id;
                              var expandplanProgramId = data.expand;
                              var planCampaignId = '@campaignId';
                              logMixpanelTrack("Copy Program:" + data.msg); // log Program copied event to mixpanel. Added by Viral regarding PL ticket #2434.
                              loadInspectPopup(planProgramId, "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Program).ToLower()", currentTab, "@Enums.InspectPopupMode.ReadOnly.ToString()", 0, '@RedirectType');

                              if ("@Enums.InspectPopupRequestedModules.Budgeting.ToString()" == '@RedirectType') {
                                  $("#hdnBudgetingExpandId").val(expandplanProgramId);
                                  $("#hdnBudgetingIsSave").val("true");
                              }

                              $("#successMessage").css("display", "block");
                              $("#spanMessageSuccess").empty();
                              $("#spanMessageSuccess").text(data.msg);
                              $("#errorMessage").css("display", "none");
                              $("#hdnIsCreate_Clone").val(true); //// Hidden value used in _plan.cshmtl page to check that page require to refresh or not.
                              RefershPlanHeaderCalc();   //Modified By Komal Rawal on 04-03-16 to get proper value in header according to filter on add or copy program.
                              return;
                          }
                          else {
                              $("#successMessageViewProgram").slideUp(50);
                              $("#errorMessageEditProgram").slideDown(400);
                              $("#spanMessageEditProgram").empty();
                              $("#spanMessageEditProgram").val(data.msg);
                              return false;
                          }
                      }
                  });
              }
          });


      });

    //
    //Reload saved program for edit/update zz
    //
    function ReloadSavedProgram (){
        ShowModels("@Enums.InspectPopupMode.Edit.ToString()", "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Program).ToLower()", $("#hdnPlanProgramId").val(),  @campaignId, '@RedirectType');
    }

    function SaveAllData(activeTab) {
        var ProgramOpt = $("#hdnProgramOpt").val();
        $('.btn-dropdwn').hide();
        if (ProgramOpt == '@Enums.InspectPopupMode.Edit.ToString()') {
            if (activeTab == TabSetup) {
                var ReturnParameter = SetupSaveProgram();
                if (ReturnParameter == false) {
                    $('#InspectTab').removeClass('SpanDisable');
                    return false;
                }
            }
	    // Commented by Arpita Soni for Ticket #2236 on 06/14/2016

            //else if (activeTab == TabBudget) {
            //    var ReturnParameter = SaveProgramBudget();
            //    if (ReturnParameter == false) {
            //        $('#InspectTab').removeClass('SpanDisable');
            //        return false;
            //    }
            //}

            else if (activeTab = TabReview) {
                var ReturnParameter = SaveTitle();
                if (ReturnParameter == false) {
                    $('#InspectTab').removeClass('SpanDisable');
                    return false;
                }
            }


        }

        return true;
    }
    //End

    //Added By komal rawal for saving the Tactictitle in actual tab of Edit Mode
    function SaveTitle() {
        var returnparameter = false;
        var title = htmlEncode($('#txtProgramTitle').val());
        var planProgramId = $("#hdnPlanProgramId").val();
        var iserror = false;

        if (title == '') {
            $('#txtProgramTitle').addClass("error");
            iserror = true;
        }
        else {
            $('#txtProgramTitle').removeClass("error");

        }
        if (iserror) {
            ShowError("@RevenuePlanner.Helpers.Common.objCached.ValidateForEmptyField");
            $('#InspectTab').removeClass('SpanDisable');
            return false;
        }
        $.ajax({
            async: false,
            type: 'POST',
            url: '@Url.Content("~/Inspect/SaveTitle/")',
            data: { title: title, Id: planProgramId, ActivePopup: "Program" },
            success: function (data) {
                if (!data.IsDuplicate) {
                    var planProgramId = $("#hdnPlanProgramId").val();
                    var campaignId = data.campaignID;
                    var requestedModule = $("#hdnRequestedModule").val();
                    $('#lblProgramTitle').text(title);
                    $("#successMessage").css("display", "block");
                    $("#spanMessageSuccess").empty();
                    $("#spanMessageSuccess").text(data.Msg);
                    $("#errorMessage").css("display", "none");
                    // Comment By Bhavesh Date: 6-jan-2015, Ticket #1793
                    // RefreshCurrentTab(requestedModule, campaignId, planProgramId, 0);
                    returnparameter = true
                }
                else {
                    ShowError(data.errormsg);
                    //  $("#errorMessage").val(data.errormsg)
                    returnparameter = false;
                }
            }
        });
        return returnparameter;
    }
    function ShowError(value) {
        $("#modal-container-186470").scrollTop(0);
        $("#successMessageViewProgram").slideUp(50);
        $("#errorMessageEditProgram").slideDown(400);
        $("#spanMessageEditProgram").empty();
        $("#spanMessageEditProgram").html(value);
    }

      function RemoveTabClass() {
          $('#InspectTab').children().each(function () {
              if ($(this).hasClass('active pull-left')) {
                  $(this).removeClass("active pull-left");
                  $(this).addClass("pull-left");
              }
          });
      }

      function loadReview(id, tabValue) {
          $("#hdnInspectPopup").val(tabValue);
          $.ajaxSetup({ cache: false });
          var url;
          var ProgramOpt = $("#hdnProgramOpt").val();
          if (tabValue == TabSetup) {
              if (ProgramOpt == "Edit") {
                  $('#txtProgramTitle').css('display', 'block');
                  $('#lblProgramTitle').css('display', 'none');
                  url = '@Url.Content("~/Inspect/LoadSetupProgramEdit/")';
              }
              else {
                  url = '@Url.Content("~/Inspect/LoadSetupProgram/")';
              }
          }
          if (tabValue == TabReview) {
              if (ProgramOpt == "Edit") {
                  $('#txtProgramTitle').css('display', 'block');
                  $('#lblProgramTitle').css('display', 'none');
              }
              url = '@Url.Content("~/Inspect/LoadReviewProgram/")';
        }
	// Commented by Arpita Soni for Ticket #2236 on 06/14/2016

        @*if (tabValue == TabBudget) {
              if (ProgramOpt == "Edit") {
                  $('#txtProgramTitle').css('display', 'block');
                  $('#lblProgramTitle').css('display', 'none');
              }
            url = '@Url.Content("~/Inspect/LoadSetupProgramBudget/")';
          }*@

          RemoveTabClass();
          $("#li" + tabValue).removeClass("pull-left");
          $("#li" + tabValue).addClass("active pull-left");
          $('#div' + tabValue).css({ display: "block" });

          $("#divTab").empty();

          $("#divTab").load(url + '?id=' + id, function (response, status, xhr) {
              if (response == '{"serviceUnavailable":"~/Login/ServiceUnavailable"}') {
                  //// Call function to redirect on service unavailibility.
                  //// Added By: Maninder Singh Wadhva on 11/24/2014.
                  //// Ticket: 942 Exception handeling in Gameplan.
                  window.location = '@Url.Content(Common.RedirectOnServiceUnavailibilityPage)';
              }
              // Modified by Komal Rawal for #2165 clicking on tabs or button before loading gets complete gives elmah error.
              $('#InspectTab').removeClass('SpanDisable');
          });
      }
    function loadAddSetup() {
        $("#errorMessage").css("display", "none");
        $("#successMessage").css("display", "none");
        $("#hdnCampaignOpt").val("Edit");
        var InspectValue = $("#hdnInspectPopup").val();
        var tabtext = ($("#li" + InspectValue).children('a').text());
        if (tabtext == "Setup") {
            url = '@Url.Content("~/Inspect/CreateProgram/")';
            $("#divTab").empty();
            $("#divTab").load(url + '?id=@campaignId');
              }
       // $("#EditProgram").css("display", "none");
        $('#txtProgramTitle').css('display', 'block');
        $('#txtProgramTitle').text('');
        $('#lblProgramTitle').css('display', 'none');
              return false;
          }

    $('#AddForm').click(function () {
        if ($('#popupnewprogram').css('display') == 'none') {
            $('#popupnewprogram').css('display', 'block')
        }
        else {
            $('#popupnewprogram').css('display', 'none')
        }
    });

    $(document).mouseup(function (e) {
        var popup = $('#popupnewprogram');
        var button = $('#AddForm');
        if (!popup.is(e.target) && popup.has(e.target).length === 0 && popup.css('display') == 'block' && !button.is(e.target) && button.has(e.target).length === 0) {
            $('#popupnewprogram').css('display', 'none');
        }
    });


    function SaveMessageOnParent(value) {
        $("#modal-container-186470").modal('hide');
        $("#errorMessageDuplicatePlan").slideUp(50);
        $("#successMessageDuplicatePlan").slideDown(400);
        $("#cSuccessDuplicatePlan").empty();
        $("#cSuccessDuplicatePlan").text(htmlDecode(value));
        $("#successMessageDuplicatePlan").removeClass("message-position");
        $("#successMessageDuplicatePlan").addClass("successMessage-InspectPopUpSections");

    }

    $("#deleteProgram").click(function () {
        if (confirm('@Common.objCached.ConfirmationForDeleteProgram')) {
            isDataModified = true;
            var ProgramId = $("#hdnPlanProgramId").val();
            var uId = $(window).attr('name');
            var arrClosedTaskString = null;
            if (typeof arrClosedTask != 'undefined') {
                arrClosedTaskString = arrClosedTask.toString();
            }
            $.ajax({
                type: 'POST',
                url: '@Url.Content("~/Inspect/DeleteSection")',
                 data: {
                     ID: ProgramId
                     , DeleteType: '@Enums.DuplicationModule.Program'
                     , UserId: uId
                     , closedTask: arrClosedTaskString
                     , CalledFromBudget: '@CalledFromBudget'
                        , IsIndex: '@isIndex'
                        , RedirectType: '@RedirectTypeMode'
                    },
                 success: function (data) {
                     if (data.returnURL != 'undefined' && data.returnURL == '#') {
                         window.location = '@Url.Content("~/Login/Index")';
                        }
                        else {
                         if (data.IsSuccess && data.opt != 'undefined') {
                             if (data.opt == '@Enums.InspectPopupRequestedModules.Index.ToString()') {

                                 // Added by Arpita Soni for Ticket #2354 on 07/14/2016
                                 RemoveAllHoneyCombData();

                                 SaveMessageOnParent(data.msg);
                                 //Added By : Kalpesh Sharma Internal review points 18/11/2014
                                 RefershPlanHeaderCalc();
                                 if ($('#IsGridView').val().toLowerCase() == "true") { //Modified by Komal Rawal for 2013 Home/Plan Layout changes
                                     LoadPlanGrid();
                                     gridSearchFlag = 0;
                                 }
                                 else {
                                     RefreshCurrentTab();
                                 }
                                 addDefaultModalPopupBackgroungColor();
                                 $("#modal-container-186470").addClass("transition-close");
                                 $("#modal-container-186470").removeClass("transition_y");
                                 $('body').removeClass('bodyOverflow');
                                }
                             else {

                                 if ("@Enums.InspectPopupRequestedModules.Budgeting.ToString()" == data.opt) {
                                     $("#hdnBudgetingExpandId").val(data.expand);
                                     $("#hdnBudgetingIsSave").val("true");
                                     $("#hdnBudgetingIsDelete").val("true");
                                     $(".close-x-big-icon").trigger("click");
                                 } else {
                                     window.location.href = data.redirect;
                                 }

                                    return;
                                }
                            }
                            else {
                                $("#successMessageViewProgram").slideUp(50);
                                $("#errorMessageEditProgram").slideDown(400);
                                $("#spanMessageEditProgram").empty();
                                $("#spanMessageEditProgram").val(data.msg);
                                return false;
                            }
                        }
                    }
             });
            }
    });
    //Added by Rahul Shah on 12/04/2016 for PL #2038
    $('#NewProgramfromPopup').click(function () {
        var returnpara = true;
        var activeTab = $("#InspectTab li.active a").text();
        if (activeTab != null && activeTab != undefined && activeTab != '') {
            returnpara = SaveAllData(activeTab);
        }
        var CampaignId = @campaignId;
        isCopyTactic = CampaignId;
        if(returnpara){
            ShowModels("@Enums.InspectPopupMode.Add.ToString()", "@Convert.ToString(RevenuePlanner.Helpers.Enums.Section.Program).ToLower()", 0, CampaignId, '@RedirectType');
        }
        //$('.taskpopup').css('display', 'none');
    });
</script>
