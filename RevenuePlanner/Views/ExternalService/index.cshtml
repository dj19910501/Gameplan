@using RevenuePlanner.Helpers
@{
    ViewBag.Title = "External Service Integrations";
    ViewBag.ActiveMenu = RevenuePlanner.Helpers.Enums.ActiveMenu.Pref;
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.ModuleTitle = "Integration";////Added by Mitesh Vaishnav on 10-07-2014 for functional review point 49
    var currentUserRole = (string)ViewBag.CurrentUserRole;
}

@Html.Hidden("SuccMsg", TempData["SuccessMessage"])
@Html.Hidden("ErrMsg", TempData["ErrorMessage"])
<style type="text/css">
    .nl-form-plan-title a:hover, a:active, .nlf-dd {
        text-decoration: underline !important;
    }

    #content_wraper .small-content a {
        color: #F8710E !important; /*#2219 */
        text-decoration: none !important;
        font-weight: normal;
    }

        #content_wraper .small-content a:hover, a:focus {
            color: #e2502d !important;				  /*#2219 */
            text-decoration: underline !important;
        }

    #content_wraper a:hover, a:active {
        outline: 0 none !important;
    }
</style>
@section nlFormContent{
    <link rel="stylesheet" href="@Url.Content("~/Content/css/NaturalLanguageForm/default.css")" type="text/css" />
    <link rel="stylesheet" href="@Url.Content("~/Content/css/NaturalLanguageForm/component.css")" type="text/css" />
    <script type="text/javascript" src="@Url.Content("~/Scripts/js/NaturalLanguageForm/modernizr.custom.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Scripts/js/NaturalLanguageForm/nlform.js?n=")@DateTime.Now"></script>

}

@section Sidebar {
    @Html.Partial("~/Views/shared/_preferences.cshtml")
}

<!--success message-->
<div id="successMessage" class="alert hide alert-success message-position">
    <a class="close">×</a>
    <div id="cSuccess"><strong>Success.</strong> @Html.Raw(HttpUtility.HtmlDecode((string)TempData["SuccessMessage"]))</div>
</div>
<!--success message-->
<!--error message-->
<div id="errorMessage" class="alert hide alert-error message-position">
    <a class="close">×</a>
    <div id="cError"><strong>Error!</strong> @Html.Raw(HttpUtility.HtmlDecode((string)TempData["ErrorMessage"]))</div>
</div>
<!--error message-->

@*<ul class="nav nav-tabs">
    <li class="source-sans-proregular">
        <h2 class="title-header">External Service Integrations</h2>
    </li>
</ul>*@ @*#2312*@
<div class="title-header source-sans-proregular margin-bottom25">
    <h2>External Service Integrations</h2>
</div> @*#2312*@

<p class="small-content source-sans-prolight" style="margin: 20px;">
    Extend Plan actionable insights to your automation platforms. Add and manage your organization APIs here. Please 
    <a href="#" id="ContactSupportLink">contact us</a> if your automation platform isn't listed.
</p>
<style type="text/css">
    .contact-support-message-position-popup {
        bottom: 0;
        left: 0;
        margin: -85px 0 50px !important;
        position: fixed;
        width: 97% !important;
        z-index: 3000;
    }
</style>
<div id="div_ContactSupportLink"></div>
<div class="padding-content padding-top0 cf source-sans-proregular">
    <table id="table_baseline" class="table table-striped table-hover tbl-external-service">
        <thead>
            <tr>
                <th class="width340">Instance Name</th> @*class changed by Bhumika for #1449 18-3-2016*@
                <th class="width86">Provider</th>
                <th class="width75">Status</th>
                <th class="width86">Last Auto Sync</th>
                <th class="width86">Last Force Sync</th>
                <th class="width86">Force Sync User</th>
                <th class="width86">Force Sync</th>
            </tr>
        </thead>
        <tbody>
            <tr id="trNewService" index="-1">
                <td>
                    <div id="nl-form" class="nl-form-plan-title without-margin integration-form">
                        @Html.DropDownList("ddlIntegrationTypes", new SelectList((System.Collections.IEnumerable)TempData["ExternalFieldList"], "Value", "Text"), "Add New Integration", new { require = "true", Id = "lstIntegration", @class = "hide" })
                        <div class="nl-overlay"></div>
                    </div>
                    <script>
                        var nlform = new NLForm(document.getElementById('nl-form'));
                    </script>
                </td>
                <td class="non_clickable">---</td>
                <td class="non_clickable">---</td>
                <td class="non_clickable">---</td>
                <td class="non_clickable">---</td>
                <td class="non_clickable">---</td>
                <td class="non_clickable"></td>
            </tr>
        </tbody>
    </table>
</div>



<script type="text/javascript">
    var selectedIntegrationTypeId;
    $(document).ready(function () {

        if ($('#SuccMsg').val() == null || $('#SuccMsg').val() == '') {
            $("#successMessage").slideUp(400);
        }
        else {
            $("#successMessage").slideDown(1200);
            //$("#successMessage").slideUp(3000);
        }
        if ($('#ErrMsg').val() == null || $('#ErrMsg').val() == '') {
            $("#errorMessage").slideUp(400);
        }
        else {
            $("#errorMessage").slideDown(400);
            $("html, body").animate({ scrollTop: 0 }, 1000);
        }
        $('.nl-field-toggle').css("text-decoration", "underline");
        fillIntegrationServiceList();

        $(document).on('click', '#table_baseline tbody tr', function (e) {
            delete localStorage.Message;
            var id = $(this).attr("id");
            var index = $(this).attr("index");
            if (id != null) {
                //alert(id);
                var queryStringArr = [];
                var URL = "@Url.Content("~/ExternalService/editIntegration/")";
                if (id == 'trNewService') {
                    if (selectedIntegrationTypeId == null) {
                        return false;
                    }

                    // New Mode
                    //window.location.href = '@Url.Action("create", "ExternalService")' + '?integrationTypeId=' + selectedIntegrationTypeId;
                    //queryStringArr.push(
                    //   {
                    //     key: 'TypeId',
                    //     Value: selectedIntegrationTypeId
                    //   });
                    //formSubmitEvent(URL, queryStringArr);
                    window.location.href = URL + "?TypeId=" + selectedIntegrationTypeId;
                    //window.location.href = URL;
                }
                else {
                    if (selectedIntegrationTypeId == null) {
                        selectedIntegrationTypeId = 0;
                    }
                    //queryStringArr.push(
                    //  {
                    //     key: 'TypeId',
                    //     Value: selectedIntegrationTypeId
                    //  },
                    //  {
                    //      key: 'id',
                    //      Value: index
                    //  });
                    //formSubmitEvent(URL, queryStringArr);
                    window.location.href = URL + "?id=" + index + "&TypeId=" + selectedIntegrationTypeId;
                    // Edit Mode
                    //window.location.href = "@Url.Content("~/ExternalService/editIntegration?id=")" + index + '&TypeId=' + selectedIntegrationTypeId;
                }
            }

        });
        $('.integration-form .nl-field-toggle').click(function () {
            // get the scollTop (distance scrolled from top)
            var scrollTop = $(window).scrollTop();
            // get the top offset of the dropdown (distance from top of the page)
            var topOffset = $(".nl-field").offset().top;
            // calculate the dropdown offset relative to window position
            var relativeOffset = topOffset - scrollTop;
            // get the window height
            var windowHeight = $(window).height();
            // if the relative offset is greater than half the window height,
            // reverse the dropdown.
            if (relativeOffset > windowHeight / 2) {
                $(".integration-form .nl-field ul").addClass("drop-up");
            }
            else {
                $(".integration-form .nl-field ul").removeClass("drop-up");
            }
            scrollTop = 0;
        });

        $(document).on('click', '.sync_service', function (e) {
            $(this).attr("disabled", "disabled");
            var uId = $(window).attr('name');
            var syncNow = $(this);
            syncNow.siblings("span").show();
            syncNow.hide();
            //syncNow.css("style", "display:none");
            //syncNow.css("color", "red");
            var id = $(this).attr("id").replace("syncnow_", "");
            var inprogressStatus = '@Enums.SyncStatusValues[Enums.SyncStatus.InProgress.ToString()].ToString()';
            $('#lastSyncStatus' + id).html('<span>' + inprogressStatus + '</span>');
            alert("@Common.objCached.SynchronizationStatus");
            $.ajax({
                type: 'GET',
                cache: false,
                url: '@Url.Content("~/ExternalService/SyncNow/")',
                asyn: true,
                data: { id: id, UserId: uId },
                success: function (data) {
                    if (data.returnURL != 'undefined' && data.returnURL == '#') {
                        window.location = '@Url.Content("~/Login/Index")';
                    }
                    else {
                        if (data != null) {
                            $('#lastSyncDate' + id).html(data.lastSync);
                            $('#ForceSyncUser' + id).html(data.forceSyncUser);
                            if (data.status.toString().toLowerCase() == "error") {
                                $('#lastSyncStatus' + id).html('<span style="color:red;">' + data.status + '</span>');
                            } else {
                                $('#lastSyncStatus' + id).html('<span>' + data.status + '</span>');
                            }
                        }
                        syncNow.siblings("span").hide();
                        syncNow.show();
                    }
                }
            });

            myApp.hidePleaseWait();
            return false;
        });

        $(document).on('click', '.non_clickable', function (e) {
            return false;
        });

        $('#nl-form > div[class="nl-field nl-dd"]').find('li').click(function (e) {
            selectedIntegrationTypeId = $(this).attr('value');
            if (selectedIntegrationTypeId != null) {
                if (selectedIntegrationTypeId.toString() == "0" || selectedIntegrationTypeId == 0) {
                    e.preventDefault();
                    return false;
                }
            }
            //alert(selectedIntegrationTypeId);
        });

        $("#content_wraper").removeClass("span10 all-height").addClass("span10 padding-top40");
    });



    function fillIntegrationServiceList() {
        $.ajax({
            type: 'GET',
            url: '@Url.Content("~/ExternalService/GetIntegrationServiceListings/")',
            dataType: "json",
            success: function (data) {
                baselinesModels = data;
                fillBaselineTable();
                TruncateTitle();
                myApp.hidePleaseWait();
            }
        });
    }

    //fill baselinesModels table with data from json
    function fillBaselineTable() {
        if (typeof baselinesModels != 'undefined') {
            if (baselinesModels.length) {
                data = baselinesModels;
                //$('#table_baseline tr').not(function () { if ($(this).has('th').length || $(this).has('#trNewService').length) { return true } }).remove(); //clear table
                for (i in baselinesModels) {
                    addRowIntegration(i, baselinesModels[i].IntegrationInstanceId, baselinesModels[i].IntegrationTypeId, baselinesModels[i].Instance, baselinesModels[i].Provider, baselinesModels[i].LastSyncStatus, baselinesModels[i].LastSyncDate, baselinesModels[i].AutoLastSyncDate, baselinesModels[i].ForceSyncUser);
                }
            }
        }
    }

    function addRowIntegration(_index, _integrationInstanceId, _integrationTypeId, _instance, _provider, _lastSyncStatus, _lastSyncData, _AutoLastSyncDate, _ForceSyncUser) {
        var $baselineTable = $('#table_baseline > tbody'); //tr:first
        var $html = "";
        $html += '<tr id="trService_' + _index + '" index="' + _integrationInstanceId + '" ><td><span class="title-baseline-model truncate">' + htmlEncode(_instance) + '</span><span class="search-icon" title="View"></span></td>' +
            '<td>' + _provider + '</td>'

        if (_lastSyncStatus.toString().toLowerCase() == "error") {
            $html += '<td id="lastSyncStatus' + _integrationInstanceId + '"><span style="color:red;">' + _lastSyncStatus + '</span></td>'
        }
        else {
            $html += '<td id="lastSyncStatus' + _integrationInstanceId + '">' + _lastSyncStatus + '</td>'
        }
        var syncNow_visible = '', syncing_visible = '';
        if (_lastSyncStatus.toLowerCase() == 'in-progress') {
            syncNow_visible = 'style="display:none;"'
        }
        else {
            syncing_visible = 'style="display:none;"';
        }
        $html += '<td id="lastAutoSyncDate' + _integrationInstanceId + '">' + _AutoLastSyncDate + '</td>' + '<td id="lastSyncDate' + _integrationInstanceId + '">' + _lastSyncData + '</td>' + '<td id="ForceSyncUser' + _integrationInstanceId + '">' + _ForceSyncUser + '</td>' +
            '<td><a id="syncnow_' + _integrationInstanceId + '" href="#" class="sync_service" ' + syncNow_visible + '>Sync Now</a><span ' + syncing_visible + '>Syncing...</span></td>' +
        '</tr>';
        //$baselineTable.append($html);
        //$baselineTable.eq(0).after($html);
        $baselineTable.prepend($html);

    }

    $('#ContactSupportLink').click(function () {
        $("#div_ContactSupportLink").empty();
        var url = '@Url.Content("~/Common/LoadSupportPartial/")';   //// Modified by Sohel Pathan on 23/05/2014 for internal review points.
        $("#div_ContactSupportLink").load(url);
    });

    function TruncateTitle() {
        $("#table_baseline").find('.truncate').each(function () {
            var title = $(this).text();
            var mainText = title;
            @* Modified By :- Sohel on 08/04/2014 for PL ticket #424 to solve the issue "The plan name is greater than few characters the UI get distorted". *@
            if (title.length >= 40) {
                title = title.substring(0, 40) + "...";
                $(this).prop('title', mainText);
            }
            $(this).text(title);
        });
    }


</script>
