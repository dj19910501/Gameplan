@model IList<RevenuePlanner.Models.GameplanDataTypePullModel>
@using RevenuePlanner.Helpers
<style type="text/css">
    .hidetext
    {
        display:none !important;
    }
</style>
 @Html.Hidden("hdnCWValue",string.Empty,new {id="hdnCWValue",naem ="hdnCWValue", value =string.Empty})
<div class="accordion-group">
    <div class="accordion-heading">
        <a class="accordion-toggle" style="border-bottom:none;position:static;" data-toggle="collapse" data-parent="#accordion" href="#collapseCloseDeal">Pull Closed Deals<span href="javascript:void(0)">+ Expand</span></a>
    </div>
    <div class="accordion-body collapse out" id="collapseCloseDeal">
        @using (Html.BeginForm("SaveClosedDealDataMapping", "ExternalService", FormMethod.Post, new { name = "frmClosedDealDataMapping", id = "frmClosedDealDataMapping" }))
        {
            @Html.Hidden("ClosedDealInvalidMsg", TempData["ClosedDealInvalidMsg"])
            <div class="row">
                @if (Model.Count > 0)
                {
                    @* Start - Added by Sohel Pathan on 14/08/2014 for PL ticket #656 and #681 *@
                    <div class="tblFieldMapping padding-bottom10">
                        <h5 class="CloseDealHeader title-header padding-right5">Plan Fields - Data Mapping</h5>
                    </div>
                    @* End - Added by Sohel Pathan on 14/08/2014 for PL ticket #656 and #681 *@
                    <div class="content-colum-mapDataTypes width100 float-left">
                        <table id="tblDataMapping" class="tblFieldMapping">
                            <tbody>
                                @for (var i = 0; i < Model.Count; i++)
                                {
                                    @Html.HiddenFor(x => x[i].GameplanDataTypePullId)   
                                    @Html.HiddenFor(x => x[i].IntegrationTypeId)   
                                    @Html.HiddenFor(x => x[i].ActualFieldName)   
                                    @Html.HiddenFor(x => x[i].DisplayFieldName)   
                                    @Html.HiddenFor(x => x[i].IntegrationInstanceDataTypeMappingPullId)   
                                    @Html.HiddenFor(x => x[i].IntegrationInstanceId) 
                                    @Html.HiddenFor(x => x[i].Type)
                                    string actualname = Model[i].ActualFieldName;
                                    <tr class="fieldRow">
                                        <td class="title1 width40">
                                            @Html.DisplayFor(x => x[i].DisplayFieldName)
                                        </td>
                                        <td class="width60">
                                            <span class="simpleSelectBox" style="  margin-left: -2px;">
                                                @if (actualname == "CW")
                                                {
                                                    @Html.DropDownListFor(x => x[i].TargetDataType, new SelectList((System.Collections.IEnumerable)"", null), "Select", new { @class = "ddlStyle drpdwnCW", id = "drpdwn" + i.ToString(), tabindex = ((int)(500 + i)).ToString() })
                                                    @Html.TextBoxFor(x => x[i].TargetDataType, new { @class = "txtCW hidetext", id = "txt" + i.ToString(), tabindex = ((int)(500 + i)).ToString() })
                                                }
                                                else if (actualname != "ResponseDate")
                                                {
                                                    string clsStage = string.Empty;
                                                    if (actualname == "Stage")
                                                    {
                                                        clsStage = " drpdwnStage";
                                                    }
                                                    @Html.DropDownListFor(x => x[i].TargetDataType, new SelectList((System.Collections.IEnumerable)ViewData["ExternalFieldListPull"], Model[i].TargetDataType), "Select", new { @class = "ddlStyle hide" + clsStage, id = i.ToString(), tabindex = ((int)(500 + i)).ToString() })
                                                }
                                                else
                                                {
                                                    if (ViewData["ExternalFieldListPulling"] != null)
                                                    {
                                                    @Html.DropDownListFor(x => x[i].TargetDataType, new SelectList((System.Collections.IEnumerable)ViewData["ExternalFieldListPulling"], Model[i].TargetDataType), "Select", new { @class = "ddlStyle hide", id = i.ToString(), tabindex = ((int)(500 + i)).ToString() })
                                                }
                                                 else
                                                 {
                                                    @Html.DropDownListFor(x => x[i].TargetDataType, new SelectList((System.Collections.IEnumerable)"", null), "Select", null)
                                                }
                                                }

                                            </span>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                
                    <!--success message-->
                    <div id="ClosedDealSuccessMessage" class="alert hide alert-success messages">
                        <a class="close">×</a>
                        <strong>Success!</strong> <span id="spanMessageSuccess"></span>
                    </div>
                    <!--success message-->

                    <!--error message-->
                    <div id="ClosedDealErrorMessage" class="alert hide alert-error messages">
                        <a class="close">×</a>
                        <strong>Error!</strong> <span id="spanMessageError">@TempData["DataMappingPullErrorMessage"]</span>
                    </div>
                    <!--error message-->
               
                    
                        <div class="margin-left40per">
                            <span class="span5 margin-top10">
                                <button id="btnSaveCloseDealMappings" type="button" class="btn btn-blue btn-save text-shadow-blue source-sans-proregular" name="button-save">Save</button>
                            </span>
                            <span class="span5 margin-top10">
                                <button id="btnCancelCloseDealMappins" type="button" class="close-form btn-link source-sans-proregular">Cancel</button>
                            </span>
                        </div>
                    
                }
                else
                {
                    <h5 style="border-bottom:none;" class="CloseDealHeader">@RevenuePlanner.Helpers.Common.objCached.NoDataTypeMappingFieldsForEloqua</h5>
                }
            </div>   
        }
    </div>
</div>

<script type="text/javascript">
    var isPageLoad = false;
    $(document).ready(function () {
        $(".simpleSelectBox select").selectbox();
        $('#frmClosedDealDataMapping .ddlStyle').each(function () {
            if ($(this).next('.sbHolder').hasClass("error")) {
                $(this).next('.sbHolder').removeClass("error");
            }
        });
        var cwTargetType = '@ViewBag.cwTargetType';
        $("#hdnCWValue").val(cwTargetType);
        AssignDefaultValueClosedDeal();   // Added by Sohel Pathan on 22/08/2014 for PL ticket #716.
        isPageLoad = true;
        $('.drpdwnStage').trigger('change');
        
    });

    $('#frmClosedDealDataMapping .ddlStyle').change(function () {
        var sbValue = $(this).attr('sb');
        var selValue = $('#sbSelector_' + $(this).attr('sb')).html();
        $('select[sb="' + sbValue + '"]').val(selValue);
    });

    $("#btnSaveCloseDealMappings").click(function (e) {
        var isError = false;
        AssignSelectedValueToSelectBoxOptionClosedDeal();   // Added by Sohel Pathan on 17/11/2014 for PL ticket #949.
        isError = CheckTargetFieldMappingClosedDeal();  // Added by Sohel Pathan on 17/11/2014 for PL ticket #949.
        if (isError) {
            $('#ClosedDealErrorMessage').find('#spanMessageError').html($('#ClosedDealInvalidMsg').val());
            $("#ClosedDealErrorMessage").slideDown(400);
            $('#ClosedDealSuccessMessage').find('#spanMessageSuccess').html('');
            $("#ClosedDealSuccessMessage").hide();
            e.preventDefault();
            return false;
        }
        var formData = $("#frmClosedDealDataMapping").serialize();
        var IntegrationInstanceId = '@ViewBag.IntegrationInstanceId';
        var uId = $(window).attr('name');
        var cwValue = $("#hdnCWValue").val();
        cwValue = cwValue.toLowerCase() == "select" ? "" : cwValue;
        $.ajax({
            type: 'POST',
            url: '@Url.Content("~/ExternalService/SaveDataMappingPullCloseDeal")',
            data: formData + '&IntegrationInstanceId=' + parseInt(IntegrationInstanceId) + '&UserId=' + uId + '&closedwon=' + cwValue,
            success: function (data) {
                if (data.returnURL != 'undefined' && data.returnURL == '#') {
                    window.location = '@Url.Content("~/Login/Index")';
                }
                else {
                    if (data.status == 0) {
                        $('#ClosedDealSuccessMessage').find('#spanMessageSuccess').html('');
                        $("#ClosedDealSuccessMessage").hide()
                        $('#ClosedDealErrorMessage').find('#spanMessageError').html(data.Message);
                        $("#ClosedDealErrorMessage").slideDown(400);
                        return false;
                    }
                    else if (data.status == 1) {
                        $('#ClosedDealErrorMessage').find('#spanMessageError').html('');
                        $("#ClosedDealErrorMessage").hide();
                        $('#ClosedDealSuccessMessage').find('#spanMessageSuccess').html(data.Message);
                        $("#ClosedDealSuccessMessage").slideDown(400);
                        AssignDefaultValueClosedDeal();   // Added by Sohel Pathan on 22/08/2014 for PL ticket #716.
                        return true;
                    }
                }
            }
        });
    });

    $("#frmDataMapping").find(".alert").find(".close").click(function (e) {
        e.stopPropagation();
        e.preventDefault();
        $(this).closest(".alert").slideUp(400);
    });

    // Start - Added by Sohel Pathan on 22/08/2014 for PL ticket #716.
    function AssignDefaultValueClosedDeal() {
        $('#frmClosedDealDataMapping').find("input[type=text],textarea,select,input[type=password]").each(function () {
            $(this).attr("myValue", $(this).val());
        });
    }
    // End - Added by Sohel Pathan on 22/08/2014 for PL ticket #716.

    // Start - Added by Sohel Pathan on 17/11/2014 for PL ticket #949.
    function CheckTargetFieldMappingClosedDeal() {
        var isFieldMappingError = false;
        var textCW = $('.txtCW');
        
        $('#frmClosedDealDataMapping .ddlStyle').each(function () {
            var isError = false;
            var currentDdl = this;
            var currentTargetValue = $(this).val();
            if (currentTargetValue != null) {
                if (currentTargetValue.toLowerCase() != 'select' || currentTargetValue.toLowerCase() != '') {
                    $('#frmClosedDealDataMapping .ddlStyle').each(function () {
                        var SourceTargetValue = $(this).val();

                        if (currentDdl.id != this.id) {
                            if (currentTargetValue == SourceTargetValue && SourceTargetValue.toLowerCase() != 'select' && SourceTargetValue != '') {

                                $(currentDdl).next('.sbHolder').addClass("error");
                                $(this).next('.sbHolder').addClass("error");
                                isError = true;
                                isFieldMappingError = true;
                            }
                        }
                        if (!isError) {
                            $(currentDdl).next('.sbHolder').removeClass("error");
                        }
                    });
                    
                    if (!textCW.hasClass("hidetext")) {
                        var textCWVal = textCW.val();
                        if (currentTargetValue.toLowerCase() == textCWVal.toLowerCase() && textCWVal != '') {
                            $(currentDdl).next('.sbHolder').addClass("error");
                            textCW.addClass("error");
                            isError = true;
                            isFieldMappingError = true;
                        }
                    }
                }
                else {
                    $(currentDdl).next('.sbHolder').removeClass("error");
                }
            }
            else {
                $(currentDdl).next('.sbHolder').removeClass("error");
            }
        });
        return isFieldMappingError;
    }

    function AssignSelectedValueToSelectBoxOptionClosedDeal() {
        $("#frmClosedDealDataMapping").find('.ddlStyle').each(function () {
            var currentSelectedValue = $(this).next().find('.sbSelector').html();
            var currentSelectedOption = $(this).find('option:selected').html();
            if (currentSelectedValue != currentSelectedOption) {
                $(this).find('option:selected').removeAttr("selected");
                $(this).val(currentSelectedValue);
                $(this).attr("myValue", currentSelectedValue);
            }
        });
    }
    // End - Added by Sohel Pathan on 17/11/2014 for PL ticket #949.

    $(".drpdwnStage").change(function () {
        var stage = $(this).val();
        var IntegrationInstanceId = '@ViewBag.IntegrationInstanceId';
        var drpdwnCWId = $('.drpdwnCW').attr('id');
        var drpdwnCW = $("#" + drpdwnCWId);
        var sb = $("#" + drpdwnCWId).attr('sb');
        var ul = $("#sbOptions_" + sb);
        var dvHolder = $("#sbHolder_" + sb);
        var aSelector = $("#sbSelector_" + sb);
        var txtCW = $('.txtCW ');

        if (stage == null || stage == 'undefined' || stage.toLowerCase() == 'select') {
            dvHolder.addClass('hidetext');
            txtCW.val('');
            txtCW.removeClass("error");
            txtCW.removeClass('hidetext');
            //aSelector.empty();
            drpdwnCW.val('');
            drpdwnCW.attr('myValue', '');
            drpdwnCW.addClass('hidetext');
            $("#hdnCWValue").val('');
        }
        else {
            $.ajax({
                type: 'POST',
                url: '@Url.Content("~/ExternalService/BindClosedDealsPickList")',
                data: 'instanceId=' + parseInt(IntegrationInstanceId) + '&stageName=' + stage,
                success: function (data) {
                   
                    if (data != null && data != 'undefined' && data.length > 0) {
                        ul.empty();
                        drpdwnCW.empty();
                        ul.append('<li> <a class="" href="#" rel="">Select</a> </li>');
                        aSelector.empty();
                        aSelector.html("Select");
                        $("#hdnCWValue").val("Select");
                        $.each(data, function (index, itemData) {
                            drpdwnCW.append($('<option/>', {
                                value: itemData,
                                text: itemData
                            }));
                            ul.append('<li> <a class="" href="#' + itemData + '" rel="' + itemData + '">' + itemData + '</a> </li>');
                        });
                        dvHolder.removeClass('hidetext');
                        drpdwnCW.removeClass('hidetext');
                        txtCW.addClass('hidetext');
                        ul.find("li a").click(function () {
                            var currentVal = $(this).attr('rel');
                            aSelector.empty();
                            if (currentVal == '') {
                                
                                aSelector.html("Select");
                            }
                            else {
                                aSelector.html(currentVal);
                            }
                            ul.slideUp(100);
                            drpdwnCW.val(currentVal);
                            drpdwnCW.attr('myValue', currentVal);
                            $('select[sb="' + sb + '"]').val(currentVal);
                            $("#hdnCWValue").val(currentVal);
                        });

                        if (isPageLoad) {
                            var cwTargetType = '@ViewBag.cwTargetType';
                            //cwTargetType = 'Closed Won';
                            aSelector.empty();
                            if (cwTargetType == '') {

                                aSelector.html("Select");
                            }
                            else {
                                aSelector.html(cwTargetType);
                            }
                            //ul.slideUp(100);
                            drpdwnCW.val(cwTargetType);
                            drpdwnCW.attr('myValue', cwTargetType);
                            $("#hdnCWValue").val(cwTargetType);
                            isPageLoad = false;
                        }
                        
                    }
                    else {
                        // show closed won textbox  and hide dropdown.
                        dvHolder.addClass('hidetext');
                        txtCW.val('');
                        txtCW.removeClass("error");
                        txtCW.removeClass('hidetext');
                        //aSelector.empty();
                        drpdwnCW.val('');
                        drpdwnCW.attr('myValue', '');
                        drpdwnCW.addClass('hidetext');

                        if (isPageLoad) {
                            var cwTargetType = '@ViewBag.cwTargetType';
                            //cwTargetType = 'Closed Won';
                            txtCW.val(cwTargetType);
                        }
                        isPageLoad = false;
                    }
                    
                }
            });
        }
    });

    

</script>
