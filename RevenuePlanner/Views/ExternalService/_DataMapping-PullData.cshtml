@model IList<RevenuePlanner.Models.GameplanDataTypeModel>
@using RevenuePlanner.Helpers

<div class="accordion-group">
    <div class="accordion-heading">
        <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion" href="#collapseCustomPull">Pull Integration Data<span href="javascript:void(0)">+ Expand</span></a>
    </div>
    <div class="accordion-body collapse out" id="collapseCustomPull">
        @using (Html.BeginForm("SaveDataPullMapping", "ExternalService", FormMethod.Post, new { name = "frmDataPullMapping", id = "frmDataPullMapping" }))
        {
            @Html.Hidden("TargetFieldInvalidMsg", TempData["TargetFieldInvalidMsg"])    //// Added by :- Sohel Pathan on 28/05/2014 for PL #494 to Validate that a target field should be mapped to an entity only once. 
            
            <div class="row">
                @if(Model.Count > 0)
                {
                    <div class="content-colum-mapDataTypes width100 float-left">
                        <table id="tblDataPullMapping" class="tblFieldMapping">
                            <tbody>
                                @{bool GlobalHeaderSet  = false, CampaignHeaderSet = false, ProgramHeaderSet = false, TacticHeaderSet = false;}
                                @{bool ImprovemntCampaignHeaderSet = false, ImprovemntProgramHeaderSet = false, ImprovemntTacticHeaderSet = false;}
                                @for (var i = 0; i < Model.Count; i++)
                                {
                                    @Html.HiddenFor(x => x[i].GameplanDataTypeId)   
                                    @Html.HiddenFor(x => x[i].IntegrationTypeId)   
                                    @Html.HiddenFor(x => x[i].TableName, new { id = "hdnTableName_" + i })      //// Modified by :- Sohel Pathan on 28/05/2014 for PL #494 to Validate that a target field should be mapped to an entity only once. 
                                    @Html.HiddenFor(x => x[i].ActualFieldName)   
                                    @Html.HiddenFor(x => x[i].DisplayFieldName)   
                                    @Html.HiddenFor(x => x[i].IsGet)   
                                    @Html.HiddenFor(x => x[i].IntegrationInstanceDataTypeMappingId)   
                                    @Html.HiddenFor(x => x[i].IntegrationInstanceId) 
                                    @Html.HiddenFor(x => x[i].IsCustomField) 
                                    if (!GlobalHeaderSet || !CampaignHeaderSet || !ProgramHeaderSet || !TacticHeaderSet || !ImprovemntCampaignHeaderSet || !ImprovemntProgramHeaderSet || !ImprovemntTacticHeaderSet)
                                    {
                                        if (GlobalHeaderSet == false && Model[i].TableName == Enums.IntegrantionDataTypeMappingTableName.Global.ToString())
                                        {
                                            <tr>
                                                <td colspan="2">
                                                    <div class="padding-right5">
                                                        <h5 class="title-header">Plan Fields - Global</h5>
                                                        @{GlobalHeaderSet = true;}
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                        else if (CampaignHeaderSet == false && Model[i].TableName == Enums.IntegrantionDataTypeMappingTableName.Plan_Campaign.ToString())
                                        {
                                            <tr>
                                                <td colspan="2">
                                                    <div class="padding-right5 padding-top16">
                                                        <h5 class="title-header">Plan Fields - Campaign</h5>
                                                        @{CampaignHeaderSet = true;}
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                        else if (ProgramHeaderSet == false && Model[i].TableName == Enums.IntegrantionDataTypeMappingTableName.Plan_Campaign_Program.ToString())
                                        {
                                            <tr>
                                                <td colspan="2">
                                                    <div class="padding-right5 padding-top16">
                                                        <h5 class="title-header">Plan Fields - Program</h5>
                                                        @{ProgramHeaderSet = true;}
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                        else if (TacticHeaderSet == false && Model[i].TableName == Enums.IntegrantionDataTypeMappingTableName.Plan_Campaign_Program_Tactic.ToString())
                                        {
                                            <tr>
                                                <td colspan="2">
                                                    <div class="padding-right5 padding-top16">
                                                        <h5 class="title-header">Plan Fields - Tactic</h5>
                                                        @{TacticHeaderSet = true;}
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                        else if (ImprovemntCampaignHeaderSet == false && Model[i].TableName == Enums.IntegrantionDataTypeMappingTableName.Plan_Improvement_Campaign.ToString())
                                        {
                                            <tr>
                                                <td colspan="2">
                                                    <div class="padding-right5 padding-top16">
                                                        <h5 class="title-header">Plan Fields - Improvement Campaign</h5>
                                                        @{ImprovemntCampaignHeaderSet = true;}
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                        else if (ImprovemntProgramHeaderSet == false && Model[i].TableName == Enums.IntegrantionDataTypeMappingTableName.Plan_Improvement_Campaign_Program.ToString())
                                        {
                                            <tr>
                                                <td colspan="2">
                                                    <div class="padding-right5 padding-top16">
                                                        <h5 class="title-header">Plan Fields - Improvement Program</h5>
                                                        @{ImprovemntProgramHeaderSet = true;}
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                        else if (ImprovemntTacticHeaderSet == false && Model[i].TableName == Enums.IntegrantionDataTypeMappingTableName.Plan_Improvement_Campaign_Program_Tactic.ToString())
                                        {
                                            <tr>
                                                <td colspan="2">
                                                    <div class="padding-right5 padding-top16">
                                                        <h5 class="title-header">Plan Fields - Improvement Tactic</h5>
                                                        @{ImprovemntTacticHeaderSet = true;}
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    }
                                    <tr class="fieldRow">
                                        <td class="title1 width40 ellipsis" title="@Html.DisplayFor(x => x[i].DisplayFieldName)">
                                            @Html.DisplayFor(x => x[i].DisplayFieldName)
                                        </td>
                                        <td class="width60">
                                            <span class="simpleSelectBox" style="  margin-left: -2px;">  @Html.DropDownListFor(x => x[i].TargetDataType, new SelectList((System.Collections.IEnumerable)ViewData["ExternalFieldList"], Model[i].TargetDataType), "Select", new { @class = "ddlStyle hide", id = i.ToString(), tabindex = ((int)(100 + i)).ToString() })</span>  @* Modified by :- Sohel Pathan on 28/05/2014 for PL #494 to Validate that a target field should be mapped to an entity only once. *@
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                
                    <!--success message-->
                    <div id="DataPullMappingSuccessMessage" class="alert hide alert-success messages">
                        <a class="close">×</a>
                        <strong>Success.</strong> <span id="spanMessagePullSuccess">@TempData["DataMappingSuccessMessage"]</span>
                    </div>
                    <!--success message-->

                    <!--error message-->
                    <div id="DataPullMappingErrorMessage" class="alert hide alert-error messages">
                        <a class="close">×</a>
                        <strong>Error!</strong> <span id="spanMessagePullError">@TempData["DataMappingErrorMessage"]</span>
                    </div>
                    <!--error message-->
               
                    
                        <div class="margin-left40per">
                            <span class="span5 margin-top10">
                                <button id="btnSavePullMappings" type="button" class="btn btn-blue btn-save text-shadow-blue source-sans-proregular" name="button-save">Save</button>
                            </span>
                            <span class="span5 margin-top10">
                                <button id="btnCancelDataPullMappings" type="button" class="close-form btn-link source-sans-proregular">Cancel</button>
                            </span>
                        </div>
                    
                }
            </div>   
        }
    </div>
</div>

<script type="text/javascript">

    $(document).ready(function () {
        $(".simpleSelectBox select").selectbox();
        
        AssignDefaultValueDataMapping();   // Added by Sohel Pathan on 22/08/2014 for PL ticket #716.
    });

    $("#frmDataPullMapping").find('.ddlStyle').change(function () {
        var sbValue = $(this).attr('sb');
        var selValue = $("#frmDataPullMapping").find('#sbSelector_' + $(this).attr('sb')).html();   /* Modified by Sohel Pathan on 20/08/2014 for Internal Review Point */
        $("#frmDataPullMapping").find('select[sb="' + sbValue + '"]').val(selValue);    /* Modified by Sohel Pathan on 20/08/2014 for Internal Review Point */
        var currentSelectedValue = $(this).next().find('.sbSelector').html();
        if (!(currentSelectedValue == '' || currentSelectedValue == 'Select')) {
            $(this).next('.sbHolder').prop("title", currentSelectedValue);
        }
        else {
            $(this).next('.sbHolder').prop("title", '');
        }
    });
    
    $("#btnSavePullMappings").click(function (e) {
        console.log("entering save function");
        var isError = false;
        AssignSelectedValueToSelectBoxOption(); // Added by Sohel Pathan on 17/11/2014 for PL ticket #949.
        /* Start - Added by Sohel Pathan on 20/08/2014 for Internal Review Point */
        isError = CheckTargetFieldMapping();
        if (isError) {
            ShowTargetFieldInvalid();
            e.preventDefault();
            return false;
        }
        /* End - Added by Sohel Pathan on 20/08/2014 for Internal Review Point */

        var formData = $("#frmDataPullMapping").serialize();
        var IntegrationInstanceId = '@ViewBag.IntegrationInstanceId';
        var uId = $(window).attr('name');
        $.ajax({
            type: 'POST',
            url: '@Url.Content("~/ExternalService/SaveDataMapping")',
            data: formData + '&IntegrationInstanceId=' + parseInt(IntegrationInstanceId) + '&UserId=' + uId,
            success: function (data) {
                if (data.returnURL != 'undefined' && data.returnURL == '#') {
                    window.location = '@Url.Content("~/Login/Index")';
                }
                else {
                    if (data.status == 0) {
                        console.log("data.status == 0");
                        $('#DataPullMappingSuccessMessage').find('#spanMessagePullSuccess').html('');
                        $("#DataPullMappingSuccessMessage").hide();
                        $('#DataPullMappingErrorMessage').find('#spanMessagePullError').html(data.Message);
                        $("#DataPullMappingErrorMessage").slideDown(400);
                        return false;
                    }
                    else if (data.status == 1) {
                        console.log("data.status == 1");
                        $('#DataPullMappingErrorMessage').find('#spanMessagePullError').html('');
                        $("#DataPullMappingErrorMessage").hide();
                        $('#DataPullMappingSuccessMessage').find('#spanMessagePullSuccess').html(data.Message);
                        console.log("data.status == 1; stage 2");
                        $("#DataPullMappingSuccessMessage").slideDown(400);
                        AssignDefaultValueDataMapping();   // Added by Sohel Pathan on 22/08/2014 for PL ticket #716.
                        return true;
                    }
                }
            },
        error: function () {
            $('#DataPullMappingErrorMessage').find('#spanMessagePullError').html('@TempData["DataMappingErrorMessage"]');
            $("#DataPullMappingErrorMessage").slideDown(400);
            return false;
        }
        });
    });

    $("#frmDataPullMapping").find(".alert").find(".close").click(function (e) {
        e.stopPropagation();
        e.preventDefault();
        $(this).closest(".alert").slideUp(400);
    });

    /* Start - Added by Sohel Pathan on 20/08/2014 for Internal Review Point */
    function CheckTargetFieldMapping()
    {
        var isFieldMappingError = false;
        $("#frmDataPullMapping").find('.ddlStyle').each(function () {
            var isError = false;
            var currentDdl = this;
            var currentTargetValue = $(this).val();
            var currentTableName = $("#frmDataPullMapping").find('#hdnTableName_' + currentDdl.id);
            if (currentTargetValue != null) {
                if (currentTargetValue.toLowerCase() != 'select' || currentTargetValue.toLowerCase() != '') {
                    $("#frmDataPullMapping").find('.ddlStyle').each(function () {

                        var SourceTableName = $("#frmDataPullMapping").find('#hdnTableName_' + this.id);
                        var SourceTargetValue = $(this).val();

                        if (currentDdl.id != this.id) {
                            if (currentTargetValue == SourceTargetValue && currentTableName.val() == SourceTableName.val() && SourceTargetValue.toLowerCase() != 'select' && SourceTargetValue != '') {

                                $(currentDdl).next('.sbHolder').addClass("error");
                                $(this).next('.sbHolder').addClass("error");
                                isError = true;
                                isFieldMappingError = true;
                            }
                        }
                        if (!isError) {
                            $(currentDdl).next('.sbHolder').removeClass("error");
                        }
                    });
                }
                else {
                    $(currentDdl).next('.sbHolder').removeClass("error");
                }
            }
            else {
                $(currentDdl).next('.sbHolder').removeClass("error");
            }
        });
        return isFieldMappingError;
    }

    function ShowTargetFieldInvalid()
    {
        $('#DataPullMappingErrorMessage').find('#spanMessageError').html($('#TargetFieldInvalidMsg').val());
        $("#DataPullMappingErrorMessage").slideDown(400);
        $('#DataPullMappingSuccessMessage').find('#spanMessageSuccess').html('');
        $("#DataPullMappingSuccessMessage").hide();
    }
    /* End - Added by Sohel Pathan on 20/08/2014 for Internal Review Point */

    // Start - Added by Sohel Pathan on 22/08/2014 for PL ticket #716.
    function AssignDefaultValueDataMapping() {
        $('#frmDataPullMapping').find("input[type=text],textarea,select,input[type=password]").each(function () {
            $(this).attr("myValue", $(this).val());
            if ($(this).hasClass('ddlStyle'))
            {
                if (!($(this).val() == '' || $(this).val() == 'Select')) {
                    $(this).next('.sbHolder').prop("title", $(this).val());
                }
                else {
                    $(this).next('.sbHolder').prop("title", '');
                }
            }
        });


    }
    // End - Added by Sohel Pathan on 22/08/2014 for PL ticket #716.

    // Start - Added by Sohel Pathan on 17/11/2014 for PL ticket #949.
    function AssignSelectedValueToSelectBoxOption() {
        $("#frmDataPullMapping").find('.ddlStyle').each(function () {
            var currentSelectedValue = $(this).next().find('.sbSelector').html();
            var currentSelectedOption = $(this).find('option:selected').html();
            if (currentSelectedValue != currentSelectedOption) {
                $(this).find('option:selected').removeAttr("selected");
                $(this).val(currentSelectedValue);
                $(this).attr("myValue", currentSelectedValue);
            }
        });
    }
    // End - Added by Sohel Pathan on 17/11/2014 for PL ticket #949.
</script>
