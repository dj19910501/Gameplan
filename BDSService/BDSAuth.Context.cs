//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BDSService
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class BDSAuthEntities : DbContext
    {
        public BDSAuthEntities()
            : base("name=BDSAuthEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Application> Applications { get; set; }
        public DbSet<Application_Activity> Application_Activity { get; set; }
        public DbSet<Application_Role> Application_Role { get; set; }
        public DbSet<Client> Clients { get; set; }
        public DbSet<CustomRestriction> CustomRestrictions { get; set; }
        public DbSet<Menu_Application> Menu_Application { get; set; }
        public DbSet<PasswordResetRequest> PasswordResetRequests { get; set; }
        public DbSet<Role> Roles { get; set; }
        public DbSet<Role_Activity_Permission> Role_Activity_Permission { get; set; }
        public DbSet<Role_Permission> Role_Permission { get; set; }
        public DbSet<SecurityQuestion> SecurityQuestions { get; set; }
        public DbSet<User> Users { get; set; }
        public DbSet<User_Activity_Permission> User_Activity_Permission { get; set; }
        public DbSet<User_Application> User_Application { get; set; }
        public DbSet<UserClientDatabase> UserClientDatabases { get; set; }
        public DbSet<ClientDatabase> ClientDatabases { get; set; }
    
        public virtual ObjectResult<string> DecryptData(byte[] encryptedString)
        {
            var encryptedStringParameter = encryptedString != null ?
                new ObjectParameter("EncryptedString", encryptedString) :
                new ObjectParameter("EncryptedString", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("DecryptData", encryptedStringParameter);
        }
    }
}
