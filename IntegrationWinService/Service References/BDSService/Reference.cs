//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IntegrationWinService.BDSService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/BDSService.BDSEntities")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AnswerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid BusinessUnitIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ClientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid GeographyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsClientAdminField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDirectorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPlannerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSystemAdminField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastLoginDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ProfilePhotoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid RoleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecurityQuestionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SecurityQuestionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Answer {
            get {
                return this.AnswerField;
            }
            set {
                if ((object.ReferenceEquals(this.AnswerField, value) != true)) {
                    this.AnswerField = value;
                    this.RaisePropertyChanged("Answer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid BusinessUnitId {
            get {
                return this.BusinessUnitIdField;
            }
            set {
                if ((this.BusinessUnitIdField.Equals(value) != true)) {
                    this.BusinessUnitIdField = value;
                    this.RaisePropertyChanged("BusinessUnitId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Client {
            get {
                return this.ClientField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientField, value) != true)) {
                    this.ClientField = value;
                    this.RaisePropertyChanged("Client");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ClientId {
            get {
                return this.ClientIdField;
            }
            set {
                if ((this.ClientIdField.Equals(value) != true)) {
                    this.ClientIdField = value;
                    this.RaisePropertyChanged("ClientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid GeographyId {
            get {
                return this.GeographyIdField;
            }
            set {
                if ((this.GeographyIdField.Equals(value) != true)) {
                    this.GeographyIdField = value;
                    this.RaisePropertyChanged("GeographyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsClientAdmin {
            get {
                return this.IsClientAdminField;
            }
            set {
                if ((this.IsClientAdminField.Equals(value) != true)) {
                    this.IsClientAdminField = value;
                    this.RaisePropertyChanged("IsClientAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDirector {
            get {
                return this.IsDirectorField;
            }
            set {
                if ((this.IsDirectorField.Equals(value) != true)) {
                    this.IsDirectorField = value;
                    this.RaisePropertyChanged("IsDirector");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPlanner {
            get {
                return this.IsPlannerField;
            }
            set {
                if ((this.IsPlannerField.Equals(value) != true)) {
                    this.IsPlannerField = value;
                    this.RaisePropertyChanged("IsPlanner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSystemAdmin {
            get {
                return this.IsSystemAdminField;
            }
            set {
                if ((this.IsSystemAdminField.Equals(value) != true)) {
                    this.IsSystemAdminField = value;
                    this.RaisePropertyChanged("IsSystemAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobTitle {
            get {
                return this.JobTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.JobTitleField, value) != true)) {
                    this.JobTitleField = value;
                    this.RaisePropertyChanged("JobTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastLoginDate {
            get {
                return this.LastLoginDateField;
            }
            set {
                if ((this.LastLoginDateField.Equals(value) != true)) {
                    this.LastLoginDateField = value;
                    this.RaisePropertyChanged("LastLoginDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] ProfilePhoto {
            get {
                return this.ProfilePhotoField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfilePhotoField, value) != true)) {
                    this.ProfilePhotoField = value;
                    this.RaisePropertyChanged("ProfilePhoto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleCode {
            get {
                return this.RoleCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleCodeField, value) != true)) {
                    this.RoleCodeField = value;
                    this.RaisePropertyChanged("RoleCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid RoleId {
            get {
                return this.RoleIdField;
            }
            set {
                if ((this.RoleIdField.Equals(value) != true)) {
                    this.RoleIdField = value;
                    this.RaisePropertyChanged("RoleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleTitle {
            get {
                return this.RoleTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleTitleField, value) != true)) {
                    this.RoleTitleField = value;
                    this.RaisePropertyChanged("RoleTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityQuestion {
            get {
                return this.SecurityQuestionField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityQuestionField, value) != true)) {
                    this.SecurityQuestionField = value;
                    this.RaisePropertyChanged("SecurityQuestion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SecurityQuestionId {
            get {
                return this.SecurityQuestionIdField;
            }
            set {
                if ((this.SecurityQuestionIdField.Equals(value) != true)) {
                    this.SecurityQuestionIdField = value;
                    this.RaisePropertyChanged("SecurityQuestionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Client", Namespace="http://schemas.datacontract.org/2004/07/BDSService.BDSEntities")]
    [System.SerializableAttribute()]
    public partial class Client : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ClientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address2Field, value) != true)) {
                    this.Address2Field = value;
                    this.RaisePropertyChanged("Address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ClientId {
            get {
                return this.ClientIdField;
            }
            set {
                if ((this.ClientIdField.Equals(value) != true)) {
                    this.ClientIdField = value;
                    this.RaisePropertyChanged("ClientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Logo {
            get {
                return this.LogoField;
            }
            set {
                if ((object.ReferenceEquals(this.LogoField, value) != true)) {
                    this.LogoField = value;
                    this.RaisePropertyChanged("Logo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCodeField, value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Role", Namespace="http://schemas.datacontract.org/2004/07/BDSService.BDSEntities")]
    [System.SerializableAttribute()]
    public partial class Role : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> ModifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid RoleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((this.ModifiedByField.Equals(value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid RoleId {
            get {
                return this.RoleIdField;
            }
            set {
                if ((this.RoleIdField.Equals(value) != true)) {
                    this.RoleIdField = value;
                    this.RaisePropertyChanged("RoleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Menu", Namespace="http://schemas.datacontract.org/2004/07/BDSService.BDSEntities")]
    [System.SerializableAttribute()]
    public partial class Menu : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ControllerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDisplayInMenuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEnableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MenuApplicationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ParentApplicationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SortOrderField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActionName {
            get {
                return this.ActionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionNameField, value) != true)) {
                    this.ActionNameField = value;
                    this.RaisePropertyChanged("ActionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ControllerName {
            get {
                return this.ControllerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ControllerNameField, value) != true)) {
                    this.ControllerNameField = value;
                    this.RaisePropertyChanged("ControllerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDisplayInMenu {
            get {
                return this.IsDisplayInMenuField;
            }
            set {
                if ((this.IsDisplayInMenuField.Equals(value) != true)) {
                    this.IsDisplayInMenuField = value;
                    this.RaisePropertyChanged("IsDisplayInMenu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEnable {
            get {
                return this.IsEnableField;
            }
            set {
                if ((this.IsEnableField.Equals(value) != true)) {
                    this.IsEnableField = value;
                    this.RaisePropertyChanged("IsEnable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MenuApplicationId {
            get {
                return this.MenuApplicationIdField;
            }
            set {
                if ((this.MenuApplicationIdField.Equals(value) != true)) {
                    this.MenuApplicationIdField = value;
                    this.RaisePropertyChanged("MenuApplicationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ParentApplicationId {
            get {
                return this.ParentApplicationIdField;
            }
            set {
                if ((this.ParentApplicationIdField.Equals(value) != true)) {
                    this.ParentApplicationIdField = value;
                    this.RaisePropertyChanged("ParentApplicationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SortOrder {
            get {
                return this.SortOrderField;
            }
            set {
                if ((this.SortOrderField.Equals(value) != true)) {
                    this.SortOrderField = value;
                    this.RaisePropertyChanged("SortOrder");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Permission", Namespace="http://schemas.datacontract.org/2004/07/BDSService.BDSEntities")]
    [System.SerializableAttribute()]
    public partial class Permission : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PermissionCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PermissionCode {
            get {
                return this.PermissionCodeField;
            }
            set {
                if ((this.PermissionCodeField.Equals(value) != true)) {
                    this.PermissionCodeField = value;
                    this.RaisePropertyChanged("PermissionCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PasswordResetRequest", Namespace="http://schemas.datacontract.org/2004/07/BDSService.BDSEntities")]
    [System.SerializableAttribute()]
    public partial class PasswordResetRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AttemptCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsUsedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PasswordResetRequestIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AttemptCount {
            get {
                return this.AttemptCountField;
            }
            set {
                if ((this.AttemptCountField.Equals(value) != true)) {
                    this.AttemptCountField = value;
                    this.RaisePropertyChanged("AttemptCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsUsed {
            get {
                return this.IsUsedField;
            }
            set {
                if ((this.IsUsedField.Equals(value) != true)) {
                    this.IsUsedField = value;
                    this.RaisePropertyChanged("IsUsed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PasswordResetRequestId {
            get {
                return this.PasswordResetRequestIdField;
            }
            set {
                if ((this.PasswordResetRequestIdField.Equals(value) != true)) {
                    this.PasswordResetRequestIdField = value;
                    this.RaisePropertyChanged("PasswordResetRequestId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecurityQuestion", Namespace="http://schemas.datacontract.org/2004/07/BDSService.BDSEntities")]
    [System.SerializableAttribute()]
    public partial class SecurityQuestion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecurityQuestion1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SecurityQuestionIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityQuestion1 {
            get {
                return this.SecurityQuestion1Field;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityQuestion1Field, value) != true)) {
                    this.SecurityQuestion1Field = value;
                    this.RaisePropertyChanged("SecurityQuestion1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SecurityQuestionId {
            get {
                return this.SecurityQuestionIdField;
            }
            set {
                if ((this.SecurityQuestionIdField.Equals(value) != true)) {
                    this.SecurityQuestionIdField = value;
                    this.RaisePropertyChanged("SecurityQuestionId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BDSService.IBDSService")]
    public interface IBDSService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/ValidateUser", ReplyAction="http://tempuri.org/IBDSService/ValidateUserResponse")]
        IntegrationWinService.BDSService.User ValidateUser(System.Guid applicationId, string userEmail, string userPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/ValidateUser", ReplyAction="http://tempuri.org/IBDSService/ValidateUserResponse")]
        System.Threading.Tasks.Task<IntegrationWinService.BDSService.User> ValidateUserAsync(System.Guid applicationId, string userEmail, string userPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/GetTeamMemberDetails", ReplyAction="http://tempuri.org/IBDSService/GetTeamMemberDetailsResponse")]
        IntegrationWinService.BDSService.User GetTeamMemberDetails(System.Guid userId, System.Guid applicationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/GetTeamMemberDetails", ReplyAction="http://tempuri.org/IBDSService/GetTeamMemberDetailsResponse")]
        System.Threading.Tasks.Task<IntegrationWinService.BDSService.User> GetTeamMemberDetailsAsync(System.Guid userId, System.Guid applicationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/GetTeamMemberList", ReplyAction="http://tempuri.org/IBDSService/GetTeamMemberListResponse")]
        System.Collections.Generic.List<IntegrationWinService.BDSService.User> GetTeamMemberList(System.Guid clientId, System.Guid applicationId, System.Guid userId, bool isSystemAdmin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/GetTeamMemberList", ReplyAction="http://tempuri.org/IBDSService/GetTeamMemberListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IntegrationWinService.BDSService.User>> GetTeamMemberListAsync(System.Guid clientId, System.Guid applicationId, System.Guid userId, bool isSystemAdmin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/GetClientList", ReplyAction="http://tempuri.org/IBDSService/GetClientListResponse")]
        System.Collections.Generic.List<IntegrationWinService.BDSService.Client> GetClientList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/GetClientList", ReplyAction="http://tempuri.org/IBDSService/GetClientListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IntegrationWinService.BDSService.Client>> GetClientListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/GetRoleList", ReplyAction="http://tempuri.org/IBDSService/GetRoleListResponse")]
        System.Collections.Generic.List<IntegrationWinService.BDSService.Role> GetRoleList(string roleCodes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/GetRoleList", ReplyAction="http://tempuri.org/IBDSService/GetRoleListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IntegrationWinService.BDSService.Role>> GetRoleListAsync(string roleCodes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/GetMultipleTeamMemberDetails", ReplyAction="http://tempuri.org/IBDSService/GetMultipleTeamMemberDetailsResponse")]
        System.Collections.Generic.List<IntegrationWinService.BDSService.User> GetMultipleTeamMemberDetails(string userIdList, System.Guid applicationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/GetMultipleTeamMemberDetails", ReplyAction="http://tempuri.org/IBDSService/GetMultipleTeamMemberDetailsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IntegrationWinService.BDSService.User>> GetMultipleTeamMemberDetailsAsync(string userIdList, System.Guid applicationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/ChangePassword", ReplyAction="http://tempuri.org/IBDSService/ChangePasswordResponse")]
        int ChangePassword(System.Guid userId, string newPassword, string currPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/ChangePassword", ReplyAction="http://tempuri.org/IBDSService/ChangePasswordResponse")]
        System.Threading.Tasks.Task<int> ChangePasswordAsync(System.Guid userId, string newPassword, string currPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/CheckCurrentPassword", ReplyAction="http://tempuri.org/IBDSService/CheckCurrentPasswordResponse")]
        bool CheckCurrentPassword(System.Guid userId, string currentPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/CheckCurrentPassword", ReplyAction="http://tempuri.org/IBDSService/CheckCurrentPasswordResponse")]
        System.Threading.Tasks.Task<bool> CheckCurrentPasswordAsync(System.Guid userId, string currentPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/GetMenu", ReplyAction="http://tempuri.org/IBDSService/GetMenuResponse")]
        System.Collections.Generic.List<IntegrationWinService.BDSService.Menu> GetMenu(System.Guid ApplicationId, System.Guid RoleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/GetMenu", ReplyAction="http://tempuri.org/IBDSService/GetMenuResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IntegrationWinService.BDSService.Menu>> GetMenuAsync(System.Guid ApplicationId, System.Guid RoleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/GetAllMenu", ReplyAction="http://tempuri.org/IBDSService/GetAllMenuResponse")]
        System.Collections.Generic.List<IntegrationWinService.BDSService.Menu> GetAllMenu(System.Guid ApplicationId, System.Guid RoleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/GetAllMenu", ReplyAction="http://tempuri.org/IBDSService/GetAllMenuResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IntegrationWinService.BDSService.Menu>> GetAllMenuAsync(System.Guid ApplicationId, System.Guid RoleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/GetPermission", ReplyAction="http://tempuri.org/IBDSService/GetPermissionResponse")]
        System.Collections.Generic.List<IntegrationWinService.BDSService.Permission> GetPermission(System.Guid ApplicationId, System.Guid RoleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/GetPermission", ReplyAction="http://tempuri.org/IBDSService/GetPermissionResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IntegrationWinService.BDSService.Permission>> GetPermissionAsync(System.Guid ApplicationId, System.Guid RoleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/CheckEmail", ReplyAction="http://tempuri.org/IBDSService/CheckEmailResponse")]
        bool CheckEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/CheckEmail", ReplyAction="http://tempuri.org/IBDSService/CheckEmailResponse")]
        System.Threading.Tasks.Task<bool> CheckEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/DeleteUser", ReplyAction="http://tempuri.org/IBDSService/DeleteUserResponse")]
        int DeleteUser(System.Guid userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/DeleteUser", ReplyAction="http://tempuri.org/IBDSService/DeleteUserResponse")]
        System.Threading.Tasks.Task<int> DeleteUserAsync(System.Guid userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/GetUserDetails", ReplyAction="http://tempuri.org/IBDSService/GetUserDetailsResponse")]
        IntegrationWinService.BDSService.User GetUserDetails(string userEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/GetUserDetails", ReplyAction="http://tempuri.org/IBDSService/GetUserDetailsResponse")]
        System.Threading.Tasks.Task<IntegrationWinService.BDSService.User> GetUserDetailsAsync(string userEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/CreateUser", ReplyAction="http://tempuri.org/IBDSService/CreateUserResponse")]
        int CreateUser(IntegrationWinService.BDSService.User user, System.Guid applicationId, System.Guid createdBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/CreateUser", ReplyAction="http://tempuri.org/IBDSService/CreateUserResponse")]
        System.Threading.Tasks.Task<int> CreateUserAsync(IntegrationWinService.BDSService.User user, System.Guid applicationId, System.Guid createdBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/UpdateUser", ReplyAction="http://tempuri.org/IBDSService/UpdateUserResponse")]
        int UpdateUser(IntegrationWinService.BDSService.User user, System.Guid applicationId, System.Guid modifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/UpdateUser", ReplyAction="http://tempuri.org/IBDSService/UpdateUserResponse")]
        System.Threading.Tasks.Task<int> UpdateUserAsync(IntegrationWinService.BDSService.User user, System.Guid applicationId, System.Guid modifiedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/GetUserRole", ReplyAction="http://tempuri.org/IBDSService/GetUserRoleResponse")]
        string GetUserRole(System.Guid id, System.Guid applicationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/GetUserRole", ReplyAction="http://tempuri.org/IBDSService/GetUserRoleResponse")]
        System.Threading.Tasks.Task<string> GetUserRoleAsync(System.Guid id, System.Guid applicationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/GetApplicationName", ReplyAction="http://tempuri.org/IBDSService/GetApplicationNameResponse")]
        string GetApplicationName(System.Guid applicationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/GetApplicationName", ReplyAction="http://tempuri.org/IBDSService/GetApplicationNameResponse")]
        System.Threading.Tasks.Task<string> GetApplicationNameAsync(System.Guid applicationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/GetClientName", ReplyAction="http://tempuri.org/IBDSService/GetClientNameResponse")]
        string GetClientName(System.Guid userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/GetClientName", ReplyAction="http://tempuri.org/IBDSService/GetClientNameResponse")]
        System.Threading.Tasks.Task<string> GetClientNameAsync(System.Guid userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/AllowedMenusForUser", ReplyAction="http://tempuri.org/IBDSService/AllowedMenusForUserResponse")]
        System.Collections.Generic.List<int> AllowedMenusForUser(System.Guid roleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/AllowedMenusForUser", ReplyAction="http://tempuri.org/IBDSService/AllowedMenusForUserResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<int>> AllowedMenusForUserAsync(System.Guid roleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/GetMenuName", ReplyAction="http://tempuri.org/IBDSService/GetMenuNameResponse")]
        string GetMenuName(int menuId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/GetMenuName", ReplyAction="http://tempuri.org/IBDSService/GetMenuNameResponse")]
        System.Threading.Tasks.Task<string> GetMenuNameAsync(int menuId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/ResetPassword", ReplyAction="http://tempuri.org/IBDSService/ResetPasswordResponse")]
        int ResetPassword(System.Guid userId, string SingleHash_NewPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/ResetPassword", ReplyAction="http://tempuri.org/IBDSService/ResetPasswordResponse")]
        System.Threading.Tasks.Task<int> ResetPasswordAsync(System.Guid userId, string SingleHash_NewPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/GetRoleDetails", ReplyAction="http://tempuri.org/IBDSService/GetRoleDetailsResponse")]
        IntegrationWinService.BDSService.Role GetRoleDetails(System.Guid roleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/GetRoleDetails", ReplyAction="http://tempuri.org/IBDSService/GetRoleDetailsResponse")]
        System.Threading.Tasks.Task<IntegrationWinService.BDSService.Role> GetRoleDetailsAsync(System.Guid roleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/UpdateLastLoginDate", ReplyAction="http://tempuri.org/IBDSService/UpdateLastLoginDateResponse")]
        int UpdateLastLoginDate(System.Guid userId, System.Guid applicationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/UpdateLastLoginDate", ReplyAction="http://tempuri.org/IBDSService/UpdateLastLoginDateResponse")]
        System.Threading.Tasks.Task<int> UpdateLastLoginDateAsync(System.Guid userId, System.Guid applicationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/CreatePasswordResetRequest", ReplyAction="http://tempuri.org/IBDSService/CreatePasswordResetRequestResponse")]
        string CreatePasswordResetRequest(IntegrationWinService.BDSService.PasswordResetRequest objPasswordResetRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/CreatePasswordResetRequest", ReplyAction="http://tempuri.org/IBDSService/CreatePasswordResetRequestResponse")]
        System.Threading.Tasks.Task<string> CreatePasswordResetRequestAsync(IntegrationWinService.BDSService.PasswordResetRequest objPasswordResetRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/GetPasswordResetRequest", ReplyAction="http://tempuri.org/IBDSService/GetPasswordResetRequestResponse")]
        IntegrationWinService.BDSService.PasswordResetRequest GetPasswordResetRequest(System.Guid PasswordResetRequestId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/GetPasswordResetRequest", ReplyAction="http://tempuri.org/IBDSService/GetPasswordResetRequestResponse")]
        System.Threading.Tasks.Task<IntegrationWinService.BDSService.PasswordResetRequest> GetPasswordResetRequestAsync(System.Guid PasswordResetRequestId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/UpdatePasswordResetRequest", ReplyAction="http://tempuri.org/IBDSService/UpdatePasswordResetRequestResponse")]
        int UpdatePasswordResetRequest(IntegrationWinService.BDSService.PasswordResetRequest objPasswordResetRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/UpdatePasswordResetRequest", ReplyAction="http://tempuri.org/IBDSService/UpdatePasswordResetRequestResponse")]
        System.Threading.Tasks.Task<int> UpdatePasswordResetRequestAsync(IntegrationWinService.BDSService.PasswordResetRequest objPasswordResetRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/GetSecurityQuestion", ReplyAction="http://tempuri.org/IBDSService/GetSecurityQuestionResponse")]
        System.Collections.Generic.List<IntegrationWinService.BDSService.SecurityQuestion> GetSecurityQuestion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/GetSecurityQuestion", ReplyAction="http://tempuri.org/IBDSService/GetSecurityQuestionResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IntegrationWinService.BDSService.SecurityQuestion>> GetSecurityQuestionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/UpdateUserSecurityQuestion", ReplyAction="http://tempuri.org/IBDSService/UpdateUserSecurityQuestionResponse")]
        int UpdateUserSecurityQuestion(IntegrationWinService.BDSService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/UpdateUserSecurityQuestion", ReplyAction="http://tempuri.org/IBDSService/UpdateUserSecurityQuestionResponse")]
        System.Threading.Tasks.Task<int> UpdateUserSecurityQuestionAsync(IntegrationWinService.BDSService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/GetUserListByClientId", ReplyAction="http://tempuri.org/IBDSService/GetUserListByClientIdResponse")]
        System.Collections.Generic.List<IntegrationWinService.BDSService.User> GetUserListByClientId(System.Guid clientId, System.Guid applicationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBDSService/GetUserListByClientId", ReplyAction="http://tempuri.org/IBDSService/GetUserListByClientIdResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<IntegrationWinService.BDSService.User>> GetUserListByClientIdAsync(System.Guid clientId, System.Guid applicationId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBDSServiceChannel : IntegrationWinService.BDSService.IBDSService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BDSServiceClient : System.ServiceModel.ClientBase<IntegrationWinService.BDSService.IBDSService>, IntegrationWinService.BDSService.IBDSService {
        
        public BDSServiceClient() {
        }
        
        public BDSServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BDSServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BDSServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BDSServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public IntegrationWinService.BDSService.User ValidateUser(System.Guid applicationId, string userEmail, string userPassword) {
            return base.Channel.ValidateUser(applicationId, userEmail, userPassword);
        }
        
        public System.Threading.Tasks.Task<IntegrationWinService.BDSService.User> ValidateUserAsync(System.Guid applicationId, string userEmail, string userPassword) {
            return base.Channel.ValidateUserAsync(applicationId, userEmail, userPassword);
        }
        
        public IntegrationWinService.BDSService.User GetTeamMemberDetails(System.Guid userId, System.Guid applicationId) {
            return base.Channel.GetTeamMemberDetails(userId, applicationId);
        }
        
        public System.Threading.Tasks.Task<IntegrationWinService.BDSService.User> GetTeamMemberDetailsAsync(System.Guid userId, System.Guid applicationId) {
            return base.Channel.GetTeamMemberDetailsAsync(userId, applicationId);
        }
        
        public System.Collections.Generic.List<IntegrationWinService.BDSService.User> GetTeamMemberList(System.Guid clientId, System.Guid applicationId, System.Guid userId, bool isSystemAdmin) {
            return base.Channel.GetTeamMemberList(clientId, applicationId, userId, isSystemAdmin);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IntegrationWinService.BDSService.User>> GetTeamMemberListAsync(System.Guid clientId, System.Guid applicationId, System.Guid userId, bool isSystemAdmin) {
            return base.Channel.GetTeamMemberListAsync(clientId, applicationId, userId, isSystemAdmin);
        }
        
        public System.Collections.Generic.List<IntegrationWinService.BDSService.Client> GetClientList() {
            return base.Channel.GetClientList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IntegrationWinService.BDSService.Client>> GetClientListAsync() {
            return base.Channel.GetClientListAsync();
        }
        
        public System.Collections.Generic.List<IntegrationWinService.BDSService.Role> GetRoleList(string roleCodes) {
            return base.Channel.GetRoleList(roleCodes);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IntegrationWinService.BDSService.Role>> GetRoleListAsync(string roleCodes) {
            return base.Channel.GetRoleListAsync(roleCodes);
        }
        
        public System.Collections.Generic.List<IntegrationWinService.BDSService.User> GetMultipleTeamMemberDetails(string userIdList, System.Guid applicationId) {
            return base.Channel.GetMultipleTeamMemberDetails(userIdList, applicationId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IntegrationWinService.BDSService.User>> GetMultipleTeamMemberDetailsAsync(string userIdList, System.Guid applicationId) {
            return base.Channel.GetMultipleTeamMemberDetailsAsync(userIdList, applicationId);
        }
        
        public int ChangePassword(System.Guid userId, string newPassword, string currPassword) {
            return base.Channel.ChangePassword(userId, newPassword, currPassword);
        }
        
        public System.Threading.Tasks.Task<int> ChangePasswordAsync(System.Guid userId, string newPassword, string currPassword) {
            return base.Channel.ChangePasswordAsync(userId, newPassword, currPassword);
        }
        
        public bool CheckCurrentPassword(System.Guid userId, string currentPassword) {
            return base.Channel.CheckCurrentPassword(userId, currentPassword);
        }
        
        public System.Threading.Tasks.Task<bool> CheckCurrentPasswordAsync(System.Guid userId, string currentPassword) {
            return base.Channel.CheckCurrentPasswordAsync(userId, currentPassword);
        }
        
        public System.Collections.Generic.List<IntegrationWinService.BDSService.Menu> GetMenu(System.Guid ApplicationId, System.Guid RoleId) {
            return base.Channel.GetMenu(ApplicationId, RoleId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IntegrationWinService.BDSService.Menu>> GetMenuAsync(System.Guid ApplicationId, System.Guid RoleId) {
            return base.Channel.GetMenuAsync(ApplicationId, RoleId);
        }
        
        public System.Collections.Generic.List<IntegrationWinService.BDSService.Menu> GetAllMenu(System.Guid ApplicationId, System.Guid RoleId) {
            return base.Channel.GetAllMenu(ApplicationId, RoleId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IntegrationWinService.BDSService.Menu>> GetAllMenuAsync(System.Guid ApplicationId, System.Guid RoleId) {
            return base.Channel.GetAllMenuAsync(ApplicationId, RoleId);
        }
        
        public System.Collections.Generic.List<IntegrationWinService.BDSService.Permission> GetPermission(System.Guid ApplicationId, System.Guid RoleId) {
            return base.Channel.GetPermission(ApplicationId, RoleId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IntegrationWinService.BDSService.Permission>> GetPermissionAsync(System.Guid ApplicationId, System.Guid RoleId) {
            return base.Channel.GetPermissionAsync(ApplicationId, RoleId);
        }
        
        public bool CheckEmail(string email) {
            return base.Channel.CheckEmail(email);
        }
        
        public System.Threading.Tasks.Task<bool> CheckEmailAsync(string email) {
            return base.Channel.CheckEmailAsync(email);
        }
        
        public int DeleteUser(System.Guid userId) {
            return base.Channel.DeleteUser(userId);
        }
        
        public System.Threading.Tasks.Task<int> DeleteUserAsync(System.Guid userId) {
            return base.Channel.DeleteUserAsync(userId);
        }
        
        public IntegrationWinService.BDSService.User GetUserDetails(string userEmail) {
            return base.Channel.GetUserDetails(userEmail);
        }
        
        public System.Threading.Tasks.Task<IntegrationWinService.BDSService.User> GetUserDetailsAsync(string userEmail) {
            return base.Channel.GetUserDetailsAsync(userEmail);
        }
        
        public int CreateUser(IntegrationWinService.BDSService.User user, System.Guid applicationId, System.Guid createdBy) {
            return base.Channel.CreateUser(user, applicationId, createdBy);
        }
        
        public System.Threading.Tasks.Task<int> CreateUserAsync(IntegrationWinService.BDSService.User user, System.Guid applicationId, System.Guid createdBy) {
            return base.Channel.CreateUserAsync(user, applicationId, createdBy);
        }
        
        public int UpdateUser(IntegrationWinService.BDSService.User user, System.Guid applicationId, System.Guid modifiedBy) {
            return base.Channel.UpdateUser(user, applicationId, modifiedBy);
        }
        
        public System.Threading.Tasks.Task<int> UpdateUserAsync(IntegrationWinService.BDSService.User user, System.Guid applicationId, System.Guid modifiedBy) {
            return base.Channel.UpdateUserAsync(user, applicationId, modifiedBy);
        }
        
        public string GetUserRole(System.Guid id, System.Guid applicationId) {
            return base.Channel.GetUserRole(id, applicationId);
        }
        
        public System.Threading.Tasks.Task<string> GetUserRoleAsync(System.Guid id, System.Guid applicationId) {
            return base.Channel.GetUserRoleAsync(id, applicationId);
        }
        
        public string GetApplicationName(System.Guid applicationId) {
            return base.Channel.GetApplicationName(applicationId);
        }
        
        public System.Threading.Tasks.Task<string> GetApplicationNameAsync(System.Guid applicationId) {
            return base.Channel.GetApplicationNameAsync(applicationId);
        }
        
        public string GetClientName(System.Guid userId) {
            return base.Channel.GetClientName(userId);
        }
        
        public System.Threading.Tasks.Task<string> GetClientNameAsync(System.Guid userId) {
            return base.Channel.GetClientNameAsync(userId);
        }
        
        public System.Collections.Generic.List<int> AllowedMenusForUser(System.Guid roleId) {
            return base.Channel.AllowedMenusForUser(roleId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<int>> AllowedMenusForUserAsync(System.Guid roleId) {
            return base.Channel.AllowedMenusForUserAsync(roleId);
        }
        
        public string GetMenuName(int menuId) {
            return base.Channel.GetMenuName(menuId);
        }
        
        public System.Threading.Tasks.Task<string> GetMenuNameAsync(int menuId) {
            return base.Channel.GetMenuNameAsync(menuId);
        }
        
        public int ResetPassword(System.Guid userId, string SingleHash_NewPassword) {
            return base.Channel.ResetPassword(userId, SingleHash_NewPassword);
        }
        
        public System.Threading.Tasks.Task<int> ResetPasswordAsync(System.Guid userId, string SingleHash_NewPassword) {
            return base.Channel.ResetPasswordAsync(userId, SingleHash_NewPassword);
        }
        
        public IntegrationWinService.BDSService.Role GetRoleDetails(System.Guid roleId) {
            return base.Channel.GetRoleDetails(roleId);
        }
        
        public System.Threading.Tasks.Task<IntegrationWinService.BDSService.Role> GetRoleDetailsAsync(System.Guid roleId) {
            return base.Channel.GetRoleDetailsAsync(roleId);
        }
        
        public int UpdateLastLoginDate(System.Guid userId, System.Guid applicationId) {
            return base.Channel.UpdateLastLoginDate(userId, applicationId);
        }
        
        public System.Threading.Tasks.Task<int> UpdateLastLoginDateAsync(System.Guid userId, System.Guid applicationId) {
            return base.Channel.UpdateLastLoginDateAsync(userId, applicationId);
        }
        
        public string CreatePasswordResetRequest(IntegrationWinService.BDSService.PasswordResetRequest objPasswordResetRequest) {
            return base.Channel.CreatePasswordResetRequest(objPasswordResetRequest);
        }
        
        public System.Threading.Tasks.Task<string> CreatePasswordResetRequestAsync(IntegrationWinService.BDSService.PasswordResetRequest objPasswordResetRequest) {
            return base.Channel.CreatePasswordResetRequestAsync(objPasswordResetRequest);
        }
        
        public IntegrationWinService.BDSService.PasswordResetRequest GetPasswordResetRequest(System.Guid PasswordResetRequestId) {
            return base.Channel.GetPasswordResetRequest(PasswordResetRequestId);
        }
        
        public System.Threading.Tasks.Task<IntegrationWinService.BDSService.PasswordResetRequest> GetPasswordResetRequestAsync(System.Guid PasswordResetRequestId) {
            return base.Channel.GetPasswordResetRequestAsync(PasswordResetRequestId);
        }
        
        public int UpdatePasswordResetRequest(IntegrationWinService.BDSService.PasswordResetRequest objPasswordResetRequest) {
            return base.Channel.UpdatePasswordResetRequest(objPasswordResetRequest);
        }
        
        public System.Threading.Tasks.Task<int> UpdatePasswordResetRequestAsync(IntegrationWinService.BDSService.PasswordResetRequest objPasswordResetRequest) {
            return base.Channel.UpdatePasswordResetRequestAsync(objPasswordResetRequest);
        }
        
        public System.Collections.Generic.List<IntegrationWinService.BDSService.SecurityQuestion> GetSecurityQuestion() {
            return base.Channel.GetSecurityQuestion();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IntegrationWinService.BDSService.SecurityQuestion>> GetSecurityQuestionAsync() {
            return base.Channel.GetSecurityQuestionAsync();
        }
        
        public int UpdateUserSecurityQuestion(IntegrationWinService.BDSService.User user) {
            return base.Channel.UpdateUserSecurityQuestion(user);
        }
        
        public System.Threading.Tasks.Task<int> UpdateUserSecurityQuestionAsync(IntegrationWinService.BDSService.User user) {
            return base.Channel.UpdateUserSecurityQuestionAsync(user);
        }
        
        public System.Collections.Generic.List<IntegrationWinService.BDSService.User> GetUserListByClientId(System.Guid clientId, System.Guid applicationId) {
            return base.Channel.GetUserListByClientId(clientId, applicationId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<IntegrationWinService.BDSService.User>> GetUserListByClientIdAsync(System.Guid clientId, System.Guid applicationId) {
            return base.Channel.GetUserListByClientIdAsync(clientId, applicationId);
        }
    }
}
